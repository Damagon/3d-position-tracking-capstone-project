
SD_Card.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000ba  00800100  00002a94  00002b28  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002a94  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000023d  008001ba  008001ba  00002be2  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00002be2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002c14  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001d8  00000000  00000000  00002c54  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000037d6  00000000  00000000  00002e2c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000d02  00000000  00000000  00006602  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000023a9  00000000  00000000  00007304  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000009e4  00000000  00000000  000096b0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000009b1  00000000  00000000  0000a094  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00004560  00000000  00000000  0000aa45  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001d8  00000000  00000000  0000efa5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
       2:	00 00       	nop
       4:	61 c0       	rjmp	.+194    	; 0xc8 <__bad_interrupt>
       6:	00 00       	nop
       8:	5f c0       	rjmp	.+190    	; 0xc8 <__bad_interrupt>
       a:	00 00       	nop
       c:	5d c0       	rjmp	.+186    	; 0xc8 <__bad_interrupt>
       e:	00 00       	nop
      10:	5b c0       	rjmp	.+182    	; 0xc8 <__bad_interrupt>
      12:	00 00       	nop
      14:	59 c0       	rjmp	.+178    	; 0xc8 <__bad_interrupt>
      16:	00 00       	nop
      18:	57 c0       	rjmp	.+174    	; 0xc8 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	55 c0       	rjmp	.+170    	; 0xc8 <__bad_interrupt>
      1e:	00 00       	nop
      20:	53 c0       	rjmp	.+166    	; 0xc8 <__bad_interrupt>
      22:	00 00       	nop
      24:	51 c0       	rjmp	.+162    	; 0xc8 <__bad_interrupt>
      26:	00 00       	nop
      28:	4f c0       	rjmp	.+158    	; 0xc8 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	4d c0       	rjmp	.+154    	; 0xc8 <__bad_interrupt>
      2e:	00 00       	nop
      30:	4b c0       	rjmp	.+150    	; 0xc8 <__bad_interrupt>
      32:	00 00       	nop
      34:	49 c0       	rjmp	.+146    	; 0xc8 <__bad_interrupt>
      36:	00 00       	nop
      38:	47 c0       	rjmp	.+142    	; 0xc8 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	45 c0       	rjmp	.+138    	; 0xc8 <__bad_interrupt>
      3e:	00 00       	nop
      40:	43 c0       	rjmp	.+134    	; 0xc8 <__bad_interrupt>
      42:	00 00       	nop
      44:	41 c0       	rjmp	.+130    	; 0xc8 <__bad_interrupt>
      46:	00 00       	nop
      48:	3f c0       	rjmp	.+126    	; 0xc8 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	3d c0       	rjmp	.+122    	; 0xc8 <__bad_interrupt>
      4e:	00 00       	nop
      50:	3b c0       	rjmp	.+118    	; 0xc8 <__bad_interrupt>
      52:	00 00       	nop
      54:	39 c0       	rjmp	.+114    	; 0xc8 <__bad_interrupt>
      56:	00 00       	nop
      58:	37 c0       	rjmp	.+110    	; 0xc8 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	35 c0       	rjmp	.+106    	; 0xc8 <__bad_interrupt>
      5e:	00 00       	nop
      60:	33 c0       	rjmp	.+102    	; 0xc8 <__bad_interrupt>
      62:	00 00       	nop
      64:	31 c0       	rjmp	.+98     	; 0xc8 <__bad_interrupt>
      66:	00 00       	nop
      68:	2f c0       	rjmp	.+94     	; 0xc8 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	2d c0       	rjmp	.+90     	; 0xc8 <__bad_interrupt>
      6e:	00 00       	nop
      70:	2b c0       	rjmp	.+86     	; 0xc8 <__bad_interrupt>
      72:	00 00       	nop
      74:	29 c0       	rjmp	.+82     	; 0xc8 <__bad_interrupt>
      76:	00 00       	nop
      78:	27 c0       	rjmp	.+78     	; 0xc8 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	25 c0       	rjmp	.+74     	; 0xc8 <__bad_interrupt>
      7e:	00 00       	nop
      80:	23 c0       	rjmp	.+70     	; 0xc8 <__bad_interrupt>
      82:	00 00       	nop
      84:	21 c0       	rjmp	.+66     	; 0xc8 <__bad_interrupt>
      86:	00 00       	nop
      88:	1f c0       	rjmp	.+62     	; 0xc8 <__bad_interrupt>
	...

0000008c <__ctors_end>:
      8c:	11 24       	eor	r1, r1
      8e:	1f be       	out	0x3f, r1	; 63
      90:	cf ef       	ldi	r28, 0xFF	; 255
      92:	d0 e4       	ldi	r29, 0x40	; 64
      94:	de bf       	out	0x3e, r29	; 62
      96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
      98:	11 e0       	ldi	r17, 0x01	; 1
      9a:	a0 e0       	ldi	r26, 0x00	; 0
      9c:	b1 e0       	ldi	r27, 0x01	; 1
      9e:	e4 e9       	ldi	r30, 0x94	; 148
      a0:	fa e2       	ldi	r31, 0x2A	; 42
      a2:	00 e0       	ldi	r16, 0x00	; 0
      a4:	0b bf       	out	0x3b, r16	; 59
      a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
      a8:	07 90       	elpm	r0, Z+
      aa:	0d 92       	st	X+, r0
      ac:	aa 3b       	cpi	r26, 0xBA	; 186
      ae:	b1 07       	cpc	r27, r17
      b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
      b2:	23 e0       	ldi	r18, 0x03	; 3
      b4:	aa eb       	ldi	r26, 0xBA	; 186
      b6:	b1 e0       	ldi	r27, 0x01	; 1
      b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
      ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
      bc:	a7 3f       	cpi	r26, 0xF7	; 247
      be:	b2 07       	cpc	r27, r18
      c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
      c2:	08 d0       	rcall	.+16     	; 0xd4 <main>
      c4:	0c 94 48 15 	jmp	0x2a90	; 0x2a90 <_exit>

000000c8 <__bad_interrupt>:
      c8:	9b cf       	rjmp	.-202    	; 0x0 <__vectors>

000000ca <get_fattime>:
	| ((DWORD)8 << 21)				// Month 7 
	| ((DWORD)2 << 16)				// Day 28 
	| ((DWORD)20 << 11)				// Hour 0..24
	| ((DWORD)30 << 5)				// Min 0 
	| ((DWORD)0 >> 1);				// Sec/2 0
}
      ca:	60 ec       	ldi	r22, 0xC0	; 192
      cc:	73 ea       	ldi	r23, 0xA3	; 163
      ce:	82 e0       	ldi	r24, 0x02	; 2
      d0:	93 e4       	ldi	r25, 0x43	; 67
      d2:	08 95       	ret

000000d4 <main>:



int main(void)
{
      d4:	cf 93       	push	r28
      d6:	df 93       	push	r29
      d8:	00 d0       	rcall	.+0      	; 0xda <main+0x6>
      da:	cd b7       	in	r28, 0x3d	; 61
      dc:	de b7       	in	r29, 0x3e	; 62
	DDRD |= (1<<PD0); // Set LED pin output
      de:	8a b1       	in	r24, 0x0a	; 10
      e0:	81 60       	ori	r24, 0x01	; 1
      e2:	8a b9       	out	0x0a, r24	; 10
	DDRD |= (1<<PD1); // Set LED pin output
      e4:	8a b1       	in	r24, 0x0a	; 10
      e6:	82 60       	ori	r24, 0x02	; 2
      e8:	8a b9       	out	0x0a, r24	; 10
	PORTD &= ~(1<<PD0); // Turn LED off
      ea:	8b b1       	in	r24, 0x0b	; 11
      ec:	8e 7f       	andi	r24, 0xFE	; 254
      ee:	8b b9       	out	0x0b, r24	; 11
	PORTD &= ~(1<<PD1); // Turn LED off
      f0:	8b b1       	in	r24, 0x0b	; 11
      f2:	8d 7f       	andi	r24, 0xFD	; 253
      f4:	8b b9       	out	0x0b, r24	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
      f6:	8f e4       	ldi	r24, 0x4F	; 79
      f8:	93 ec       	ldi	r25, 0xC3	; 195
      fa:	01 97       	sbiw	r24, 0x01	; 1
      fc:	f1 f7       	brne	.-4      	; 0xfa <main+0x26>
      fe:	00 c0       	rjmp	.+0      	; 0x100 <main+0x2c>
     100:	00 00       	nop
	// reboot delay
	_delay_ms(200);
	
	// init sdcard
	UINT bw;
	f_mount(0, &FatFs);		// Give a work area to the FatFs module
     102:	6c eb       	ldi	r22, 0xBC	; 188
     104:	71 e0       	ldi	r23, 0x01	; 1
     106:	80 e0       	ldi	r24, 0x00	; 0
     108:	0e 94 6c 0c 	call	0x18d8	; 0x18d8 <f_mount>
	// open file
	fp = (FIL *)malloc(sizeof (FIL));
     10c:	80 e2       	ldi	r24, 0x20	; 32
     10e:	90 e0       	ldi	r25, 0x00	; 0
     110:	0e 94 27 14 	call	0x284e	; 0x284e <malloc>
     114:	90 93 bb 01 	sts	0x01BB, r25	; 0x8001bb <__data_end+0x1>
     118:	80 93 ba 01 	sts	0x01BA, r24	; 0x8001ba <__data_end>
	if (f_open(fp, "image.jpg", FA_WRITE | FA_CREATE_ALWAYS) == FR_OK) {	// Create a file // THREEDO: Change from text
     11c:	4a e0       	ldi	r20, 0x0A	; 10
     11e:	67 e0       	ldi	r22, 0x07	; 7
     120:	71 e0       	ldi	r23, 0x01	; 1
     122:	0e 94 8a 0c 	call	0x1914	; 0x1914 <f_open>
     126:	81 11       	cpse	r24, r1
     128:	1a c0       	rjmp	.+52     	; 0x15e <main+0x8a>
		f_write(fp, "test.jpg", sizeof("test.jpg"), &bw);	// Write data to the file
     12a:	9e 01       	movw	r18, r28
     12c:	2f 5f       	subi	r18, 0xFF	; 255
     12e:	3f 4f       	sbci	r19, 0xFF	; 255
     130:	49 e0       	ldi	r20, 0x09	; 9
     132:	50 e0       	ldi	r21, 0x00	; 0
     134:	61 e1       	ldi	r22, 0x11	; 17
     136:	71 e0       	ldi	r23, 0x01	; 1
     138:	80 91 ba 01 	lds	r24, 0x01BA	; 0x8001ba <__data_end>
     13c:	90 91 bb 01 	lds	r25, 0x01BB	; 0x8001bb <__data_end+0x1>
     140:	0e 94 96 0d 	call	0x1b2c	; 0x1b2c <f_write>
		f_close(fp); // Close the file
     144:	80 91 ba 01 	lds	r24, 0x01BA	; 0x8001ba <__data_end>
     148:	90 91 bb 01 	lds	r25, 0x01BB	; 0x8001bb <__data_end+0x1>
     14c:	0e 94 85 0f 	call	0x1f0a	; 0x1f0a <f_close>
		if (bw ==  sizeof("test.jpg")) { // We wrote the entire string
     150:	89 81       	ldd	r24, Y+1	; 0x01
     152:	9a 81       	ldd	r25, Y+2	; 0x02
     154:	09 97       	sbiw	r24, 0x09	; 9
     156:	19 f4       	brne	.+6      	; 0x15e <main+0x8a>
			PORTD |= (1<<PD0); // Turn LED on
     158:	8b b1       	in	r24, 0x0b	; 11
     15a:	81 60       	ori	r24, 0x01	; 1
     15c:	8b b9       	out	0x0b, r24	; 11
     15e:	ff cf       	rjmp	.-2      	; 0x15e <main+0x8a>

00000160 <_ZL7mem_cpyPvPKvj>:
		mem_cpy(rbuff, &fp->buf[fp->fptr % SS(fp->fs)], rcnt);	/* Pick partial sector */
#endif
	}

	LEAVE_FF(fp->fs, FR_OK);
}
     160:	dc 01       	movw	r26, r24
     162:	fb 01       	movw	r30, r22
     164:	42 30       	cpi	r20, 0x02	; 2
     166:	51 05       	cpc	r21, r1
     168:	38 f0       	brcs	.+14     	; 0x178 <_ZL7mem_cpyPvPKvj+0x18>
     16a:	81 91       	ld	r24, Z+
     16c:	91 91       	ld	r25, Z+
     16e:	8d 93       	st	X+, r24
     170:	9d 93       	st	X+, r25
     172:	42 50       	subi	r20, 0x02	; 2
     174:	51 09       	sbc	r21, r1
     176:	f6 cf       	rjmp	.-20     	; 0x164 <_ZL7mem_cpyPvPKvj+0x4>
     178:	ca 01       	movw	r24, r20
     17a:	01 97       	sbiw	r24, 0x01	; 1
     17c:	45 2b       	or	r20, r21
     17e:	31 f0       	breq	.+12     	; 0x18c <_ZL7mem_cpyPvPKvj+0x2c>
     180:	20 81       	ld	r18, Z
     182:	2c 93       	st	X, r18
     184:	ac 01       	movw	r20, r24
     186:	31 96       	adiw	r30, 0x01	; 1
     188:	11 96       	adiw	r26, 0x01	; 1
     18a:	f6 cf       	rjmp	.-20     	; 0x178 <_ZL7mem_cpyPvPKvj+0x18>
     18c:	08 95       	ret

0000018e <_ZL7mem_setPvij>:
     18e:	fc 01       	movw	r30, r24
     190:	ca 01       	movw	r24, r20
     192:	01 97       	sbiw	r24, 0x01	; 1
     194:	45 2b       	or	r20, r21
     196:	21 f0       	breq	.+8      	; 0x1a0 <_ZL7mem_setPvij+0x12>
     198:	60 83       	st	Z, r22
     19a:	ac 01       	movw	r20, r24
     19c:	31 96       	adiw	r30, 0x01	; 1
     19e:	f8 cf       	rjmp	.-16     	; 0x190 <_ZL7mem_setPvij+0x2>
     1a0:	08 95       	ret

000001a2 <_ZL7mem_cmpPKvS0_j>:
     1a2:	cf 93       	push	r28
     1a4:	df 93       	push	r29
     1a6:	ec 01       	movw	r28, r24
     1a8:	db 01       	movw	r26, r22
     1aa:	80 e0       	ldi	r24, 0x00	; 0
     1ac:	90 e0       	ldi	r25, 0x00	; 0
     1ae:	fa 01       	movw	r30, r20
     1b0:	31 97       	sbiw	r30, 0x01	; 1
     1b2:	45 2b       	or	r20, r21
     1b4:	81 f0       	breq	.+32     	; 0x1d6 <_ZL7mem_cmpPKvS0_j+0x34>
     1b6:	9e 01       	movw	r18, r28
     1b8:	2f 5f       	subi	r18, 0xFF	; 255
     1ba:	3f 4f       	sbci	r19, 0xFF	; 255
     1bc:	88 81       	ld	r24, Y
     1be:	90 e0       	ldi	r25, 0x00	; 0
     1c0:	ad 01       	movw	r20, r26
     1c2:	4f 5f       	subi	r20, 0xFF	; 255
     1c4:	5f 4f       	sbci	r21, 0xFF	; 255
     1c6:	6c 91       	ld	r22, X
     1c8:	86 1b       	sub	r24, r22
     1ca:	91 09       	sbc	r25, r1
     1cc:	31 f4       	brne	.+12     	; 0x1da <_ZL7mem_cmpPKvS0_j+0x38>
     1ce:	da 01       	movw	r26, r20
     1d0:	e9 01       	movw	r28, r18
     1d2:	21 e0       	ldi	r18, 0x01	; 1
     1d4:	05 c0       	rjmp	.+10     	; 0x1e0 <_ZL7mem_cmpPKvS0_j+0x3e>
     1d6:	20 e0       	ldi	r18, 0x00	; 0
     1d8:	03 c0       	rjmp	.+6      	; 0x1e0 <_ZL7mem_cmpPKvS0_j+0x3e>
     1da:	da 01       	movw	r26, r20
     1dc:	e9 01       	movw	r28, r18
     1de:	20 e0       	ldi	r18, 0x00	; 0
     1e0:	af 01       	movw	r20, r30
     1e2:	21 11       	cpse	r18, r1
     1e4:	e4 cf       	rjmp	.-56     	; 0x1ae <_ZL7mem_cmpPKvS0_j+0xc>
     1e6:	df 91       	pop	r29
     1e8:	cf 91       	pop	r28
     1ea:	08 95       	ret

000001ec <_ZL7chk_chrPKci>:
     1ec:	fc 01       	movw	r30, r24
     1ee:	80 81       	ld	r24, Z
     1f0:	88 23       	and	r24, r24
     1f2:	39 f0       	breq	.+14     	; 0x202 <_ZL7chk_chrPKci+0x16>
     1f4:	28 2f       	mov	r18, r24
     1f6:	30 e0       	ldi	r19, 0x00	; 0
     1f8:	26 17       	cp	r18, r22
     1fa:	37 07       	cpc	r19, r23
     1fc:	11 f0       	breq	.+4      	; 0x202 <_ZL7chk_chrPKci+0x16>
     1fe:	31 96       	adiw	r30, 0x01	; 1
     200:	f6 cf       	rjmp	.-20     	; 0x1ee <_ZL7chk_chrPKci+0x2>
     202:	90 e0       	ldi	r25, 0x00	; 0
     204:	08 95       	ret

00000206 <_ZL8ld_clustP5FATFSPh>:
     206:	0f 93       	push	r16
     208:	1f 93       	push	r17
     20a:	dc 01       	movw	r26, r24
     20c:	fb 01       	movw	r30, r22
     20e:	62 8d       	ldd	r22, Z+26	; 0x1a
     210:	73 8d       	ldd	r23, Z+27	; 0x1b
     212:	80 e0       	ldi	r24, 0x00	; 0
     214:	90 e0       	ldi	r25, 0x00	; 0
     216:	2c 91       	ld	r18, X
     218:	23 30       	cpi	r18, 0x03	; 3
     21a:	59 f4       	brne	.+22     	; 0x232 <_ZL8ld_clustP5FATFSPh+0x2c>
     21c:	04 89       	ldd	r16, Z+20	; 0x14
     21e:	15 89       	ldd	r17, Z+21	; 0x15
     220:	20 e0       	ldi	r18, 0x00	; 0
     222:	30 e0       	ldi	r19, 0x00	; 0
     224:	98 01       	movw	r18, r16
     226:	11 27       	eor	r17, r17
     228:	00 27       	eor	r16, r16
     22a:	60 2b       	or	r22, r16
     22c:	71 2b       	or	r23, r17
     22e:	82 2b       	or	r24, r18
     230:	93 2b       	or	r25, r19
     232:	1f 91       	pop	r17
     234:	0f 91       	pop	r16
     236:	08 95       	ret

00000238 <_ZL8st_clustPhm>:
     238:	fc 01       	movw	r30, r24
     23a:	53 8f       	std	Z+27, r21	; 0x1b
     23c:	42 8f       	std	Z+26, r20	; 0x1a
     23e:	75 8b       	std	Z+21, r23	; 0x15
     240:	64 8b       	std	Z+20, r22	; 0x14
     242:	08 95       	ret

00000244 <_ZL11create_nameP3DIRPPKc>:
     244:	4f 92       	push	r4
     246:	5f 92       	push	r5
     248:	6f 92       	push	r6
     24a:	8f 92       	push	r8
     24c:	9f 92       	push	r9
     24e:	af 92       	push	r10
     250:	bf 92       	push	r11
     252:	cf 92       	push	r12
     254:	df 92       	push	r13
     256:	ef 92       	push	r14
     258:	ff 92       	push	r15
     25a:	1f 93       	push	r17
     25c:	cf 93       	push	r28
     25e:	df 93       	push	r29
     260:	fc 01       	movw	r30, r24
     262:	5b 01       	movw	r10, r22
     264:	db 01       	movw	r26, r22
     266:	cd 91       	ld	r28, X+
     268:	dc 91       	ld	r29, X
     26a:	98 81       	ld	r25, Y
     26c:	9f 32       	cpi	r25, 0x2F	; 47
     26e:	11 f0       	breq	.+4      	; 0x274 <_ZL11create_nameP3DIRPPKc+0x30>
     270:	9c 35       	cpi	r25, 0x5C	; 92
     272:	11 f4       	brne	.+4      	; 0x278 <_ZL11create_nameP3DIRPPKc+0x34>
     274:	21 96       	adiw	r28, 0x01	; 1
     276:	f9 cf       	rjmp	.-14     	; 0x26a <_ZL11create_nameP3DIRPPKc+0x26>
     278:	c4 88       	ldd	r12, Z+20	; 0x14
     27a:	d5 88       	ldd	r13, Z+21	; 0x15
     27c:	4b e0       	ldi	r20, 0x0B	; 11
     27e:	50 e0       	ldi	r21, 0x00	; 0
     280:	60 e2       	ldi	r22, 0x20	; 32
     282:	70 e0       	ldi	r23, 0x00	; 0
     284:	c6 01       	movw	r24, r12
     286:	83 df       	rcall	.-250    	; 0x18e <_ZL7mem_setPvij>
     288:	41 2c       	mov	r4, r1
     28a:	51 2c       	mov	r5, r1
     28c:	80 e0       	ldi	r24, 0x00	; 0
     28e:	90 e0       	ldi	r25, 0x00	; 0
     290:	68 94       	set
     292:	88 24       	eor	r8, r8
     294:	83 f8       	bld	r8, 3
     296:	91 2c       	mov	r9, r1
     298:	61 2c       	mov	r6, r1
     29a:	01 c0       	rjmp	.+2      	; 0x29e <_ZL11create_nameP3DIRPPKc+0x5a>
     29c:	c7 01       	movw	r24, r14
     29e:	7c 01       	movw	r14, r24
     2a0:	bf ef       	ldi	r27, 0xFF	; 255
     2a2:	eb 1a       	sub	r14, r27
     2a4:	fb 0a       	sbc	r15, r27
     2a6:	fe 01       	movw	r30, r28
     2a8:	e8 0f       	add	r30, r24
     2aa:	f9 1f       	adc	r31, r25
     2ac:	10 81       	ld	r17, Z
     2ae:	11 32       	cpi	r17, 0x21	; 33
     2b0:	08 f4       	brcc	.+2      	; 0x2b4 <_ZL11create_nameP3DIRPPKc+0x70>
     2b2:	49 c0       	rjmp	.+146    	; 0x346 <_ZL11create_nameP3DIRPPKc+0x102>
     2b4:	1f 32       	cpi	r17, 0x2F	; 47
     2b6:	09 f4       	brne	.+2      	; 0x2ba <_ZL11create_nameP3DIRPPKc+0x76>
     2b8:	46 c0       	rjmp	.+140    	; 0x346 <_ZL11create_nameP3DIRPPKc+0x102>
     2ba:	1c 35       	cpi	r17, 0x5C	; 92
     2bc:	09 f4       	brne	.+2      	; 0x2c0 <_ZL11create_nameP3DIRPPKc+0x7c>
     2be:	43 c0       	rjmp	.+134    	; 0x346 <_ZL11create_nameP3DIRPPKc+0x102>
     2c0:	1e 32       	cpi	r17, 0x2E	; 46
     2c2:	19 f0       	breq	.+6      	; 0x2ca <_ZL11create_nameP3DIRPPKc+0x86>
     2c4:	48 14       	cp	r4, r8
     2c6:	59 04       	cpc	r5, r9
     2c8:	a0 f0       	brcs	.+40     	; 0x2f2 <_ZL11create_nameP3DIRPPKc+0xae>
     2ca:	e8 e0       	ldi	r30, 0x08	; 8
     2cc:	8e 16       	cp	r8, r30
     2ce:	91 04       	cpc	r9, r1
     2d0:	09 f0       	breq	.+2      	; 0x2d4 <_ZL11create_nameP3DIRPPKc+0x90>
     2d2:	5f c0       	rjmp	.+190    	; 0x392 <_ZL11create_nameP3DIRPPKc+0x14e>
     2d4:	1e 32       	cpi	r17, 0x2E	; 46
     2d6:	09 f0       	breq	.+2      	; 0x2da <_ZL11create_nameP3DIRPPKc+0x96>
     2d8:	5e c0       	rjmp	.+188    	; 0x396 <_ZL11create_nameP3DIRPPKc+0x152>
     2da:	66 0c       	add	r6, r6
     2dc:	66 0c       	add	r6, r6
     2de:	68 94       	set
     2e0:	44 24       	eor	r4, r4
     2e2:	43 f8       	bld	r4, 3
     2e4:	51 2c       	mov	r5, r1
     2e6:	0f 2e       	mov	r0, r31
     2e8:	fb e0       	ldi	r31, 0x0B	; 11
     2ea:	8f 2e       	mov	r8, r31
     2ec:	91 2c       	mov	r9, r1
     2ee:	f0 2d       	mov	r31, r0
     2f0:	d5 cf       	rjmp	.-86     	; 0x29c <_ZL11create_nameP3DIRPPKc+0x58>
     2f2:	11 23       	and	r17, r17
     2f4:	44 f4       	brge	.+16     	; 0x306 <_ZL11create_nameP3DIRPPKc+0xc2>
     2f6:	f6 2d       	mov	r31, r6
     2f8:	f3 60       	ori	r31, 0x03	; 3
     2fa:	6f 2e       	mov	r6, r31
     2fc:	e1 2f       	mov	r30, r17
     2fe:	f0 e0       	ldi	r31, 0x00	; 0
     300:	e7 54       	subi	r30, 0x47	; 71
     302:	ff 4f       	sbci	r31, 0xFF	; 255
     304:	10 81       	ld	r17, Z
     306:	61 2f       	mov	r22, r17
     308:	70 e0       	ldi	r23, 0x00	; 0
     30a:	8a e1       	ldi	r24, 0x1A	; 26
     30c:	91 e0       	ldi	r25, 0x01	; 1
     30e:	6e df       	rcall	.-292    	; 0x1ec <_ZL7chk_chrPKci>
     310:	89 2b       	or	r24, r25
     312:	09 f0       	breq	.+2      	; 0x316 <_ZL11create_nameP3DIRPPKc+0xd2>
     314:	42 c0       	rjmp	.+132    	; 0x39a <_ZL11create_nameP3DIRPPKc+0x156>
     316:	8f eb       	ldi	r24, 0xBF	; 191
     318:	81 0f       	add	r24, r17
     31a:	8a 31       	cpi	r24, 0x1A	; 26
     31c:	20 f4       	brcc	.+8      	; 0x326 <_ZL11create_nameP3DIRPPKc+0xe2>
     31e:	26 2d       	mov	r18, r6
     320:	22 60       	ori	r18, 0x02	; 2
     322:	62 2e       	mov	r6, r18
     324:	08 c0       	rjmp	.+16     	; 0x336 <_ZL11create_nameP3DIRPPKc+0xf2>
     326:	8f e9       	ldi	r24, 0x9F	; 159
     328:	81 0f       	add	r24, r17
     32a:	8a 31       	cpi	r24, 0x1A	; 26
     32c:	20 f4       	brcc	.+8      	; 0x336 <_ZL11create_nameP3DIRPPKc+0xf2>
     32e:	86 2d       	mov	r24, r6
     330:	81 60       	ori	r24, 0x01	; 1
     332:	68 2e       	mov	r6, r24
     334:	10 52       	subi	r17, 0x20	; 32
     336:	f6 01       	movw	r30, r12
     338:	e4 0d       	add	r30, r4
     33a:	f5 1d       	adc	r31, r5
     33c:	10 83       	st	Z, r17
     33e:	d2 01       	movw	r26, r4
     340:	11 96       	adiw	r26, 0x01	; 1
     342:	2d 01       	movw	r4, r26
     344:	ab cf       	rjmp	.-170    	; 0x29c <_ZL11create_nameP3DIRPPKc+0x58>
     346:	ce 0d       	add	r28, r14
     348:	df 1d       	adc	r29, r15
     34a:	f5 01       	movw	r30, r10
     34c:	d1 83       	std	Z+1, r29	; 0x01
     34e:	c0 83       	st	Z, r28
     350:	11 32       	cpi	r17, 0x21	; 33
     352:	10 f4       	brcc	.+4      	; 0x358 <_ZL11create_nameP3DIRPPKc+0x114>
     354:	94 e0       	ldi	r25, 0x04	; 4
     356:	01 c0       	rjmp	.+2      	; 0x35a <_ZL11create_nameP3DIRPPKc+0x116>
     358:	90 e0       	ldi	r25, 0x00	; 0
     35a:	45 28       	or	r4, r5
     35c:	01 f1       	breq	.+64     	; 0x39e <_ZL11create_nameP3DIRPPKc+0x15a>
     35e:	d6 01       	movw	r26, r12
     360:	8c 91       	ld	r24, X
     362:	85 3e       	cpi	r24, 0xE5	; 229
     364:	11 f4       	brne	.+4      	; 0x36a <_ZL11create_nameP3DIRPPKc+0x126>
     366:	85 e0       	ldi	r24, 0x05	; 5
     368:	8c 93       	st	X, r24
     36a:	b8 e0       	ldi	r27, 0x08	; 8
     36c:	8b 16       	cp	r8, r27
     36e:	91 04       	cpc	r9, r1
     370:	11 f4       	brne	.+4      	; 0x376 <_ZL11create_nameP3DIRPPKc+0x132>
     372:	66 0c       	add	r6, r6
     374:	66 0c       	add	r6, r6
     376:	86 2d       	mov	r24, r6
     378:	83 70       	andi	r24, 0x03	; 3
     37a:	81 30       	cpi	r24, 0x01	; 1
     37c:	09 f4       	brne	.+2      	; 0x380 <_ZL11create_nameP3DIRPPKc+0x13c>
     37e:	90 61       	ori	r25, 0x10	; 16
     380:	86 2d       	mov	r24, r6
     382:	8c 70       	andi	r24, 0x0C	; 12
     384:	84 30       	cpi	r24, 0x04	; 4
     386:	09 f4       	brne	.+2      	; 0x38a <_ZL11create_nameP3DIRPPKc+0x146>
     388:	98 60       	ori	r25, 0x08	; 8
     38a:	f6 01       	movw	r30, r12
     38c:	93 87       	std	Z+11, r25	; 0x0b
     38e:	80 e0       	ldi	r24, 0x00	; 0
     390:	07 c0       	rjmp	.+14     	; 0x3a0 <_ZL11create_nameP3DIRPPKc+0x15c>
     392:	86 e0       	ldi	r24, 0x06	; 6
     394:	05 c0       	rjmp	.+10     	; 0x3a0 <_ZL11create_nameP3DIRPPKc+0x15c>
     396:	86 e0       	ldi	r24, 0x06	; 6
     398:	03 c0       	rjmp	.+6      	; 0x3a0 <_ZL11create_nameP3DIRPPKc+0x15c>
     39a:	86 e0       	ldi	r24, 0x06	; 6
     39c:	01 c0       	rjmp	.+2      	; 0x3a0 <_ZL11create_nameP3DIRPPKc+0x15c>
     39e:	86 e0       	ldi	r24, 0x06	; 6
     3a0:	df 91       	pop	r29
     3a2:	cf 91       	pop	r28
     3a4:	1f 91       	pop	r17
     3a6:	ff 90       	pop	r15
     3a8:	ef 90       	pop	r14
     3aa:	df 90       	pop	r13
     3ac:	cf 90       	pop	r12
     3ae:	bf 90       	pop	r11
     3b0:	af 90       	pop	r10
     3b2:	9f 90       	pop	r9
     3b4:	8f 90       	pop	r8
     3b6:	6f 90       	pop	r6
     3b8:	5f 90       	pop	r5
     3ba:	4f 90       	pop	r4
     3bc:	08 95       	ret

000003be <_ZL8check_fsP5FATFSm>:
     3be:	0f 93       	push	r16
     3c0:	cf 93       	push	r28
     3c2:	df 93       	push	r29
     3c4:	ec 01       	movw	r28, r24
     3c6:	9a 01       	movw	r18, r20
     3c8:	ab 01       	movw	r20, r22
     3ca:	bc 01       	movw	r22, r24
     3cc:	6e 5c       	subi	r22, 0xCE	; 206
     3ce:	7f 4f       	sbci	r23, 0xFF	; 255
     3d0:	01 e0       	ldi	r16, 0x01	; 1
     3d2:	89 81       	ldd	r24, Y+1	; 0x01
     3d4:	0e 94 6f 12 	call	0x24de	; 0x24de <disk_read>
     3d8:	81 11       	cpse	r24, r1
     3da:	22 c0       	rjmp	.+68     	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
     3dc:	fe 01       	movw	r30, r28
     3de:	e0 5d       	subi	r30, 0xD0	; 208
     3e0:	fd 4f       	sbci	r31, 0xFD	; 253
     3e2:	80 81       	ld	r24, Z
     3e4:	91 81       	ldd	r25, Z+1	; 0x01
     3e6:	85 35       	cpi	r24, 0x55	; 85
     3e8:	9a 4a       	sbci	r25, 0xAA	; 170
     3ea:	e1 f4       	brne	.+56     	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
     3ec:	e8 5c       	subi	r30, 0xC8	; 200
     3ee:	f1 40       	sbci	r31, 0x01	; 1
     3f0:	80 81       	ld	r24, Z
     3f2:	91 81       	ldd	r25, Z+1	; 0x01
     3f4:	a2 81       	ldd	r26, Z+2	; 0x02
     3f6:	b3 81       	ldd	r27, Z+3	; 0x03
     3f8:	bb 27       	eor	r27, r27
     3fa:	86 34       	cpi	r24, 0x46	; 70
     3fc:	91 44       	sbci	r25, 0x41	; 65
     3fe:	a4 45       	sbci	r26, 0x54	; 84
     400:	b1 05       	cpc	r27, r1
     402:	91 f0       	breq	.+36     	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
     404:	cc 57       	subi	r28, 0x7C	; 124
     406:	df 4f       	sbci	r29, 0xFF	; 255
     408:	88 81       	ld	r24, Y
     40a:	99 81       	ldd	r25, Y+1	; 0x01
     40c:	aa 81       	ldd	r26, Y+2	; 0x02
     40e:	bb 81       	ldd	r27, Y+3	; 0x03
     410:	bb 27       	eor	r27, r27
     412:	86 34       	cpi	r24, 0x46	; 70
     414:	91 44       	sbci	r25, 0x41	; 65
     416:	a4 45       	sbci	r26, 0x54	; 84
     418:	b1 05       	cpc	r27, r1
     41a:	41 f4       	brne	.+16     	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
     41c:	80 e0       	ldi	r24, 0x00	; 0
     41e:	07 c0       	rjmp	.+14     	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
     420:	83 e0       	ldi	r24, 0x03	; 3
     422:	05 c0       	rjmp	.+10     	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
     424:	82 e0       	ldi	r24, 0x02	; 2
     426:	03 c0       	rjmp	.+6      	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
     428:	80 e0       	ldi	r24, 0x00	; 0
     42a:	01 c0       	rjmp	.+2      	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
     42c:	81 e0       	ldi	r24, 0x01	; 1
     42e:	df 91       	pop	r29
     430:	cf 91       	pop	r28
     432:	0f 91       	pop	r16
     434:	08 95       	ret

00000436 <_ZL11sync_windowP5FATFS>:
     436:	8f 92       	push	r8
     438:	9f 92       	push	r9
     43a:	af 92       	push	r10
     43c:	bf 92       	push	r11
     43e:	cf 92       	push	r12
     440:	df 92       	push	r13
     442:	ef 92       	push	r14
     444:	ff 92       	push	r15
     446:	0f 93       	push	r16
     448:	cf 93       	push	r28
     44a:	df 93       	push	r29
     44c:	fc 01       	movw	r30, r24
     44e:	24 81       	ldd	r18, Z+4	; 0x04
     450:	22 23       	and	r18, r18
     452:	09 f4       	brne	.+2      	; 0x456 <_ZL11sync_windowP5FATFS+0x20>
     454:	42 c0       	rjmp	.+132    	; 0x4da <_ZL11sync_windowP5FATFS+0xa4>
     456:	ec 01       	movw	r28, r24
     458:	c6 a4       	ldd	r12, Z+46	; 0x2e
     45a:	d7 a4       	ldd	r13, Z+47	; 0x2f
     45c:	e0 a8       	ldd	r14, Z+48	; 0x30
     45e:	f1 a8       	ldd	r15, Z+49	; 0x31
     460:	4c 01       	movw	r8, r24
     462:	f2 e3       	ldi	r31, 0x32	; 50
     464:	8f 0e       	add	r8, r31
     466:	91 1c       	adc	r9, r1
     468:	01 e0       	ldi	r16, 0x01	; 1
     46a:	a7 01       	movw	r20, r14
     46c:	96 01       	movw	r18, r12
     46e:	b4 01       	movw	r22, r8
     470:	89 81       	ldd	r24, Y+1	; 0x01
     472:	0e 94 c5 12 	call	0x258a	; 0x258a <disk_write>
     476:	81 11       	cpse	r24, r1
     478:	32 c0       	rjmp	.+100    	; 0x4de <_ZL11sync_windowP5FATFS+0xa8>
     47a:	1c 82       	std	Y+4, r1	; 0x04
     47c:	8a a1       	ldd	r24, Y+34	; 0x22
     47e:	9b a1       	ldd	r25, Y+35	; 0x23
     480:	ac a1       	ldd	r26, Y+36	; 0x24
     482:	bd a1       	ldd	r27, Y+37	; 0x25
     484:	c8 16       	cp	r12, r24
     486:	d9 06       	cpc	r13, r25
     488:	ea 06       	cpc	r14, r26
     48a:	fb 06       	cpc	r15, r27
     48c:	50 f1       	brcs	.+84     	; 0x4e2 <_ZL11sync_windowP5FATFS+0xac>
     48e:	4a 8d       	ldd	r20, Y+26	; 0x1a
     490:	5b 8d       	ldd	r21, Y+27	; 0x1b
     492:	6c 8d       	ldd	r22, Y+28	; 0x1c
     494:	7d 8d       	ldd	r23, Y+29	; 0x1d
     496:	84 0f       	add	r24, r20
     498:	95 1f       	adc	r25, r21
     49a:	a6 1f       	adc	r26, r22
     49c:	b7 1f       	adc	r27, r23
     49e:	c8 16       	cp	r12, r24
     4a0:	d9 06       	cpc	r13, r25
     4a2:	ea 06       	cpc	r14, r26
     4a4:	fb 06       	cpc	r15, r27
     4a6:	f8 f4       	brcc	.+62     	; 0x4e6 <_ZL11sync_windowP5FATFS+0xb0>
     4a8:	ab 80       	ldd	r10, Y+3	; 0x03
     4aa:	b1 2c       	mov	r11, r1
     4ac:	82 e0       	ldi	r24, 0x02	; 2
     4ae:	a8 16       	cp	r10, r24
     4b0:	b1 04       	cpc	r11, r1
     4b2:	d8 f0       	brcs	.+54     	; 0x4ea <_ZL11sync_windowP5FATFS+0xb4>
     4b4:	8a 8d       	ldd	r24, Y+26	; 0x1a
     4b6:	9b 8d       	ldd	r25, Y+27	; 0x1b
     4b8:	ac 8d       	ldd	r26, Y+28	; 0x1c
     4ba:	bd 8d       	ldd	r27, Y+29	; 0x1d
     4bc:	c8 0e       	add	r12, r24
     4be:	d9 1e       	adc	r13, r25
     4c0:	ea 1e       	adc	r14, r26
     4c2:	fb 1e       	adc	r15, r27
     4c4:	01 e0       	ldi	r16, 0x01	; 1
     4c6:	a7 01       	movw	r20, r14
     4c8:	96 01       	movw	r18, r12
     4ca:	b4 01       	movw	r22, r8
     4cc:	89 81       	ldd	r24, Y+1	; 0x01
     4ce:	0e 94 c5 12 	call	0x258a	; 0x258a <disk_write>
     4d2:	e1 e0       	ldi	r30, 0x01	; 1
     4d4:	ae 1a       	sub	r10, r30
     4d6:	b1 08       	sbc	r11, r1
     4d8:	e9 cf       	rjmp	.-46     	; 0x4ac <_ZL11sync_windowP5FATFS+0x76>
     4da:	80 e0       	ldi	r24, 0x00	; 0
     4dc:	07 c0       	rjmp	.+14     	; 0x4ec <_ZL11sync_windowP5FATFS+0xb6>
     4de:	81 e0       	ldi	r24, 0x01	; 1
     4e0:	05 c0       	rjmp	.+10     	; 0x4ec <_ZL11sync_windowP5FATFS+0xb6>
     4e2:	80 e0       	ldi	r24, 0x00	; 0
     4e4:	03 c0       	rjmp	.+6      	; 0x4ec <_ZL11sync_windowP5FATFS+0xb6>
     4e6:	80 e0       	ldi	r24, 0x00	; 0
     4e8:	01 c0       	rjmp	.+2      	; 0x4ec <_ZL11sync_windowP5FATFS+0xb6>
     4ea:	80 e0       	ldi	r24, 0x00	; 0
     4ec:	df 91       	pop	r29
     4ee:	cf 91       	pop	r28
     4f0:	0f 91       	pop	r16
     4f2:	ff 90       	pop	r15
     4f4:	ef 90       	pop	r14
     4f6:	df 90       	pop	r13
     4f8:	cf 90       	pop	r12
     4fa:	bf 90       	pop	r11
     4fc:	af 90       	pop	r10
     4fe:	9f 90       	pop	r9
     500:	8f 90       	pop	r8
     502:	08 95       	ret

00000504 <_ZL11move_windowP5FATFSm>:
     504:	cf 92       	push	r12
     506:	df 92       	push	r13
     508:	ef 92       	push	r14
     50a:	ff 92       	push	r15
     50c:	0f 93       	push	r16
     50e:	1f 93       	push	r17
     510:	cf 93       	push	r28
     512:	df 93       	push	r29
     514:	fc 01       	movw	r30, r24
     516:	c6 a4       	ldd	r12, Z+46	; 0x2e
     518:	d7 a4       	ldd	r13, Z+47	; 0x2f
     51a:	e0 a8       	ldd	r14, Z+48	; 0x30
     51c:	f1 a8       	ldd	r15, Z+49	; 0x31
     51e:	c4 16       	cp	r12, r20
     520:	d5 06       	cpc	r13, r21
     522:	e6 06       	cpc	r14, r22
     524:	f7 06       	cpc	r15, r23
     526:	b9 f0       	breq	.+46     	; 0x556 <_ZL11move_windowP5FATFSm+0x52>
     528:	6a 01       	movw	r12, r20
     52a:	7b 01       	movw	r14, r22
     52c:	ec 01       	movw	r28, r24
     52e:	83 df       	rcall	.-250    	; 0x436 <_ZL11sync_windowP5FATFS>
     530:	18 2f       	mov	r17, r24
     532:	81 11       	cpse	r24, r1
     534:	12 c0       	rjmp	.+36     	; 0x55a <_ZL11move_windowP5FATFSm+0x56>
     536:	01 e0       	ldi	r16, 0x01	; 1
     538:	a7 01       	movw	r20, r14
     53a:	96 01       	movw	r18, r12
     53c:	be 01       	movw	r22, r28
     53e:	6e 5c       	subi	r22, 0xCE	; 206
     540:	7f 4f       	sbci	r23, 0xFF	; 255
     542:	89 81       	ldd	r24, Y+1	; 0x01
     544:	0e 94 6f 12 	call	0x24de	; 0x24de <disk_read>
     548:	81 11       	cpse	r24, r1
     54a:	09 c0       	rjmp	.+18     	; 0x55e <_ZL11move_windowP5FATFSm+0x5a>
     54c:	ce a6       	std	Y+46, r12	; 0x2e
     54e:	df a6       	std	Y+47, r13	; 0x2f
     550:	e8 aa       	std	Y+48, r14	; 0x30
     552:	f9 aa       	std	Y+49, r15	; 0x31
     554:	05 c0       	rjmp	.+10     	; 0x560 <_ZL11move_windowP5FATFSm+0x5c>
     556:	10 e0       	ldi	r17, 0x00	; 0
     558:	03 c0       	rjmp	.+6      	; 0x560 <_ZL11move_windowP5FATFSm+0x5c>
     55a:	11 e0       	ldi	r17, 0x01	; 1
     55c:	01 c0       	rjmp	.+2      	; 0x560 <_ZL11move_windowP5FATFSm+0x5c>
     55e:	11 e0       	ldi	r17, 0x01	; 1
     560:	81 2f       	mov	r24, r17
     562:	df 91       	pop	r29
     564:	cf 91       	pop	r28
     566:	1f 91       	pop	r17
     568:	0f 91       	pop	r16
     56a:	ff 90       	pop	r15
     56c:	ef 90       	pop	r14
     56e:	df 90       	pop	r13
     570:	cf 90       	pop	r12
     572:	08 95       	ret

00000574 <_ZL8validatePv>:
     574:	00 97       	sbiw	r24, 0x00	; 0
     576:	c9 f0       	breq	.+50     	; 0x5aa <_ZL8validatePv+0x36>
     578:	dc 01       	movw	r26, r24
     57a:	ed 91       	ld	r30, X+
     57c:	fc 91       	ld	r31, X
     57e:	11 97       	sbiw	r26, 0x01	; 1
     580:	30 97       	sbiw	r30, 0x00	; 0
     582:	a9 f0       	breq	.+42     	; 0x5ae <_ZL8validatePv+0x3a>
     584:	20 81       	ld	r18, Z
     586:	22 23       	and	r18, r18
     588:	a1 f0       	breq	.+40     	; 0x5b2 <_ZL8validatePv+0x3e>
     58a:	26 81       	ldd	r18, Z+6	; 0x06
     58c:	37 81       	ldd	r19, Z+7	; 0x07
     58e:	12 96       	adiw	r26, 0x02	; 2
     590:	8d 91       	ld	r24, X+
     592:	9c 91       	ld	r25, X
     594:	13 97       	sbiw	r26, 0x03	; 3
     596:	28 17       	cp	r18, r24
     598:	39 07       	cpc	r19, r25
     59a:	69 f4       	brne	.+26     	; 0x5b6 <_ZL8validatePv+0x42>
     59c:	81 81       	ldd	r24, Z+1	; 0x01
     59e:	0e 94 98 11 	call	0x2330	; 0x2330 <disk_status>
     5a2:	80 ff       	sbrs	r24, 0
     5a4:	0a c0       	rjmp	.+20     	; 0x5ba <_ZL8validatePv+0x46>
     5a6:	83 e0       	ldi	r24, 0x03	; 3
     5a8:	08 95       	ret
     5aa:	89 e0       	ldi	r24, 0x09	; 9
     5ac:	08 95       	ret
     5ae:	89 e0       	ldi	r24, 0x09	; 9
     5b0:	08 95       	ret
     5b2:	89 e0       	ldi	r24, 0x09	; 9
     5b4:	08 95       	ret
     5b6:	89 e0       	ldi	r24, 0x09	; 9
     5b8:	08 95       	ret
     5ba:	80 e0       	ldi	r24, 0x00	; 0
     5bc:	08 95       	ret

000005be <_ZL11chk_mountedPPKcPP5FATFSh>:
     5be:	2f 92       	push	r2
     5c0:	3f 92       	push	r3
     5c2:	4f 92       	push	r4
     5c4:	5f 92       	push	r5
     5c6:	6f 92       	push	r6
     5c8:	7f 92       	push	r7
     5ca:	8f 92       	push	r8
     5cc:	9f 92       	push	r9
     5ce:	af 92       	push	r10
     5d0:	bf 92       	push	r11
     5d2:	cf 92       	push	r12
     5d4:	df 92       	push	r13
     5d6:	ef 92       	push	r14
     5d8:	ff 92       	push	r15
     5da:	0f 93       	push	r16
     5dc:	1f 93       	push	r17
     5de:	cf 93       	push	r28
     5e0:	df 93       	push	r29
     5e2:	cd b7       	in	r28, 0x3d	; 61
     5e4:	de b7       	in	r29, 0x3e	; 62
     5e6:	2e 97       	sbiw	r28, 0x0e	; 14
     5e8:	0f b6       	in	r0, 0x3f	; 63
     5ea:	f8 94       	cli
     5ec:	de bf       	out	0x3e, r29	; 62
     5ee:	0f be       	out	0x3f, r0	; 63
     5f0:	cd bf       	out	0x3d, r28	; 61
     5f2:	dc 01       	movw	r26, r24
     5f4:	ed 91       	ld	r30, X+
     5f6:	fc 91       	ld	r31, X
     5f8:	e0 80       	ld	r14, Z
     5fa:	f1 2c       	mov	r15, r1
     5fc:	b0 e3       	ldi	r27, 0x30	; 48
     5fe:	eb 1a       	sub	r14, r27
     600:	f1 08       	sbc	r15, r1
     602:	2a e0       	ldi	r18, 0x0A	; 10
     604:	e2 16       	cp	r14, r18
     606:	f1 04       	cpc	r15, r1
     608:	40 f4       	brcc	.+16     	; 0x61a <_ZL11chk_mountedPPKcPP5FATFSh+0x5c>
     60a:	21 81       	ldd	r18, Z+1	; 0x01
     60c:	2a 33       	cpi	r18, 0x3A	; 58
     60e:	41 f4       	brne	.+16     	; 0x620 <_ZL11chk_mountedPPKcPP5FATFSh+0x62>
     610:	32 96       	adiw	r30, 0x02	; 2
     612:	dc 01       	movw	r26, r24
     614:	ed 93       	st	X+, r30
     616:	fc 93       	st	X, r31
     618:	05 c0       	rjmp	.+10     	; 0x624 <_ZL11chk_mountedPPKcPP5FATFSh+0x66>
     61a:	e1 2c       	mov	r14, r1
     61c:	f1 2c       	mov	r15, r1
     61e:	02 c0       	rjmp	.+4      	; 0x624 <_ZL11chk_mountedPPKcPP5FATFSh+0x66>
     620:	e1 2c       	mov	r14, r1
     622:	f1 2c       	mov	r15, r1
     624:	fb 01       	movw	r30, r22
     626:	11 82       	std	Z+1, r1	; 0x01
     628:	10 82       	st	Z, r1
     62a:	e1 14       	cp	r14, r1
     62c:	f1 04       	cpc	r15, r1
     62e:	09 f0       	breq	.+2      	; 0x632 <_ZL11chk_mountedPPKcPP5FATFSh+0x74>
     630:	2a c2       	rjmp	.+1108   	; 0xa86 <_ZL11chk_mountedPPKcPP5FATFSh+0x4c8>
     632:	f7 01       	movw	r30, r14
     634:	ee 0f       	add	r30, r30
     636:	ff 1f       	adc	r31, r31
     638:	e0 51       	subi	r30, 0x10	; 16
     63a:	fc 4f       	sbci	r31, 0xFC	; 252
     63c:	80 80       	ld	r8, Z
     63e:	91 80       	ldd	r9, Z+1	; 0x01
     640:	9e 86       	std	Y+14, r9	; 0x0e
     642:	8d 86       	std	Y+13, r8	; 0x0d
     644:	81 14       	cp	r8, r1
     646:	91 04       	cpc	r9, r1
     648:	09 f4       	brne	.+2      	; 0x64c <_ZL11chk_mountedPPKcPP5FATFSh+0x8e>
     64a:	1f c2       	rjmp	.+1086   	; 0xa8a <_ZL11chk_mountedPPKcPP5FATFSh+0x4cc>
     64c:	14 2f       	mov	r17, r20
     64e:	fb 01       	movw	r30, r22
     650:	91 82       	std	Z+1, r9	; 0x01
     652:	80 82       	st	Z, r8
     654:	d4 01       	movw	r26, r8
     656:	8c 91       	ld	r24, X
     658:	88 23       	and	r24, r24
     65a:	69 f0       	breq	.+26     	; 0x676 <_ZL11chk_mountedPPKcPP5FATFSh+0xb8>
     65c:	11 96       	adiw	r26, 0x01	; 1
     65e:	8c 91       	ld	r24, X
     660:	0e 94 98 11 	call	0x2330	; 0x2330 <disk_status>
     664:	80 fd       	sbrc	r24, 0
     666:	07 c0       	rjmp	.+14     	; 0x676 <_ZL11chk_mountedPPKcPP5FATFSh+0xb8>
     668:	11 23       	and	r17, r17
     66a:	09 f4       	brne	.+2      	; 0x66e <_ZL11chk_mountedPPKcPP5FATFSh+0xb0>
     66c:	10 c2       	rjmp	.+1056   	; 0xa8e <_ZL11chk_mountedPPKcPP5FATFSh+0x4d0>
     66e:	82 fd       	sbrc	r24, 2
     670:	10 c2       	rjmp	.+1056   	; 0xa92 <_ZL11chk_mountedPPKcPP5FATFSh+0x4d4>
     672:	80 e0       	ldi	r24, 0x00	; 0
     674:	2d c2       	rjmp	.+1114   	; 0xad0 <_ZL11chk_mountedPPKcPP5FATFSh+0x512>
     676:	ed 85       	ldd	r30, Y+13	; 0x0d
     678:	fe 85       	ldd	r31, Y+14	; 0x0e
     67a:	10 82       	st	Z, r1
     67c:	e1 82       	std	Z+1, r14	; 0x01
     67e:	8e 2d       	mov	r24, r14
     680:	0e 94 9f 11 	call	0x233e	; 0x233e <disk_initialize>
     684:	80 fd       	sbrc	r24, 0
     686:	07 c2       	rjmp	.+1038   	; 0xa96 <_ZL11chk_mountedPPKcPP5FATFSh+0x4d8>
     688:	11 23       	and	r17, r17
     68a:	11 f0       	breq	.+4      	; 0x690 <_ZL11chk_mountedPPKcPP5FATFSh+0xd2>
     68c:	82 fd       	sbrc	r24, 2
     68e:	05 c2       	rjmp	.+1034   	; 0xa9a <_ZL11chk_mountedPPKcPP5FATFSh+0x4dc>
     690:	40 e0       	ldi	r20, 0x00	; 0
     692:	50 e0       	ldi	r21, 0x00	; 0
     694:	ba 01       	movw	r22, r20
     696:	8d 85       	ldd	r24, Y+13	; 0x0d
     698:	9e 85       	ldd	r25, Y+14	; 0x0e
     69a:	91 de       	rcall	.-734    	; 0x3be <_ZL8check_fsP5FATFSm>
     69c:	81 30       	cpi	r24, 0x01	; 1
     69e:	89 f4       	brne	.+34     	; 0x6c2 <_ZL11chk_mountedPPKcPP5FATFSh+0x104>
     6a0:	ed 85       	ldd	r30, Y+13	; 0x0d
     6a2:	fe 85       	ldd	r31, Y+14	; 0x0e
     6a4:	e0 51       	subi	r30, 0x10	; 16
     6a6:	fe 4f       	sbci	r31, 0xFE	; 254
     6a8:	94 81       	ldd	r25, Z+4	; 0x04
     6aa:	99 23       	and	r25, r25
     6ac:	71 f0       	breq	.+28     	; 0x6ca <_ZL11chk_mountedPPKcPP5FATFSh+0x10c>
     6ae:	c0 84       	ldd	r12, Z+8	; 0x08
     6b0:	d1 84       	ldd	r13, Z+9	; 0x09
     6b2:	e2 84       	ldd	r14, Z+10	; 0x0a
     6b4:	f3 84       	ldd	r15, Z+11	; 0x0b
     6b6:	b7 01       	movw	r22, r14
     6b8:	a6 01       	movw	r20, r12
     6ba:	8d 85       	ldd	r24, Y+13	; 0x0d
     6bc:	9e 85       	ldd	r25, Y+14	; 0x0e
     6be:	7f de       	rcall	.-770    	; 0x3be <_ZL8check_fsP5FATFSm>
     6c0:	07 c0       	rjmp	.+14     	; 0x6d0 <_ZL11chk_mountedPPKcPP5FATFSh+0x112>
     6c2:	c1 2c       	mov	r12, r1
     6c4:	d1 2c       	mov	r13, r1
     6c6:	76 01       	movw	r14, r12
     6c8:	03 c0       	rjmp	.+6      	; 0x6d0 <_ZL11chk_mountedPPKcPP5FATFSh+0x112>
     6ca:	c1 2c       	mov	r12, r1
     6cc:	d1 2c       	mov	r13, r1
     6ce:	76 01       	movw	r14, r12
     6d0:	83 30       	cpi	r24, 0x03	; 3
     6d2:	09 f4       	brne	.+2      	; 0x6d6 <_ZL11chk_mountedPPKcPP5FATFSh+0x118>
     6d4:	e4 c1       	rjmp	.+968    	; 0xa9e <_ZL11chk_mountedPPKcPP5FATFSh+0x4e0>
     6d6:	81 11       	cpse	r24, r1
     6d8:	e4 c1       	rjmp	.+968    	; 0xaa2 <_ZL11chk_mountedPPKcPP5FATFSh+0x4e4>
     6da:	ad 85       	ldd	r26, Y+13	; 0x0d
     6dc:	be 85       	ldd	r27, Y+14	; 0x0e
     6de:	dd 96       	adiw	r26, 0x3d	; 61
     6e0:	8d 91       	ld	r24, X+
     6e2:	9c 91       	ld	r25, X
     6e4:	de 97       	sbiw	r26, 0x3e	; 62
     6e6:	81 15       	cp	r24, r1
     6e8:	92 40       	sbci	r25, 0x02	; 2
     6ea:	09 f0       	breq	.+2      	; 0x6ee <_ZL11chk_mountedPPKcPP5FATFSh+0x130>
     6ec:	dc c1       	rjmp	.+952    	; 0xaa6 <_ZL11chk_mountedPPKcPP5FATFSh+0x4e8>
     6ee:	ed 85       	ldd	r30, Y+13	; 0x0d
     6f0:	fe 85       	ldd	r31, Y+14	; 0x0e
     6f2:	e8 5b       	subi	r30, 0xB8	; 184
     6f4:	ff 4f       	sbci	r31, 0xFF	; 255
     6f6:	80 81       	ld	r24, Z
     6f8:	91 81       	ldd	r25, Z+1	; 0x01
     6fa:	2c 01       	movw	r4, r24
     6fc:	61 2c       	mov	r6, r1
     6fe:	71 2c       	mov	r7, r1
     700:	41 14       	cp	r4, r1
     702:	51 04       	cpc	r5, r1
     704:	61 04       	cpc	r6, r1
     706:	71 04       	cpc	r7, r1
     708:	41 f4       	brne	.+16     	; 0x71a <_ZL11chk_mountedPPKcPP5FATFSh+0x15c>
     70a:	ed 85       	ldd	r30, Y+13	; 0x0d
     70c:	fe 85       	ldd	r31, Y+14	; 0x0e
     70e:	ea 5a       	subi	r30, 0xAA	; 170
     710:	ff 4f       	sbci	r31, 0xFF	; 255
     712:	40 80       	ld	r4, Z
     714:	51 80       	ldd	r5, Z+1	; 0x01
     716:	62 80       	ldd	r6, Z+2	; 0x02
     718:	73 80       	ldd	r7, Z+3	; 0x03
     71a:	ed 85       	ldd	r30, Y+13	; 0x0d
     71c:	fe 85       	ldd	r31, Y+14	; 0x0e
     71e:	42 8e       	std	Z+26, r4	; 0x1a
     720:	53 8e       	std	Z+27, r5	; 0x1b
     722:	64 8e       	std	Z+28, r6	; 0x1c
     724:	75 8e       	std	Z+29, r7	; 0x1d
     726:	ee 5b       	subi	r30, 0xBE	; 190
     728:	ff 4f       	sbci	r31, 0xFF	; 255
     72a:	a0 81       	ld	r26, Z
     72c:	ed 85       	ldd	r30, Y+13	; 0x0d
     72e:	fe 85       	ldd	r31, Y+14	; 0x0e
     730:	a3 83       	std	Z+3, r26	; 0x03
     732:	8f ef       	ldi	r24, 0xFF	; 255
     734:	8a 0f       	add	r24, r26
     736:	82 30       	cpi	r24, 0x02	; 2
     738:	08 f0       	brcs	.+2      	; 0x73c <_ZL11chk_mountedPPKcPP5FATFSh+0x17e>
     73a:	b7 c1       	rjmp	.+878    	; 0xaaa <_ZL11chk_mountedPPKcPP5FATFSh+0x4ec>
     73c:	b0 e0       	ldi	r27, 0x00	; 0
     73e:	a3 01       	movw	r20, r6
     740:	92 01       	movw	r18, r4
     742:	0e 94 0e 14 	call	0x281c	; 0x281c <__muluhisi3>
     746:	6d 83       	std	Y+5, r22	; 0x05
     748:	7e 83       	std	Y+6, r23	; 0x06
     74a:	8f 83       	std	Y+7, r24	; 0x07
     74c:	98 87       	std	Y+8, r25	; 0x08
     74e:	27 ad       	ldd	r18, Z+63	; 0x3f
     750:	22 83       	std	Z+2, r18	; 0x02
     752:	22 23       	and	r18, r18
     754:	09 f4       	brne	.+2      	; 0x758 <_ZL11chk_mountedPPKcPP5FATFSh+0x19a>
     756:	ab c1       	rjmp	.+854    	; 0xaae <_ZL11chk_mountedPPKcPP5FATFSh+0x4f0>
     758:	42 2f       	mov	r20, r18
     75a:	50 e0       	ldi	r21, 0x00	; 0
     75c:	ca 01       	movw	r24, r20
     75e:	01 97       	sbiw	r24, 0x01	; 1
     760:	84 23       	and	r24, r20
     762:	95 23       	and	r25, r21
     764:	89 2b       	or	r24, r25
     766:	09 f0       	breq	.+2      	; 0x76a <_ZL11chk_mountedPPKcPP5FATFSh+0x1ac>
     768:	a4 c1       	rjmp	.+840    	; 0xab2 <_ZL11chk_mountedPPKcPP5FATFSh+0x4f4>
     76a:	ed 5b       	subi	r30, 0xBD	; 189
     76c:	ff 4f       	sbci	r31, 0xFF	; 255
     76e:	20 80       	ld	r2, Z
     770:	31 80       	ldd	r3, Z+1	; 0x01
     772:	ad 85       	ldd	r26, Y+13	; 0x0d
     774:	be 85       	ldd	r27, Y+14	; 0x0e
     776:	19 96       	adiw	r26, 0x09	; 9
     778:	3c 92       	st	X, r3
     77a:	2e 92       	st	-X, r2
     77c:	18 97       	sbiw	r26, 0x08	; 8
     77e:	c1 01       	movw	r24, r2
     780:	8f 70       	andi	r24, 0x0F	; 15
     782:	99 27       	eor	r25, r25
     784:	89 2b       	or	r24, r25
     786:	09 f0       	breq	.+2      	; 0x78a <_ZL11chk_mountedPPKcPP5FATFSh+0x1cc>
     788:	96 c1       	rjmp	.+812    	; 0xab6 <_ZL11chk_mountedPPKcPP5FATFSh+0x4f8>
     78a:	fd 01       	movw	r30, r26
     78c:	eb 5b       	subi	r30, 0xBB	; 187
     78e:	ff 4f       	sbci	r31, 0xFF	; 255
     790:	60 81       	ld	r22, Z
     792:	71 81       	ldd	r23, Z+1	; 0x01
     794:	cb 01       	movw	r24, r22
     796:	a0 e0       	ldi	r26, 0x00	; 0
     798:	b0 e0       	ldi	r27, 0x00	; 0
     79a:	00 97       	sbiw	r24, 0x00	; 0
     79c:	a1 05       	cpc	r26, r1
     79e:	b1 05       	cpc	r27, r1
     7a0:	41 f4       	brne	.+16     	; 0x7b2 <_ZL11chk_mountedPPKcPP5FATFSh+0x1f4>
     7a2:	ed 85       	ldd	r30, Y+13	; 0x0d
     7a4:	fe 85       	ldd	r31, Y+14	; 0x0e
     7a6:	ee 5a       	subi	r30, 0xAE	; 174
     7a8:	ff 4f       	sbci	r31, 0xFF	; 255
     7aa:	80 81       	ld	r24, Z
     7ac:	91 81       	ldd	r25, Z+1	; 0x01
     7ae:	a2 81       	ldd	r26, Z+2	; 0x02
     7b0:	b3 81       	ldd	r27, Z+3	; 0x03
     7b2:	ed 85       	ldd	r30, Y+13	; 0x0d
     7b4:	fe 85       	ldd	r31, Y+14	; 0x0e
     7b6:	e0 5c       	subi	r30, 0xC0	; 192
     7b8:	ff 4f       	sbci	r31, 0xFF	; 255
     7ba:	40 81       	ld	r20, Z
     7bc:	51 81       	ldd	r21, Z+1	; 0x01
     7be:	41 15       	cp	r20, r1
     7c0:	51 05       	cpc	r21, r1
     7c2:	09 f4       	brne	.+2      	; 0x7c6 <_ZL11chk_mountedPPKcPP5FATFSh+0x208>
     7c4:	7a c1       	rjmp	.+756    	; 0xaba <_ZL11chk_mountedPPKcPP5FATFSh+0x4fc>
     7c6:	4a 01       	movw	r8, r20
     7c8:	a1 2c       	mov	r10, r1
     7ca:	b1 2c       	mov	r11, r1
     7cc:	89 86       	std	Y+9, r8	; 0x09
     7ce:	9a 86       	std	Y+10, r9	; 0x0a
     7d0:	ab 86       	std	Y+11, r10	; 0x0b
     7d2:	bc 86       	std	Y+12, r11	; 0x0c
     7d4:	8d 80       	ldd	r8, Y+5	; 0x05
     7d6:	9e 80       	ldd	r9, Y+6	; 0x06
     7d8:	af 80       	ldd	r10, Y+7	; 0x07
     7da:	b8 84       	ldd	r11, Y+8	; 0x08
     7dc:	49 85       	ldd	r20, Y+9	; 0x09
     7de:	5a 85       	ldd	r21, Y+10	; 0x0a
     7e0:	6b 85       	ldd	r22, Y+11	; 0x0b
     7e2:	7c 85       	ldd	r23, Y+12	; 0x0c
     7e4:	84 0e       	add	r8, r20
     7e6:	95 1e       	adc	r9, r21
     7e8:	a6 1e       	adc	r10, r22
     7ea:	b7 1e       	adc	r11, r23
     7ec:	f1 01       	movw	r30, r2
     7ee:	f2 95       	swap	r31
     7f0:	e2 95       	swap	r30
     7f2:	ef 70       	andi	r30, 0x0F	; 15
     7f4:	ef 27       	eor	r30, r31
     7f6:	ff 70       	andi	r31, 0x0F	; 15
     7f8:	ef 27       	eor	r30, r31
     7fa:	b5 01       	movw	r22, r10
     7fc:	a4 01       	movw	r20, r8
     7fe:	4e 0f       	add	r20, r30
     800:	5f 1f       	adc	r21, r31
     802:	61 1d       	adc	r22, r1
     804:	71 1d       	adc	r23, r1
     806:	49 83       	std	Y+1, r20	; 0x01
     808:	5a 83       	std	Y+2, r21	; 0x02
     80a:	6b 83       	std	Y+3, r22	; 0x03
     80c:	7c 83       	std	Y+4, r23	; 0x04
     80e:	84 17       	cp	r24, r20
     810:	95 07       	cpc	r25, r21
     812:	a6 07       	cpc	r26, r22
     814:	b7 07       	cpc	r27, r23
     816:	08 f4       	brcc	.+2      	; 0x81a <_ZL11chk_mountedPPKcPP5FATFSh+0x25c>
     818:	52 c1       	rjmp	.+676    	; 0xabe <_ZL11chk_mountedPPKcPP5FATFSh+0x500>
     81a:	bc 01       	movw	r22, r24
     81c:	cd 01       	movw	r24, r26
     81e:	89 80       	ldd	r8, Y+1	; 0x01
     820:	9a 80       	ldd	r9, Y+2	; 0x02
     822:	ab 80       	ldd	r10, Y+3	; 0x03
     824:	bc 80       	ldd	r11, Y+4	; 0x04
     826:	68 19       	sub	r22, r8
     828:	79 09       	sbc	r23, r9
     82a:	8a 09       	sbc	r24, r10
     82c:	9b 09       	sbc	r25, r11
     82e:	30 e0       	ldi	r19, 0x00	; 0
     830:	40 e0       	ldi	r20, 0x00	; 0
     832:	50 e0       	ldi	r21, 0x00	; 0
     834:	0e 94 ec 13 	call	0x27d8	; 0x27d8 <__udivmodsi4>
     838:	da 01       	movw	r26, r20
     83a:	c9 01       	movw	r24, r18
     83c:	21 15       	cp	r18, r1
     83e:	31 05       	cpc	r19, r1
     840:	41 05       	cpc	r20, r1
     842:	51 05       	cpc	r21, r1
     844:	09 f4       	brne	.+2      	; 0x848 <_ZL11chk_mountedPPKcPP5FATFSh+0x28a>
     846:	3d c1       	rjmp	.+634    	; 0xac2 <_ZL11chk_mountedPPKcPP5FATFSh+0x504>
     848:	26 3f       	cpi	r18, 0xF6	; 246
     84a:	6f e0       	ldi	r22, 0x0F	; 15
     84c:	36 07       	cpc	r19, r22
     84e:	41 05       	cpc	r20, r1
     850:	51 05       	cpc	r21, r1
     852:	10 f4       	brcc	.+4      	; 0x858 <_ZL11chk_mountedPPKcPP5FATFSh+0x29a>
     854:	11 e0       	ldi	r17, 0x01	; 1
     856:	01 c0       	rjmp	.+2      	; 0x85a <_ZL11chk_mountedPPKcPP5FATFSh+0x29c>
     858:	12 e0       	ldi	r17, 0x02	; 2
     85a:	86 3f       	cpi	r24, 0xF6	; 246
     85c:	9f 4f       	sbci	r25, 0xFF	; 255
     85e:	a1 05       	cpc	r26, r1
     860:	b1 05       	cpc	r27, r1
     862:	08 f0       	brcs	.+2      	; 0x866 <_ZL11chk_mountedPPKcPP5FATFSh+0x2a8>
     864:	13 e0       	ldi	r17, 0x03	; 3
     866:	49 01       	movw	r8, r18
     868:	5a 01       	movw	r10, r20
     86a:	82 e0       	ldi	r24, 0x02	; 2
     86c:	88 0e       	add	r8, r24
     86e:	91 1c       	adc	r9, r1
     870:	a1 1c       	adc	r10, r1
     872:	b1 1c       	adc	r11, r1
     874:	ad 85       	ldd	r26, Y+13	; 0x0d
     876:	be 85       	ldd	r27, Y+14	; 0x0e
     878:	56 96       	adiw	r26, 0x16	; 22
     87a:	8d 92       	st	X+, r8
     87c:	9d 92       	st	X+, r9
     87e:	ad 92       	st	X+, r10
     880:	bc 92       	st	X, r11
     882:	59 97       	sbiw	r26, 0x19	; 25
     884:	fd 01       	movw	r30, r26
     886:	c6 8e       	std	Z+30, r12	; 0x1e
     888:	d7 8e       	std	Z+31, r13	; 0x1f
     88a:	e0 a2       	std	Z+32, r14	; 0x20
     88c:	f1 a2       	std	Z+33, r15	; 0x21
     88e:	89 85       	ldd	r24, Y+9	; 0x09
     890:	9a 85       	ldd	r25, Y+10	; 0x0a
     892:	ab 85       	ldd	r26, Y+11	; 0x0b
     894:	bc 85       	ldd	r27, Y+12	; 0x0c
     896:	8c 0d       	add	r24, r12
     898:	9d 1d       	adc	r25, r13
     89a:	ae 1d       	adc	r26, r14
     89c:	bf 1d       	adc	r27, r15
     89e:	82 a3       	std	Z+34, r24	; 0x22
     8a0:	93 a3       	std	Z+35, r25	; 0x23
     8a2:	a4 a3       	std	Z+36, r26	; 0x24
     8a4:	b5 a3       	std	Z+37, r27	; 0x25
     8a6:	49 81       	ldd	r20, Y+1	; 0x01
     8a8:	5a 81       	ldd	r21, Y+2	; 0x02
     8aa:	6b 81       	ldd	r22, Y+3	; 0x03
     8ac:	7c 81       	ldd	r23, Y+4	; 0x04
     8ae:	4c 0d       	add	r20, r12
     8b0:	5d 1d       	adc	r21, r13
     8b2:	6e 1d       	adc	r22, r14
     8b4:	7f 1d       	adc	r23, r15
     8b6:	42 a7       	std	Z+42, r20	; 0x2a
     8b8:	53 a7       	std	Z+43, r21	; 0x2b
     8ba:	64 a7       	std	Z+44, r22	; 0x2c
     8bc:	75 a7       	std	Z+45, r23	; 0x2d
     8be:	13 30       	cpi	r17, 0x03	; 3
     8c0:	c1 f4       	brne	.+48     	; 0x8f2 <_ZL11chk_mountedPPKcPP5FATFSh+0x334>
     8c2:	23 28       	or	r2, r3
     8c4:	09 f0       	breq	.+2      	; 0x8c8 <_ZL11chk_mountedPPKcPP5FATFSh+0x30a>
     8c6:	ff c0       	rjmp	.+510    	; 0xac6 <_ZL11chk_mountedPPKcPP5FATFSh+0x508>
     8c8:	e2 5a       	subi	r30, 0xA2	; 162
     8ca:	ff 4f       	sbci	r31, 0xFF	; 255
     8cc:	80 81       	ld	r24, Z
     8ce:	91 81       	ldd	r25, Z+1	; 0x01
     8d0:	a2 81       	ldd	r26, Z+2	; 0x02
     8d2:	b3 81       	ldd	r27, Z+3	; 0x03
     8d4:	ed 85       	ldd	r30, Y+13	; 0x0d
     8d6:	fe 85       	ldd	r31, Y+14	; 0x0e
     8d8:	86 a3       	std	Z+38, r24	; 0x26
     8da:	97 a3       	std	Z+39, r25	; 0x27
     8dc:	a0 a7       	std	Z+40, r26	; 0x28
     8de:	b1 a7       	std	Z+41, r27	; 0x29
     8e0:	88 0c       	add	r8, r8
     8e2:	99 1c       	adc	r9, r9
     8e4:	aa 1c       	adc	r10, r10
     8e6:	bb 1c       	adc	r11, r11
     8e8:	88 0c       	add	r8, r8
     8ea:	99 1c       	adc	r9, r9
     8ec:	aa 1c       	adc	r10, r10
     8ee:	bb 1c       	adc	r11, r11
     8f0:	2d c0       	rjmp	.+90     	; 0x94c <_ZL11chk_mountedPPKcPP5FATFSh+0x38e>
     8f2:	23 28       	or	r2, r3
     8f4:	09 f4       	brne	.+2      	; 0x8f8 <_ZL11chk_mountedPPKcPP5FATFSh+0x33a>
     8f6:	e9 c0       	rjmp	.+466    	; 0xaca <_ZL11chk_mountedPPKcPP5FATFSh+0x50c>
     8f8:	2d 81       	ldd	r18, Y+5	; 0x05
     8fa:	3e 81       	ldd	r19, Y+6	; 0x06
     8fc:	4f 81       	ldd	r20, Y+7	; 0x07
     8fe:	58 85       	ldd	r21, Y+8	; 0x08
     900:	82 0f       	add	r24, r18
     902:	93 1f       	adc	r25, r19
     904:	a4 1f       	adc	r26, r20
     906:	b5 1f       	adc	r27, r21
     908:	ed 85       	ldd	r30, Y+13	; 0x0d
     90a:	fe 85       	ldd	r31, Y+14	; 0x0e
     90c:	86 a3       	std	Z+38, r24	; 0x26
     90e:	97 a3       	std	Z+39, r25	; 0x27
     910:	a0 a7       	std	Z+40, r26	; 0x28
     912:	b1 a7       	std	Z+41, r27	; 0x29
     914:	12 30       	cpi	r17, 0x02	; 2
     916:	29 f4       	brne	.+10     	; 0x922 <_ZL11chk_mountedPPKcPP5FATFSh+0x364>
     918:	88 0c       	add	r8, r8
     91a:	99 1c       	adc	r9, r9
     91c:	aa 1c       	adc	r10, r10
     91e:	bb 1c       	adc	r11, r11
     920:	15 c0       	rjmp	.+42     	; 0x94c <_ZL11chk_mountedPPKcPP5FATFSh+0x38e>
     922:	a3 e0       	ldi	r26, 0x03	; 3
     924:	b0 e0       	ldi	r27, 0x00	; 0
     926:	a5 01       	movw	r20, r10
     928:	94 01       	movw	r18, r8
     92a:	0e 94 0e 14 	call	0x281c	; 0x281c <__muluhisi3>
     92e:	dc 01       	movw	r26, r24
     930:	cb 01       	movw	r24, r22
     932:	b6 95       	lsr	r27
     934:	a7 95       	ror	r26
     936:	97 95       	ror	r25
     938:	87 95       	ror	r24
     93a:	f1 e0       	ldi	r31, 0x01	; 1
     93c:	8f 22       	and	r8, r31
     93e:	99 24       	eor	r9, r9
     940:	aa 24       	eor	r10, r10
     942:	bb 24       	eor	r11, r11
     944:	88 0e       	add	r8, r24
     946:	99 1e       	adc	r9, r25
     948:	aa 1e       	adc	r10, r26
     94a:	bb 1e       	adc	r11, r27
     94c:	2f ef       	ldi	r18, 0xFF	; 255
     94e:	82 0e       	add	r8, r18
     950:	21 e0       	ldi	r18, 0x01	; 1
     952:	92 1e       	adc	r9, r18
     954:	a1 1c       	adc	r10, r1
     956:	b1 1c       	adc	r11, r1
     958:	07 2e       	mov	r0, r23
     95a:	79 e0       	ldi	r23, 0x09	; 9
     95c:	b6 94       	lsr	r11
     95e:	a7 94       	ror	r10
     960:	97 94       	ror	r9
     962:	87 94       	ror	r8
     964:	7a 95       	dec	r23
     966:	d1 f7       	brne	.-12     	; 0x95c <_ZL11chk_mountedPPKcPP5FATFSh+0x39e>
     968:	70 2d       	mov	r23, r0
     96a:	48 14       	cp	r4, r8
     96c:	59 04       	cpc	r5, r9
     96e:	6a 04       	cpc	r6, r10
     970:	7b 04       	cpc	r7, r11
     972:	08 f4       	brcc	.+2      	; 0x976 <_ZL11chk_mountedPPKcPP5FATFSh+0x3b8>
     974:	ac c0       	rjmp	.+344    	; 0xace <_ZL11chk_mountedPPKcPP5FATFSh+0x510>
     976:	8f ef       	ldi	r24, 0xFF	; 255
     978:	9f ef       	ldi	r25, 0xFF	; 255
     97a:	dc 01       	movw	r26, r24
     97c:	ed 85       	ldd	r30, Y+13	; 0x0d
     97e:	fe 85       	ldd	r31, Y+14	; 0x0e
     980:	86 87       	std	Z+14, r24	; 0x0e
     982:	97 87       	std	Z+15, r25	; 0x0f
     984:	a0 8b       	std	Z+16, r26	; 0x10
     986:	b1 8b       	std	Z+17, r27	; 0x11
     988:	df 01       	movw	r26, r30
     98a:	12 86       	std	Z+10, r1	; 0x0a
     98c:	13 86       	std	Z+11, r1	; 0x0b
     98e:	14 86       	std	Z+12, r1	; 0x0c
     990:	15 86       	std	Z+13, r1	; 0x0d
     992:	13 30       	cpi	r17, 0x03	; 3
     994:	09 f0       	breq	.+2      	; 0x998 <_ZL11chk_mountedPPKcPP5FATFSh+0x3da>
     996:	5f c0       	rjmp	.+190    	; 0xa56 <_ZL11chk_mountedPPKcPP5FATFSh+0x498>
     998:	15 82       	std	Z+5, r1	; 0x05
     99a:	ee 59       	subi	r30, 0x9E	; 158
     99c:	ff 4f       	sbci	r31, 0xFF	; 255
     99e:	80 81       	ld	r24, Z
     9a0:	91 81       	ldd	r25, Z+1	; 0x01
     9a2:	a7 01       	movw	r20, r14
     9a4:	96 01       	movw	r18, r12
     9a6:	28 0f       	add	r18, r24
     9a8:	39 1f       	adc	r19, r25
     9aa:	41 1d       	adc	r20, r1
     9ac:	51 1d       	adc	r21, r1
     9ae:	fd 01       	movw	r30, r26
     9b0:	22 8b       	std	Z+18, r18	; 0x12
     9b2:	33 8b       	std	Z+19, r19	; 0x13
     9b4:	44 8b       	std	Z+20, r20	; 0x14
     9b6:	55 8b       	std	Z+21, r21	; 0x15
     9b8:	01 e0       	ldi	r16, 0x01	; 1
     9ba:	bd 01       	movw	r22, r26
     9bc:	6e 5c       	subi	r22, 0xCE	; 206
     9be:	7f 4f       	sbci	r23, 0xFF	; 255
     9c0:	81 81       	ldd	r24, Z+1	; 0x01
     9c2:	0e 94 6f 12 	call	0x24de	; 0x24de <disk_read>
     9c6:	81 11       	cpse	r24, r1
     9c8:	23 c0       	rjmp	.+70     	; 0xa10 <_ZL11chk_mountedPPKcPP5FATFSh+0x452>
     9ca:	ed 85       	ldd	r30, Y+13	; 0x0d
     9cc:	fe 85       	ldd	r31, Y+14	; 0x0e
     9ce:	e0 5d       	subi	r30, 0xD0	; 208
     9d0:	fd 4f       	sbci	r31, 0xFD	; 253
     9d2:	80 81       	ld	r24, Z
     9d4:	91 81       	ldd	r25, Z+1	; 0x01
     9d6:	85 35       	cpi	r24, 0x55	; 85
     9d8:	9a 4a       	sbci	r25, 0xAA	; 170
     9da:	e1 f4       	brne	.+56     	; 0xa14 <_ZL11chk_mountedPPKcPP5FATFSh+0x456>
     9dc:	ed 85       	ldd	r30, Y+13	; 0x0d
     9de:	fe 85       	ldd	r31, Y+14	; 0x0e
     9e0:	82 a9       	ldd	r24, Z+50	; 0x32
     9e2:	93 a9       	ldd	r25, Z+51	; 0x33
     9e4:	a4 a9       	ldd	r26, Z+52	; 0x34
     9e6:	b5 a9       	ldd	r27, Z+53	; 0x35
     9e8:	82 35       	cpi	r24, 0x52	; 82
     9ea:	92 45       	sbci	r25, 0x52	; 82
     9ec:	a1 46       	sbci	r26, 0x61	; 97
     9ee:	b1 44       	sbci	r27, 0x41	; 65
     9f0:	99 f4       	brne	.+38     	; 0xa18 <_ZL11chk_mountedPPKcPP5FATFSh+0x45a>
     9f2:	ed 85       	ldd	r30, Y+13	; 0x0d
     9f4:	fe 85       	ldd	r31, Y+14	; 0x0e
     9f6:	ea 5e       	subi	r30, 0xEA	; 234
     9f8:	fd 4f       	sbci	r31, 0xFD	; 253
     9fa:	80 81       	ld	r24, Z
     9fc:	91 81       	ldd	r25, Z+1	; 0x01
     9fe:	a2 81       	ldd	r26, Z+2	; 0x02
     a00:	b3 81       	ldd	r27, Z+3	; 0x03
     a02:	82 37       	cpi	r24, 0x72	; 114
     a04:	92 47       	sbci	r25, 0x72	; 114
     a06:	a1 44       	sbci	r26, 0x41	; 65
     a08:	b1 46       	sbci	r27, 0x61	; 97
     a0a:	41 f0       	breq	.+16     	; 0xa1c <_ZL11chk_mountedPPKcPP5FATFSh+0x45e>
     a0c:	80 e0       	ldi	r24, 0x00	; 0
     a0e:	07 c0       	rjmp	.+14     	; 0xa1e <_ZL11chk_mountedPPKcPP5FATFSh+0x460>
     a10:	80 e0       	ldi	r24, 0x00	; 0
     a12:	05 c0       	rjmp	.+10     	; 0xa1e <_ZL11chk_mountedPPKcPP5FATFSh+0x460>
     a14:	80 e0       	ldi	r24, 0x00	; 0
     a16:	03 c0       	rjmp	.+6      	; 0xa1e <_ZL11chk_mountedPPKcPP5FATFSh+0x460>
     a18:	80 e0       	ldi	r24, 0x00	; 0
     a1a:	01 c0       	rjmp	.+2      	; 0xa1e <_ZL11chk_mountedPPKcPP5FATFSh+0x460>
     a1c:	81 e0       	ldi	r24, 0x01	; 1
     a1e:	88 23       	and	r24, r24
     a20:	d1 f0       	breq	.+52     	; 0xa56 <_ZL11chk_mountedPPKcPP5FATFSh+0x498>
     a22:	ed 85       	ldd	r30, Y+13	; 0x0d
     a24:	fe 85       	ldd	r31, Y+14	; 0x0e
     a26:	e2 5e       	subi	r30, 0xE2	; 226
     a28:	fd 4f       	sbci	r31, 0xFD	; 253
     a2a:	80 81       	ld	r24, Z
     a2c:	91 81       	ldd	r25, Z+1	; 0x01
     a2e:	a2 81       	ldd	r26, Z+2	; 0x02
     a30:	b3 81       	ldd	r27, Z+3	; 0x03
     a32:	ed 85       	ldd	r30, Y+13	; 0x0d
     a34:	fe 85       	ldd	r31, Y+14	; 0x0e
     a36:	82 87       	std	Z+10, r24	; 0x0a
     a38:	93 87       	std	Z+11, r25	; 0x0b
     a3a:	a4 87       	std	Z+12, r26	; 0x0c
     a3c:	b5 87       	std	Z+13, r27	; 0x0d
     a3e:	e6 5e       	subi	r30, 0xE6	; 230
     a40:	fd 4f       	sbci	r31, 0xFD	; 253
     a42:	80 81       	ld	r24, Z
     a44:	91 81       	ldd	r25, Z+1	; 0x01
     a46:	a2 81       	ldd	r26, Z+2	; 0x02
     a48:	b3 81       	ldd	r27, Z+3	; 0x03
     a4a:	ed 85       	ldd	r30, Y+13	; 0x0d
     a4c:	fe 85       	ldd	r31, Y+14	; 0x0e
     a4e:	86 87       	std	Z+14, r24	; 0x0e
     a50:	97 87       	std	Z+15, r25	; 0x0f
     a52:	a0 8b       	std	Z+16, r26	; 0x10
     a54:	b1 8b       	std	Z+17, r27	; 0x11
     a56:	ad 85       	ldd	r26, Y+13	; 0x0d
     a58:	be 85       	ldd	r27, Y+14	; 0x0e
     a5a:	1c 93       	st	X, r17
     a5c:	80 91 ee 03 	lds	r24, 0x03EE	; 0x8003ee <_ZL4Fsid>
     a60:	90 91 ef 03 	lds	r25, 0x03EF	; 0x8003ef <_ZL4Fsid+0x1>
     a64:	01 96       	adiw	r24, 0x01	; 1
     a66:	90 93 ef 03 	sts	0x03EF, r25	; 0x8003ef <_ZL4Fsid+0x1>
     a6a:	80 93 ee 03 	sts	0x03EE, r24	; 0x8003ee <_ZL4Fsid>
     a6e:	17 96       	adiw	r26, 0x07	; 7
     a70:	9c 93       	st	X, r25
     a72:	8e 93       	st	-X, r24
     a74:	16 97       	sbiw	r26, 0x06	; 6
     a76:	fd 01       	movw	r30, r26
     a78:	16 a6       	std	Z+46, r1	; 0x2e
     a7a:	17 a6       	std	Z+47, r1	; 0x2f
     a7c:	10 aa       	std	Z+48, r1	; 0x30
     a7e:	11 aa       	std	Z+49, r1	; 0x31
     a80:	14 82       	std	Z+4, r1	; 0x04
     a82:	80 e0       	ldi	r24, 0x00	; 0
     a84:	25 c0       	rjmp	.+74     	; 0xad0 <_ZL11chk_mountedPPKcPP5FATFSh+0x512>
     a86:	8b e0       	ldi	r24, 0x0B	; 11
     a88:	23 c0       	rjmp	.+70     	; 0xad0 <_ZL11chk_mountedPPKcPP5FATFSh+0x512>
     a8a:	8c e0       	ldi	r24, 0x0C	; 12
     a8c:	21 c0       	rjmp	.+66     	; 0xad0 <_ZL11chk_mountedPPKcPP5FATFSh+0x512>
     a8e:	80 e0       	ldi	r24, 0x00	; 0
     a90:	1f c0       	rjmp	.+62     	; 0xad0 <_ZL11chk_mountedPPKcPP5FATFSh+0x512>
     a92:	8a e0       	ldi	r24, 0x0A	; 10
     a94:	1d c0       	rjmp	.+58     	; 0xad0 <_ZL11chk_mountedPPKcPP5FATFSh+0x512>
     a96:	83 e0       	ldi	r24, 0x03	; 3
     a98:	1b c0       	rjmp	.+54     	; 0xad0 <_ZL11chk_mountedPPKcPP5FATFSh+0x512>
     a9a:	8a e0       	ldi	r24, 0x0A	; 10
     a9c:	19 c0       	rjmp	.+50     	; 0xad0 <_ZL11chk_mountedPPKcPP5FATFSh+0x512>
     a9e:	81 e0       	ldi	r24, 0x01	; 1
     aa0:	17 c0       	rjmp	.+46     	; 0xad0 <_ZL11chk_mountedPPKcPP5FATFSh+0x512>
     aa2:	8d e0       	ldi	r24, 0x0D	; 13
     aa4:	15 c0       	rjmp	.+42     	; 0xad0 <_ZL11chk_mountedPPKcPP5FATFSh+0x512>
     aa6:	8d e0       	ldi	r24, 0x0D	; 13
     aa8:	13 c0       	rjmp	.+38     	; 0xad0 <_ZL11chk_mountedPPKcPP5FATFSh+0x512>
     aaa:	8d e0       	ldi	r24, 0x0D	; 13
     aac:	11 c0       	rjmp	.+34     	; 0xad0 <_ZL11chk_mountedPPKcPP5FATFSh+0x512>
     aae:	8d e0       	ldi	r24, 0x0D	; 13
     ab0:	0f c0       	rjmp	.+30     	; 0xad0 <_ZL11chk_mountedPPKcPP5FATFSh+0x512>
     ab2:	8d e0       	ldi	r24, 0x0D	; 13
     ab4:	0d c0       	rjmp	.+26     	; 0xad0 <_ZL11chk_mountedPPKcPP5FATFSh+0x512>
     ab6:	8d e0       	ldi	r24, 0x0D	; 13
     ab8:	0b c0       	rjmp	.+22     	; 0xad0 <_ZL11chk_mountedPPKcPP5FATFSh+0x512>
     aba:	8d e0       	ldi	r24, 0x0D	; 13
     abc:	09 c0       	rjmp	.+18     	; 0xad0 <_ZL11chk_mountedPPKcPP5FATFSh+0x512>
     abe:	8d e0       	ldi	r24, 0x0D	; 13
     ac0:	07 c0       	rjmp	.+14     	; 0xad0 <_ZL11chk_mountedPPKcPP5FATFSh+0x512>
     ac2:	8d e0       	ldi	r24, 0x0D	; 13
     ac4:	05 c0       	rjmp	.+10     	; 0xad0 <_ZL11chk_mountedPPKcPP5FATFSh+0x512>
     ac6:	8d e0       	ldi	r24, 0x0D	; 13
     ac8:	03 c0       	rjmp	.+6      	; 0xad0 <_ZL11chk_mountedPPKcPP5FATFSh+0x512>
     aca:	8d e0       	ldi	r24, 0x0D	; 13
     acc:	01 c0       	rjmp	.+2      	; 0xad0 <_ZL11chk_mountedPPKcPP5FATFSh+0x512>
     ace:	8d e0       	ldi	r24, 0x0D	; 13
     ad0:	2e 96       	adiw	r28, 0x0e	; 14
     ad2:	0f b6       	in	r0, 0x3f	; 63
     ad4:	f8 94       	cli
     ad6:	de bf       	out	0x3e, r29	; 62
     ad8:	0f be       	out	0x3f, r0	; 63
     ada:	cd bf       	out	0x3d, r28	; 61
     adc:	df 91       	pop	r29
     ade:	cf 91       	pop	r28
     ae0:	1f 91       	pop	r17
     ae2:	0f 91       	pop	r16
     ae4:	ff 90       	pop	r15
     ae6:	ef 90       	pop	r14
     ae8:	df 90       	pop	r13
     aea:	cf 90       	pop	r12
     aec:	bf 90       	pop	r11
     aee:	af 90       	pop	r10
     af0:	9f 90       	pop	r9
     af2:	8f 90       	pop	r8
     af4:	7f 90       	pop	r7
     af6:	6f 90       	pop	r6
     af8:	5f 90       	pop	r5
     afa:	4f 90       	pop	r4
     afc:	3f 90       	pop	r3
     afe:	2f 90       	pop	r2
     b00:	08 95       	ret

00000b02 <_ZL7sync_fsP5FATFS>:
     b02:	ef 92       	push	r14
     b04:	ff 92       	push	r15
     b06:	0f 93       	push	r16
     b08:	1f 93       	push	r17
     b0a:	cf 93       	push	r28
     b0c:	df 93       	push	r29
     b0e:	ec 01       	movw	r28, r24
     b10:	92 dc       	rcall	.-1756   	; 0x436 <_ZL11sync_windowP5FATFS>
     b12:	18 2f       	mov	r17, r24
     b14:	81 11       	cpse	r24, r1
     b16:	52 c0       	rjmp	.+164    	; 0xbbc <_ZL7sync_fsP5FATFS+0xba>
     b18:	88 81       	ld	r24, Y
     b1a:	83 30       	cpi	r24, 0x03	; 3
     b1c:	09 f0       	breq	.+2      	; 0xb20 <_ZL7sync_fsP5FATFS+0x1e>
     b1e:	46 c0       	rjmp	.+140    	; 0xbac <_ZL7sync_fsP5FATFS+0xaa>
     b20:	8d 81       	ldd	r24, Y+5	; 0x05
     b22:	88 23       	and	r24, r24
     b24:	09 f4       	brne	.+2      	; 0xb28 <_ZL7sync_fsP5FATFS+0x26>
     b26:	42 c0       	rjmp	.+132    	; 0xbac <_ZL7sync_fsP5FATFS+0xaa>
     b28:	1e a6       	std	Y+46, r1	; 0x2e
     b2a:	1f a6       	std	Y+47, r1	; 0x2f
     b2c:	18 aa       	std	Y+48, r1	; 0x30
     b2e:	19 aa       	std	Y+49, r1	; 0x31
     b30:	40 e0       	ldi	r20, 0x00	; 0
     b32:	52 e0       	ldi	r21, 0x02	; 2
     b34:	60 e0       	ldi	r22, 0x00	; 0
     b36:	70 e0       	ldi	r23, 0x00	; 0
     b38:	7e 01       	movw	r14, r28
     b3a:	82 e3       	ldi	r24, 0x32	; 50
     b3c:	e8 0e       	add	r14, r24
     b3e:	f1 1c       	adc	r15, r1
     b40:	c7 01       	movw	r24, r14
     b42:	25 db       	rcall	.-2486   	; 0x18e <_ZL7mem_setPvij>
     b44:	85 e5       	ldi	r24, 0x55	; 85
     b46:	9a ea       	ldi	r25, 0xAA	; 170
     b48:	fe 01       	movw	r30, r28
     b4a:	e0 5d       	subi	r30, 0xD0	; 208
     b4c:	fd 4f       	sbci	r31, 0xFD	; 253
     b4e:	91 83       	std	Z+1, r25	; 0x01
     b50:	80 83       	st	Z, r24
     b52:	82 e5       	ldi	r24, 0x52	; 82
     b54:	92 e5       	ldi	r25, 0x52	; 82
     b56:	a1 e6       	ldi	r26, 0x61	; 97
     b58:	b1 e4       	ldi	r27, 0x41	; 65
     b5a:	8a ab       	std	Y+50, r24	; 0x32
     b5c:	9b ab       	std	Y+51, r25	; 0x33
     b5e:	ac ab       	std	Y+52, r26	; 0x34
     b60:	bd ab       	std	Y+53, r27	; 0x35
     b62:	82 e7       	ldi	r24, 0x72	; 114
     b64:	92 e7       	ldi	r25, 0x72	; 114
     b66:	a1 e4       	ldi	r26, 0x41	; 65
     b68:	b1 e6       	ldi	r27, 0x61	; 97
     b6a:	7a 97       	sbiw	r30, 0x1a	; 26
     b6c:	80 83       	st	Z, r24
     b6e:	91 83       	std	Z+1, r25	; 0x01
     b70:	a2 83       	std	Z+2, r26	; 0x02
     b72:	b3 83       	std	Z+3, r27	; 0x03
     b74:	8e 85       	ldd	r24, Y+14	; 0x0e
     b76:	9f 85       	ldd	r25, Y+15	; 0x0f
     b78:	a8 89       	ldd	r26, Y+16	; 0x10
     b7a:	b9 89       	ldd	r27, Y+17	; 0x11
     b7c:	34 96       	adiw	r30, 0x04	; 4
     b7e:	80 83       	st	Z, r24
     b80:	91 83       	std	Z+1, r25	; 0x01
     b82:	a2 83       	std	Z+2, r26	; 0x02
     b84:	b3 83       	std	Z+3, r27	; 0x03
     b86:	8a 85       	ldd	r24, Y+10	; 0x0a
     b88:	9b 85       	ldd	r25, Y+11	; 0x0b
     b8a:	ac 85       	ldd	r26, Y+12	; 0x0c
     b8c:	bd 85       	ldd	r27, Y+13	; 0x0d
     b8e:	34 96       	adiw	r30, 0x04	; 4
     b90:	80 83       	st	Z, r24
     b92:	91 83       	std	Z+1, r25	; 0x01
     b94:	a2 83       	std	Z+2, r26	; 0x02
     b96:	b3 83       	std	Z+3, r27	; 0x03
     b98:	2a 89       	ldd	r18, Y+18	; 0x12
     b9a:	3b 89       	ldd	r19, Y+19	; 0x13
     b9c:	4c 89       	ldd	r20, Y+20	; 0x14
     b9e:	5d 89       	ldd	r21, Y+21	; 0x15
     ba0:	01 e0       	ldi	r16, 0x01	; 1
     ba2:	b7 01       	movw	r22, r14
     ba4:	89 81       	ldd	r24, Y+1	; 0x01
     ba6:	0e 94 c5 12 	call	0x258a	; 0x258a <disk_write>
     baa:	1d 82       	std	Y+5, r1	; 0x05
     bac:	40 e0       	ldi	r20, 0x00	; 0
     bae:	50 e0       	ldi	r21, 0x00	; 0
     bb0:	60 e0       	ldi	r22, 0x00	; 0
     bb2:	89 81       	ldd	r24, Y+1	; 0x01
     bb4:	0e 94 24 13 	call	0x2648	; 0x2648 <disk_ioctl>
     bb8:	81 11       	cpse	r24, r1
     bba:	11 e0       	ldi	r17, 0x01	; 1
     bbc:	81 2f       	mov	r24, r17
     bbe:	df 91       	pop	r29
     bc0:	cf 91       	pop	r28
     bc2:	1f 91       	pop	r17
     bc4:	0f 91       	pop	r16
     bc6:	ff 90       	pop	r15
     bc8:	ef 90       	pop	r14
     bca:	08 95       	ret

00000bcc <_Z10clust2sectP5FATFSm>:
     bcc:	0f 93       	push	r16
     bce:	1f 93       	push	r17
     bd0:	fc 01       	movw	r30, r24
     bd2:	9a 01       	movw	r18, r20
     bd4:	ab 01       	movw	r20, r22
     bd6:	22 50       	subi	r18, 0x02	; 2
     bd8:	31 09       	sbc	r19, r1
     bda:	41 09       	sbc	r20, r1
     bdc:	51 09       	sbc	r21, r1
     bde:	86 89       	ldd	r24, Z+22	; 0x16
     be0:	97 89       	ldd	r25, Z+23	; 0x17
     be2:	a0 8d       	ldd	r26, Z+24	; 0x18
     be4:	b1 8d       	ldd	r27, Z+25	; 0x19
     be6:	02 97       	sbiw	r24, 0x02	; 2
     be8:	a1 09       	sbc	r26, r1
     bea:	b1 09       	sbc	r27, r1
     bec:	28 17       	cp	r18, r24
     bee:	39 07       	cpc	r19, r25
     bf0:	4a 07       	cpc	r20, r26
     bf2:	5b 07       	cpc	r21, r27
     bf4:	68 f4       	brcc	.+26     	; 0xc10 <_Z10clust2sectP5FATFSm+0x44>
     bf6:	a2 81       	ldd	r26, Z+2	; 0x02
     bf8:	b0 e0       	ldi	r27, 0x00	; 0
     bfa:	0e 94 0e 14 	call	0x281c	; 0x281c <__muluhisi3>
     bfe:	02 a5       	ldd	r16, Z+42	; 0x2a
     c00:	13 a5       	ldd	r17, Z+43	; 0x2b
     c02:	24 a5       	ldd	r18, Z+44	; 0x2c
     c04:	35 a5       	ldd	r19, Z+45	; 0x2d
     c06:	60 0f       	add	r22, r16
     c08:	71 1f       	adc	r23, r17
     c0a:	82 1f       	adc	r24, r18
     c0c:	93 1f       	adc	r25, r19
     c0e:	03 c0       	rjmp	.+6      	; 0xc16 <_Z10clust2sectP5FATFSm+0x4a>
     c10:	60 e0       	ldi	r22, 0x00	; 0
     c12:	70 e0       	ldi	r23, 0x00	; 0
     c14:	cb 01       	movw	r24, r22
     c16:	1f 91       	pop	r17
     c18:	0f 91       	pop	r16
     c1a:	08 95       	ret

00000c1c <_Z7get_fatP5FATFSm>:
     c1c:	af 92       	push	r10
     c1e:	bf 92       	push	r11
     c20:	cf 92       	push	r12
     c22:	df 92       	push	r13
     c24:	ef 92       	push	r14
     c26:	ff 92       	push	r15
     c28:	0f 93       	push	r16
     c2a:	1f 93       	push	r17
     c2c:	cf 93       	push	r28
     c2e:	df 93       	push	r29
     c30:	42 30       	cpi	r20, 0x02	; 2
     c32:	51 05       	cpc	r21, r1
     c34:	61 05       	cpc	r22, r1
     c36:	71 05       	cpc	r23, r1
     c38:	08 f4       	brcc	.+2      	; 0xc3c <_Z7get_fatP5FATFSm+0x20>
     c3a:	b2 c0       	rjmp	.+356    	; 0xda0 <_Z7get_fatP5FATFSm+0x184>
     c3c:	fc 01       	movw	r30, r24
     c3e:	06 89       	ldd	r16, Z+22	; 0x16
     c40:	17 89       	ldd	r17, Z+23	; 0x17
     c42:	20 8d       	ldd	r18, Z+24	; 0x18
     c44:	31 8d       	ldd	r19, Z+25	; 0x19
     c46:	40 17       	cp	r20, r16
     c48:	51 07       	cpc	r21, r17
     c4a:	62 07       	cpc	r22, r18
     c4c:	73 07       	cpc	r23, r19
     c4e:	08 f0       	brcs	.+2      	; 0xc52 <_Z7get_fatP5FATFSm+0x36>
     c50:	ac c0       	rjmp	.+344    	; 0xdaa <_Z7get_fatP5FATFSm+0x18e>
     c52:	6a 01       	movw	r12, r20
     c54:	7b 01       	movw	r14, r22
     c56:	ec 01       	movw	r28, r24
     c58:	80 81       	ld	r24, Z
     c5a:	82 30       	cpi	r24, 0x02	; 2
     c5c:	09 f4       	brne	.+2      	; 0xc60 <_Z7get_fatP5FATFSm+0x44>
     c5e:	4d c0       	rjmp	.+154    	; 0xcfa <_Z7get_fatP5FATFSm+0xde>
     c60:	83 30       	cpi	r24, 0x03	; 3
     c62:	09 f4       	brne	.+2      	; 0xc66 <_Z7get_fatP5FATFSm+0x4a>
     c64:	6d c0       	rjmp	.+218    	; 0xd40 <_Z7get_fatP5FATFSm+0x124>
     c66:	81 30       	cpi	r24, 0x01	; 1
     c68:	09 f0       	breq	.+2      	; 0xc6c <_Z7get_fatP5FATFSm+0x50>
     c6a:	a4 c0       	rjmp	.+328    	; 0xdb4 <_Z7get_fatP5FATFSm+0x198>
     c6c:	5a 01       	movw	r10, r20
     c6e:	b6 94       	lsr	r11
     c70:	a7 94       	ror	r10
     c72:	a4 0e       	add	r10, r20
     c74:	b5 1e       	adc	r11, r21
     c76:	42 a1       	ldd	r20, Z+34	; 0x22
     c78:	53 a1       	ldd	r21, Z+35	; 0x23
     c7a:	64 a1       	ldd	r22, Z+36	; 0x24
     c7c:	75 a1       	ldd	r23, Z+37	; 0x25
     c7e:	c5 01       	movw	r24, r10
     c80:	89 2f       	mov	r24, r25
     c82:	99 27       	eor	r25, r25
     c84:	86 95       	lsr	r24
     c86:	48 0f       	add	r20, r24
     c88:	59 1f       	adc	r21, r25
     c8a:	61 1d       	adc	r22, r1
     c8c:	71 1d       	adc	r23, r1
     c8e:	cf 01       	movw	r24, r30
     c90:	39 dc       	rcall	.-1934   	; 0x504 <_ZL11move_windowP5FATFSm>
     c92:	81 11       	cpse	r24, r1
     c94:	93 c0       	rjmp	.+294    	; 0xdbc <_Z7get_fatP5FATFSm+0x1a0>
     c96:	f5 01       	movw	r30, r10
     c98:	f1 70       	andi	r31, 0x01	; 1
     c9a:	ec 0f       	add	r30, r28
     c9c:	fd 1f       	adc	r31, r29
     c9e:	02 a9       	ldd	r16, Z+50	; 0x32
     ca0:	10 e0       	ldi	r17, 0x00	; 0
     ca2:	ff ef       	ldi	r31, 0xFF	; 255
     ca4:	af 1a       	sub	r10, r31
     ca6:	bf 0a       	sbc	r11, r31
     ca8:	4a a1       	ldd	r20, Y+34	; 0x22
     caa:	5b a1       	ldd	r21, Y+35	; 0x23
     cac:	6c a1       	ldd	r22, Y+36	; 0x24
     cae:	7d a1       	ldd	r23, Y+37	; 0x25
     cb0:	c5 01       	movw	r24, r10
     cb2:	89 2f       	mov	r24, r25
     cb4:	99 27       	eor	r25, r25
     cb6:	86 95       	lsr	r24
     cb8:	48 0f       	add	r20, r24
     cba:	59 1f       	adc	r21, r25
     cbc:	61 1d       	adc	r22, r1
     cbe:	71 1d       	adc	r23, r1
     cc0:	ce 01       	movw	r24, r28
     cc2:	20 dc       	rcall	.-1984   	; 0x504 <_ZL11move_windowP5FATFSm>
     cc4:	81 11       	cpse	r24, r1
     cc6:	7e c0       	rjmp	.+252    	; 0xdc4 <_Z7get_fatP5FATFSm+0x1a8>
     cc8:	81 e0       	ldi	r24, 0x01	; 1
     cca:	b8 22       	and	r11, r24
     ccc:	ca 0d       	add	r28, r10
     cce:	db 1d       	adc	r29, r11
     cd0:	6a a9       	ldd	r22, Y+50	; 0x32
     cd2:	70 e0       	ldi	r23, 0x00	; 0
     cd4:	76 2f       	mov	r23, r22
     cd6:	66 27       	eor	r22, r22
     cd8:	60 2b       	or	r22, r16
     cda:	71 2b       	or	r23, r17
     cdc:	c0 fe       	sbrs	r12, 0
     cde:	09 c0       	rjmp	.+18     	; 0xcf2 <_Z7get_fatP5FATFSm+0xd6>
     ce0:	72 95       	swap	r23
     ce2:	62 95       	swap	r22
     ce4:	6f 70       	andi	r22, 0x0F	; 15
     ce6:	67 27       	eor	r22, r23
     ce8:	7f 70       	andi	r23, 0x0F	; 15
     cea:	67 27       	eor	r22, r23
     cec:	80 e0       	ldi	r24, 0x00	; 0
     cee:	90 e0       	ldi	r25, 0x00	; 0
     cf0:	74 c0       	rjmp	.+232    	; 0xdda <_Z7get_fatP5FATFSm+0x1be>
     cf2:	7f 70       	andi	r23, 0x0F	; 15
     cf4:	80 e0       	ldi	r24, 0x00	; 0
     cf6:	90 e0       	ldi	r25, 0x00	; 0
     cf8:	70 c0       	rjmp	.+224    	; 0xdda <_Z7get_fatP5FATFSm+0x1be>
     cfa:	42 a1       	ldd	r20, Z+34	; 0x22
     cfc:	53 a1       	ldd	r21, Z+35	; 0x23
     cfe:	64 a1       	ldd	r22, Z+36	; 0x24
     d00:	75 a1       	ldd	r23, Z+37	; 0x25
     d02:	bb 27       	eor	r27, r27
     d04:	af 2d       	mov	r26, r15
     d06:	9e 2d       	mov	r25, r14
     d08:	8d 2d       	mov	r24, r13
     d0a:	48 0f       	add	r20, r24
     d0c:	59 1f       	adc	r21, r25
     d0e:	6a 1f       	adc	r22, r26
     d10:	7b 1f       	adc	r23, r27
     d12:	cf 01       	movw	r24, r30
     d14:	f7 db       	rcall	.-2066   	; 0x504 <_ZL11move_windowP5FATFSm>
     d16:	81 11       	cpse	r24, r1
     d18:	59 c0       	rjmp	.+178    	; 0xdcc <_Z7get_fatP5FATFSm+0x1b0>
     d1a:	b7 01       	movw	r22, r14
     d1c:	a6 01       	movw	r20, r12
     d1e:	44 0f       	add	r20, r20
     d20:	55 1f       	adc	r21, r21
     d22:	66 1f       	adc	r22, r22
     d24:	77 1f       	adc	r23, r23
     d26:	4e 7f       	andi	r20, 0xFE	; 254
     d28:	51 70       	andi	r21, 0x01	; 1
     d2a:	66 27       	eor	r22, r22
     d2c:	77 27       	eor	r23, r23
     d2e:	4e 5c       	subi	r20, 0xCE	; 206
     d30:	5f 4f       	sbci	r21, 0xFF	; 255
     d32:	c4 0f       	add	r28, r20
     d34:	d5 1f       	adc	r29, r21
     d36:	68 81       	ld	r22, Y
     d38:	79 81       	ldd	r23, Y+1	; 0x01
     d3a:	80 e0       	ldi	r24, 0x00	; 0
     d3c:	90 e0       	ldi	r25, 0x00	; 0
     d3e:	4d c0       	rjmp	.+154    	; 0xdda <_Z7get_fatP5FATFSm+0x1be>
     d40:	42 a1       	ldd	r20, Z+34	; 0x22
     d42:	53 a1       	ldd	r21, Z+35	; 0x23
     d44:	64 a1       	ldd	r22, Z+36	; 0x24
     d46:	75 a1       	ldd	r23, Z+37	; 0x25
     d48:	d7 01       	movw	r26, r14
     d4a:	c6 01       	movw	r24, r12
     d4c:	68 94       	set
     d4e:	16 f8       	bld	r1, 6
     d50:	b6 95       	lsr	r27
     d52:	a7 95       	ror	r26
     d54:	97 95       	ror	r25
     d56:	87 95       	ror	r24
     d58:	16 94       	lsr	r1
     d5a:	d1 f7       	brne	.-12     	; 0xd50 <_Z7get_fatP5FATFSm+0x134>
     d5c:	48 0f       	add	r20, r24
     d5e:	59 1f       	adc	r21, r25
     d60:	6a 1f       	adc	r22, r26
     d62:	7b 1f       	adc	r23, r27
     d64:	cf 01       	movw	r24, r30
     d66:	ce db       	rcall	.-2148   	; 0x504 <_ZL11move_windowP5FATFSm>
     d68:	81 11       	cpse	r24, r1
     d6a:	34 c0       	rjmp	.+104    	; 0xdd4 <_Z7get_fatP5FATFSm+0x1b8>
     d6c:	b7 01       	movw	r22, r14
     d6e:	a6 01       	movw	r20, r12
     d70:	44 0f       	add	r20, r20
     d72:	55 1f       	adc	r21, r21
     d74:	66 1f       	adc	r22, r22
     d76:	77 1f       	adc	r23, r23
     d78:	44 0f       	add	r20, r20
     d7a:	55 1f       	adc	r21, r21
     d7c:	66 1f       	adc	r22, r22
     d7e:	77 1f       	adc	r23, r23
     d80:	4c 7f       	andi	r20, 0xFC	; 252
     d82:	51 70       	andi	r21, 0x01	; 1
     d84:	66 27       	eor	r22, r22
     d86:	77 27       	eor	r23, r23
     d88:	4e 5c       	subi	r20, 0xCE	; 206
     d8a:	5f 4f       	sbci	r21, 0xFF	; 255
     d8c:	c4 0f       	add	r28, r20
     d8e:	d5 1f       	adc	r29, r21
     d90:	88 81       	ld	r24, Y
     d92:	99 81       	ldd	r25, Y+1	; 0x01
     d94:	aa 81       	ldd	r26, Y+2	; 0x02
     d96:	bb 81       	ldd	r27, Y+3	; 0x03
     d98:	bc 01       	movw	r22, r24
     d9a:	cd 01       	movw	r24, r26
     d9c:	9f 70       	andi	r25, 0x0F	; 15
     d9e:	1d c0       	rjmp	.+58     	; 0xdda <_Z7get_fatP5FATFSm+0x1be>
     da0:	61 e0       	ldi	r22, 0x01	; 1
     da2:	70 e0       	ldi	r23, 0x00	; 0
     da4:	80 e0       	ldi	r24, 0x00	; 0
     da6:	90 e0       	ldi	r25, 0x00	; 0
     da8:	18 c0       	rjmp	.+48     	; 0xdda <_Z7get_fatP5FATFSm+0x1be>
     daa:	61 e0       	ldi	r22, 0x01	; 1
     dac:	70 e0       	ldi	r23, 0x00	; 0
     dae:	80 e0       	ldi	r24, 0x00	; 0
     db0:	90 e0       	ldi	r25, 0x00	; 0
     db2:	13 c0       	rjmp	.+38     	; 0xdda <_Z7get_fatP5FATFSm+0x1be>
     db4:	6f ef       	ldi	r22, 0xFF	; 255
     db6:	7f ef       	ldi	r23, 0xFF	; 255
     db8:	cb 01       	movw	r24, r22
     dba:	0f c0       	rjmp	.+30     	; 0xdda <_Z7get_fatP5FATFSm+0x1be>
     dbc:	6f ef       	ldi	r22, 0xFF	; 255
     dbe:	7f ef       	ldi	r23, 0xFF	; 255
     dc0:	cb 01       	movw	r24, r22
     dc2:	0b c0       	rjmp	.+22     	; 0xdda <_Z7get_fatP5FATFSm+0x1be>
     dc4:	6f ef       	ldi	r22, 0xFF	; 255
     dc6:	7f ef       	ldi	r23, 0xFF	; 255
     dc8:	cb 01       	movw	r24, r22
     dca:	07 c0       	rjmp	.+14     	; 0xdda <_Z7get_fatP5FATFSm+0x1be>
     dcc:	6f ef       	ldi	r22, 0xFF	; 255
     dce:	7f ef       	ldi	r23, 0xFF	; 255
     dd0:	cb 01       	movw	r24, r22
     dd2:	03 c0       	rjmp	.+6      	; 0xdda <_Z7get_fatP5FATFSm+0x1be>
     dd4:	6f ef       	ldi	r22, 0xFF	; 255
     dd6:	7f ef       	ldi	r23, 0xFF	; 255
     dd8:	cb 01       	movw	r24, r22
     dda:	df 91       	pop	r29
     ddc:	cf 91       	pop	r28
     dde:	1f 91       	pop	r17
     de0:	0f 91       	pop	r16
     de2:	ff 90       	pop	r15
     de4:	ef 90       	pop	r14
     de6:	df 90       	pop	r13
     de8:	cf 90       	pop	r12
     dea:	bf 90       	pop	r11
     dec:	af 90       	pop	r10
     dee:	08 95       	ret

00000df0 <_ZL7dir_sdiP3DIRt>:
     df0:	ef 92       	push	r14
     df2:	ff 92       	push	r15
     df4:	0f 93       	push	r16
     df6:	1f 93       	push	r17
     df8:	cf 93       	push	r28
     dfa:	df 93       	push	r29
     dfc:	ec 01       	movw	r28, r24
     dfe:	8b 01       	movw	r16, r22
     e00:	7d 83       	std	Y+5, r23	; 0x05
     e02:	6c 83       	std	Y+4, r22	; 0x04
     e04:	4e 81       	ldd	r20, Y+6	; 0x06
     e06:	5f 81       	ldd	r21, Y+7	; 0x07
     e08:	68 85       	ldd	r22, Y+8	; 0x08
     e0a:	79 85       	ldd	r23, Y+9	; 0x09
     e0c:	41 30       	cpi	r20, 0x01	; 1
     e0e:	51 05       	cpc	r21, r1
     e10:	61 05       	cpc	r22, r1
     e12:	71 05       	cpc	r23, r1
     e14:	09 f4       	brne	.+2      	; 0xe18 <_ZL7dir_sdiP3DIRt+0x28>
     e16:	91 c0       	rjmp	.+290    	; 0xf3a <_ZL7dir_sdiP3DIRt+0x14a>
     e18:	e8 81       	ld	r30, Y
     e1a:	f9 81       	ldd	r31, Y+1	; 0x01
     e1c:	86 89       	ldd	r24, Z+22	; 0x16
     e1e:	97 89       	ldd	r25, Z+23	; 0x17
     e20:	a0 8d       	ldd	r26, Z+24	; 0x18
     e22:	b1 8d       	ldd	r27, Z+25	; 0x19
     e24:	48 17       	cp	r20, r24
     e26:	59 07       	cpc	r21, r25
     e28:	6a 07       	cpc	r22, r26
     e2a:	7b 07       	cpc	r23, r27
     e2c:	08 f0       	brcs	.+2      	; 0xe30 <_ZL7dir_sdiP3DIRt+0x40>
     e2e:	87 c0       	rjmp	.+270    	; 0xf3e <_ZL7dir_sdiP3DIRt+0x14e>
     e30:	41 15       	cp	r20, r1
     e32:	51 05       	cpc	r21, r1
     e34:	61 05       	cpc	r22, r1
     e36:	71 05       	cpc	r23, r1
     e38:	39 f4       	brne	.+14     	; 0xe48 <_ZL7dir_sdiP3DIRt+0x58>
     e3a:	80 81       	ld	r24, Z
     e3c:	83 30       	cpi	r24, 0x03	; 3
     e3e:	21 f4       	brne	.+8      	; 0xe48 <_ZL7dir_sdiP3DIRt+0x58>
     e40:	46 a1       	ldd	r20, Z+38	; 0x26
     e42:	57 a1       	ldd	r21, Z+39	; 0x27
     e44:	60 a5       	ldd	r22, Z+40	; 0x28
     e46:	71 a5       	ldd	r23, Z+41	; 0x29
     e48:	41 15       	cp	r20, r1
     e4a:	51 05       	cpc	r21, r1
     e4c:	61 05       	cpc	r22, r1
     e4e:	71 05       	cpc	r23, r1
     e50:	f1 f4       	brne	.+60     	; 0xe8e <_ZL7dir_sdiP3DIRt+0x9e>
     e52:	4a 87       	std	Y+10, r20	; 0x0a
     e54:	5b 87       	std	Y+11, r21	; 0x0b
     e56:	6c 87       	std	Y+12, r22	; 0x0c
     e58:	7d 87       	std	Y+13, r23	; 0x0d
     e5a:	80 85       	ldd	r24, Z+8	; 0x08
     e5c:	91 85       	ldd	r25, Z+9	; 0x09
     e5e:	08 17       	cp	r16, r24
     e60:	19 07       	cpc	r17, r25
     e62:	08 f0       	brcs	.+2      	; 0xe66 <_ZL7dir_sdiP3DIRt+0x76>
     e64:	6e c0       	rjmp	.+220    	; 0xf42 <_ZL7dir_sdiP3DIRt+0x152>
     e66:	86 a1       	ldd	r24, Z+38	; 0x26
     e68:	97 a1       	ldd	r25, Z+39	; 0x27
     e6a:	a0 a5       	ldd	r26, Z+40	; 0x28
     e6c:	b1 a5       	ldd	r27, Z+41	; 0x29
     e6e:	98 01       	movw	r18, r16
     e70:	32 95       	swap	r19
     e72:	22 95       	swap	r18
     e74:	2f 70       	andi	r18, 0x0F	; 15
     e76:	23 27       	eor	r18, r19
     e78:	3f 70       	andi	r19, 0x0F	; 15
     e7a:	23 27       	eor	r18, r19
     e7c:	82 0f       	add	r24, r18
     e7e:	93 1f       	adc	r25, r19
     e80:	a1 1d       	adc	r26, r1
     e82:	b1 1d       	adc	r27, r1
     e84:	8e 87       	std	Y+14, r24	; 0x0e
     e86:	9f 87       	std	Y+15, r25	; 0x0f
     e88:	a8 8b       	std	Y+16, r26	; 0x10
     e8a:	b9 8b       	std	Y+17, r27	; 0x11
     e8c:	40 c0       	rjmp	.+128    	; 0xf0e <_ZL7dir_sdiP3DIRt+0x11e>
     e8e:	e2 80       	ldd	r14, Z+2	; 0x02
     e90:	80 e1       	ldi	r24, 0x10	; 16
     e92:	e8 9e       	mul	r14, r24
     e94:	70 01       	movw	r14, r0
     e96:	11 24       	eor	r1, r1
     e98:	0e 15       	cp	r16, r14
     e9a:	1f 05       	cpc	r17, r15
     e9c:	00 f1       	brcs	.+64     	; 0xede <_ZL7dir_sdiP3DIRt+0xee>
     e9e:	88 81       	ld	r24, Y
     ea0:	99 81       	ldd	r25, Y+1	; 0x01
     ea2:	bc de       	rcall	.-648    	; 0xc1c <_Z7get_fatP5FATFSm>
     ea4:	ab 01       	movw	r20, r22
     ea6:	bc 01       	movw	r22, r24
     ea8:	4f 3f       	cpi	r20, 0xFF	; 255
     eaa:	8f ef       	ldi	r24, 0xFF	; 255
     eac:	58 07       	cpc	r21, r24
     eae:	68 07       	cpc	r22, r24
     eb0:	78 07       	cpc	r23, r24
     eb2:	09 f4       	brne	.+2      	; 0xeb6 <_ZL7dir_sdiP3DIRt+0xc6>
     eb4:	48 c0       	rjmp	.+144    	; 0xf46 <_ZL7dir_sdiP3DIRt+0x156>
     eb6:	42 30       	cpi	r20, 0x02	; 2
     eb8:	51 05       	cpc	r21, r1
     eba:	61 05       	cpc	r22, r1
     ebc:	71 05       	cpc	r23, r1
     ebe:	08 f4       	brcc	.+2      	; 0xec2 <_ZL7dir_sdiP3DIRt+0xd2>
     ec0:	44 c0       	rjmp	.+136    	; 0xf4a <_ZL7dir_sdiP3DIRt+0x15a>
     ec2:	e8 81       	ld	r30, Y
     ec4:	f9 81       	ldd	r31, Y+1	; 0x01
     ec6:	86 89       	ldd	r24, Z+22	; 0x16
     ec8:	97 89       	ldd	r25, Z+23	; 0x17
     eca:	a0 8d       	ldd	r26, Z+24	; 0x18
     ecc:	b1 8d       	ldd	r27, Z+25	; 0x19
     ece:	48 17       	cp	r20, r24
     ed0:	59 07       	cpc	r21, r25
     ed2:	6a 07       	cpc	r22, r26
     ed4:	7b 07       	cpc	r23, r27
     ed6:	d8 f5       	brcc	.+118    	; 0xf4e <_ZL7dir_sdiP3DIRt+0x15e>
     ed8:	0e 19       	sub	r16, r14
     eda:	1f 09       	sbc	r17, r15
     edc:	dd cf       	rjmp	.-70     	; 0xe98 <_ZL7dir_sdiP3DIRt+0xa8>
     ede:	4a 87       	std	Y+10, r20	; 0x0a
     ee0:	5b 87       	std	Y+11, r21	; 0x0b
     ee2:	6c 87       	std	Y+12, r22	; 0x0c
     ee4:	7d 87       	std	Y+13, r23	; 0x0d
     ee6:	88 81       	ld	r24, Y
     ee8:	99 81       	ldd	r25, Y+1	; 0x01
     eea:	70 de       	rcall	.-800    	; 0xbcc <_Z10clust2sectP5FATFSm>
     eec:	98 01       	movw	r18, r16
     eee:	32 95       	swap	r19
     ef0:	22 95       	swap	r18
     ef2:	2f 70       	andi	r18, 0x0F	; 15
     ef4:	23 27       	eor	r18, r19
     ef6:	3f 70       	andi	r19, 0x0F	; 15
     ef8:	23 27       	eor	r18, r19
     efa:	dc 01       	movw	r26, r24
     efc:	cb 01       	movw	r24, r22
     efe:	82 0f       	add	r24, r18
     f00:	93 1f       	adc	r25, r19
     f02:	a1 1d       	adc	r26, r1
     f04:	b1 1d       	adc	r27, r1
     f06:	8e 87       	std	Y+14, r24	; 0x0e
     f08:	9f 87       	std	Y+15, r25	; 0x0f
     f0a:	a8 8b       	std	Y+16, r26	; 0x10
     f0c:	b9 8b       	std	Y+17, r27	; 0x11
     f0e:	28 81       	ld	r18, Y
     f10:	39 81       	ldd	r19, Y+1	; 0x01
     f12:	0f 70       	andi	r16, 0x0F	; 15
     f14:	11 27       	eor	r17, r17
     f16:	c8 01       	movw	r24, r16
     f18:	88 0f       	add	r24, r24
     f1a:	99 1f       	adc	r25, r25
     f1c:	82 95       	swap	r24
     f1e:	92 95       	swap	r25
     f20:	90 7f       	andi	r25, 0xF0	; 240
     f22:	98 27       	eor	r25, r24
     f24:	80 7f       	andi	r24, 0xF0	; 240
     f26:	98 27       	eor	r25, r24
     f28:	89 01       	movw	r16, r18
     f2a:	0e 5c       	subi	r16, 0xCE	; 206
     f2c:	1f 4f       	sbci	r17, 0xFF	; 255
     f2e:	08 0f       	add	r16, r24
     f30:	19 1f       	adc	r17, r25
     f32:	1b 8b       	std	Y+19, r17	; 0x13
     f34:	0a 8b       	std	Y+18, r16	; 0x12
     f36:	80 e0       	ldi	r24, 0x00	; 0
     f38:	0b c0       	rjmp	.+22     	; 0xf50 <_ZL7dir_sdiP3DIRt+0x160>
     f3a:	82 e0       	ldi	r24, 0x02	; 2
     f3c:	09 c0       	rjmp	.+18     	; 0xf50 <_ZL7dir_sdiP3DIRt+0x160>
     f3e:	82 e0       	ldi	r24, 0x02	; 2
     f40:	07 c0       	rjmp	.+14     	; 0xf50 <_ZL7dir_sdiP3DIRt+0x160>
     f42:	82 e0       	ldi	r24, 0x02	; 2
     f44:	05 c0       	rjmp	.+10     	; 0xf50 <_ZL7dir_sdiP3DIRt+0x160>
     f46:	81 e0       	ldi	r24, 0x01	; 1
     f48:	03 c0       	rjmp	.+6      	; 0xf50 <_ZL7dir_sdiP3DIRt+0x160>
     f4a:	82 e0       	ldi	r24, 0x02	; 2
     f4c:	01 c0       	rjmp	.+2      	; 0xf50 <_ZL7dir_sdiP3DIRt+0x160>
     f4e:	82 e0       	ldi	r24, 0x02	; 2
     f50:	df 91       	pop	r29
     f52:	cf 91       	pop	r28
     f54:	1f 91       	pop	r17
     f56:	0f 91       	pop	r16
     f58:	ff 90       	pop	r15
     f5a:	ef 90       	pop	r14
     f5c:	08 95       	ret

00000f5e <_Z7put_fatP5FATFSmm>:
     f5e:	4f 92       	push	r4
     f60:	5f 92       	push	r5
     f62:	6f 92       	push	r6
     f64:	7f 92       	push	r7
     f66:	af 92       	push	r10
     f68:	bf 92       	push	r11
     f6a:	cf 92       	push	r12
     f6c:	df 92       	push	r13
     f6e:	ef 92       	push	r14
     f70:	ff 92       	push	r15
     f72:	0f 93       	push	r16
     f74:	1f 93       	push	r17
     f76:	cf 93       	push	r28
     f78:	df 93       	push	r29
     f7a:	00 d0       	rcall	.+0      	; 0xf7c <_Z7put_fatP5FATFSmm+0x1e>
     f7c:	00 d0       	rcall	.+0      	; 0xf7e <_Z7put_fatP5FATFSmm+0x20>
     f7e:	00 d0       	rcall	.+0      	; 0xf80 <_Z7put_fatP5FATFSmm+0x22>
     f80:	cd b7       	in	r28, 0x3d	; 61
     f82:	de b7       	in	r29, 0x3e	; 62
     f84:	42 30       	cpi	r20, 0x02	; 2
     f86:	51 05       	cpc	r21, r1
     f88:	61 05       	cpc	r22, r1
     f8a:	71 05       	cpc	r23, r1
     f8c:	08 f4       	brcc	.+2      	; 0xf90 <_Z7put_fatP5FATFSmm+0x32>
     f8e:	f4 c0       	rjmp	.+488    	; 0x1178 <__EEPROM_REGION_LENGTH__+0x178>
     f90:	fc 01       	movw	r30, r24
     f92:	c6 88       	ldd	r12, Z+22	; 0x16
     f94:	d7 88       	ldd	r13, Z+23	; 0x17
     f96:	e0 8c       	ldd	r14, Z+24	; 0x18
     f98:	f1 8c       	ldd	r15, Z+25	; 0x19
     f9a:	4c 15       	cp	r20, r12
     f9c:	5d 05       	cpc	r21, r13
     f9e:	6e 05       	cpc	r22, r14
     fa0:	7f 05       	cpc	r23, r15
     fa2:	08 f0       	brcs	.+2      	; 0xfa6 <_Z7put_fatP5FATFSmm+0x48>
     fa4:	eb c0       	rjmp	.+470    	; 0x117c <__EEPROM_REGION_LENGTH__+0x17c>
     fa6:	28 01       	movw	r4, r16
     fa8:	39 01       	movw	r6, r18
     faa:	6a 01       	movw	r12, r20
     fac:	7b 01       	movw	r14, r22
     fae:	9e 83       	std	Y+6, r25	; 0x06
     fb0:	8d 83       	std	Y+5, r24	; 0x05
     fb2:	80 81       	ld	r24, Z
     fb4:	82 30       	cpi	r24, 0x02	; 2
     fb6:	09 f4       	brne	.+2      	; 0xfba <_Z7put_fatP5FATFSmm+0x5c>
     fb8:	75 c0       	rjmp	.+234    	; 0x10a4 <__EEPROM_REGION_LENGTH__+0xa4>
     fba:	83 30       	cpi	r24, 0x03	; 3
     fbc:	09 f4       	brne	.+2      	; 0xfc0 <_Z7put_fatP5FATFSmm+0x62>
     fbe:	98 c0       	rjmp	.+304    	; 0x10f0 <__EEPROM_REGION_LENGTH__+0xf0>
     fc0:	81 30       	cpi	r24, 0x01	; 1
     fc2:	09 f0       	breq	.+2      	; 0xfc6 <_Z7put_fatP5FATFSmm+0x68>
     fc4:	d3 c0       	rjmp	.+422    	; 0x116c <__EEPROM_REGION_LENGTH__+0x16c>
     fc6:	5a 01       	movw	r10, r20
     fc8:	b6 94       	lsr	r11
     fca:	a7 94       	ror	r10
     fcc:	a4 0e       	add	r10, r20
     fce:	b5 1e       	adc	r11, r21
     fd0:	42 a1       	ldd	r20, Z+34	; 0x22
     fd2:	53 a1       	ldd	r21, Z+35	; 0x23
     fd4:	64 a1       	ldd	r22, Z+36	; 0x24
     fd6:	75 a1       	ldd	r23, Z+37	; 0x25
     fd8:	c5 01       	movw	r24, r10
     fda:	89 2f       	mov	r24, r25
     fdc:	99 27       	eor	r25, r25
     fde:	86 95       	lsr	r24
     fe0:	48 0f       	add	r20, r24
     fe2:	59 1f       	adc	r21, r25
     fe4:	61 1d       	adc	r22, r1
     fe6:	71 1d       	adc	r23, r1
     fe8:	cf 01       	movw	r24, r30
     fea:	8c da       	rcall	.-2792   	; 0x504 <_ZL11move_windowP5FATFSm>
     fec:	81 11       	cpse	r24, r1
     fee:	bf c0       	rjmp	.+382    	; 0x116e <__EEPROM_REGION_LENGTH__+0x16e>
     ff0:	c5 01       	movw	r24, r10
     ff2:	91 70       	andi	r25, 0x01	; 1
     ff4:	a7 01       	movw	r20, r14
     ff6:	96 01       	movw	r18, r12
     ff8:	21 70       	andi	r18, 0x01	; 1
     ffa:	33 27       	eor	r19, r19
     ffc:	44 27       	eor	r20, r20
     ffe:	55 27       	eor	r21, r21
    1000:	29 83       	std	Y+1, r18	; 0x01
    1002:	3a 83       	std	Y+2, r19	; 0x02
    1004:	4b 83       	std	Y+3, r20	; 0x03
    1006:	5c 83       	std	Y+4, r21	; 0x04
    1008:	c0 fe       	sbrs	r12, 0
    100a:	0c c0       	rjmp	.+24     	; 0x1024 <__EEPROM_REGION_LENGTH__+0x24>
    100c:	40 e1       	ldi	r20, 0x10	; 16
    100e:	44 9e       	mul	r4, r20
    1010:	90 01       	movw	r18, r0
    1012:	11 24       	eor	r1, r1
    1014:	ed 81       	ldd	r30, Y+5	; 0x05
    1016:	fe 81       	ldd	r31, Y+6	; 0x06
    1018:	e8 0f       	add	r30, r24
    101a:	f9 1f       	adc	r31, r25
    101c:	42 a9       	ldd	r20, Z+50	; 0x32
    101e:	4f 70       	andi	r20, 0x0F	; 15
    1020:	24 2b       	or	r18, r20
    1022:	01 c0       	rjmp	.+2      	; 0x1026 <__EEPROM_REGION_LENGTH__+0x26>
    1024:	24 2d       	mov	r18, r4
    1026:	ed 81       	ldd	r30, Y+5	; 0x05
    1028:	fe 81       	ldd	r31, Y+6	; 0x06
    102a:	e8 0f       	add	r30, r24
    102c:	f9 1f       	adc	r31, r25
    102e:	22 ab       	std	Z+50, r18	; 0x32
    1030:	5f ef       	ldi	r21, 0xFF	; 255
    1032:	a5 1a       	sub	r10, r21
    1034:	b5 0a       	sbc	r11, r21
    1036:	81 e0       	ldi	r24, 0x01	; 1
    1038:	ed 81       	ldd	r30, Y+5	; 0x05
    103a:	fe 81       	ldd	r31, Y+6	; 0x06
    103c:	84 83       	std	Z+4, r24	; 0x04
    103e:	42 a1       	ldd	r20, Z+34	; 0x22
    1040:	53 a1       	ldd	r21, Z+35	; 0x23
    1042:	64 a1       	ldd	r22, Z+36	; 0x24
    1044:	75 a1       	ldd	r23, Z+37	; 0x25
    1046:	c5 01       	movw	r24, r10
    1048:	89 2f       	mov	r24, r25
    104a:	99 27       	eor	r25, r25
    104c:	86 95       	lsr	r24
    104e:	48 0f       	add	r20, r24
    1050:	59 1f       	adc	r21, r25
    1052:	61 1d       	adc	r22, r1
    1054:	71 1d       	adc	r23, r1
    1056:	cf 01       	movw	r24, r30
    1058:	55 da       	rcall	.-2902   	; 0x504 <_ZL11move_windowP5FATFSm>
    105a:	81 11       	cpse	r24, r1
    105c:	88 c0       	rjmp	.+272    	; 0x116e <__EEPROM_REGION_LENGTH__+0x16e>
    105e:	f1 e0       	ldi	r31, 0x01	; 1
    1060:	bf 22       	and	r11, r31
    1062:	29 81       	ldd	r18, Y+1	; 0x01
    1064:	3a 81       	ldd	r19, Y+2	; 0x02
    1066:	4b 81       	ldd	r20, Y+3	; 0x03
    1068:	5c 81       	ldd	r21, Y+4	; 0x04
    106a:	23 2b       	or	r18, r19
    106c:	24 2b       	or	r18, r20
    106e:	25 2b       	or	r18, r21
    1070:	49 f0       	breq	.+18     	; 0x1084 <__EEPROM_REGION_LENGTH__+0x84>
    1072:	68 94       	set
    1074:	13 f8       	bld	r1, 3
    1076:	76 94       	lsr	r7
    1078:	67 94       	ror	r6
    107a:	57 94       	ror	r5
    107c:	47 94       	ror	r4
    107e:	16 94       	lsr	r1
    1080:	d1 f7       	brne	.-12     	; 0x1076 <__EEPROM_REGION_LENGTH__+0x76>
    1082:	0a c0       	rjmp	.+20     	; 0x1098 <__EEPROM_REGION_LENGTH__+0x98>
    1084:	ed 81       	ldd	r30, Y+5	; 0x05
    1086:	fe 81       	ldd	r31, Y+6	; 0x06
    1088:	ea 0d       	add	r30, r10
    108a:	fb 1d       	adc	r31, r11
    108c:	22 a9       	ldd	r18, Z+50	; 0x32
    108e:	20 7f       	andi	r18, 0xF0	; 240
    1090:	95 2d       	mov	r25, r5
    1092:	9f 70       	andi	r25, 0x0F	; 15
    1094:	42 2e       	mov	r4, r18
    1096:	49 2a       	or	r4, r25
    1098:	ed 81       	ldd	r30, Y+5	; 0x05
    109a:	fe 81       	ldd	r31, Y+6	; 0x06
    109c:	ea 0d       	add	r30, r10
    109e:	fb 1d       	adc	r31, r11
    10a0:	42 aa       	std	Z+50, r4	; 0x32
    10a2:	65 c0       	rjmp	.+202    	; 0x116e <__EEPROM_REGION_LENGTH__+0x16e>
    10a4:	ed 81       	ldd	r30, Y+5	; 0x05
    10a6:	fe 81       	ldd	r31, Y+6	; 0x06
    10a8:	42 a1       	ldd	r20, Z+34	; 0x22
    10aa:	53 a1       	ldd	r21, Z+35	; 0x23
    10ac:	64 a1       	ldd	r22, Z+36	; 0x24
    10ae:	75 a1       	ldd	r23, Z+37	; 0x25
    10b0:	bb 27       	eor	r27, r27
    10b2:	af 2d       	mov	r26, r15
    10b4:	9e 2d       	mov	r25, r14
    10b6:	8d 2d       	mov	r24, r13
    10b8:	48 0f       	add	r20, r24
    10ba:	59 1f       	adc	r21, r25
    10bc:	6a 1f       	adc	r22, r26
    10be:	7b 1f       	adc	r23, r27
    10c0:	cf 01       	movw	r24, r30
    10c2:	20 da       	rcall	.-3008   	; 0x504 <_ZL11move_windowP5FATFSm>
    10c4:	81 11       	cpse	r24, r1
    10c6:	53 c0       	rjmp	.+166    	; 0x116e <__EEPROM_REGION_LENGTH__+0x16e>
    10c8:	cc 0c       	add	r12, r12
    10ca:	dd 1c       	adc	r13, r13
    10cc:	ee 1c       	adc	r14, r14
    10ce:	ff 1c       	adc	r15, r15
    10d0:	e8 94       	clt
    10d2:	c0 f8       	bld	r12, 0
    10d4:	f1 e0       	ldi	r31, 0x01	; 1
    10d6:	df 22       	and	r13, r31
    10d8:	ee 24       	eor	r14, r14
    10da:	ff 24       	eor	r15, r15
    10dc:	22 e3       	ldi	r18, 0x32	; 50
    10de:	c2 0e       	add	r12, r18
    10e0:	d1 1c       	adc	r13, r1
    10e2:	ed 81       	ldd	r30, Y+5	; 0x05
    10e4:	fe 81       	ldd	r31, Y+6	; 0x06
    10e6:	ec 0d       	add	r30, r12
    10e8:	fd 1d       	adc	r31, r13
    10ea:	51 82       	std	Z+1, r5	; 0x01
    10ec:	40 82       	st	Z, r4
    10ee:	3f c0       	rjmp	.+126    	; 0x116e <__EEPROM_REGION_LENGTH__+0x16e>
    10f0:	ed 81       	ldd	r30, Y+5	; 0x05
    10f2:	fe 81       	ldd	r31, Y+6	; 0x06
    10f4:	42 a1       	ldd	r20, Z+34	; 0x22
    10f6:	53 a1       	ldd	r21, Z+35	; 0x23
    10f8:	64 a1       	ldd	r22, Z+36	; 0x24
    10fa:	75 a1       	ldd	r23, Z+37	; 0x25
    10fc:	d7 01       	movw	r26, r14
    10fe:	c6 01       	movw	r24, r12
    1100:	68 94       	set
    1102:	16 f8       	bld	r1, 6
    1104:	b6 95       	lsr	r27
    1106:	a7 95       	ror	r26
    1108:	97 95       	ror	r25
    110a:	87 95       	ror	r24
    110c:	16 94       	lsr	r1
    110e:	d1 f7       	brne	.-12     	; 0x1104 <__EEPROM_REGION_LENGTH__+0x104>
    1110:	48 0f       	add	r20, r24
    1112:	59 1f       	adc	r21, r25
    1114:	6a 1f       	adc	r22, r26
    1116:	7b 1f       	adc	r23, r27
    1118:	cf 01       	movw	r24, r30
    111a:	f4 d9       	rcall	.-3096   	; 0x504 <_ZL11move_windowP5FATFSm>
    111c:	81 11       	cpse	r24, r1
    111e:	27 c0       	rjmp	.+78     	; 0x116e <__EEPROM_REGION_LENGTH__+0x16e>
    1120:	cc 0c       	add	r12, r12
    1122:	dd 1c       	adc	r13, r13
    1124:	ee 1c       	adc	r14, r14
    1126:	ff 1c       	adc	r15, r15
    1128:	cc 0c       	add	r12, r12
    112a:	dd 1c       	adc	r13, r13
    112c:	ee 1c       	adc	r14, r14
    112e:	ff 1c       	adc	r15, r15
    1130:	fc ef       	ldi	r31, 0xFC	; 252
    1132:	cf 22       	and	r12, r31
    1134:	f1 e0       	ldi	r31, 0x01	; 1
    1136:	df 22       	and	r13, r31
    1138:	ee 24       	eor	r14, r14
    113a:	ff 24       	eor	r15, r15
    113c:	22 e3       	ldi	r18, 0x32	; 50
    113e:	c2 0e       	add	r12, r18
    1140:	d1 1c       	adc	r13, r1
    1142:	ed 81       	ldd	r30, Y+5	; 0x05
    1144:	fe 81       	ldd	r31, Y+6	; 0x06
    1146:	ec 0d       	add	r30, r12
    1148:	fd 1d       	adc	r31, r13
    114a:	00 81       	ld	r16, Z
    114c:	11 81       	ldd	r17, Z+1	; 0x01
    114e:	22 81       	ldd	r18, Z+2	; 0x02
    1150:	33 81       	ldd	r19, Z+3	; 0x03
    1152:	00 27       	eor	r16, r16
    1154:	11 27       	eor	r17, r17
    1156:	22 27       	eor	r18, r18
    1158:	30 7f       	andi	r19, 0xF0	; 240
    115a:	40 2a       	or	r4, r16
    115c:	51 2a       	or	r5, r17
    115e:	62 2a       	or	r6, r18
    1160:	73 2a       	or	r7, r19
    1162:	40 82       	st	Z, r4
    1164:	51 82       	std	Z+1, r5	; 0x01
    1166:	62 82       	std	Z+2, r6	; 0x02
    1168:	73 82       	std	Z+3, r7	; 0x03
    116a:	01 c0       	rjmp	.+2      	; 0x116e <__EEPROM_REGION_LENGTH__+0x16e>
    116c:	82 e0       	ldi	r24, 0x02	; 2
    116e:	91 e0       	ldi	r25, 0x01	; 1
    1170:	ed 81       	ldd	r30, Y+5	; 0x05
    1172:	fe 81       	ldd	r31, Y+6	; 0x06
    1174:	94 83       	std	Z+4, r25	; 0x04
    1176:	03 c0       	rjmp	.+6      	; 0x117e <__EEPROM_REGION_LENGTH__+0x17e>
    1178:	82 e0       	ldi	r24, 0x02	; 2
    117a:	01 c0       	rjmp	.+2      	; 0x117e <__EEPROM_REGION_LENGTH__+0x17e>
    117c:	82 e0       	ldi	r24, 0x02	; 2
    117e:	26 96       	adiw	r28, 0x06	; 6
    1180:	0f b6       	in	r0, 0x3f	; 63
    1182:	f8 94       	cli
    1184:	de bf       	out	0x3e, r29	; 62
    1186:	0f be       	out	0x3f, r0	; 63
    1188:	cd bf       	out	0x3d, r28	; 61
    118a:	df 91       	pop	r29
    118c:	cf 91       	pop	r28
    118e:	1f 91       	pop	r17
    1190:	0f 91       	pop	r16
    1192:	ff 90       	pop	r15
    1194:	ef 90       	pop	r14
    1196:	df 90       	pop	r13
    1198:	cf 90       	pop	r12
    119a:	bf 90       	pop	r11
    119c:	af 90       	pop	r10
    119e:	7f 90       	pop	r7
    11a0:	6f 90       	pop	r6
    11a2:	5f 90       	pop	r5
    11a4:	4f 90       	pop	r4
    11a6:	08 95       	ret

000011a8 <_ZL12create_chainP5FATFSm>:
    11a8:	4f 92       	push	r4
    11aa:	5f 92       	push	r5
    11ac:	6f 92       	push	r6
    11ae:	7f 92       	push	r7
    11b0:	8f 92       	push	r8
    11b2:	9f 92       	push	r9
    11b4:	af 92       	push	r10
    11b6:	bf 92       	push	r11
    11b8:	cf 92       	push	r12
    11ba:	df 92       	push	r13
    11bc:	ef 92       	push	r14
    11be:	ff 92       	push	r15
    11c0:	0f 93       	push	r16
    11c2:	1f 93       	push	r17
    11c4:	cf 93       	push	r28
    11c6:	df 93       	push	r29
    11c8:	ec 01       	movw	r28, r24
    11ca:	2a 01       	movw	r4, r20
    11cc:	3b 01       	movw	r6, r22
    11ce:	41 15       	cp	r20, r1
    11d0:	51 05       	cpc	r21, r1
    11d2:	61 05       	cpc	r22, r1
    11d4:	71 05       	cpc	r23, r1
    11d6:	99 f4       	brne	.+38     	; 0x11fe <_ZL12create_chainP5FATFSm+0x56>
    11d8:	8a 84       	ldd	r8, Y+10	; 0x0a
    11da:	9b 84       	ldd	r9, Y+11	; 0x0b
    11dc:	ac 84       	ldd	r10, Y+12	; 0x0c
    11de:	bd 84       	ldd	r11, Y+13	; 0x0d
    11e0:	81 14       	cp	r8, r1
    11e2:	91 04       	cpc	r9, r1
    11e4:	a1 04       	cpc	r10, r1
    11e6:	b1 04       	cpc	r11, r1
    11e8:	f1 f0       	breq	.+60     	; 0x1226 <_ZL12create_chainP5FATFSm+0x7e>
    11ea:	8e 89       	ldd	r24, Y+22	; 0x16
    11ec:	9f 89       	ldd	r25, Y+23	; 0x17
    11ee:	a8 8d       	ldd	r26, Y+24	; 0x18
    11f0:	b9 8d       	ldd	r27, Y+25	; 0x19
    11f2:	88 16       	cp	r8, r24
    11f4:	99 06       	cpc	r9, r25
    11f6:	aa 06       	cpc	r10, r26
    11f8:	bb 06       	cpc	r11, r27
    11fa:	d0 f4       	brcc	.+52     	; 0x1230 <_ZL12create_chainP5FATFSm+0x88>
    11fc:	1d c0       	rjmp	.+58     	; 0x1238 <_ZL12create_chainP5FATFSm+0x90>
    11fe:	0e dd       	rcall	.-1508   	; 0xc1c <_Z7get_fatP5FATFSm>
    1200:	62 30       	cpi	r22, 0x02	; 2
    1202:	71 05       	cpc	r23, r1
    1204:	81 05       	cpc	r24, r1
    1206:	91 05       	cpc	r25, r1
    1208:	08 f4       	brcc	.+2      	; 0x120c <_ZL12create_chainP5FATFSm+0x64>
    120a:	88 c0       	rjmp	.+272    	; 0x131c <_ZL12create_chainP5FATFSm+0x174>
    120c:	ce 88       	ldd	r12, Y+22	; 0x16
    120e:	df 88       	ldd	r13, Y+23	; 0x17
    1210:	e8 8c       	ldd	r14, Y+24	; 0x18
    1212:	f9 8c       	ldd	r15, Y+25	; 0x19
    1214:	6c 15       	cp	r22, r12
    1216:	7d 05       	cpc	r23, r13
    1218:	8e 05       	cpc	r24, r14
    121a:	9f 05       	cpc	r25, r15
    121c:	08 f4       	brcc	.+2      	; 0x1220 <_ZL12create_chainP5FATFSm+0x78>
    121e:	83 c0       	rjmp	.+262    	; 0x1326 <_ZL12create_chainP5FATFSm+0x17e>
    1220:	53 01       	movw	r10, r6
    1222:	42 01       	movw	r8, r4
    1224:	09 c0       	rjmp	.+18     	; 0x1238 <_ZL12create_chainP5FATFSm+0x90>
    1226:	81 2c       	mov	r8, r1
    1228:	91 2c       	mov	r9, r1
    122a:	54 01       	movw	r10, r8
    122c:	83 94       	inc	r8
    122e:	04 c0       	rjmp	.+8      	; 0x1238 <_ZL12create_chainP5FATFSm+0x90>
    1230:	81 2c       	mov	r8, r1
    1232:	91 2c       	mov	r9, r1
    1234:	54 01       	movw	r10, r8
    1236:	83 94       	inc	r8
    1238:	75 01       	movw	r14, r10
    123a:	64 01       	movw	r12, r8
    123c:	2f ef       	ldi	r18, 0xFF	; 255
    123e:	c2 1a       	sub	r12, r18
    1240:	d2 0a       	sbc	r13, r18
    1242:	e2 0a       	sbc	r14, r18
    1244:	f2 0a       	sbc	r15, r18
    1246:	8e 89       	ldd	r24, Y+22	; 0x16
    1248:	9f 89       	ldd	r25, Y+23	; 0x17
    124a:	a8 8d       	ldd	r26, Y+24	; 0x18
    124c:	b9 8d       	ldd	r27, Y+25	; 0x19
    124e:	c8 16       	cp	r12, r24
    1250:	d9 06       	cpc	r13, r25
    1252:	ea 06       	cpc	r14, r26
    1254:	fb 06       	cpc	r15, r27
    1256:	60 f0       	brcs	.+24     	; 0x1270 <_ZL12create_chainP5FATFSm+0xc8>
    1258:	82 e0       	ldi	r24, 0x02	; 2
    125a:	88 16       	cp	r8, r24
    125c:	91 04       	cpc	r9, r1
    125e:	a1 04       	cpc	r10, r1
    1260:	b1 04       	cpc	r11, r1
    1262:	08 f4       	brcc	.+2      	; 0x1266 <_ZL12create_chainP5FATFSm+0xbe>
    1264:	64 c0       	rjmp	.+200    	; 0x132e <_ZL12create_chainP5FATFSm+0x186>
    1266:	c1 2c       	mov	r12, r1
    1268:	d1 2c       	mov	r13, r1
    126a:	76 01       	movw	r14, r12
    126c:	68 94       	set
    126e:	c1 f8       	bld	r12, 1
    1270:	b7 01       	movw	r22, r14
    1272:	a6 01       	movw	r20, r12
    1274:	ce 01       	movw	r24, r28
    1276:	d2 dc       	rcall	.-1628   	; 0xc1c <_Z7get_fatP5FATFSm>
    1278:	61 15       	cp	r22, r1
    127a:	71 05       	cpc	r23, r1
    127c:	81 05       	cpc	r24, r1
    127e:	91 05       	cpc	r25, r1
    1280:	99 f0       	breq	.+38     	; 0x12a8 <_ZL12create_chainP5FATFSm+0x100>
    1282:	6f 3f       	cpi	r22, 0xFF	; 255
    1284:	2f ef       	ldi	r18, 0xFF	; 255
    1286:	72 07       	cpc	r23, r18
    1288:	82 07       	cpc	r24, r18
    128a:	92 07       	cpc	r25, r18
    128c:	09 f4       	brne	.+2      	; 0x1290 <_ZL12create_chainP5FATFSm+0xe8>
    128e:	54 c0       	rjmp	.+168    	; 0x1338 <_ZL12create_chainP5FATFSm+0x190>
    1290:	61 30       	cpi	r22, 0x01	; 1
    1292:	71 05       	cpc	r23, r1
    1294:	81 05       	cpc	r24, r1
    1296:	91 05       	cpc	r25, r1
    1298:	09 f4       	brne	.+2      	; 0x129c <_ZL12create_chainP5FATFSm+0xf4>
    129a:	52 c0       	rjmp	.+164    	; 0x1340 <_ZL12create_chainP5FATFSm+0x198>
    129c:	c8 14       	cp	r12, r8
    129e:	d9 04       	cpc	r13, r9
    12a0:	ea 04       	cpc	r14, r10
    12a2:	fb 04       	cpc	r15, r11
    12a4:	59 f6       	brne	.-106    	; 0x123c <_ZL12create_chainP5FATFSm+0x94>
    12a6:	50 c0       	rjmp	.+160    	; 0x1348 <_ZL12create_chainP5FATFSm+0x1a0>
    12a8:	0f ef       	ldi	r16, 0xFF	; 255
    12aa:	1f ef       	ldi	r17, 0xFF	; 255
    12ac:	2f ef       	ldi	r18, 0xFF	; 255
    12ae:	3f e0       	ldi	r19, 0x0F	; 15
    12b0:	b7 01       	movw	r22, r14
    12b2:	a6 01       	movw	r20, r12
    12b4:	ce 01       	movw	r24, r28
    12b6:	53 de       	rcall	.-858    	; 0xf5e <_Z7put_fatP5FATFSmm>
    12b8:	81 11       	cpse	r24, r1
    12ba:	0b c0       	rjmp	.+22     	; 0x12d2 <_ZL12create_chainP5FATFSm+0x12a>
    12bc:	41 14       	cp	r4, r1
    12be:	51 04       	cpc	r5, r1
    12c0:	61 04       	cpc	r6, r1
    12c2:	71 04       	cpc	r7, r1
    12c4:	31 f0       	breq	.+12     	; 0x12d2 <_ZL12create_chainP5FATFSm+0x12a>
    12c6:	97 01       	movw	r18, r14
    12c8:	86 01       	movw	r16, r12
    12ca:	b3 01       	movw	r22, r6
    12cc:	a2 01       	movw	r20, r4
    12ce:	ce 01       	movw	r24, r28
    12d0:	46 de       	rcall	.-884    	; 0xf5e <_Z7put_fatP5FATFSmm>
    12d2:	81 11       	cpse	r24, r1
    12d4:	1c c0       	rjmp	.+56     	; 0x130e <_ZL12create_chainP5FATFSm+0x166>
    12d6:	ca 86       	std	Y+10, r12	; 0x0a
    12d8:	db 86       	std	Y+11, r13	; 0x0b
    12da:	ec 86       	std	Y+12, r14	; 0x0c
    12dc:	fd 86       	std	Y+13, r15	; 0x0d
    12de:	8e 85       	ldd	r24, Y+14	; 0x0e
    12e0:	9f 85       	ldd	r25, Y+15	; 0x0f
    12e2:	a8 89       	ldd	r26, Y+16	; 0x10
    12e4:	b9 89       	ldd	r27, Y+17	; 0x11
    12e6:	8f 3f       	cpi	r24, 0xFF	; 255
    12e8:	2f ef       	ldi	r18, 0xFF	; 255
    12ea:	92 07       	cpc	r25, r18
    12ec:	a2 07       	cpc	r26, r18
    12ee:	b2 07       	cpc	r27, r18
    12f0:	81 f1       	breq	.+96     	; 0x1352 <_ZL12create_chainP5FATFSm+0x1aa>
    12f2:	01 97       	sbiw	r24, 0x01	; 1
    12f4:	a1 09       	sbc	r26, r1
    12f6:	b1 09       	sbc	r27, r1
    12f8:	8e 87       	std	Y+14, r24	; 0x0e
    12fa:	9f 87       	std	Y+15, r25	; 0x0f
    12fc:	a8 8b       	std	Y+16, r26	; 0x10
    12fe:	b9 8b       	std	Y+17, r27	; 0x11
    1300:	81 e0       	ldi	r24, 0x01	; 1
    1302:	8d 83       	std	Y+5, r24	; 0x05
    1304:	4c 2d       	mov	r20, r12
    1306:	3d 2d       	mov	r19, r13
    1308:	2e 2d       	mov	r18, r14
    130a:	9f 2d       	mov	r25, r15
    130c:	2b c0       	rjmp	.+86     	; 0x1364 <_ZL12create_chainP5FATFSm+0x1bc>
    130e:	81 30       	cpi	r24, 0x01	; 1
    1310:	29 f5       	brne	.+74     	; 0x135c <_ZL12create_chainP5FATFSm+0x1b4>
    1312:	4f ef       	ldi	r20, 0xFF	; 255
    1314:	3f ef       	ldi	r19, 0xFF	; 255
    1316:	2f ef       	ldi	r18, 0xFF	; 255
    1318:	9f ef       	ldi	r25, 0xFF	; 255
    131a:	24 c0       	rjmp	.+72     	; 0x1364 <_ZL12create_chainP5FATFSm+0x1bc>
    131c:	41 e0       	ldi	r20, 0x01	; 1
    131e:	30 e0       	ldi	r19, 0x00	; 0
    1320:	20 e0       	ldi	r18, 0x00	; 0
    1322:	90 e0       	ldi	r25, 0x00	; 0
    1324:	1f c0       	rjmp	.+62     	; 0x1364 <_ZL12create_chainP5FATFSm+0x1bc>
    1326:	46 2f       	mov	r20, r22
    1328:	37 2f       	mov	r19, r23
    132a:	28 2f       	mov	r18, r24
    132c:	1b c0       	rjmp	.+54     	; 0x1364 <_ZL12create_chainP5FATFSm+0x1bc>
    132e:	40 e0       	ldi	r20, 0x00	; 0
    1330:	30 e0       	ldi	r19, 0x00	; 0
    1332:	20 e0       	ldi	r18, 0x00	; 0
    1334:	90 e0       	ldi	r25, 0x00	; 0
    1336:	16 c0       	rjmp	.+44     	; 0x1364 <_ZL12create_chainP5FATFSm+0x1bc>
    1338:	46 2f       	mov	r20, r22
    133a:	37 2f       	mov	r19, r23
    133c:	28 2f       	mov	r18, r24
    133e:	12 c0       	rjmp	.+36     	; 0x1364 <_ZL12create_chainP5FATFSm+0x1bc>
    1340:	46 2f       	mov	r20, r22
    1342:	37 2f       	mov	r19, r23
    1344:	28 2f       	mov	r18, r24
    1346:	0e c0       	rjmp	.+28     	; 0x1364 <_ZL12create_chainP5FATFSm+0x1bc>
    1348:	40 e0       	ldi	r20, 0x00	; 0
    134a:	30 e0       	ldi	r19, 0x00	; 0
    134c:	20 e0       	ldi	r18, 0x00	; 0
    134e:	90 e0       	ldi	r25, 0x00	; 0
    1350:	09 c0       	rjmp	.+18     	; 0x1364 <_ZL12create_chainP5FATFSm+0x1bc>
    1352:	4c 2d       	mov	r20, r12
    1354:	3d 2d       	mov	r19, r13
    1356:	2e 2d       	mov	r18, r14
    1358:	9f 2d       	mov	r25, r15
    135a:	04 c0       	rjmp	.+8      	; 0x1364 <_ZL12create_chainP5FATFSm+0x1bc>
    135c:	41 e0       	ldi	r20, 0x01	; 1
    135e:	30 e0       	ldi	r19, 0x00	; 0
    1360:	20 e0       	ldi	r18, 0x00	; 0
    1362:	90 e0       	ldi	r25, 0x00	; 0
    1364:	64 2f       	mov	r22, r20
    1366:	73 2f       	mov	r23, r19
    1368:	82 2f       	mov	r24, r18
    136a:	df 91       	pop	r29
    136c:	cf 91       	pop	r28
    136e:	1f 91       	pop	r17
    1370:	0f 91       	pop	r16
    1372:	ff 90       	pop	r15
    1374:	ef 90       	pop	r14
    1376:	df 90       	pop	r13
    1378:	cf 90       	pop	r12
    137a:	bf 90       	pop	r11
    137c:	af 90       	pop	r10
    137e:	9f 90       	pop	r9
    1380:	8f 90       	pop	r8
    1382:	7f 90       	pop	r7
    1384:	6f 90       	pop	r6
    1386:	5f 90       	pop	r5
    1388:	4f 90       	pop	r4
    138a:	08 95       	ret

0000138c <_ZL8dir_nextP3DIRi>:
    138c:	8f 92       	push	r8
    138e:	9f 92       	push	r9
    1390:	af 92       	push	r10
    1392:	bf 92       	push	r11
    1394:	cf 92       	push	r12
    1396:	df 92       	push	r13
    1398:	ef 92       	push	r14
    139a:	ff 92       	push	r15
    139c:	0f 93       	push	r16
    139e:	1f 93       	push	r17
    13a0:	cf 93       	push	r28
    13a2:	df 93       	push	r29
    13a4:	dc 01       	movw	r26, r24
    13a6:	14 96       	adiw	r26, 0x04	; 4
    13a8:	cd 91       	ld	r28, X+
    13aa:	dc 91       	ld	r29, X
    13ac:	15 97       	sbiw	r26, 0x05	; 5
    13ae:	21 96       	adiw	r28, 0x01	; 1
    13b0:	09 f4       	brne	.+2      	; 0x13b4 <_ZL8dir_nextP3DIRi+0x28>
    13b2:	f6 c0       	rjmp	.+492    	; 0x15a0 <_ZL8dir_nextP3DIRi+0x214>
    13b4:	1e 96       	adiw	r26, 0x0e	; 14
    13b6:	8d 90       	ld	r8, X+
    13b8:	9d 90       	ld	r9, X+
    13ba:	ad 90       	ld	r10, X+
    13bc:	bc 90       	ld	r11, X
    13be:	51 97       	sbiw	r26, 0x11	; 17
    13c0:	81 14       	cp	r8, r1
    13c2:	91 04       	cpc	r9, r1
    13c4:	a1 04       	cpc	r10, r1
    13c6:	b1 04       	cpc	r11, r1
    13c8:	09 f4       	brne	.+2      	; 0x13cc <_ZL8dir_nextP3DIRi+0x40>
    13ca:	ec c0       	rjmp	.+472    	; 0x15a4 <_ZL8dir_nextP3DIRi+0x218>
    13cc:	7b 01       	movw	r14, r22
    13ce:	8c 01       	movw	r16, r24
    13d0:	6e 01       	movw	r12, r28
    13d2:	bf e0       	ldi	r27, 0x0F	; 15
    13d4:	cb 22       	and	r12, r27
    13d6:	dd 24       	eor	r13, r13
    13d8:	c1 14       	cp	r12, r1
    13da:	d1 04       	cpc	r13, r1
    13dc:	09 f0       	breq	.+2      	; 0x13e0 <_ZL8dir_nextP3DIRi+0x54>
    13de:	ca c0       	rjmp	.+404    	; 0x1574 <_ZL8dir_nextP3DIRi+0x1e8>
    13e0:	ef ef       	ldi	r30, 0xFF	; 255
    13e2:	8e 1a       	sub	r8, r30
    13e4:	9e 0a       	sbc	r9, r30
    13e6:	ae 0a       	sbc	r10, r30
    13e8:	be 0a       	sbc	r11, r30
    13ea:	dc 01       	movw	r26, r24
    13ec:	1e 96       	adiw	r26, 0x0e	; 14
    13ee:	8d 92       	st	X+, r8
    13f0:	9d 92       	st	X+, r9
    13f2:	ad 92       	st	X+, r10
    13f4:	bc 92       	st	X, r11
    13f6:	51 97       	sbiw	r26, 0x11	; 17
    13f8:	1a 96       	adiw	r26, 0x0a	; 10
    13fa:	4d 91       	ld	r20, X+
    13fc:	5d 91       	ld	r21, X+
    13fe:	6d 91       	ld	r22, X+
    1400:	7c 91       	ld	r23, X
    1402:	1d 97       	sbiw	r26, 0x0d	; 13
    1404:	41 15       	cp	r20, r1
    1406:	51 05       	cpc	r21, r1
    1408:	61 05       	cpc	r22, r1
    140a:	71 05       	cpc	r23, r1
    140c:	49 f4       	brne	.+18     	; 0x1420 <_ZL8dir_nextP3DIRi+0x94>
    140e:	ed 91       	ld	r30, X+
    1410:	fc 91       	ld	r31, X
    1412:	80 85       	ldd	r24, Z+8	; 0x08
    1414:	91 85       	ldd	r25, Z+9	; 0x09
    1416:	c8 17       	cp	r28, r24
    1418:	d9 07       	cpc	r29, r25
    141a:	08 f0       	brcs	.+2      	; 0x141e <_ZL8dir_nextP3DIRi+0x92>
    141c:	c5 c0       	rjmp	.+394    	; 0x15a8 <_ZL8dir_nextP3DIRi+0x21c>
    141e:	aa c0       	rjmp	.+340    	; 0x1574 <_ZL8dir_nextP3DIRi+0x1e8>
    1420:	dc 01       	movw	r26, r24
    1422:	ed 91       	ld	r30, X+
    1424:	fc 91       	ld	r31, X
    1426:	22 81       	ldd	r18, Z+2	; 0x02
    1428:	30 e0       	ldi	r19, 0x00	; 0
    142a:	21 50       	subi	r18, 0x01	; 1
    142c:	31 09       	sbc	r19, r1
    142e:	ce 01       	movw	r24, r28
    1430:	92 95       	swap	r25
    1432:	82 95       	swap	r24
    1434:	8f 70       	andi	r24, 0x0F	; 15
    1436:	89 27       	eor	r24, r25
    1438:	9f 70       	andi	r25, 0x0F	; 15
    143a:	89 27       	eor	r24, r25
    143c:	28 23       	and	r18, r24
    143e:	39 23       	and	r19, r25
    1440:	23 2b       	or	r18, r19
    1442:	09 f0       	breq	.+2      	; 0x1446 <_ZL8dir_nextP3DIRi+0xba>
    1444:	97 c0       	rjmp	.+302    	; 0x1574 <_ZL8dir_nextP3DIRi+0x1e8>
    1446:	cf 01       	movw	r24, r30
    1448:	e9 db       	rcall	.-2094   	; 0xc1c <_Z7get_fatP5FATFSm>
    144a:	4b 01       	movw	r8, r22
    144c:	5c 01       	movw	r10, r24
    144e:	62 30       	cpi	r22, 0x02	; 2
    1450:	71 05       	cpc	r23, r1
    1452:	81 05       	cpc	r24, r1
    1454:	91 05       	cpc	r25, r1
    1456:	08 f4       	brcc	.+2      	; 0x145a <_ZL8dir_nextP3DIRi+0xce>
    1458:	a9 c0       	rjmp	.+338    	; 0x15ac <_ZL8dir_nextP3DIRi+0x220>
    145a:	6f 3f       	cpi	r22, 0xFF	; 255
    145c:	7f 4f       	sbci	r23, 0xFF	; 255
    145e:	8f 4f       	sbci	r24, 0xFF	; 255
    1460:	9f 4f       	sbci	r25, 0xFF	; 255
    1462:	09 f4       	brne	.+2      	; 0x1466 <_ZL8dir_nextP3DIRi+0xda>
    1464:	a5 c0       	rjmp	.+330    	; 0x15b0 <_ZL8dir_nextP3DIRi+0x224>
    1466:	d8 01       	movw	r26, r16
    1468:	ed 91       	ld	r30, X+
    146a:	fc 91       	ld	r31, X
    146c:	86 89       	ldd	r24, Z+22	; 0x16
    146e:	97 89       	ldd	r25, Z+23	; 0x17
    1470:	a0 8d       	ldd	r26, Z+24	; 0x18
    1472:	b1 8d       	ldd	r27, Z+25	; 0x19
    1474:	88 16       	cp	r8, r24
    1476:	99 06       	cpc	r9, r25
    1478:	aa 06       	cpc	r10, r26
    147a:	bb 06       	cpc	r11, r27
    147c:	08 f4       	brcc	.+2      	; 0x1480 <_ZL8dir_nextP3DIRi+0xf4>
    147e:	69 c0       	rjmp	.+210    	; 0x1552 <_ZL8dir_nextP3DIRi+0x1c6>
    1480:	ef 28       	or	r14, r15
    1482:	09 f4       	brne	.+2      	; 0x1486 <_ZL8dir_nextP3DIRi+0xfa>
    1484:	97 c0       	rjmp	.+302    	; 0x15b4 <_ZL8dir_nextP3DIRi+0x228>
    1486:	d8 01       	movw	r26, r16
    1488:	1a 96       	adiw	r26, 0x0a	; 10
    148a:	4d 91       	ld	r20, X+
    148c:	5d 91       	ld	r21, X+
    148e:	6d 91       	ld	r22, X+
    1490:	7c 91       	ld	r23, X
    1492:	1d 97       	sbiw	r26, 0x0d	; 13
    1494:	cf 01       	movw	r24, r30
    1496:	88 de       	rcall	.-752    	; 0x11a8 <_ZL12create_chainP5FATFSm>
    1498:	4b 01       	movw	r8, r22
    149a:	5c 01       	movw	r10, r24
    149c:	61 15       	cp	r22, r1
    149e:	71 05       	cpc	r23, r1
    14a0:	81 05       	cpc	r24, r1
    14a2:	91 05       	cpc	r25, r1
    14a4:	09 f4       	brne	.+2      	; 0x14a8 <_ZL8dir_nextP3DIRi+0x11c>
    14a6:	88 c0       	rjmp	.+272    	; 0x15b8 <_ZL8dir_nextP3DIRi+0x22c>
    14a8:	61 30       	cpi	r22, 0x01	; 1
    14aa:	71 05       	cpc	r23, r1
    14ac:	81 05       	cpc	r24, r1
    14ae:	91 05       	cpc	r25, r1
    14b0:	09 f4       	brne	.+2      	; 0x14b4 <_ZL8dir_nextP3DIRi+0x128>
    14b2:	84 c0       	rjmp	.+264    	; 0x15bc <_ZL8dir_nextP3DIRi+0x230>
    14b4:	6f 3f       	cpi	r22, 0xFF	; 255
    14b6:	7f 4f       	sbci	r23, 0xFF	; 255
    14b8:	8f 4f       	sbci	r24, 0xFF	; 255
    14ba:	9f 4f       	sbci	r25, 0xFF	; 255
    14bc:	09 f4       	brne	.+2      	; 0x14c0 <_ZL8dir_nextP3DIRi+0x134>
    14be:	80 c0       	rjmp	.+256    	; 0x15c0 <_ZL8dir_nextP3DIRi+0x234>
    14c0:	d8 01       	movw	r26, r16
    14c2:	8d 91       	ld	r24, X+
    14c4:	9c 91       	ld	r25, X
    14c6:	0e 94 1b 02 	call	0x436	; 0x436 <_ZL11sync_windowP5FATFS>
    14ca:	81 11       	cpse	r24, r1
    14cc:	7b c0       	rjmp	.+246    	; 0x15c4 <_ZL8dir_nextP3DIRi+0x238>
    14ce:	f8 01       	movw	r30, r16
    14d0:	80 81       	ld	r24, Z
    14d2:	91 81       	ldd	r25, Z+1	; 0x01
    14d4:	40 e0       	ldi	r20, 0x00	; 0
    14d6:	52 e0       	ldi	r21, 0x02	; 2
    14d8:	60 e0       	ldi	r22, 0x00	; 0
    14da:	70 e0       	ldi	r23, 0x00	; 0
    14dc:	c2 96       	adiw	r24, 0x32	; 50
    14de:	0e 94 c7 00 	call	0x18e	; 0x18e <_ZL7mem_setPvij>
    14e2:	d8 01       	movw	r26, r16
    14e4:	ed 90       	ld	r14, X+
    14e6:	fc 90       	ld	r15, X
    14e8:	b5 01       	movw	r22, r10
    14ea:	a4 01       	movw	r20, r8
    14ec:	c7 01       	movw	r24, r14
    14ee:	6e db       	rcall	.-2340   	; 0xbcc <_Z10clust2sectP5FATFSm>
    14f0:	f7 01       	movw	r30, r14
    14f2:	66 a7       	std	Z+46, r22	; 0x2e
    14f4:	77 a7       	std	Z+47, r23	; 0x2f
    14f6:	80 ab       	std	Z+48, r24	; 0x30
    14f8:	91 ab       	std	Z+49, r25	; 0x31
    14fa:	f1 2c       	mov	r15, r1
    14fc:	d8 01       	movw	r26, r16
    14fe:	ed 91       	ld	r30, X+
    1500:	fc 91       	ld	r31, X
    1502:	11 97       	sbiw	r26, 0x01	; 1
    1504:	82 81       	ldd	r24, Z+2	; 0x02
    1506:	f8 16       	cp	r15, r24
    1508:	c0 f4       	brcc	.+48     	; 0x153a <_ZL8dir_nextP3DIRi+0x1ae>
    150a:	81 e0       	ldi	r24, 0x01	; 1
    150c:	84 83       	std	Z+4, r24	; 0x04
    150e:	8d 91       	ld	r24, X+
    1510:	9c 91       	ld	r25, X
    1512:	0e 94 1b 02 	call	0x436	; 0x436 <_ZL11sync_windowP5FATFS>
    1516:	81 11       	cpse	r24, r1
    1518:	57 c0       	rjmp	.+174    	; 0x15c8 <_ZL8dir_nextP3DIRi+0x23c>
    151a:	d8 01       	movw	r26, r16
    151c:	ed 91       	ld	r30, X+
    151e:	fc 91       	ld	r31, X
    1520:	86 a5       	ldd	r24, Z+46	; 0x2e
    1522:	97 a5       	ldd	r25, Z+47	; 0x2f
    1524:	a0 a9       	ldd	r26, Z+48	; 0x30
    1526:	b1 a9       	ldd	r27, Z+49	; 0x31
    1528:	01 96       	adiw	r24, 0x01	; 1
    152a:	a1 1d       	adc	r26, r1
    152c:	b1 1d       	adc	r27, r1
    152e:	86 a7       	std	Z+46, r24	; 0x2e
    1530:	97 a7       	std	Z+47, r25	; 0x2f
    1532:	a0 ab       	std	Z+48, r26	; 0x30
    1534:	b1 ab       	std	Z+49, r27	; 0x31
    1536:	f3 94       	inc	r15
    1538:	e1 cf       	rjmp	.-62     	; 0x14fc <_ZL8dir_nextP3DIRi+0x170>
    153a:	86 a5       	ldd	r24, Z+46	; 0x2e
    153c:	97 a5       	ldd	r25, Z+47	; 0x2f
    153e:	a0 a9       	ldd	r26, Z+48	; 0x30
    1540:	b1 a9       	ldd	r27, Z+49	; 0x31
    1542:	8f 19       	sub	r24, r15
    1544:	91 09       	sbc	r25, r1
    1546:	a1 09       	sbc	r26, r1
    1548:	b1 09       	sbc	r27, r1
    154a:	86 a7       	std	Z+46, r24	; 0x2e
    154c:	97 a7       	std	Z+47, r25	; 0x2f
    154e:	a0 ab       	std	Z+48, r26	; 0x30
    1550:	b1 ab       	std	Z+49, r27	; 0x31
    1552:	f8 01       	movw	r30, r16
    1554:	82 86       	std	Z+10, r8	; 0x0a
    1556:	93 86       	std	Z+11, r9	; 0x0b
    1558:	a4 86       	std	Z+12, r10	; 0x0c
    155a:	b5 86       	std	Z+13, r11	; 0x0d
    155c:	b5 01       	movw	r22, r10
    155e:	a4 01       	movw	r20, r8
    1560:	80 81       	ld	r24, Z
    1562:	91 81       	ldd	r25, Z+1	; 0x01
    1564:	33 db       	rcall	.-2458   	; 0xbcc <_Z10clust2sectP5FATFSm>
    1566:	d8 01       	movw	r26, r16
    1568:	1e 96       	adiw	r26, 0x0e	; 14
    156a:	6d 93       	st	X+, r22
    156c:	7d 93       	st	X+, r23
    156e:	8d 93       	st	X+, r24
    1570:	9c 93       	st	X, r25
    1572:	51 97       	sbiw	r26, 0x11	; 17
    1574:	f8 01       	movw	r30, r16
    1576:	d5 83       	std	Z+5, r29	; 0x05
    1578:	c4 83       	std	Z+4, r28	; 0x04
    157a:	80 81       	ld	r24, Z
    157c:	91 81       	ldd	r25, Z+1	; 0x01
    157e:	cc 0c       	add	r12, r12
    1580:	dd 1c       	adc	r13, r13
    1582:	cc 0c       	add	r12, r12
    1584:	dd 1c       	adc	r13, r13
    1586:	cc 0c       	add	r12, r12
    1588:	dd 1c       	adc	r13, r13
    158a:	cc 0c       	add	r12, r12
    158c:	dd 1c       	adc	r13, r13
    158e:	cc 0c       	add	r12, r12
    1590:	dd 1c       	adc	r13, r13
    1592:	c2 96       	adiw	r24, 0x32	; 50
    1594:	c8 0e       	add	r12, r24
    1596:	d9 1e       	adc	r13, r25
    1598:	d3 8a       	std	Z+19, r13	; 0x13
    159a:	c2 8a       	std	Z+18, r12	; 0x12
    159c:	80 e0       	ldi	r24, 0x00	; 0
    159e:	15 c0       	rjmp	.+42     	; 0x15ca <_ZL8dir_nextP3DIRi+0x23e>
    15a0:	84 e0       	ldi	r24, 0x04	; 4
    15a2:	13 c0       	rjmp	.+38     	; 0x15ca <_ZL8dir_nextP3DIRi+0x23e>
    15a4:	84 e0       	ldi	r24, 0x04	; 4
    15a6:	11 c0       	rjmp	.+34     	; 0x15ca <_ZL8dir_nextP3DIRi+0x23e>
    15a8:	84 e0       	ldi	r24, 0x04	; 4
    15aa:	0f c0       	rjmp	.+30     	; 0x15ca <_ZL8dir_nextP3DIRi+0x23e>
    15ac:	82 e0       	ldi	r24, 0x02	; 2
    15ae:	0d c0       	rjmp	.+26     	; 0x15ca <_ZL8dir_nextP3DIRi+0x23e>
    15b0:	81 e0       	ldi	r24, 0x01	; 1
    15b2:	0b c0       	rjmp	.+22     	; 0x15ca <_ZL8dir_nextP3DIRi+0x23e>
    15b4:	84 e0       	ldi	r24, 0x04	; 4
    15b6:	09 c0       	rjmp	.+18     	; 0x15ca <_ZL8dir_nextP3DIRi+0x23e>
    15b8:	87 e0       	ldi	r24, 0x07	; 7
    15ba:	07 c0       	rjmp	.+14     	; 0x15ca <_ZL8dir_nextP3DIRi+0x23e>
    15bc:	82 e0       	ldi	r24, 0x02	; 2
    15be:	05 c0       	rjmp	.+10     	; 0x15ca <_ZL8dir_nextP3DIRi+0x23e>
    15c0:	81 e0       	ldi	r24, 0x01	; 1
    15c2:	03 c0       	rjmp	.+6      	; 0x15ca <_ZL8dir_nextP3DIRi+0x23e>
    15c4:	81 e0       	ldi	r24, 0x01	; 1
    15c6:	01 c0       	rjmp	.+2      	; 0x15ca <_ZL8dir_nextP3DIRi+0x23e>
    15c8:	81 e0       	ldi	r24, 0x01	; 1
    15ca:	df 91       	pop	r29
    15cc:	cf 91       	pop	r28
    15ce:	1f 91       	pop	r17
    15d0:	0f 91       	pop	r16
    15d2:	ff 90       	pop	r15
    15d4:	ef 90       	pop	r14
    15d6:	df 90       	pop	r13
    15d8:	cf 90       	pop	r12
    15da:	bf 90       	pop	r11
    15dc:	af 90       	pop	r10
    15de:	9f 90       	pop	r9
    15e0:	8f 90       	pop	r8
    15e2:	08 95       	ret

000015e4 <_ZL8dir_findP3DIR>:
    15e4:	1f 93       	push	r17
    15e6:	cf 93       	push	r28
    15e8:	df 93       	push	r29
    15ea:	ec 01       	movw	r28, r24
    15ec:	60 e0       	ldi	r22, 0x00	; 0
    15ee:	70 e0       	ldi	r23, 0x00	; 0
    15f0:	ff db       	rcall	.-2050   	; 0xdf0 <_ZL7dir_sdiP3DIRt>
    15f2:	81 11       	cpse	r24, r1
    15f4:	2e c0       	rjmp	.+92     	; 0x1652 <_ZL8dir_findP3DIR+0x6e>
    15f6:	4e 85       	ldd	r20, Y+14	; 0x0e
    15f8:	5f 85       	ldd	r21, Y+15	; 0x0f
    15fa:	68 89       	ldd	r22, Y+16	; 0x10
    15fc:	79 89       	ldd	r23, Y+17	; 0x11
    15fe:	88 81       	ld	r24, Y
    1600:	99 81       	ldd	r25, Y+1	; 0x01
    1602:	0e 94 82 02 	call	0x504	; 0x504 <_ZL11move_windowP5FATFSm>
    1606:	18 2f       	mov	r17, r24
    1608:	81 11       	cpse	r24, r1
    160a:	1f c0       	rjmp	.+62     	; 0x164a <_ZL8dir_findP3DIR+0x66>
    160c:	ea 89       	ldd	r30, Y+18	; 0x12
    160e:	fb 89       	ldd	r31, Y+19	; 0x13
    1610:	80 81       	ld	r24, Z
    1612:	88 23       	and	r24, r24
    1614:	d9 f0       	breq	.+54     	; 0x164c <_ZL8dir_findP3DIR+0x68>
    1616:	83 85       	ldd	r24, Z+11	; 0x0b
    1618:	83 fd       	sbrc	r24, 3
    161a:	0b c0       	rjmp	.+22     	; 0x1632 <_ZL8dir_findP3DIR+0x4e>
    161c:	6c 89       	ldd	r22, Y+20	; 0x14
    161e:	7d 89       	ldd	r23, Y+21	; 0x15
    1620:	4b e0       	ldi	r20, 0x0B	; 11
    1622:	50 e0       	ldi	r21, 0x00	; 0
    1624:	cf 01       	movw	r24, r30
    1626:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <_ZL7mem_cmpPKvS0_j>
    162a:	89 2b       	or	r24, r25
    162c:	21 f4       	brne	.+8      	; 0x1636 <_ZL8dir_findP3DIR+0x52>
    162e:	81 e0       	ldi	r24, 0x01	; 1
    1630:	03 c0       	rjmp	.+6      	; 0x1638 <_ZL8dir_findP3DIR+0x54>
    1632:	80 e0       	ldi	r24, 0x00	; 0
    1634:	01 c0       	rjmp	.+2      	; 0x1638 <_ZL8dir_findP3DIR+0x54>
    1636:	80 e0       	ldi	r24, 0x00	; 0
    1638:	81 11       	cpse	r24, r1
    163a:	0a c0       	rjmp	.+20     	; 0x1650 <_ZL8dir_findP3DIR+0x6c>
    163c:	60 e0       	ldi	r22, 0x00	; 0
    163e:	70 e0       	ldi	r23, 0x00	; 0
    1640:	ce 01       	movw	r24, r28
    1642:	a4 de       	rcall	.-696    	; 0x138c <_ZL8dir_nextP3DIRi>
    1644:	88 23       	and	r24, r24
    1646:	b9 f2       	breq	.-82     	; 0x15f6 <_ZL8dir_findP3DIR+0x12>
    1648:	04 c0       	rjmp	.+8      	; 0x1652 <_ZL8dir_findP3DIR+0x6e>
    164a:	03 c0       	rjmp	.+6      	; 0x1652 <_ZL8dir_findP3DIR+0x6e>
    164c:	84 e0       	ldi	r24, 0x04	; 4
    164e:	01 c0       	rjmp	.+2      	; 0x1652 <_ZL8dir_findP3DIR+0x6e>
    1650:	81 2f       	mov	r24, r17
    1652:	df 91       	pop	r29
    1654:	cf 91       	pop	r28
    1656:	1f 91       	pop	r17
    1658:	08 95       	ret

0000165a <_ZL11follow_pathP3DIRPKc>:
    165a:	0f 93       	push	r16
    165c:	1f 93       	push	r17
    165e:	cf 93       	push	r28
    1660:	df 93       	push	r29
    1662:	00 d0       	rcall	.+0      	; 0x1664 <_ZL11follow_pathP3DIRPKc+0xa>
    1664:	cd b7       	in	r28, 0x3d	; 61
    1666:	de b7       	in	r29, 0x3e	; 62
    1668:	8c 01       	movw	r16, r24
    166a:	7a 83       	std	Y+2, r23	; 0x02
    166c:	69 83       	std	Y+1, r22	; 0x01
    166e:	e6 2f       	mov	r30, r22
    1670:	f7 2f       	mov	r31, r23
    1672:	80 81       	ld	r24, Z
    1674:	8f 32       	cpi	r24, 0x2F	; 47
    1676:	11 f0       	breq	.+4      	; 0x167c <_ZL11follow_pathP3DIRPKc+0x22>
    1678:	8c 35       	cpi	r24, 0x5C	; 92
    167a:	19 f4       	brne	.+6      	; 0x1682 <_ZL11follow_pathP3DIRPKc+0x28>
    167c:	31 96       	adiw	r30, 0x01	; 1
    167e:	fa 83       	std	Y+2, r31	; 0x02
    1680:	e9 83       	std	Y+1, r30	; 0x01
    1682:	d8 01       	movw	r26, r16
    1684:	16 96       	adiw	r26, 0x06	; 6
    1686:	1d 92       	st	X+, r1
    1688:	1d 92       	st	X+, r1
    168a:	1d 92       	st	X+, r1
    168c:	1c 92       	st	X, r1
    168e:	19 97       	sbiw	r26, 0x09	; 9
    1690:	e9 81       	ldd	r30, Y+1	; 0x01
    1692:	fa 81       	ldd	r31, Y+2	; 0x02
    1694:	80 81       	ld	r24, Z
    1696:	80 32       	cpi	r24, 0x20	; 32
    1698:	40 f4       	brcc	.+16     	; 0x16aa <_ZL11follow_pathP3DIRPKc+0x50>
    169a:	60 e0       	ldi	r22, 0x00	; 0
    169c:	70 e0       	ldi	r23, 0x00	; 0
    169e:	c8 01       	movw	r24, r16
    16a0:	a7 db       	rcall	.-2226   	; 0xdf0 <_ZL7dir_sdiP3DIRt>
    16a2:	f8 01       	movw	r30, r16
    16a4:	13 8a       	std	Z+19, r1	; 0x13
    16a6:	12 8a       	std	Z+18, r1	; 0x12
    16a8:	2e c0       	rjmp	.+92     	; 0x1706 <_ZL11follow_pathP3DIRPKc+0xac>
    16aa:	be 01       	movw	r22, r28
    16ac:	6f 5f       	subi	r22, 0xFF	; 255
    16ae:	7f 4f       	sbci	r23, 0xFF	; 255
    16b0:	c8 01       	movw	r24, r16
    16b2:	0e 94 22 01 	call	0x244	; 0x244 <_ZL11create_nameP3DIRPPKc>
    16b6:	81 11       	cpse	r24, r1
    16b8:	26 c0       	rjmp	.+76     	; 0x1706 <_ZL11follow_pathP3DIRPKc+0xac>
    16ba:	c8 01       	movw	r24, r16
    16bc:	93 df       	rcall	.-218    	; 0x15e4 <_ZL8dir_findP3DIR>
    16be:	d8 01       	movw	r26, r16
    16c0:	54 96       	adiw	r26, 0x14	; 20
    16c2:	ed 91       	ld	r30, X+
    16c4:	fc 91       	ld	r31, X
    16c6:	55 97       	sbiw	r26, 0x15	; 21
    16c8:	93 85       	ldd	r25, Z+11	; 0x0b
    16ca:	88 23       	and	r24, r24
    16cc:	29 f0       	breq	.+10     	; 0x16d8 <_ZL11follow_pathP3DIRPKc+0x7e>
    16ce:	84 30       	cpi	r24, 0x04	; 4
    16d0:	d1 f4       	brne	.+52     	; 0x1706 <_ZL11follow_pathP3DIRPKc+0xac>
    16d2:	92 ff       	sbrs	r25, 2
    16d4:	15 c0       	rjmp	.+42     	; 0x1700 <_ZL11follow_pathP3DIRPKc+0xa6>
    16d6:	17 c0       	rjmp	.+46     	; 0x1706 <_ZL11follow_pathP3DIRPKc+0xac>
    16d8:	92 fd       	sbrc	r25, 2
    16da:	15 c0       	rjmp	.+42     	; 0x1706 <_ZL11follow_pathP3DIRPKc+0xac>
    16dc:	f8 01       	movw	r30, r16
    16de:	62 89       	ldd	r22, Z+18	; 0x12
    16e0:	73 89       	ldd	r23, Z+19	; 0x13
    16e2:	db 01       	movw	r26, r22
    16e4:	1b 96       	adiw	r26, 0x0b	; 11
    16e6:	8c 91       	ld	r24, X
    16e8:	84 ff       	sbrs	r24, 4
    16ea:	0c c0       	rjmp	.+24     	; 0x1704 <_ZL11follow_pathP3DIRPKc+0xaa>
    16ec:	80 81       	ld	r24, Z
    16ee:	91 81       	ldd	r25, Z+1	; 0x01
    16f0:	0e 94 03 01 	call	0x206	; 0x206 <_ZL8ld_clustP5FATFSPh>
    16f4:	f8 01       	movw	r30, r16
    16f6:	66 83       	std	Z+6, r22	; 0x06
    16f8:	77 83       	std	Z+7, r23	; 0x07
    16fa:	80 87       	std	Z+8, r24	; 0x08
    16fc:	91 87       	std	Z+9, r25	; 0x09
    16fe:	d5 cf       	rjmp	.-86     	; 0x16aa <_ZL11follow_pathP3DIRPKc+0x50>
    1700:	85 e0       	ldi	r24, 0x05	; 5
    1702:	01 c0       	rjmp	.+2      	; 0x1706 <_ZL11follow_pathP3DIRPKc+0xac>
    1704:	85 e0       	ldi	r24, 0x05	; 5
    1706:	0f 90       	pop	r0
    1708:	0f 90       	pop	r0
    170a:	df 91       	pop	r29
    170c:	cf 91       	pop	r28
    170e:	1f 91       	pop	r17
    1710:	0f 91       	pop	r16
    1712:	08 95       	ret

00001714 <_ZL9dir_allocP3DIRj>:
    1714:	ef 92       	push	r14
    1716:	ff 92       	push	r15
    1718:	0f 93       	push	r16
    171a:	1f 93       	push	r17
    171c:	cf 93       	push	r28
    171e:	df 93       	push	r29
    1720:	ec 01       	movw	r28, r24
    1722:	7b 01       	movw	r14, r22
    1724:	60 e0       	ldi	r22, 0x00	; 0
    1726:	70 e0       	ldi	r23, 0x00	; 0
    1728:	63 db       	rcall	.-2362   	; 0xdf0 <_ZL7dir_sdiP3DIRt>
    172a:	81 11       	cpse	r24, r1
    172c:	21 c0       	rjmp	.+66     	; 0x1770 <_ZL9dir_allocP3DIRj+0x5c>
    172e:	00 e0       	ldi	r16, 0x00	; 0
    1730:	10 e0       	ldi	r17, 0x00	; 0
    1732:	4e 85       	ldd	r20, Y+14	; 0x0e
    1734:	5f 85       	ldd	r21, Y+15	; 0x0f
    1736:	68 89       	ldd	r22, Y+16	; 0x10
    1738:	79 89       	ldd	r23, Y+17	; 0x11
    173a:	88 81       	ld	r24, Y
    173c:	99 81       	ldd	r25, Y+1	; 0x01
    173e:	0e 94 82 02 	call	0x504	; 0x504 <_ZL11move_windowP5FATFSm>
    1742:	81 11       	cpse	r24, r1
    1744:	15 c0       	rjmp	.+42     	; 0x1770 <_ZL9dir_allocP3DIRj+0x5c>
    1746:	ea 89       	ldd	r30, Y+18	; 0x12
    1748:	fb 89       	ldd	r31, Y+19	; 0x13
    174a:	90 81       	ld	r25, Z
    174c:	95 3e       	cpi	r25, 0xE5	; 229
    174e:	11 f0       	breq	.+4      	; 0x1754 <_ZL9dir_allocP3DIRj+0x40>
    1750:	91 11       	cpse	r25, r1
    1752:	06 c0       	rjmp	.+12     	; 0x1760 <_ZL9dir_allocP3DIRj+0x4c>
    1754:	0f 5f       	subi	r16, 0xFF	; 255
    1756:	1f 4f       	sbci	r17, 0xFF	; 255
    1758:	0e 15       	cp	r16, r14
    175a:	1f 05       	cpc	r17, r15
    175c:	19 f4       	brne	.+6      	; 0x1764 <_ZL9dir_allocP3DIRj+0x50>
    175e:	08 c0       	rjmp	.+16     	; 0x1770 <_ZL9dir_allocP3DIRj+0x5c>
    1760:	00 e0       	ldi	r16, 0x00	; 0
    1762:	10 e0       	ldi	r17, 0x00	; 0
    1764:	61 e0       	ldi	r22, 0x01	; 1
    1766:	70 e0       	ldi	r23, 0x00	; 0
    1768:	ce 01       	movw	r24, r28
    176a:	10 de       	rcall	.-992    	; 0x138c <_ZL8dir_nextP3DIRi>
    176c:	88 23       	and	r24, r24
    176e:	09 f3       	breq	.-62     	; 0x1732 <_ZL9dir_allocP3DIRj+0x1e>
    1770:	df 91       	pop	r29
    1772:	cf 91       	pop	r28
    1774:	1f 91       	pop	r17
    1776:	0f 91       	pop	r16
    1778:	ff 90       	pop	r15
    177a:	ef 90       	pop	r14
    177c:	08 95       	ret

0000177e <_ZL12dir_registerP3DIR>:
    177e:	0f 93       	push	r16
    1780:	1f 93       	push	r17
    1782:	cf 93       	push	r28
    1784:	8c 01       	movw	r16, r24
    1786:	61 e0       	ldi	r22, 0x01	; 1
    1788:	70 e0       	ldi	r23, 0x00	; 0
    178a:	c4 df       	rcall	.-120    	; 0x1714 <_ZL9dir_allocP3DIRj>
    178c:	c8 2f       	mov	r28, r24
    178e:	81 11       	cpse	r24, r1
    1790:	29 c0       	rjmp	.+82     	; 0x17e4 <_ZL12dir_registerP3DIR+0x66>
    1792:	d8 01       	movw	r26, r16
    1794:	1e 96       	adiw	r26, 0x0e	; 14
    1796:	4d 91       	ld	r20, X+
    1798:	5d 91       	ld	r21, X+
    179a:	6d 91       	ld	r22, X+
    179c:	7c 91       	ld	r23, X
    179e:	51 97       	sbiw	r26, 0x11	; 17
    17a0:	8d 91       	ld	r24, X+
    17a2:	9c 91       	ld	r25, X
    17a4:	0e 94 82 02 	call	0x504	; 0x504 <_ZL11move_windowP5FATFSm>
    17a8:	c8 2f       	mov	r28, r24
    17aa:	81 11       	cpse	r24, r1
    17ac:	1b c0       	rjmp	.+54     	; 0x17e4 <_ZL12dir_registerP3DIR+0x66>
    17ae:	40 e2       	ldi	r20, 0x20	; 32
    17b0:	50 e0       	ldi	r21, 0x00	; 0
    17b2:	60 e0       	ldi	r22, 0x00	; 0
    17b4:	70 e0       	ldi	r23, 0x00	; 0
    17b6:	f8 01       	movw	r30, r16
    17b8:	82 89       	ldd	r24, Z+18	; 0x12
    17ba:	93 89       	ldd	r25, Z+19	; 0x13
    17bc:	0e 94 c7 00 	call	0x18e	; 0x18e <_ZL7mem_setPvij>
    17c0:	d8 01       	movw	r26, r16
    17c2:	54 96       	adiw	r26, 0x14	; 20
    17c4:	6d 91       	ld	r22, X+
    17c6:	7c 91       	ld	r23, X
    17c8:	55 97       	sbiw	r26, 0x15	; 21
    17ca:	4b e0       	ldi	r20, 0x0B	; 11
    17cc:	50 e0       	ldi	r21, 0x00	; 0
    17ce:	52 96       	adiw	r26, 0x12	; 18
    17d0:	8d 91       	ld	r24, X+
    17d2:	9c 91       	ld	r25, X
    17d4:	53 97       	sbiw	r26, 0x13	; 19
    17d6:	0e 94 b0 00 	call	0x160	; 0x160 <_ZL7mem_cpyPvPKvj>
    17da:	d8 01       	movw	r26, r16
    17dc:	ed 91       	ld	r30, X+
    17de:	fc 91       	ld	r31, X
    17e0:	81 e0       	ldi	r24, 0x01	; 1
    17e2:	84 83       	std	Z+4, r24	; 0x04
    17e4:	8c 2f       	mov	r24, r28
    17e6:	cf 91       	pop	r28
    17e8:	1f 91       	pop	r17
    17ea:	0f 91       	pop	r16
    17ec:	08 95       	ret

000017ee <_ZL12remove_chainP5FATFSm>:
    17ee:	8f 92       	push	r8
    17f0:	9f 92       	push	r9
    17f2:	af 92       	push	r10
    17f4:	bf 92       	push	r11
    17f6:	cf 92       	push	r12
    17f8:	df 92       	push	r13
    17fa:	ef 92       	push	r14
    17fc:	ff 92       	push	r15
    17fe:	0f 93       	push	r16
    1800:	1f 93       	push	r17
    1802:	cf 93       	push	r28
    1804:	df 93       	push	r29
    1806:	ec 01       	movw	r28, r24
    1808:	6a 01       	movw	r12, r20
    180a:	7b 01       	movw	r14, r22
    180c:	42 30       	cpi	r20, 0x02	; 2
    180e:	51 05       	cpc	r21, r1
    1810:	61 05       	cpc	r22, r1
    1812:	71 05       	cpc	r23, r1
    1814:	08 f4       	brcc	.+2      	; 0x1818 <_ZL12remove_chainP5FATFSm+0x2a>
    1816:	4b c0       	rjmp	.+150    	; 0x18ae <_ZL12remove_chainP5FATFSm+0xc0>
    1818:	8e 89       	ldd	r24, Y+22	; 0x16
    181a:	9f 89       	ldd	r25, Y+23	; 0x17
    181c:	a8 8d       	ldd	r26, Y+24	; 0x18
    181e:	b9 8d       	ldd	r27, Y+25	; 0x19
    1820:	48 17       	cp	r20, r24
    1822:	59 07       	cpc	r21, r25
    1824:	6a 07       	cpc	r22, r26
    1826:	7b 07       	cpc	r23, r27
    1828:	08 f0       	brcs	.+2      	; 0x182c <_ZL12remove_chainP5FATFSm+0x3e>
    182a:	43 c0       	rjmp	.+134    	; 0x18b2 <_ZL12remove_chainP5FATFSm+0xc4>
    182c:	10 e0       	ldi	r17, 0x00	; 0
    182e:	02 c0       	rjmp	.+4      	; 0x1834 <_ZL12remove_chainP5FATFSm+0x46>
    1830:	75 01       	movw	r14, r10
    1832:	64 01       	movw	r12, r8
    1834:	8e 89       	ldd	r24, Y+22	; 0x16
    1836:	9f 89       	ldd	r25, Y+23	; 0x17
    1838:	a8 8d       	ldd	r26, Y+24	; 0x18
    183a:	b9 8d       	ldd	r27, Y+25	; 0x19
    183c:	c8 16       	cp	r12, r24
    183e:	d9 06       	cpc	r13, r25
    1840:	ea 06       	cpc	r14, r26
    1842:	fb 06       	cpc	r15, r27
    1844:	d8 f5       	brcc	.+118    	; 0x18bc <_ZL12remove_chainP5FATFSm+0xce>
    1846:	b7 01       	movw	r22, r14
    1848:	a6 01       	movw	r20, r12
    184a:	ce 01       	movw	r24, r28
    184c:	e7 d9       	rcall	.-3122   	; 0xc1c <_Z7get_fatP5FATFSm>
    184e:	4b 01       	movw	r8, r22
    1850:	5c 01       	movw	r10, r24
    1852:	67 2b       	or	r22, r23
    1854:	68 2b       	or	r22, r24
    1856:	69 2b       	or	r22, r25
    1858:	89 f1       	breq	.+98     	; 0x18bc <_ZL12remove_chainP5FATFSm+0xce>
    185a:	81 e0       	ldi	r24, 0x01	; 1
    185c:	88 16       	cp	r8, r24
    185e:	91 04       	cpc	r9, r1
    1860:	a1 04       	cpc	r10, r1
    1862:	b1 04       	cpc	r11, r1
    1864:	41 f1       	breq	.+80     	; 0x18b6 <_ZL12remove_chainP5FATFSm+0xc8>
    1866:	2f ef       	ldi	r18, 0xFF	; 255
    1868:	82 16       	cp	r8, r18
    186a:	92 06       	cpc	r9, r18
    186c:	a2 06       	cpc	r10, r18
    186e:	b2 06       	cpc	r11, r18
    1870:	21 f1       	breq	.+72     	; 0x18ba <_ZL12remove_chainP5FATFSm+0xcc>
    1872:	00 e0       	ldi	r16, 0x00	; 0
    1874:	10 e0       	ldi	r17, 0x00	; 0
    1876:	98 01       	movw	r18, r16
    1878:	b7 01       	movw	r22, r14
    187a:	a6 01       	movw	r20, r12
    187c:	ce 01       	movw	r24, r28
    187e:	6f db       	rcall	.-2338   	; 0xf5e <_Z7put_fatP5FATFSmm>
    1880:	18 2f       	mov	r17, r24
    1882:	81 11       	cpse	r24, r1
    1884:	1b c0       	rjmp	.+54     	; 0x18bc <_ZL12remove_chainP5FATFSm+0xce>
    1886:	8e 85       	ldd	r24, Y+14	; 0x0e
    1888:	9f 85       	ldd	r25, Y+15	; 0x0f
    188a:	a8 89       	ldd	r26, Y+16	; 0x10
    188c:	b9 89       	ldd	r27, Y+17	; 0x11
    188e:	8f 3f       	cpi	r24, 0xFF	; 255
    1890:	2f ef       	ldi	r18, 0xFF	; 255
    1892:	92 07       	cpc	r25, r18
    1894:	a2 07       	cpc	r26, r18
    1896:	b2 07       	cpc	r27, r18
    1898:	59 f2       	breq	.-106    	; 0x1830 <_ZL12remove_chainP5FATFSm+0x42>
    189a:	01 96       	adiw	r24, 0x01	; 1
    189c:	a1 1d       	adc	r26, r1
    189e:	b1 1d       	adc	r27, r1
    18a0:	8e 87       	std	Y+14, r24	; 0x0e
    18a2:	9f 87       	std	Y+15, r25	; 0x0f
    18a4:	a8 8b       	std	Y+16, r26	; 0x10
    18a6:	b9 8b       	std	Y+17, r27	; 0x11
    18a8:	81 e0       	ldi	r24, 0x01	; 1
    18aa:	8d 83       	std	Y+5, r24	; 0x05
    18ac:	c1 cf       	rjmp	.-126    	; 0x1830 <_ZL12remove_chainP5FATFSm+0x42>
    18ae:	12 e0       	ldi	r17, 0x02	; 2
    18b0:	05 c0       	rjmp	.+10     	; 0x18bc <_ZL12remove_chainP5FATFSm+0xce>
    18b2:	12 e0       	ldi	r17, 0x02	; 2
    18b4:	03 c0       	rjmp	.+6      	; 0x18bc <_ZL12remove_chainP5FATFSm+0xce>
    18b6:	12 e0       	ldi	r17, 0x02	; 2
    18b8:	01 c0       	rjmp	.+2      	; 0x18bc <_ZL12remove_chainP5FATFSm+0xce>
    18ba:	11 e0       	ldi	r17, 0x01	; 1
    18bc:	81 2f       	mov	r24, r17
    18be:	df 91       	pop	r29
    18c0:	cf 91       	pop	r28
    18c2:	1f 91       	pop	r17
    18c4:	0f 91       	pop	r16
    18c6:	ff 90       	pop	r15
    18c8:	ef 90       	pop	r14
    18ca:	df 90       	pop	r13
    18cc:	cf 90       	pop	r12
    18ce:	bf 90       	pop	r11
    18d0:	af 90       	pop	r10
    18d2:	9f 90       	pop	r9
    18d4:	8f 90       	pop	r8
    18d6:	08 95       	ret

000018d8 <f_mount>:
    18d8:	81 11       	cpse	r24, r1
    18da:	1a c0       	rjmp	.+52     	; 0x1910 <f_mount+0x38>
    18dc:	90 e0       	ldi	r25, 0x00	; 0
    18de:	fc 01       	movw	r30, r24
    18e0:	ee 0f       	add	r30, r30
    18e2:	ff 1f       	adc	r31, r31
    18e4:	e0 51       	subi	r30, 0x10	; 16
    18e6:	fc 4f       	sbci	r31, 0xFC	; 252
    18e8:	01 90       	ld	r0, Z+
    18ea:	f0 81       	ld	r31, Z
    18ec:	e0 2d       	mov	r30, r0
    18ee:	30 97       	sbiw	r30, 0x00	; 0
    18f0:	09 f0       	breq	.+2      	; 0x18f4 <f_mount+0x1c>
    18f2:	10 82       	st	Z, r1
    18f4:	61 15       	cp	r22, r1
    18f6:	71 05       	cpc	r23, r1
    18f8:	11 f0       	breq	.+4      	; 0x18fe <f_mount+0x26>
    18fa:	fb 01       	movw	r30, r22
    18fc:	10 82       	st	Z, r1
    18fe:	88 0f       	add	r24, r24
    1900:	99 1f       	adc	r25, r25
    1902:	fc 01       	movw	r30, r24
    1904:	e0 51       	subi	r30, 0x10	; 16
    1906:	fc 4f       	sbci	r31, 0xFC	; 252
    1908:	71 83       	std	Z+1, r23	; 0x01
    190a:	60 83       	st	Z, r22
    190c:	80 e0       	ldi	r24, 0x00	; 0
    190e:	08 95       	ret
    1910:	8b e0       	ldi	r24, 0x0B	; 11
    1912:	08 95       	ret

00001914 <f_open>:
    1914:	4f 92       	push	r4
    1916:	5f 92       	push	r5
    1918:	6f 92       	push	r6
    191a:	7f 92       	push	r7
    191c:	af 92       	push	r10
    191e:	bf 92       	push	r11
    1920:	cf 92       	push	r12
    1922:	df 92       	push	r13
    1924:	ef 92       	push	r14
    1926:	ff 92       	push	r15
    1928:	0f 93       	push	r16
    192a:	1f 93       	push	r17
    192c:	cf 93       	push	r28
    192e:	df 93       	push	r29
    1930:	cd b7       	in	r28, 0x3d	; 61
    1932:	de b7       	in	r29, 0x3e	; 62
    1934:	a8 97       	sbiw	r28, 0x28	; 40
    1936:	0f b6       	in	r0, 0x3f	; 63
    1938:	f8 94       	cli
    193a:	de bf       	out	0x3e, r29	; 62
    193c:	0f be       	out	0x3f, r0	; 63
    193e:	cd bf       	out	0x3d, r28	; 61
    1940:	7c a3       	std	Y+36, r23	; 0x24
    1942:	6b a3       	std	Y+35, r22	; 0x23
    1944:	00 97       	sbiw	r24, 0x00	; 0
    1946:	09 f4       	brne	.+2      	; 0x194a <f_open+0x36>
    1948:	d9 c0       	rjmp	.+434    	; 0x1afc <f_open+0x1e8>
    194a:	04 2f       	mov	r16, r20
    194c:	7c 01       	movw	r14, r24
    194e:	dc 01       	movw	r26, r24
    1950:	1d 92       	st	X+, r1
    1952:	1c 92       	st	X, r1
    1954:	b4 2f       	mov	r27, r20
    1956:	bf 71       	andi	r27, 0x1F	; 31
    1958:	db 2e       	mov	r13, r27
    195a:	4e 71       	andi	r20, 0x1E	; 30
    195c:	be 01       	movw	r22, r28
    195e:	6f 5f       	subi	r22, 0xFF	; 255
    1960:	7f 4f       	sbci	r23, 0xFF	; 255
    1962:	ce 01       	movw	r24, r28
    1964:	83 96       	adiw	r24, 0x23	; 35
    1966:	0e 94 df 02 	call	0x5be	; 0x5be <_ZL11chk_mountedPPKcPP5FATFSh>
    196a:	81 11       	cpse	r24, r1
    196c:	ca c0       	rjmp	.+404    	; 0x1b02 <f_open+0x1ee>
    196e:	ce 01       	movw	r24, r28
    1970:	47 96       	adiw	r24, 0x17	; 23
    1972:	9e 8b       	std	Y+22, r25	; 0x16
    1974:	8d 8b       	std	Y+21, r24	; 0x15
    1976:	6b a1       	ldd	r22, Y+35	; 0x23
    1978:	7c a1       	ldd	r23, Y+36	; 0x24
    197a:	46 97       	sbiw	r24, 0x16	; 22
    197c:	6e de       	rcall	.-804    	; 0x165a <_ZL11follow_pathP3DIRPKc>
    197e:	18 2f       	mov	r17, r24
    1980:	ab 88       	ldd	r10, Y+19	; 0x13
    1982:	bc 88       	ldd	r11, Y+20	; 0x14
    1984:	81 11       	cpse	r24, r1
    1986:	04 c0       	rjmp	.+8      	; 0x1990 <f_open+0x7c>
    1988:	a1 14       	cp	r10, r1
    198a:	b1 04       	cpc	r11, r1
    198c:	09 f4       	brne	.+2      	; 0x1990 <f_open+0x7c>
    198e:	16 e0       	ldi	r17, 0x06	; 6
    1990:	80 2f       	mov	r24, r16
    1992:	8c 71       	andi	r24, 0x1C	; 28
    1994:	09 f4       	brne	.+2      	; 0x1998 <f_open+0x84>
    1996:	62 c0       	rjmp	.+196    	; 0x1a5c <f_open+0x148>
    1998:	11 23       	and	r17, r17
    199a:	61 f0       	breq	.+24     	; 0x19b4 <f_open+0xa0>
    199c:	14 30       	cpi	r17, 0x04	; 4
    199e:	21 f4       	brne	.+8      	; 0x19a8 <f_open+0x94>
    19a0:	ce 01       	movw	r24, r28
    19a2:	01 96       	adiw	r24, 0x01	; 1
    19a4:	ec de       	rcall	.-552    	; 0x177e <_ZL12dir_registerP3DIR>
    19a6:	18 2f       	mov	r17, r24
    19a8:	ed 2d       	mov	r30, r13
    19aa:	e8 60       	ori	r30, 0x08	; 8
    19ac:	de 2e       	mov	r13, r30
    19ae:	ab 88       	ldd	r10, Y+19	; 0x13
    19b0:	bc 88       	ldd	r11, Y+20	; 0x14
    19b2:	0b c0       	rjmp	.+22     	; 0x19ca <f_open+0xb6>
    19b4:	d5 01       	movw	r26, r10
    19b6:	1b 96       	adiw	r26, 0x0b	; 11
    19b8:	8c 91       	ld	r24, X
    19ba:	81 71       	andi	r24, 0x11	; 17
    19bc:	19 f4       	brne	.+6      	; 0x19c4 <f_open+0xb0>
    19be:	02 fd       	sbrc	r16, 2
    19c0:	03 c0       	rjmp	.+6      	; 0x19c8 <f_open+0xb4>
    19c2:	03 c0       	rjmp	.+6      	; 0x19ca <f_open+0xb6>
    19c4:	17 e0       	ldi	r17, 0x07	; 7
    19c6:	01 c0       	rjmp	.+2      	; 0x19ca <f_open+0xb6>
    19c8:	18 e0       	ldi	r17, 0x08	; 8
    19ca:	11 11       	cpse	r17, r1
    19cc:	56 c0       	rjmp	.+172    	; 0x1a7a <f_open+0x166>
    19ce:	d3 fe       	sbrs	r13, 3
    19d0:	54 c0       	rjmp	.+168    	; 0x1a7a <f_open+0x166>
    19d2:	0e 94 65 00 	call	0xca	; 0xca <get_fattime>
    19d6:	f5 01       	movw	r30, r10
    19d8:	66 87       	std	Z+14, r22	; 0x0e
    19da:	77 87       	std	Z+15, r23	; 0x0f
    19dc:	80 8b       	std	Z+16, r24	; 0x10
    19de:	91 8b       	std	Z+17, r25	; 0x11
    19e0:	13 86       	std	Z+11, r1	; 0x0b
    19e2:	14 8e       	std	Z+28, r1	; 0x1c
    19e4:	15 8e       	std	Z+29, r1	; 0x1d
    19e6:	16 8e       	std	Z+30, r1	; 0x1e
    19e8:	17 8e       	std	Z+31, r1	; 0x1f
    19ea:	b5 01       	movw	r22, r10
    19ec:	89 81       	ldd	r24, Y+1	; 0x01
    19ee:	9a 81       	ldd	r25, Y+2	; 0x02
    19f0:	0e 94 03 01 	call	0x206	; 0x206 <_ZL8ld_clustP5FATFSPh>
    19f4:	2b 01       	movw	r4, r22
    19f6:	3c 01       	movw	r6, r24
    19f8:	40 e0       	ldi	r20, 0x00	; 0
    19fa:	50 e0       	ldi	r21, 0x00	; 0
    19fc:	ba 01       	movw	r22, r20
    19fe:	c5 01       	movw	r24, r10
    1a00:	0e 94 1c 01 	call	0x238	; 0x238 <_ZL8st_clustPhm>
    1a04:	e9 81       	ldd	r30, Y+1	; 0x01
    1a06:	fa 81       	ldd	r31, Y+2	; 0x02
    1a08:	81 e0       	ldi	r24, 0x01	; 1
    1a0a:	84 83       	std	Z+4, r24	; 0x04
    1a0c:	41 14       	cp	r4, r1
    1a0e:	51 04       	cpc	r5, r1
    1a10:	61 04       	cpc	r6, r1
    1a12:	71 04       	cpc	r7, r1
    1a14:	91 f1       	breq	.+100    	; 0x1a7a <f_open+0x166>
    1a16:	86 a5       	ldd	r24, Z+46	; 0x2e
    1a18:	97 a5       	ldd	r25, Z+47	; 0x2f
    1a1a:	a0 a9       	ldd	r26, Z+48	; 0x30
    1a1c:	b1 a9       	ldd	r27, Z+49	; 0x31
    1a1e:	8d a3       	std	Y+37, r24	; 0x25
    1a20:	9e a3       	std	Y+38, r25	; 0x26
    1a22:	af a3       	std	Y+39, r26	; 0x27
    1a24:	b8 a7       	std	Y+40, r27	; 0x28
    1a26:	b3 01       	movw	r22, r6
    1a28:	a2 01       	movw	r20, r4
    1a2a:	cf 01       	movw	r24, r30
    1a2c:	e0 de       	rcall	.-576    	; 0x17ee <_ZL12remove_chainP5FATFSm>
    1a2e:	18 2f       	mov	r17, r24
    1a30:	81 11       	cpse	r24, r1
    1a32:	23 c0       	rjmp	.+70     	; 0x1a7a <f_open+0x166>
    1a34:	89 81       	ldd	r24, Y+1	; 0x01
    1a36:	9a 81       	ldd	r25, Y+2	; 0x02
    1a38:	a1 e0       	ldi	r26, 0x01	; 1
    1a3a:	4a 1a       	sub	r4, r26
    1a3c:	51 08       	sbc	r5, r1
    1a3e:	61 08       	sbc	r6, r1
    1a40:	71 08       	sbc	r7, r1
    1a42:	fc 01       	movw	r30, r24
    1a44:	42 86       	std	Z+10, r4	; 0x0a
    1a46:	53 86       	std	Z+11, r5	; 0x0b
    1a48:	64 86       	std	Z+12, r6	; 0x0c
    1a4a:	75 86       	std	Z+13, r7	; 0x0d
    1a4c:	4d a1       	ldd	r20, Y+37	; 0x25
    1a4e:	5e a1       	ldd	r21, Y+38	; 0x26
    1a50:	6f a1       	ldd	r22, Y+39	; 0x27
    1a52:	78 a5       	ldd	r23, Y+40	; 0x28
    1a54:	0e 94 82 02 	call	0x504	; 0x504 <_ZL11move_windowP5FATFSm>
    1a58:	18 2f       	mov	r17, r24
    1a5a:	0f c0       	rjmp	.+30     	; 0x1a7a <f_open+0x166>
    1a5c:	11 11       	cpse	r17, r1
    1a5e:	0d c0       	rjmp	.+26     	; 0x1a7a <f_open+0x166>
    1a60:	d5 01       	movw	r26, r10
    1a62:	1b 96       	adiw	r26, 0x0b	; 11
    1a64:	8c 91       	ld	r24, X
    1a66:	84 fd       	sbrc	r24, 4
    1a68:	05 c0       	rjmp	.+10     	; 0x1a74 <f_open+0x160>
    1a6a:	01 ff       	sbrs	r16, 1
    1a6c:	06 c0       	rjmp	.+12     	; 0x1a7a <f_open+0x166>
    1a6e:	80 fd       	sbrc	r24, 0
    1a70:	03 c0       	rjmp	.+6      	; 0x1a78 <f_open+0x164>
    1a72:	03 c0       	rjmp	.+6      	; 0x1a7a <f_open+0x166>
    1a74:	14 e0       	ldi	r17, 0x04	; 4
    1a76:	01 c0       	rjmp	.+2      	; 0x1a7a <f_open+0x166>
    1a78:	17 e0       	ldi	r17, 0x07	; 7
    1a7a:	11 11       	cpse	r17, r1
    1a7c:	12 c0       	rjmp	.+36     	; 0x1aa2 <f_open+0x18e>
    1a7e:	d3 fe       	sbrs	r13, 3
    1a80:	03 c0       	rjmp	.+6      	; 0x1a88 <f_open+0x174>
    1a82:	bd 2d       	mov	r27, r13
    1a84:	b0 62       	ori	r27, 0x20	; 32
    1a86:	db 2e       	mov	r13, r27
    1a88:	e9 81       	ldd	r30, Y+1	; 0x01
    1a8a:	fa 81       	ldd	r31, Y+2	; 0x02
    1a8c:	86 a5       	ldd	r24, Z+46	; 0x2e
    1a8e:	97 a5       	ldd	r25, Z+47	; 0x2f
    1a90:	a0 a9       	ldd	r26, Z+48	; 0x30
    1a92:	b1 a9       	ldd	r27, Z+49	; 0x31
    1a94:	f7 01       	movw	r30, r14
    1a96:	82 8f       	std	Z+26, r24	; 0x1a
    1a98:	93 8f       	std	Z+27, r25	; 0x1b
    1a9a:	a4 8f       	std	Z+28, r26	; 0x1c
    1a9c:	b5 8f       	std	Z+29, r27	; 0x1d
    1a9e:	b7 8e       	std	Z+31, r11	; 0x1f
    1aa0:	a6 8e       	std	Z+30, r10	; 0x1e
    1aa2:	11 11       	cpse	r17, r1
    1aa4:	2d c0       	rjmp	.+90     	; 0x1b00 <f_open+0x1ec>
    1aa6:	d7 01       	movw	r26, r14
    1aa8:	14 96       	adiw	r26, 0x04	; 4
    1aaa:	dc 92       	st	X, r13
    1aac:	c9 80       	ldd	r12, Y+1	; 0x01
    1aae:	da 80       	ldd	r13, Y+2	; 0x02
    1ab0:	b5 01       	movw	r22, r10
    1ab2:	c6 01       	movw	r24, r12
    1ab4:	0e 94 03 01 	call	0x206	; 0x206 <_ZL8ld_clustP5FATFSPh>
    1ab8:	f7 01       	movw	r30, r14
    1aba:	66 87       	std	Z+14, r22	; 0x0e
    1abc:	77 87       	std	Z+15, r23	; 0x0f
    1abe:	80 8b       	std	Z+16, r24	; 0x10
    1ac0:	91 8b       	std	Z+17, r25	; 0x11
    1ac2:	f5 01       	movw	r30, r10
    1ac4:	84 8d       	ldd	r24, Z+28	; 0x1c
    1ac6:	95 8d       	ldd	r25, Z+29	; 0x1d
    1ac8:	a6 8d       	ldd	r26, Z+30	; 0x1e
    1aca:	b7 8d       	ldd	r27, Z+31	; 0x1f
    1acc:	f7 01       	movw	r30, r14
    1ace:	82 87       	std	Z+10, r24	; 0x0a
    1ad0:	93 87       	std	Z+11, r25	; 0x0b
    1ad2:	a4 87       	std	Z+12, r26	; 0x0c
    1ad4:	b5 87       	std	Z+13, r27	; 0x0d
    1ad6:	16 82       	std	Z+6, r1	; 0x06
    1ad8:	17 82       	std	Z+7, r1	; 0x07
    1ada:	10 86       	std	Z+8, r1	; 0x08
    1adc:	11 86       	std	Z+9, r1	; 0x09
    1ade:	16 8a       	std	Z+22, r1	; 0x16
    1ae0:	17 8a       	std	Z+23, r1	; 0x17
    1ae2:	10 8e       	std	Z+24, r1	; 0x18
    1ae4:	11 8e       	std	Z+25, r1	; 0x19
    1ae6:	d1 82       	std	Z+1, r13	; 0x01
    1ae8:	c0 82       	st	Z, r12
    1aea:	d6 01       	movw	r26, r12
    1aec:	16 96       	adiw	r26, 0x06	; 6
    1aee:	8d 91       	ld	r24, X+
    1af0:	9c 91       	ld	r25, X
    1af2:	17 97       	sbiw	r26, 0x07	; 7
    1af4:	93 83       	std	Z+3, r25	; 0x03
    1af6:	82 83       	std	Z+2, r24	; 0x02
    1af8:	81 2f       	mov	r24, r17
    1afa:	03 c0       	rjmp	.+6      	; 0x1b02 <f_open+0x1ee>
    1afc:	89 e0       	ldi	r24, 0x09	; 9
    1afe:	01 c0       	rjmp	.+2      	; 0x1b02 <f_open+0x1ee>
    1b00:	81 2f       	mov	r24, r17
    1b02:	a8 96       	adiw	r28, 0x28	; 40
    1b04:	0f b6       	in	r0, 0x3f	; 63
    1b06:	f8 94       	cli
    1b08:	de bf       	out	0x3e, r29	; 62
    1b0a:	0f be       	out	0x3f, r0	; 63
    1b0c:	cd bf       	out	0x3d, r28	; 61
    1b0e:	df 91       	pop	r29
    1b10:	cf 91       	pop	r28
    1b12:	1f 91       	pop	r17
    1b14:	0f 91       	pop	r16
    1b16:	ff 90       	pop	r15
    1b18:	ef 90       	pop	r14
    1b1a:	df 90       	pop	r13
    1b1c:	cf 90       	pop	r12
    1b1e:	bf 90       	pop	r11
    1b20:	af 90       	pop	r10
    1b22:	7f 90       	pop	r7
    1b24:	6f 90       	pop	r6
    1b26:	5f 90       	pop	r5
    1b28:	4f 90       	pop	r4
    1b2a:	08 95       	ret

00001b2c <f_write>:
	FIL *fp,			/* Pointer to the file object */
	const void *buff,	/* Pointer to the data to be written */
	UINT btw,			/* Number of bytes to write */
	UINT *bw			/* Pointer to number of bytes written */
)
{
    1b2c:	2f 92       	push	r2
    1b2e:	3f 92       	push	r3
    1b30:	4f 92       	push	r4
    1b32:	5f 92       	push	r5
    1b34:	6f 92       	push	r6
    1b36:	7f 92       	push	r7
    1b38:	8f 92       	push	r8
    1b3a:	9f 92       	push	r9
    1b3c:	af 92       	push	r10
    1b3e:	bf 92       	push	r11
    1b40:	cf 92       	push	r12
    1b42:	df 92       	push	r13
    1b44:	ef 92       	push	r14
    1b46:	ff 92       	push	r15
    1b48:	0f 93       	push	r16
    1b4a:	1f 93       	push	r17
    1b4c:	cf 93       	push	r28
    1b4e:	df 93       	push	r29
    1b50:	ec 01       	movw	r28, r24
    1b52:	5b 01       	movw	r10, r22
    1b54:	6a 01       	movw	r12, r20
    1b56:	49 01       	movw	r8, r18
	UINT wcnt, cc;
	const BYTE *wbuff = (const BYTE*)buff;
	BYTE csect;


	*bw = 0;	/* Clear write byte counter */
    1b58:	f9 01       	movw	r30, r18
    1b5a:	11 82       	std	Z+1, r1	; 0x01
    1b5c:	10 82       	st	Z, r1

	res = validate(fp);						/* Check validity */
    1b5e:	0e 94 ba 02 	call	0x574	; 0x574 <_ZL8validatePv>
	if (res != FR_OK) LEAVE_FF(fp->fs, res);
    1b62:	81 11       	cpse	r24, r1
    1b64:	7b c1       	rjmp	.+758    	; 0x1e5c <f_write+0x330>
	if (fp->flag & FA__ERROR)				/* Aborted file? */
    1b66:	8c 81       	ldd	r24, Y+4	; 0x04
    1b68:	88 23       	and	r24, r24
    1b6a:	0c f4       	brge	.+2      	; 0x1b6e <f_write+0x42>
    1b6c:	74 c1       	rjmp	.+744    	; 0x1e56 <f_write+0x32a>
		LEAVE_FF(fp->fs, FR_INT_ERR);
	if (!(fp->flag & FA_WRITE))				/* Check access mode */
    1b6e:	81 ff       	sbrs	r24, 1
    1b70:	74 c1       	rjmp	.+744    	; 0x1e5a <f_write+0x32e>
		LEAVE_FF(fp->fs, FR_DENIED);
	if ((DWORD)(fp->fsize + btw) < fp->fsize) btw = 0;	/* File size cannot reach 4GB */
    1b72:	8a 85       	ldd	r24, Y+10	; 0x0a
    1b74:	9b 85       	ldd	r25, Y+11	; 0x0b
    1b76:	ac 85       	ldd	r26, Y+12	; 0x0c
    1b78:	bd 85       	ldd	r27, Y+13	; 0x0d
    1b7a:	ac 01       	movw	r20, r24
    1b7c:	bd 01       	movw	r22, r26
    1b7e:	4c 0d       	add	r20, r12
    1b80:	5d 1d       	adc	r21, r13
    1b82:	61 1d       	adc	r22, r1
    1b84:	71 1d       	adc	r23, r1
    1b86:	48 17       	cp	r20, r24
    1b88:	59 07       	cpc	r21, r25
    1b8a:	6a 07       	cpc	r22, r26
    1b8c:	7b 07       	cpc	r23, r27
    1b8e:	10 f4       	brcc	.+4      	; 0x1b94 <f_write+0x68>
    1b90:	c1 2c       	mov	r12, r1
    1b92:	d1 2c       	mov	r13, r1

	for ( ;  btw;							/* Repeat until all data written */
    1b94:	c1 14       	cp	r12, r1
    1b96:	d1 04       	cpc	r13, r1
    1b98:	09 f4       	brne	.+2      	; 0x1b9c <f_write+0x70>
    1b9a:	47 c1       	rjmp	.+654    	; 0x1e2a <f_write+0x2fe>
		wbuff += wcnt, fp->fptr += wcnt, *bw += wcnt, btw -= wcnt) {
		if ((fp->fptr % SS(fp->fs)) == 0) {	/* On the sector boundary? */
    1b9c:	4e 81       	ldd	r20, Y+6	; 0x06
    1b9e:	5f 81       	ldd	r21, Y+7	; 0x07
    1ba0:	68 85       	ldd	r22, Y+8	; 0x08
    1ba2:	79 85       	ldd	r23, Y+9	; 0x09
    1ba4:	db 01       	movw	r26, r22
    1ba6:	ca 01       	movw	r24, r20
    1ba8:	91 70       	andi	r25, 0x01	; 1
    1baa:	aa 27       	eor	r26, r26
    1bac:	bb 27       	eor	r27, r27
    1bae:	89 2b       	or	r24, r25
    1bb0:	8a 2b       	or	r24, r26
    1bb2:	8b 2b       	or	r24, r27
    1bb4:	09 f0       	breq	.+2      	; 0x1bb8 <f_write+0x8c>
    1bb6:	ef c0       	rjmp	.+478    	; 0x1d96 <f_write+0x26a>
			csect = (BYTE)(fp->fptr / SS(fp->fs) & (fp->fs->csize - 1));	/* Sector offset in the cluster */
    1bb8:	e8 81       	ld	r30, Y
    1bba:	f9 81       	ldd	r31, Y+1	; 0x01
    1bbc:	12 81       	ldd	r17, Z+2	; 0x02
    1bbe:	11 50       	subi	r17, 0x01	; 1
    1bc0:	db 01       	movw	r26, r22
    1bc2:	ca 01       	movw	r24, r20
    1bc4:	07 2e       	mov	r0, r23
    1bc6:	79 e0       	ldi	r23, 0x09	; 9
    1bc8:	b6 95       	lsr	r27
    1bca:	a7 95       	ror	r26
    1bcc:	97 95       	ror	r25
    1bce:	87 95       	ror	r24
    1bd0:	7a 95       	dec	r23
    1bd2:	d1 f7       	brne	.-12     	; 0x1bc8 <f_write+0x9c>
    1bd4:	70 2d       	mov	r23, r0
    1bd6:	18 23       	and	r17, r24
			if (!csect) {					/* On the cluster boundary? */
    1bd8:	e1 f5       	brne	.+120    	; 0x1c52 <f_write+0x126>
				if (fp->fptr == 0) {		/* On the top of the file? */
    1bda:	45 2b       	or	r20, r21
    1bdc:	46 2b       	or	r20, r22
    1bde:	47 2b       	or	r20, r23
    1be0:	99 f4       	brne	.+38     	; 0x1c08 <f_write+0xdc>
					clst = fp->sclust;		/* Follow from the origin */
    1be2:	6e 85       	ldd	r22, Y+14	; 0x0e
    1be4:	7f 85       	ldd	r23, Y+15	; 0x0f
    1be6:	88 89       	ldd	r24, Y+16	; 0x10
    1be8:	99 89       	ldd	r25, Y+17	; 0x11
					if (clst == 0)			/* When no cluster is allocated, */
    1bea:	61 15       	cp	r22, r1
    1bec:	71 05       	cpc	r23, r1
    1bee:	81 05       	cpc	r24, r1
    1bf0:	91 05       	cpc	r25, r1
    1bf2:	81 f4       	brne	.+32     	; 0x1c14 <f_write+0xe8>
						fp->sclust = clst = create_chain(fp->fs, 0);	/* Create a new cluster chain */
    1bf4:	40 e0       	ldi	r20, 0x00	; 0
    1bf6:	50 e0       	ldi	r21, 0x00	; 0
    1bf8:	ba 01       	movw	r22, r20
    1bfa:	cf 01       	movw	r24, r30
    1bfc:	d5 da       	rcall	.-2646   	; 0x11a8 <_ZL12create_chainP5FATFSm>
    1bfe:	6e 87       	std	Y+14, r22	; 0x0e
    1c00:	7f 87       	std	Y+15, r23	; 0x0f
    1c02:	88 8b       	std	Y+16, r24	; 0x10
    1c04:	99 8b       	std	Y+17, r25	; 0x11
    1c06:	06 c0       	rjmp	.+12     	; 0x1c14 <f_write+0xe8>
#if _USE_FASTSEEK
					if (fp->cltbl)
						clst = clmt_clust(fp, fp->fptr);	/* Get cluster# from the CLMT */
					else
#endif
						clst = create_chain(fp->fs, fp->clust);	/* Follow or stretch cluster chain on the FAT */
    1c08:	4a 89       	ldd	r20, Y+18	; 0x12
    1c0a:	5b 89       	ldd	r21, Y+19	; 0x13
    1c0c:	6c 89       	ldd	r22, Y+20	; 0x14
    1c0e:	7d 89       	ldd	r23, Y+21	; 0x15
    1c10:	cf 01       	movw	r24, r30
    1c12:	ca da       	rcall	.-2668   	; 0x11a8 <_ZL12create_chainP5FATFSm>
				}
				if (clst == 0) break;		/* Could not allocate a new cluster (disk full) */
    1c14:	61 15       	cp	r22, r1
    1c16:	71 05       	cpc	r23, r1
    1c18:	81 05       	cpc	r24, r1
    1c1a:	91 05       	cpc	r25, r1
    1c1c:	09 f4       	brne	.+2      	; 0x1c20 <f_write+0xf4>
    1c1e:	05 c1       	rjmp	.+522    	; 0x1e2a <f_write+0x2fe>
				if (clst == 1) ABORT(fp->fs, FR_INT_ERR);
    1c20:	61 30       	cpi	r22, 0x01	; 1
    1c22:	71 05       	cpc	r23, r1
    1c24:	81 05       	cpc	r24, r1
    1c26:	91 05       	cpc	r25, r1
    1c28:	29 f4       	brne	.+10     	; 0x1c34 <f_write+0x108>
    1c2a:	8c 81       	ldd	r24, Y+4	; 0x04
    1c2c:	80 68       	ori	r24, 0x80	; 128
    1c2e:	8c 83       	std	Y+4, r24	; 0x04
    1c30:	82 e0       	ldi	r24, 0x02	; 2
    1c32:	14 c1       	rjmp	.+552    	; 0x1e5c <f_write+0x330>
				if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
    1c34:	6f 3f       	cpi	r22, 0xFF	; 255
    1c36:	ff ef       	ldi	r31, 0xFF	; 255
    1c38:	7f 07       	cpc	r23, r31
    1c3a:	8f 07       	cpc	r24, r31
    1c3c:	9f 07       	cpc	r25, r31
    1c3e:	29 f4       	brne	.+10     	; 0x1c4a <f_write+0x11e>
    1c40:	8c 81       	ldd	r24, Y+4	; 0x04
    1c42:	80 68       	ori	r24, 0x80	; 128
    1c44:	8c 83       	std	Y+4, r24	; 0x04
    1c46:	81 e0       	ldi	r24, 0x01	; 1
    1c48:	09 c1       	rjmp	.+530    	; 0x1e5c <f_write+0x330>
				fp->clust = clst;			/* Update current cluster */
    1c4a:	6a 8b       	std	Y+18, r22	; 0x12
    1c4c:	7b 8b       	std	Y+19, r23	; 0x13
    1c4e:	8c 8b       	std	Y+20, r24	; 0x14
    1c50:	9d 8b       	std	Y+21, r25	; 0x15
			}
#if _FS_TINY
			if (fp->fs->winsect == fp->dsect && sync_window(fp->fs))	/* Write-back sector cache */
    1c52:	e8 81       	ld	r30, Y
    1c54:	f9 81       	ldd	r31, Y+1	; 0x01
    1c56:	46 a5       	ldd	r20, Z+46	; 0x2e
    1c58:	57 a5       	ldd	r21, Z+47	; 0x2f
    1c5a:	60 a9       	ldd	r22, Z+48	; 0x30
    1c5c:	71 a9       	ldd	r23, Z+49	; 0x31
    1c5e:	8e 89       	ldd	r24, Y+22	; 0x16
    1c60:	9f 89       	ldd	r25, Y+23	; 0x17
    1c62:	a8 8d       	ldd	r26, Y+24	; 0x18
    1c64:	b9 8d       	ldd	r27, Y+25	; 0x19
    1c66:	48 17       	cp	r20, r24
    1c68:	59 07       	cpc	r21, r25
    1c6a:	6a 07       	cpc	r22, r26
    1c6c:	7b 07       	cpc	r23, r27
    1c6e:	39 f4       	brne	.+14     	; 0x1c7e <f_write+0x152>
    1c70:	cf 01       	movw	r24, r30
    1c72:	0e 94 1b 02 	call	0x436	; 0x436 <_ZL11sync_windowP5FATFS>
    1c76:	88 23       	and	r24, r24
    1c78:	21 f0       	breq	.+8      	; 0x1c82 <f_write+0x156>
    1c7a:	81 e0       	ldi	r24, 0x01	; 1
    1c7c:	03 c0       	rjmp	.+6      	; 0x1c84 <f_write+0x158>
    1c7e:	80 e0       	ldi	r24, 0x00	; 0
    1c80:	01 c0       	rjmp	.+2      	; 0x1c84 <f_write+0x158>
    1c82:	80 e0       	ldi	r24, 0x00	; 0
    1c84:	88 23       	and	r24, r24
    1c86:	29 f0       	breq	.+10     	; 0x1c92 <f_write+0x166>
				ABORT(fp->fs, FR_DISK_ERR);
    1c88:	8c 81       	ldd	r24, Y+4	; 0x04
    1c8a:	80 68       	ori	r24, 0x80	; 128
    1c8c:	8c 83       	std	Y+4, r24	; 0x04
    1c8e:	81 e0       	ldi	r24, 0x01	; 1
    1c90:	e5 c0       	rjmp	.+458    	; 0x1e5c <f_write+0x330>
				if (disk_write(fp->fs->drv, fp->buf, fp->dsect, 1) != RES_OK)
					ABORT(fp->fs, FR_DISK_ERR);
				fp->flag &= ~FA__DIRTY;
			}
#endif
			sect = clust2sect(fp->fs, fp->clust);	/* Get current sector */
    1c92:	4a 89       	ldd	r20, Y+18	; 0x12
    1c94:	5b 89       	ldd	r21, Y+19	; 0x13
    1c96:	6c 89       	ldd	r22, Y+20	; 0x14
    1c98:	7d 89       	ldd	r23, Y+21	; 0x15
    1c9a:	28 80       	ld	r2, Y
    1c9c:	39 80       	ldd	r3, Y+1	; 0x01
    1c9e:	c1 01       	movw	r24, r2
    1ca0:	0e 94 e6 05 	call	0xbcc	; 0xbcc <_Z10clust2sectP5FATFSm>
			if (!sect) ABORT(fp->fs, FR_INT_ERR);
    1ca4:	61 15       	cp	r22, r1
    1ca6:	71 05       	cpc	r23, r1
    1ca8:	81 05       	cpc	r24, r1
    1caa:	91 05       	cpc	r25, r1
    1cac:	29 f4       	brne	.+10     	; 0x1cb8 <f_write+0x18c>
    1cae:	8c 81       	ldd	r24, Y+4	; 0x04
    1cb0:	80 68       	ori	r24, 0x80	; 128
    1cb2:	8c 83       	std	Y+4, r24	; 0x04
    1cb4:	82 e0       	ldi	r24, 0x02	; 2
    1cb6:	d2 c0       	rjmp	.+420    	; 0x1e5c <f_write+0x330>
			sect += csect;
    1cb8:	2b 01       	movw	r4, r22
    1cba:	3c 01       	movw	r6, r24
    1cbc:	41 0e       	add	r4, r17
    1cbe:	51 1c       	adc	r5, r1
    1cc0:	61 1c       	adc	r6, r1
    1cc2:	71 1c       	adc	r7, r1
			cc = btw / SS(fp->fs);			/* When remaining bytes >= sector size, */
    1cc4:	76 01       	movw	r14, r12
    1cc6:	ef 2c       	mov	r14, r15
    1cc8:	ff 24       	eor	r15, r15
    1cca:	e6 94       	lsr	r14
			if (cc) {						/* Write maximum contiguous sectors directly */
    1ccc:	e1 14       	cp	r14, r1
    1cce:	f1 04       	cpc	r15, r1
    1cd0:	09 f4       	brne	.+2      	; 0x1cd4 <f_write+0x1a8>
    1cd2:	40 c0       	rjmp	.+128    	; 0x1d54 <f_write+0x228>
				if (csect + cc > fp->fs->csize)	/* Clip at cluster boundary */
    1cd4:	f1 01       	movw	r30, r2
    1cd6:	42 81       	ldd	r20, Z+2	; 0x02
    1cd8:	24 2f       	mov	r18, r20
    1cda:	30 e0       	ldi	r19, 0x00	; 0
    1cdc:	c7 01       	movw	r24, r14
    1cde:	81 0f       	add	r24, r17
    1ce0:	91 1d       	adc	r25, r1
    1ce2:	28 17       	cp	r18, r24
    1ce4:	39 07       	cpc	r19, r25
    1ce6:	18 f4       	brcc	.+6      	; 0x1cee <f_write+0x1c2>
					cc = fp->fs->csize - csect;
    1ce8:	79 01       	movw	r14, r18
    1cea:	e1 1a       	sub	r14, r17
    1cec:	f1 08       	sbc	r15, r1
				if (disk_write(fp->fs->drv, wbuff, sect, (BYTE)cc) != RES_OK)
    1cee:	0e 2d       	mov	r16, r14
    1cf0:	a3 01       	movw	r20, r6
    1cf2:	92 01       	movw	r18, r4
    1cf4:	b5 01       	movw	r22, r10
    1cf6:	f1 01       	movw	r30, r2
    1cf8:	81 81       	ldd	r24, Z+1	; 0x01
    1cfa:	47 d4       	rcall	.+2190   	; 0x258a <disk_write>
    1cfc:	88 23       	and	r24, r24
    1cfe:	29 f0       	breq	.+10     	; 0x1d0a <f_write+0x1de>
					ABORT(fp->fs, FR_DISK_ERR);
    1d00:	8c 81       	ldd	r24, Y+4	; 0x04
    1d02:	80 68       	ori	r24, 0x80	; 128
    1d04:	8c 83       	std	Y+4, r24	; 0x04
    1d06:	81 e0       	ldi	r24, 0x01	; 1
    1d08:	a9 c0       	rjmp	.+338    	; 0x1e5c <f_write+0x330>
#if _FS_TINY
				if (fp->fs->winsect - sect < cc) {	/* Refill sector cache if it gets invalidated by the direct write */
    1d0a:	e8 81       	ld	r30, Y
    1d0c:	f9 81       	ldd	r31, Y+1	; 0x01
    1d0e:	86 a5       	ldd	r24, Z+46	; 0x2e
    1d10:	97 a5       	ldd	r25, Z+47	; 0x2f
    1d12:	a0 a9       	ldd	r26, Z+48	; 0x30
    1d14:	b1 a9       	ldd	r27, Z+49	; 0x31
    1d16:	84 19       	sub	r24, r4
    1d18:	95 09       	sbc	r25, r5
    1d1a:	a6 09       	sbc	r26, r6
    1d1c:	b7 09       	sbc	r27, r7
    1d1e:	a7 01       	movw	r20, r14
    1d20:	60 e0       	ldi	r22, 0x00	; 0
    1d22:	70 e0       	ldi	r23, 0x00	; 0
    1d24:	84 17       	cp	r24, r20
    1d26:	95 07       	cpc	r25, r21
    1d28:	a6 07       	cpc	r26, r22
    1d2a:	b7 07       	cpc	r27, r23
    1d2c:	78 f4       	brcc	.+30     	; 0x1d4c <f_write+0x220>
					mem_cpy(fp->fs->win, wbuff + ((fp->fs->winsect - sect) * SS(fp->fs)), SS(fp->fs));
    1d2e:	98 2f       	mov	r25, r24
    1d30:	88 27       	eor	r24, r24
    1d32:	99 0f       	add	r25, r25
    1d34:	b5 01       	movw	r22, r10
    1d36:	68 0f       	add	r22, r24
    1d38:	79 1f       	adc	r23, r25
    1d3a:	40 e0       	ldi	r20, 0x00	; 0
    1d3c:	52 e0       	ldi	r21, 0x02	; 2
    1d3e:	cf 01       	movw	r24, r30
    1d40:	c2 96       	adiw	r24, 0x32	; 50
    1d42:	0e 94 b0 00 	call	0x160	; 0x160 <_ZL7mem_cpyPvPKvj>
					fp->fs->wflag = 0;
    1d46:	e8 81       	ld	r30, Y
    1d48:	f9 81       	ldd	r31, Y+1	; 0x01
    1d4a:	14 82       	std	Z+4, r1	; 0x04
				if (fp->dsect - sect < cc) { /* Refill sector cache if it gets invalidated by the direct write */
					mem_cpy(fp->buf, wbuff + ((fp->dsect - sect) * SS(fp->fs)), SS(fp->fs));
					fp->flag &= ~FA__DIRTY;
				}
#endif
				wcnt = SS(fp->fs) * cc;		/* Number of bytes transferred */
    1d4c:	fe 2c       	mov	r15, r14
    1d4e:	ee 24       	eor	r14, r14
    1d50:	ff 0c       	add	r15, r15
				continue;
    1d52:	53 c0       	rjmp	.+166    	; 0x1dfa <f_write+0x2ce>
			}
#if _FS_TINY
			if (fp->fptr >= fp->fsize) {	/* Avoid silly cache filling at growing edge */
    1d54:	4e 81       	ldd	r20, Y+6	; 0x06
    1d56:	5f 81       	ldd	r21, Y+7	; 0x07
    1d58:	68 85       	ldd	r22, Y+8	; 0x08
    1d5a:	79 85       	ldd	r23, Y+9	; 0x09
    1d5c:	8a 85       	ldd	r24, Y+10	; 0x0a
    1d5e:	9b 85       	ldd	r25, Y+11	; 0x0b
    1d60:	ac 85       	ldd	r26, Y+12	; 0x0c
    1d62:	bd 85       	ldd	r27, Y+13	; 0x0d
    1d64:	48 17       	cp	r20, r24
    1d66:	59 07       	cpc	r21, r25
    1d68:	6a 07       	cpc	r22, r26
    1d6a:	7b 07       	cpc	r23, r27
    1d6c:	80 f0       	brcs	.+32     	; 0x1d8e <f_write+0x262>
				if (sync_window(fp->fs)) ABORT(fp->fs, FR_DISK_ERR);
    1d6e:	c1 01       	movw	r24, r2
    1d70:	0e 94 1b 02 	call	0x436	; 0x436 <_ZL11sync_windowP5FATFS>
    1d74:	88 23       	and	r24, r24
    1d76:	29 f0       	breq	.+10     	; 0x1d82 <f_write+0x256>
    1d78:	8c 81       	ldd	r24, Y+4	; 0x04
    1d7a:	80 68       	ori	r24, 0x80	; 128
    1d7c:	8c 83       	std	Y+4, r24	; 0x04
    1d7e:	81 e0       	ldi	r24, 0x01	; 1
    1d80:	6d c0       	rjmp	.+218    	; 0x1e5c <f_write+0x330>
				fp->fs->winsect = sect;
    1d82:	e8 81       	ld	r30, Y
    1d84:	f9 81       	ldd	r31, Y+1	; 0x01
    1d86:	46 a6       	std	Z+46, r4	; 0x2e
    1d88:	57 a6       	std	Z+47, r5	; 0x2f
    1d8a:	60 aa       	std	Z+48, r6	; 0x30
    1d8c:	71 aa       	std	Z+49, r7	; 0x31
				if (fp->fptr < fp->fsize &&
					disk_read(fp->fs->drv, fp->buf, sect, 1) != RES_OK)
						ABORT(fp->fs, FR_DISK_ERR);
			}
#endif
			fp->dsect = sect;
    1d8e:	4e 8a       	std	Y+22, r4	; 0x16
    1d90:	5f 8a       	std	Y+23, r5	; 0x17
    1d92:	68 8e       	std	Y+24, r6	; 0x18
    1d94:	79 8e       	std	Y+25, r7	; 0x19
		}
		wcnt = SS(fp->fs) - ((UINT)fp->fptr % SS(fp->fs));/* Put partial sector into file I/O buffer */
    1d96:	8e 81       	ldd	r24, Y+6	; 0x06
    1d98:	9f 81       	ldd	r25, Y+7	; 0x07
    1d9a:	a8 85       	ldd	r26, Y+8	; 0x08
    1d9c:	b9 85       	ldd	r27, Y+9	; 0x09
    1d9e:	91 70       	andi	r25, 0x01	; 1
    1da0:	20 e0       	ldi	r18, 0x00	; 0
    1da2:	32 e0       	ldi	r19, 0x02	; 2
    1da4:	79 01       	movw	r14, r18
    1da6:	e8 1a       	sub	r14, r24
    1da8:	f9 0a       	sbc	r15, r25
		if (wcnt > btw) wcnt = btw;
    1daa:	ce 14       	cp	r12, r14
    1dac:	df 04       	cpc	r13, r15
    1dae:	08 f4       	brcc	.+2      	; 0x1db2 <f_write+0x286>
    1db0:	76 01       	movw	r14, r12
#if _FS_TINY
		if (move_window(fp->fs, fp->dsect))	/* Move sector window */
    1db2:	4e 89       	ldd	r20, Y+22	; 0x16
    1db4:	5f 89       	ldd	r21, Y+23	; 0x17
    1db6:	68 8d       	ldd	r22, Y+24	; 0x18
    1db8:	79 8d       	ldd	r23, Y+25	; 0x19
    1dba:	88 81       	ld	r24, Y
    1dbc:	99 81       	ldd	r25, Y+1	; 0x01
    1dbe:	0e 94 82 02 	call	0x504	; 0x504 <_ZL11move_windowP5FATFSm>
    1dc2:	88 23       	and	r24, r24
    1dc4:	29 f0       	breq	.+10     	; 0x1dd0 <f_write+0x2a4>
			ABORT(fp->fs, FR_DISK_ERR);
    1dc6:	8c 81       	ldd	r24, Y+4	; 0x04
    1dc8:	80 68       	ori	r24, 0x80	; 128
    1dca:	8c 83       	std	Y+4, r24	; 0x04
    1dcc:	81 e0       	ldi	r24, 0x01	; 1
    1dce:	46 c0       	rjmp	.+140    	; 0x1e5c <f_write+0x330>
		mem_cpy(&fp->fs->win[fp->fptr % SS(fp->fs)], wbuff, wcnt);	/* Fit partial sector */
    1dd0:	28 81       	ld	r18, Y
    1dd2:	39 81       	ldd	r19, Y+1	; 0x01
    1dd4:	4e 81       	ldd	r20, Y+6	; 0x06
    1dd6:	5f 81       	ldd	r21, Y+7	; 0x07
    1dd8:	68 85       	ldd	r22, Y+8	; 0x08
    1dda:	79 85       	ldd	r23, Y+9	; 0x09
    1ddc:	51 70       	andi	r21, 0x01	; 1
    1dde:	66 27       	eor	r22, r22
    1de0:	77 27       	eor	r23, r23
    1de2:	ca 01       	movw	r24, r20
    1de4:	c2 96       	adiw	r24, 0x32	; 50
    1de6:	a7 01       	movw	r20, r14
    1de8:	b5 01       	movw	r22, r10
    1dea:	82 0f       	add	r24, r18
    1dec:	93 1f       	adc	r25, r19
    1dee:	0e 94 b0 00 	call	0x160	; 0x160 <_ZL7mem_cpyPvPKvj>
		fp->fs->wflag = 1;
    1df2:	e8 81       	ld	r30, Y
    1df4:	f9 81       	ldd	r31, Y+1	; 0x01
    1df6:	81 e0       	ldi	r24, 0x01	; 1
    1df8:	84 83       	std	Z+4, r24	; 0x04
		LEAVE_FF(fp->fs, FR_INT_ERR);
	if (!(fp->flag & FA_WRITE))				/* Check access mode */
		LEAVE_FF(fp->fs, FR_DENIED);
	if ((DWORD)(fp->fsize + btw) < fp->fsize) btw = 0;	/* File size cannot reach 4GB */

	for ( ;  btw;							/* Repeat until all data written */
    1dfa:	ae 0c       	add	r10, r14
    1dfc:	bf 1c       	adc	r11, r15
    1dfe:	8e 81       	ldd	r24, Y+6	; 0x06
    1e00:	9f 81       	ldd	r25, Y+7	; 0x07
    1e02:	a8 85       	ldd	r26, Y+8	; 0x08
    1e04:	b9 85       	ldd	r27, Y+9	; 0x09
    1e06:	8e 0d       	add	r24, r14
    1e08:	9f 1d       	adc	r25, r15
    1e0a:	a1 1d       	adc	r26, r1
    1e0c:	b1 1d       	adc	r27, r1
    1e0e:	8e 83       	std	Y+6, r24	; 0x06
    1e10:	9f 83       	std	Y+7, r25	; 0x07
    1e12:	a8 87       	std	Y+8, r26	; 0x08
    1e14:	b9 87       	std	Y+9, r27	; 0x09
    1e16:	f4 01       	movw	r30, r8
    1e18:	80 81       	ld	r24, Z
    1e1a:	91 81       	ldd	r25, Z+1	; 0x01
    1e1c:	8e 0d       	add	r24, r14
    1e1e:	9f 1d       	adc	r25, r15
    1e20:	91 83       	std	Z+1, r25	; 0x01
    1e22:	80 83       	st	Z, r24
    1e24:	ce 18       	sub	r12, r14
    1e26:	df 08       	sbc	r13, r15
    1e28:	b5 ce       	rjmp	.-662    	; 0x1b94 <f_write+0x68>
		mem_cpy(&fp->buf[fp->fptr % SS(fp->fs)], wbuff, wcnt);	/* Fit partial sector */
		fp->flag |= FA__DIRTY;
#endif
	}

	if (fp->fptr > fp->fsize) fp->fsize = fp->fptr;	/* Update file size if needed */
    1e2a:	8e 81       	ldd	r24, Y+6	; 0x06
    1e2c:	9f 81       	ldd	r25, Y+7	; 0x07
    1e2e:	a8 85       	ldd	r26, Y+8	; 0x08
    1e30:	b9 85       	ldd	r27, Y+9	; 0x09
    1e32:	4a 85       	ldd	r20, Y+10	; 0x0a
    1e34:	5b 85       	ldd	r21, Y+11	; 0x0b
    1e36:	6c 85       	ldd	r22, Y+12	; 0x0c
    1e38:	7d 85       	ldd	r23, Y+13	; 0x0d
    1e3a:	48 17       	cp	r20, r24
    1e3c:	59 07       	cpc	r21, r25
    1e3e:	6a 07       	cpc	r22, r26
    1e40:	7b 07       	cpc	r23, r27
    1e42:	20 f4       	brcc	.+8      	; 0x1e4c <f_write+0x320>
    1e44:	8a 87       	std	Y+10, r24	; 0x0a
    1e46:	9b 87       	std	Y+11, r25	; 0x0b
    1e48:	ac 87       	std	Y+12, r26	; 0x0c
    1e4a:	bd 87       	std	Y+13, r27	; 0x0d
	fp->flag |= FA__WRITTEN;						/* Set file change flag */
    1e4c:	8c 81       	ldd	r24, Y+4	; 0x04
    1e4e:	80 62       	ori	r24, 0x20	; 32
    1e50:	8c 83       	std	Y+4, r24	; 0x04

	LEAVE_FF(fp->fs, FR_OK);
    1e52:	80 e0       	ldi	r24, 0x00	; 0
    1e54:	03 c0       	rjmp	.+6      	; 0x1e5c <f_write+0x330>
	*bw = 0;	/* Clear write byte counter */

	res = validate(fp);						/* Check validity */
	if (res != FR_OK) LEAVE_FF(fp->fs, res);
	if (fp->flag & FA__ERROR)				/* Aborted file? */
		LEAVE_FF(fp->fs, FR_INT_ERR);
    1e56:	82 e0       	ldi	r24, 0x02	; 2
    1e58:	01 c0       	rjmp	.+2      	; 0x1e5c <f_write+0x330>
	if (!(fp->flag & FA_WRITE))				/* Check access mode */
		LEAVE_FF(fp->fs, FR_DENIED);
    1e5a:	87 e0       	ldi	r24, 0x07	; 7

	if (fp->fptr > fp->fsize) fp->fsize = fp->fptr;	/* Update file size if needed */
	fp->flag |= FA__WRITTEN;						/* Set file change flag */

	LEAVE_FF(fp->fs, FR_OK);
}
    1e5c:	df 91       	pop	r29
    1e5e:	cf 91       	pop	r28
    1e60:	1f 91       	pop	r17
    1e62:	0f 91       	pop	r16
    1e64:	ff 90       	pop	r15
    1e66:	ef 90       	pop	r14
    1e68:	df 90       	pop	r13
    1e6a:	cf 90       	pop	r12
    1e6c:	bf 90       	pop	r11
    1e6e:	af 90       	pop	r10
    1e70:	9f 90       	pop	r9
    1e72:	8f 90       	pop	r8
    1e74:	7f 90       	pop	r7
    1e76:	6f 90       	pop	r6
    1e78:	5f 90       	pop	r5
    1e7a:	4f 90       	pop	r4
    1e7c:	3f 90       	pop	r3
    1e7e:	2f 90       	pop	r2
    1e80:	08 95       	ret

00001e82 <f_sync>:
/*-----------------------------------------------------------------------*/

FRESULT f_sync (
	FIL *fp		/* Pointer to the file object */
)
{
    1e82:	0f 93       	push	r16
    1e84:	1f 93       	push	r17
    1e86:	cf 93       	push	r28
    1e88:	df 93       	push	r29
    1e8a:	ec 01       	movw	r28, r24
	FRESULT res;
	DWORD tm;
	BYTE *dir;


	res = validate(fp);					/* Check validity of the object */
    1e8c:	0e 94 ba 02 	call	0x574	; 0x574 <_ZL8validatePv>
	if (res == FR_OK) {
    1e90:	81 11       	cpse	r24, r1
    1e92:	36 c0       	rjmp	.+108    	; 0x1f00 <f_sync+0x7e>
		if (fp->flag & FA__WRITTEN) {	/* Has the file been written? */
    1e94:	9c 81       	ldd	r25, Y+4	; 0x04
    1e96:	95 ff       	sbrs	r25, 5
    1e98:	33 c0       	rjmp	.+102    	; 0x1f00 <f_sync+0x7e>
					LEAVE_FF(fp->fs, FR_DISK_ERR);
				fp->flag &= ~FA__DIRTY;
			}
#endif
			/* Update the directory entry */
			res = move_window(fp->fs, fp->dir_sect);
    1e9a:	4a 8d       	ldd	r20, Y+26	; 0x1a
    1e9c:	5b 8d       	ldd	r21, Y+27	; 0x1b
    1e9e:	6c 8d       	ldd	r22, Y+28	; 0x1c
    1ea0:	7d 8d       	ldd	r23, Y+29	; 0x1d
    1ea2:	88 81       	ld	r24, Y
    1ea4:	99 81       	ldd	r25, Y+1	; 0x01
    1ea6:	0e 94 82 02 	call	0x504	; 0x504 <_ZL11move_windowP5FATFSm>
			if (res == FR_OK) {
    1eaa:	81 11       	cpse	r24, r1
    1eac:	29 c0       	rjmp	.+82     	; 0x1f00 <f_sync+0x7e>
				dir = fp->dir_ptr;
    1eae:	0e 8d       	ldd	r16, Y+30	; 0x1e
    1eb0:	1f 8d       	ldd	r17, Y+31	; 0x1f
				dir[DIR_Attr] |= AM_ARC;					/* Set archive bit */
    1eb2:	f8 01       	movw	r30, r16
    1eb4:	83 85       	ldd	r24, Z+11	; 0x0b
    1eb6:	80 62       	ori	r24, 0x20	; 32
    1eb8:	83 87       	std	Z+11, r24	; 0x0b
				ST_DWORD(dir+DIR_FileSize, fp->fsize);		/* Update file size */
    1eba:	8a 85       	ldd	r24, Y+10	; 0x0a
    1ebc:	9b 85       	ldd	r25, Y+11	; 0x0b
    1ebe:	ac 85       	ldd	r26, Y+12	; 0x0c
    1ec0:	bd 85       	ldd	r27, Y+13	; 0x0d
    1ec2:	84 8f       	std	Z+28, r24	; 0x1c
    1ec4:	95 8f       	std	Z+29, r25	; 0x1d
    1ec6:	a6 8f       	std	Z+30, r26	; 0x1e
    1ec8:	b7 8f       	std	Z+31, r27	; 0x1f
				st_clust(dir, fp->sclust);					/* Update start cluster */
    1eca:	4e 85       	ldd	r20, Y+14	; 0x0e
    1ecc:	5f 85       	ldd	r21, Y+15	; 0x0f
    1ece:	68 89       	ldd	r22, Y+16	; 0x10
    1ed0:	79 89       	ldd	r23, Y+17	; 0x11
    1ed2:	c8 01       	movw	r24, r16
    1ed4:	0e 94 1c 01 	call	0x238	; 0x238 <_ZL8st_clustPhm>
				tm = get_fattime();							/* Update updated time */
    1ed8:	0e 94 65 00 	call	0xca	; 0xca <get_fattime>
				ST_DWORD(dir+DIR_WrtTime, tm);
    1edc:	f8 01       	movw	r30, r16
    1ede:	66 8b       	std	Z+22, r22	; 0x16
    1ee0:	77 8b       	std	Z+23, r23	; 0x17
    1ee2:	80 8f       	std	Z+24, r24	; 0x18
    1ee4:	91 8f       	std	Z+25, r25	; 0x19
				ST_WORD(dir+DIR_LstAccDate, 0);
    1ee6:	13 8a       	std	Z+19, r1	; 0x13
    1ee8:	12 8a       	std	Z+18, r1	; 0x12
				fp->flag &= ~FA__WRITTEN;
    1eea:	8c 81       	ldd	r24, Y+4	; 0x04
    1eec:	8f 7d       	andi	r24, 0xDF	; 223
    1eee:	8c 83       	std	Y+4, r24	; 0x04
				fp->fs->wflag = 1;
    1ef0:	e8 81       	ld	r30, Y
    1ef2:	f9 81       	ldd	r31, Y+1	; 0x01
    1ef4:	81 e0       	ldi	r24, 0x01	; 1
    1ef6:	84 83       	std	Z+4, r24	; 0x04
				res = sync_fs(fp->fs);
    1ef8:	88 81       	ld	r24, Y
    1efa:	99 81       	ldd	r25, Y+1	; 0x01
    1efc:	0e 94 81 05 	call	0xb02	; 0xb02 <_ZL7sync_fsP5FATFS>
			}
		}
	}

	LEAVE_FF(fp->fs, res);
}
    1f00:	df 91       	pop	r29
    1f02:	cf 91       	pop	r28
    1f04:	1f 91       	pop	r17
    1f06:	0f 91       	pop	r16
    1f08:	08 95       	ret

00001f0a <f_close>:
/*-----------------------------------------------------------------------*/

FRESULT f_close (
	FIL *fp		/* Pointer to the file object to be closed */
)
{
    1f0a:	cf 93       	push	r28
    1f0c:	df 93       	push	r29
    1f0e:	ec 01       	movw	r28, r24
#endif
		if (res == FR_OK) fp->fs = 0;	/* Discard file object */
		LEAVE_FF(fs, res);
	}
#else
	res = f_sync(fp);		/* Flush cached data */
    1f10:	b8 df       	rcall	.-144    	; 0x1e82 <f_sync>
#else
		res = dec_lock(fp->lockid);
#endif
	}
#endif
	if (res == FR_OK) fp->fs = 0;	/* Discard file object */
    1f12:	81 11       	cpse	r24, r1
    1f14:	02 c0       	rjmp	.+4      	; 0x1f1a <f_close+0x10>
    1f16:	19 82       	std	Y+1, r1	; 0x01
    1f18:	18 82       	st	Y, r1
	return res;
#endif
}
    1f1a:	df 91       	pop	r29
    1f1c:	cf 91       	pop	r28
    1f1e:	08 95       	ret

00001f20 <_ZL6dly_usj>:

static
void dly_us (UINT n)	/* Delay n microseconds (avr-gcc -Os) */
{
	do {
		PINB;
    1f20:	23 b1       	in	r18, 0x03	; 3


static
void dly_us (UINT n)	/* Delay n microseconds (avr-gcc -Os) */
{
	do {
    1f22:	01 97       	sbiw	r24, 0x01	; 1
    1f24:	e9 f7       	brne	.-6      	; 0x1f20 <_ZL6dly_usj>
#endif
#if F_CPU >= 14000000
#error Too fast clock
#endif
	} while (--n);
}
    1f26:	08 95       	ret

00001f28 <_ZL8xmit_mmcPKhj>:
static
void xmit_mmc (
	const BYTE* buff,	/* Data to be sent */
	UINT bc				/* Number of bytes to send */
)
{
    1f28:	fc 01       	movw	r30, r24
	BYTE d;


	do {
		d = *buff++;	/* Get a byte to be sent */
    1f2a:	9f 01       	movw	r18, r30
    1f2c:	2f 5f       	subi	r18, 0xFF	; 255
    1f2e:	3f 4f       	sbci	r19, 0xFF	; 255
    1f30:	80 81       	ld	r24, Z
		if (d & 0x80) DI_H(); else DI_L();	/* bit7 */
    1f32:	88 23       	and	r24, r24
    1f34:	24 f4       	brge	.+8      	; 0x1f3e <_ZL8xmit_mmcPKhj+0x16>
    1f36:	95 b1       	in	r25, 0x05	; 5
    1f38:	90 62       	ori	r25, 0x20	; 32
    1f3a:	95 b9       	out	0x05, r25	; 5
    1f3c:	03 c0       	rjmp	.+6      	; 0x1f44 <_ZL8xmit_mmcPKhj+0x1c>
    1f3e:	95 b1       	in	r25, 0x05	; 5
    1f40:	9f 7d       	andi	r25, 0xDF	; 223
    1f42:	95 b9       	out	0x05, r25	; 5
		CK_H(); CK_L();
    1f44:	95 b1       	in	r25, 0x05	; 5
    1f46:	90 68       	ori	r25, 0x80	; 128
    1f48:	95 b9       	out	0x05, r25	; 5
    1f4a:	95 b1       	in	r25, 0x05	; 5
    1f4c:	9f 77       	andi	r25, 0x7F	; 127
    1f4e:	95 b9       	out	0x05, r25	; 5
		if (d & 0x40) DI_H(); else DI_L();	/* bit6 */
    1f50:	86 ff       	sbrs	r24, 6
    1f52:	04 c0       	rjmp	.+8      	; 0x1f5c <_ZL8xmit_mmcPKhj+0x34>
    1f54:	95 b1       	in	r25, 0x05	; 5
    1f56:	90 62       	ori	r25, 0x20	; 32
    1f58:	95 b9       	out	0x05, r25	; 5
    1f5a:	03 c0       	rjmp	.+6      	; 0x1f62 <_ZL8xmit_mmcPKhj+0x3a>
    1f5c:	95 b1       	in	r25, 0x05	; 5
    1f5e:	9f 7d       	andi	r25, 0xDF	; 223
    1f60:	95 b9       	out	0x05, r25	; 5
		CK_H(); CK_L();
    1f62:	95 b1       	in	r25, 0x05	; 5
    1f64:	90 68       	ori	r25, 0x80	; 128
    1f66:	95 b9       	out	0x05, r25	; 5
    1f68:	95 b1       	in	r25, 0x05	; 5
    1f6a:	9f 77       	andi	r25, 0x7F	; 127
    1f6c:	95 b9       	out	0x05, r25	; 5
		if (d & 0x20) DI_H(); else DI_L();	/* bit5 */
    1f6e:	85 ff       	sbrs	r24, 5
    1f70:	04 c0       	rjmp	.+8      	; 0x1f7a <_ZL8xmit_mmcPKhj+0x52>
    1f72:	95 b1       	in	r25, 0x05	; 5
    1f74:	90 62       	ori	r25, 0x20	; 32
    1f76:	95 b9       	out	0x05, r25	; 5
    1f78:	03 c0       	rjmp	.+6      	; 0x1f80 <_ZL8xmit_mmcPKhj+0x58>
    1f7a:	95 b1       	in	r25, 0x05	; 5
    1f7c:	9f 7d       	andi	r25, 0xDF	; 223
    1f7e:	95 b9       	out	0x05, r25	; 5
		CK_H(); CK_L();
    1f80:	95 b1       	in	r25, 0x05	; 5
    1f82:	90 68       	ori	r25, 0x80	; 128
    1f84:	95 b9       	out	0x05, r25	; 5
    1f86:	95 b1       	in	r25, 0x05	; 5
    1f88:	9f 77       	andi	r25, 0x7F	; 127
    1f8a:	95 b9       	out	0x05, r25	; 5
		if (d & 0x10) DI_H(); else DI_L();	/* bit4 */
    1f8c:	84 ff       	sbrs	r24, 4
    1f8e:	04 c0       	rjmp	.+8      	; 0x1f98 <_ZL8xmit_mmcPKhj+0x70>
    1f90:	95 b1       	in	r25, 0x05	; 5
    1f92:	90 62       	ori	r25, 0x20	; 32
    1f94:	95 b9       	out	0x05, r25	; 5
    1f96:	03 c0       	rjmp	.+6      	; 0x1f9e <_ZL8xmit_mmcPKhj+0x76>
    1f98:	95 b1       	in	r25, 0x05	; 5
    1f9a:	9f 7d       	andi	r25, 0xDF	; 223
    1f9c:	95 b9       	out	0x05, r25	; 5
		CK_H(); CK_L();
    1f9e:	95 b1       	in	r25, 0x05	; 5
    1fa0:	90 68       	ori	r25, 0x80	; 128
    1fa2:	95 b9       	out	0x05, r25	; 5
    1fa4:	95 b1       	in	r25, 0x05	; 5
    1fa6:	9f 77       	andi	r25, 0x7F	; 127
    1fa8:	95 b9       	out	0x05, r25	; 5
		if (d & 0x08) DI_H(); else DI_L();	/* bit3 */
    1faa:	83 ff       	sbrs	r24, 3
    1fac:	04 c0       	rjmp	.+8      	; 0x1fb6 <_ZL8xmit_mmcPKhj+0x8e>
    1fae:	95 b1       	in	r25, 0x05	; 5
    1fb0:	90 62       	ori	r25, 0x20	; 32
    1fb2:	95 b9       	out	0x05, r25	; 5
    1fb4:	03 c0       	rjmp	.+6      	; 0x1fbc <_ZL8xmit_mmcPKhj+0x94>
    1fb6:	95 b1       	in	r25, 0x05	; 5
    1fb8:	9f 7d       	andi	r25, 0xDF	; 223
    1fba:	95 b9       	out	0x05, r25	; 5
		CK_H(); CK_L();
    1fbc:	95 b1       	in	r25, 0x05	; 5
    1fbe:	90 68       	ori	r25, 0x80	; 128
    1fc0:	95 b9       	out	0x05, r25	; 5
    1fc2:	95 b1       	in	r25, 0x05	; 5
    1fc4:	9f 77       	andi	r25, 0x7F	; 127
    1fc6:	95 b9       	out	0x05, r25	; 5
		if (d & 0x04) DI_H(); else DI_L();	/* bit2 */
    1fc8:	82 ff       	sbrs	r24, 2
    1fca:	04 c0       	rjmp	.+8      	; 0x1fd4 <_ZL8xmit_mmcPKhj+0xac>
    1fcc:	95 b1       	in	r25, 0x05	; 5
    1fce:	90 62       	ori	r25, 0x20	; 32
    1fd0:	95 b9       	out	0x05, r25	; 5
    1fd2:	03 c0       	rjmp	.+6      	; 0x1fda <_ZL8xmit_mmcPKhj+0xb2>
    1fd4:	95 b1       	in	r25, 0x05	; 5
    1fd6:	9f 7d       	andi	r25, 0xDF	; 223
    1fd8:	95 b9       	out	0x05, r25	; 5
		CK_H(); CK_L();
    1fda:	95 b1       	in	r25, 0x05	; 5
    1fdc:	90 68       	ori	r25, 0x80	; 128
    1fde:	95 b9       	out	0x05, r25	; 5
    1fe0:	95 b1       	in	r25, 0x05	; 5
    1fe2:	9f 77       	andi	r25, 0x7F	; 127
    1fe4:	95 b9       	out	0x05, r25	; 5
		if (d & 0x02) DI_H(); else DI_L();	/* bit1 */
    1fe6:	81 ff       	sbrs	r24, 1
    1fe8:	04 c0       	rjmp	.+8      	; 0x1ff2 <_ZL8xmit_mmcPKhj+0xca>
    1fea:	95 b1       	in	r25, 0x05	; 5
    1fec:	90 62       	ori	r25, 0x20	; 32
    1fee:	95 b9       	out	0x05, r25	; 5
    1ff0:	03 c0       	rjmp	.+6      	; 0x1ff8 <_ZL8xmit_mmcPKhj+0xd0>
    1ff2:	95 b1       	in	r25, 0x05	; 5
    1ff4:	9f 7d       	andi	r25, 0xDF	; 223
    1ff6:	95 b9       	out	0x05, r25	; 5
		CK_H(); CK_L();
    1ff8:	95 b1       	in	r25, 0x05	; 5
    1ffa:	90 68       	ori	r25, 0x80	; 128
    1ffc:	95 b9       	out	0x05, r25	; 5
    1ffe:	95 b1       	in	r25, 0x05	; 5
    2000:	9f 77       	andi	r25, 0x7F	; 127
    2002:	95 b9       	out	0x05, r25	; 5
		if (d & 0x01) DI_H(); else DI_L();	/* bit0 */
    2004:	80 ff       	sbrs	r24, 0
    2006:	04 c0       	rjmp	.+8      	; 0x2010 <_ZL8xmit_mmcPKhj+0xe8>
    2008:	85 b1       	in	r24, 0x05	; 5
    200a:	80 62       	ori	r24, 0x20	; 32
    200c:	85 b9       	out	0x05, r24	; 5
    200e:	03 c0       	rjmp	.+6      	; 0x2016 <_ZL8xmit_mmcPKhj+0xee>
    2010:	85 b1       	in	r24, 0x05	; 5
    2012:	8f 7d       	andi	r24, 0xDF	; 223
    2014:	85 b9       	out	0x05, r24	; 5
		CK_H(); CK_L();
    2016:	85 b1       	in	r24, 0x05	; 5
    2018:	80 68       	ori	r24, 0x80	; 128
    201a:	85 b9       	out	0x05, r24	; 5
    201c:	85 b1       	in	r24, 0x05	; 5
    201e:	8f 77       	andi	r24, 0x7F	; 127
    2020:	85 b9       	out	0x05, r24	; 5
)
{
	BYTE d;


	do {
    2022:	61 50       	subi	r22, 0x01	; 1
    2024:	71 09       	sbc	r23, r1
		d = *buff++;	/* Get a byte to be sent */
    2026:	f9 01       	movw	r30, r18
)
{
	BYTE d;


	do {
    2028:	09 f0       	breq	.+2      	; 0x202c <_ZL8xmit_mmcPKhj+0x104>
    202a:	7f cf       	rjmp	.-258    	; 0x1f2a <_ZL8xmit_mmcPKhj+0x2>
		if (d & 0x02) DI_H(); else DI_L();	/* bit1 */
		CK_H(); CK_L();
		if (d & 0x01) DI_H(); else DI_L();	/* bit0 */
		CK_H(); CK_L();
	} while (--bc);
}
    202c:	08 95       	ret

0000202e <_ZL8rcvr_mmcPhj>:
static
void rcvr_mmc (
	BYTE *buff,	/* Pointer to read buffer */
	UINT bc		/* Number of bytes to receive */
)
{
    202e:	fc 01       	movw	r30, r24
	BYTE r;


	DI_H();	/* Send 0xFF */
    2030:	85 b1       	in	r24, 0x05	; 5
    2032:	80 62       	ori	r24, 0x20	; 32
    2034:	85 b9       	out	0x05, r24	; 5
    2036:	01 c0       	rjmp	.+2      	; 0x203a <_ZL8rcvr_mmcPhj+0xc>
		CK_H(); CK_L();
		r <<= 1; if (DO) r++;	/* bit1 */
		CK_H(); CK_L();
		r <<= 1; if (DO) r++;	/* bit0 */
		CK_H(); CK_L();
		*buff++ = r;			/* Store a received byte */
    2038:	f9 01       	movw	r30, r18


	DI_H();	/* Send 0xFF */

	do {
		r = 0;	 if (DO) r++;	/* bit7 */
    203a:	1e 99       	sbic	0x03, 6	; 3
    203c:	02 c0       	rjmp	.+4      	; 0x2042 <_ZL8rcvr_mmcPhj+0x14>
    203e:	90 e0       	ldi	r25, 0x00	; 0
    2040:	01 c0       	rjmp	.+2      	; 0x2044 <_ZL8rcvr_mmcPhj+0x16>
    2042:	91 e0       	ldi	r25, 0x01	; 1
		CK_H(); CK_L();
    2044:	85 b1       	in	r24, 0x05	; 5
    2046:	80 68       	ori	r24, 0x80	; 128
    2048:	85 b9       	out	0x05, r24	; 5
    204a:	85 b1       	in	r24, 0x05	; 5
    204c:	8f 77       	andi	r24, 0x7F	; 127
    204e:	85 b9       	out	0x05, r24	; 5
		r <<= 1; if (DO) r++;	/* bit6 */
    2050:	99 0f       	add	r25, r25
    2052:	1e 99       	sbic	0x03, 6	; 3
    2054:	9f 5f       	subi	r25, 0xFF	; 255
		CK_H(); CK_L();
    2056:	85 b1       	in	r24, 0x05	; 5
    2058:	80 68       	ori	r24, 0x80	; 128
    205a:	85 b9       	out	0x05, r24	; 5
    205c:	85 b1       	in	r24, 0x05	; 5
    205e:	8f 77       	andi	r24, 0x7F	; 127
    2060:	85 b9       	out	0x05, r24	; 5
		r <<= 1; if (DO) r++;	/* bit5 */
    2062:	99 0f       	add	r25, r25
    2064:	1e 99       	sbic	0x03, 6	; 3
    2066:	9f 5f       	subi	r25, 0xFF	; 255
		CK_H(); CK_L();
    2068:	85 b1       	in	r24, 0x05	; 5
    206a:	80 68       	ori	r24, 0x80	; 128
    206c:	85 b9       	out	0x05, r24	; 5
    206e:	85 b1       	in	r24, 0x05	; 5
    2070:	8f 77       	andi	r24, 0x7F	; 127
    2072:	85 b9       	out	0x05, r24	; 5
		r <<= 1; if (DO) r++;	/* bit4 */
    2074:	99 0f       	add	r25, r25
    2076:	1e 99       	sbic	0x03, 6	; 3
    2078:	9f 5f       	subi	r25, 0xFF	; 255
		CK_H(); CK_L();
    207a:	85 b1       	in	r24, 0x05	; 5
    207c:	80 68       	ori	r24, 0x80	; 128
    207e:	85 b9       	out	0x05, r24	; 5
    2080:	85 b1       	in	r24, 0x05	; 5
    2082:	8f 77       	andi	r24, 0x7F	; 127
    2084:	85 b9       	out	0x05, r24	; 5
		r <<= 1; if (DO) r++;	/* bit3 */
    2086:	99 0f       	add	r25, r25
    2088:	1e 99       	sbic	0x03, 6	; 3
    208a:	9f 5f       	subi	r25, 0xFF	; 255
		CK_H(); CK_L();
    208c:	85 b1       	in	r24, 0x05	; 5
    208e:	80 68       	ori	r24, 0x80	; 128
    2090:	85 b9       	out	0x05, r24	; 5
    2092:	85 b1       	in	r24, 0x05	; 5
    2094:	8f 77       	andi	r24, 0x7F	; 127
    2096:	85 b9       	out	0x05, r24	; 5
		r <<= 1; if (DO) r++;	/* bit2 */
    2098:	99 0f       	add	r25, r25
    209a:	1e 99       	sbic	0x03, 6	; 3
    209c:	9f 5f       	subi	r25, 0xFF	; 255
		CK_H(); CK_L();
    209e:	85 b1       	in	r24, 0x05	; 5
    20a0:	80 68       	ori	r24, 0x80	; 128
    20a2:	85 b9       	out	0x05, r24	; 5
    20a4:	85 b1       	in	r24, 0x05	; 5
    20a6:	8f 77       	andi	r24, 0x7F	; 127
    20a8:	85 b9       	out	0x05, r24	; 5
		r <<= 1; if (DO) r++;	/* bit1 */
    20aa:	99 0f       	add	r25, r25
    20ac:	1e 99       	sbic	0x03, 6	; 3
    20ae:	9f 5f       	subi	r25, 0xFF	; 255
		CK_H(); CK_L();
    20b0:	85 b1       	in	r24, 0x05	; 5
    20b2:	80 68       	ori	r24, 0x80	; 128
    20b4:	85 b9       	out	0x05, r24	; 5
    20b6:	85 b1       	in	r24, 0x05	; 5
    20b8:	8f 77       	andi	r24, 0x7F	; 127
    20ba:	85 b9       	out	0x05, r24	; 5
		r <<= 1; if (DO) r++;	/* bit0 */
    20bc:	99 0f       	add	r25, r25
    20be:	1e 99       	sbic	0x03, 6	; 3
    20c0:	9f 5f       	subi	r25, 0xFF	; 255
		CK_H(); CK_L();
    20c2:	25 b1       	in	r18, 0x05	; 5
    20c4:	20 68       	ori	r18, 0x80	; 128
    20c6:	25 b9       	out	0x05, r18	; 5
    20c8:	25 b1       	in	r18, 0x05	; 5
    20ca:	2f 77       	andi	r18, 0x7F	; 127
    20cc:	25 b9       	out	0x05, r18	; 5
		*buff++ = r;			/* Store a received byte */
    20ce:	9f 01       	movw	r18, r30
    20d0:	2f 5f       	subi	r18, 0xFF	; 255
    20d2:	3f 4f       	sbci	r19, 0xFF	; 255
    20d4:	90 83       	st	Z, r25
	BYTE r;


	DI_H();	/* Send 0xFF */

	do {
    20d6:	61 50       	subi	r22, 0x01	; 1
    20d8:	71 09       	sbc	r23, r1
    20da:	09 f0       	breq	.+2      	; 0x20de <_ZL8rcvr_mmcPhj+0xb0>
    20dc:	ad cf       	rjmp	.-166    	; 0x2038 <_ZL8rcvr_mmcPhj+0xa>
		CK_H(); CK_L();
		r <<= 1; if (DO) r++;	/* bit0 */
		CK_H(); CK_L();
		*buff++ = r;			/* Store a received byte */
	} while (--bc);
}
    20de:	08 95       	ret

000020e0 <_ZL10wait_readyv>:
/* Wait for card ready                                                   */
/*-----------------------------------------------------------------------*/

static
int wait_ready (void)	/* 1:OK, 0:Timeout */
{
    20e0:	0f 93       	push	r16
    20e2:	1f 93       	push	r17
    20e4:	cf 93       	push	r28
    20e6:	df 93       	push	r29
    20e8:	1f 92       	push	r1
    20ea:	cd b7       	in	r28, 0x3d	; 61
    20ec:	de b7       	in	r29, 0x3e	; 62
	BYTE d;
	UINT tmr;


	for (tmr = 5000; tmr; tmr--) {	/* Wait for ready in timeout of 500ms */
    20ee:	08 e8       	ldi	r16, 0x88	; 136
    20f0:	13 e1       	ldi	r17, 0x13	; 19
    20f2:	01 15       	cp	r16, r1
    20f4:	11 05       	cpc	r17, r1
    20f6:	71 f0       	breq	.+28     	; 0x2114 <_ZL10wait_readyv+0x34>
		rcvr_mmc(&d, 1);
    20f8:	61 e0       	ldi	r22, 0x01	; 1
    20fa:	70 e0       	ldi	r23, 0x00	; 0
    20fc:	ce 01       	movw	r24, r28
    20fe:	01 96       	adiw	r24, 0x01	; 1
    2100:	96 df       	rcall	.-212    	; 0x202e <_ZL8rcvr_mmcPhj>
		if (d == 0xFF) break;
    2102:	89 81       	ldd	r24, Y+1	; 0x01
    2104:	8f 3f       	cpi	r24, 0xFF	; 255
    2106:	31 f0       	breq	.+12     	; 0x2114 <_ZL10wait_readyv+0x34>
		dly_us(100);
    2108:	84 e6       	ldi	r24, 0x64	; 100
    210a:	90 e0       	ldi	r25, 0x00	; 0
    210c:	09 df       	rcall	.-494    	; 0x1f20 <_ZL6dly_usj>
{
	BYTE d;
	UINT tmr;


	for (tmr = 5000; tmr; tmr--) {	/* Wait for ready in timeout of 500ms */
    210e:	01 50       	subi	r16, 0x01	; 1
    2110:	11 09       	sbc	r17, r1
    2112:	ef cf       	rjmp	.-34     	; 0x20f2 <_ZL10wait_readyv+0x12>
		rcvr_mmc(&d, 1);
		if (d == 0xFF) break;
		dly_us(100);
	}

	return tmr ? 1 : 0;
    2114:	01 2b       	or	r16, r17
    2116:	19 f0       	breq	.+6      	; 0x211e <_ZL10wait_readyv+0x3e>
    2118:	81 e0       	ldi	r24, 0x01	; 1
    211a:	90 e0       	ldi	r25, 0x00	; 0
    211c:	02 c0       	rjmp	.+4      	; 0x2122 <_ZL10wait_readyv+0x42>
    211e:	80 e0       	ldi	r24, 0x00	; 0
    2120:	90 e0       	ldi	r25, 0x00	; 0
}
    2122:	0f 90       	pop	r0
    2124:	df 91       	pop	r29
    2126:	cf 91       	pop	r28
    2128:	1f 91       	pop	r17
    212a:	0f 91       	pop	r16
    212c:	08 95       	ret

0000212e <_ZL8deselectv>:
/* Deselect the card and release SPI bus                                 */
/*-----------------------------------------------------------------------*/

static
void deselect (void)
{
    212e:	cf 93       	push	r28
    2130:	df 93       	push	r29
    2132:	1f 92       	push	r1
    2134:	cd b7       	in	r28, 0x3d	; 61
    2136:	de b7       	in	r29, 0x3e	; 62
	BYTE d;

	CS_H();
    2138:	85 b1       	in	r24, 0x05	; 5
    213a:	82 60       	ori	r24, 0x02	; 2
    213c:	85 b9       	out	0x05, r24	; 5
	rcvr_mmc(&d, 1);	/* Dummy clock (force DO hi-z for multiple slave SPI) */
    213e:	61 e0       	ldi	r22, 0x01	; 1
    2140:	70 e0       	ldi	r23, 0x00	; 0
    2142:	ce 01       	movw	r24, r28
    2144:	01 96       	adiw	r24, 0x01	; 1
    2146:	73 df       	rcall	.-282    	; 0x202e <_ZL8rcvr_mmcPhj>
}
    2148:	0f 90       	pop	r0
    214a:	df 91       	pop	r29
    214c:	cf 91       	pop	r28
    214e:	08 95       	ret

00002150 <_ZL6selectv>:
/* Select the card and wait for ready                                    */
/*-----------------------------------------------------------------------*/

static
int select (void)	/* 1:OK, 0:Timeout */
{
    2150:	0f 93       	push	r16
    2152:	1f 93       	push	r17
    2154:	cf 93       	push	r28
    2156:	df 93       	push	r29
    2158:	1f 92       	push	r1
    215a:	cd b7       	in	r28, 0x3d	; 61
    215c:	de b7       	in	r29, 0x3e	; 62
	BYTE d;

	CS_L();
    215e:	85 b1       	in	r24, 0x05	; 5
    2160:	8d 7f       	andi	r24, 0xFD	; 253
    2162:	85 b9       	out	0x05, r24	; 5
	rcvr_mmc(&d, 1);	/* Dummy clock (force DO enabled) */
    2164:	61 e0       	ldi	r22, 0x01	; 1
    2166:	70 e0       	ldi	r23, 0x00	; 0
    2168:	ce 01       	movw	r24, r28
    216a:	01 96       	adiw	r24, 0x01	; 1
    216c:	60 df       	rcall	.-320    	; 0x202e <_ZL8rcvr_mmcPhj>

	if (wait_ready()) return 1;	/* OK */
    216e:	b8 df       	rcall	.-144    	; 0x20e0 <_ZL10wait_readyv>
    2170:	8c 01       	movw	r16, r24
    2172:	89 2b       	or	r24, r25
    2174:	11 f4       	brne	.+4      	; 0x217a <_ZL6selectv+0x2a>
	deselect();
    2176:	db df       	rcall	.-74     	; 0x212e <_ZL8deselectv>
    2178:	02 c0       	rjmp	.+4      	; 0x217e <_ZL6selectv+0x2e>
	return 0;			/* Failed */
    217a:	01 e0       	ldi	r16, 0x01	; 1
	BYTE d;

	CS_L();
	rcvr_mmc(&d, 1);	/* Dummy clock (force DO enabled) */

	if (wait_ready()) return 1;	/* OK */
    217c:	10 e0       	ldi	r17, 0x00	; 0
    217e:	c8 01       	movw	r24, r16
	deselect();
	return 0;			/* Failed */
}
    2180:	0f 90       	pop	r0
    2182:	df 91       	pop	r29
    2184:	cf 91       	pop	r28
    2186:	1f 91       	pop	r17
    2188:	0f 91       	pop	r16
    218a:	08 95       	ret

0000218c <_ZL14rcvr_datablockPhj>:
    218c:	cf 92       	push	r12
static
int rcvr_datablock (	/* 1:OK, 0:Failed */
	BYTE *buff,			/* Data buffer to store received data */
	UINT btr			/* Byte count */
)
{
    218e:	df 92       	push	r13
    2190:	ef 92       	push	r14
    2192:	ff 92       	push	r15
    2194:	0f 93       	push	r16
    2196:	1f 93       	push	r17
    2198:	cf 93       	push	r28
    219a:	df 93       	push	r29
    219c:	00 d0       	rcall	.+0      	; 0x219e <_ZL14rcvr_datablockPhj+0x12>
    219e:	cd b7       	in	r28, 0x3d	; 61
    21a0:	de b7       	in	r29, 0x3e	; 62
    21a2:	7c 01       	movw	r14, r24
    21a4:	6b 01       	movw	r12, r22
	BYTE d[2];
	UINT tmr;


	for (tmr = 1000; tmr; tmr--) {	/* Wait for data packet in timeout of 100ms */
    21a6:	08 ee       	ldi	r16, 0xE8	; 232
    21a8:	13 e0       	ldi	r17, 0x03	; 3
    21aa:	01 15       	cp	r16, r1
    21ac:	11 05       	cpc	r17, r1
    21ae:	71 f0       	breq	.+28     	; 0x21cc <_ZL14rcvr_datablockPhj+0x40>
		rcvr_mmc(d, 1);
    21b0:	61 e0       	ldi	r22, 0x01	; 1
    21b2:	70 e0       	ldi	r23, 0x00	; 0
    21b4:	ce 01       	movw	r24, r28
    21b6:	01 96       	adiw	r24, 0x01	; 1
    21b8:	3a df       	rcall	.-396    	; 0x202e <_ZL8rcvr_mmcPhj>
		if (d[0] != 0xFF) break;
    21ba:	89 81       	ldd	r24, Y+1	; 0x01
    21bc:	8f 3f       	cpi	r24, 0xFF	; 255
    21be:	31 f4       	brne	.+12     	; 0x21cc <_ZL14rcvr_datablockPhj+0x40>
		dly_us(100);
    21c0:	84 e6       	ldi	r24, 0x64	; 100
    21c2:	90 e0       	ldi	r25, 0x00	; 0
    21c4:	ad de       	rcall	.-678    	; 0x1f20 <_ZL6dly_usj>
{
	BYTE d[2];
	UINT tmr;


	for (tmr = 1000; tmr; tmr--) {	/* Wait for data packet in timeout of 100ms */
    21c6:	01 50       	subi	r16, 0x01	; 1
    21c8:	11 09       	sbc	r17, r1
    21ca:	ef cf       	rjmp	.-34     	; 0x21aa <_ZL14rcvr_datablockPhj+0x1e>
		rcvr_mmc(d, 1);
		if (d[0] != 0xFF) break;
		dly_us(100);
	}
	if (d[0] != 0xFE) return 0;		/* If not valid data token, return with error */
    21cc:	89 81       	ldd	r24, Y+1	; 0x01
    21ce:	8e 3f       	cpi	r24, 0xFE	; 254
    21d0:	59 f4       	brne	.+22     	; 0x21e8 <_ZL14rcvr_datablockPhj+0x5c>

	rcvr_mmc(buff, btr);			/* Receive the data block into buffer */
    21d2:	b6 01       	movw	r22, r12
    21d4:	c7 01       	movw	r24, r14
    21d6:	2b df       	rcall	.-426    	; 0x202e <_ZL8rcvr_mmcPhj>
	rcvr_mmc(d, 2);					/* Discard CRC */
    21d8:	62 e0       	ldi	r22, 0x02	; 2
    21da:	70 e0       	ldi	r23, 0x00	; 0
    21dc:	ce 01       	movw	r24, r28
    21de:	01 96       	adiw	r24, 0x01	; 1
    21e0:	26 df       	rcall	.-436    	; 0x202e <_ZL8rcvr_mmcPhj>

	return 1;						/* Return with success */
    21e2:	81 e0       	ldi	r24, 0x01	; 1
    21e4:	90 e0       	ldi	r25, 0x00	; 0
    21e6:	02 c0       	rjmp	.+4      	; 0x21ec <_ZL14rcvr_datablockPhj+0x60>
	for (tmr = 1000; tmr; tmr--) {	/* Wait for data packet in timeout of 100ms */
		rcvr_mmc(d, 1);
		if (d[0] != 0xFF) break;
		dly_us(100);
	}
	if (d[0] != 0xFE) return 0;		/* If not valid data token, return with error */
    21e8:	80 e0       	ldi	r24, 0x00	; 0
    21ea:	90 e0       	ldi	r25, 0x00	; 0

	rcvr_mmc(buff, btr);			/* Receive the data block into buffer */
	rcvr_mmc(d, 2);					/* Discard CRC */

	return 1;						/* Return with success */
}
    21ec:	0f 90       	pop	r0
    21ee:	0f 90       	pop	r0
    21f0:	df 91       	pop	r29
    21f2:	cf 91       	pop	r28
    21f4:	1f 91       	pop	r17
    21f6:	0f 91       	pop	r16
    21f8:	ff 90       	pop	r15
    21fa:	ef 90       	pop	r14
    21fc:	df 90       	pop	r13
    21fe:	cf 90       	pop	r12
    2200:	08 95       	ret

00002202 <_ZL14xmit_datablockPKhh>:
static
int xmit_datablock (	/* 1:OK, 0:Failed */
	const BYTE *buff,	/* 512 byte data block to be transmitted */
	BYTE token			/* Data/Stop token */
)
{
    2202:	ef 92       	push	r14
    2204:	ff 92       	push	r15
    2206:	1f 93       	push	r17
    2208:	cf 93       	push	r28
    220a:	df 93       	push	r29
    220c:	00 d0       	rcall	.+0      	; 0x220e <_ZL14xmit_datablockPKhh+0xc>
    220e:	cd b7       	in	r28, 0x3d	; 61
    2210:	de b7       	in	r29, 0x3e	; 62
    2212:	7c 01       	movw	r14, r24
    2214:	16 2f       	mov	r17, r22
	BYTE d[2];


	if (!wait_ready()) return 0;
    2216:	64 df       	rcall	.-312    	; 0x20e0 <_ZL10wait_readyv>
    2218:	00 97       	sbiw	r24, 0x00	; 0
    221a:	11 f1       	breq	.+68     	; 0x2260 <_ZL14xmit_datablockPKhh+0x5e>

	d[0] = token;
    221c:	19 83       	std	Y+1, r17	; 0x01
	xmit_mmc(d, 1);				/* Xmit a token */
    221e:	61 e0       	ldi	r22, 0x01	; 1
    2220:	70 e0       	ldi	r23, 0x00	; 0
    2222:	ce 01       	movw	r24, r28
    2224:	01 96       	adiw	r24, 0x01	; 1
    2226:	80 de       	rcall	.-768    	; 0x1f28 <_ZL8xmit_mmcPKhj>
	if (token != 0xFD) {		/* Is it data token? */
    2228:	1d 3f       	cpi	r17, 0xFD	; 253
    222a:	a9 f0       	breq	.+42     	; 0x2256 <_ZL14xmit_datablockPKhh+0x54>
		xmit_mmc(buff, 512);	/* Xmit the 512 byte data block to MMC */
    222c:	60 e0       	ldi	r22, 0x00	; 0
    222e:	72 e0       	ldi	r23, 0x02	; 2
    2230:	c7 01       	movw	r24, r14
    2232:	7a de       	rcall	.-780    	; 0x1f28 <_ZL8xmit_mmcPKhj>
		rcvr_mmc(d, 2);			/* Xmit dummy CRC (0xFF,0xFF) */
    2234:	62 e0       	ldi	r22, 0x02	; 2
    2236:	70 e0       	ldi	r23, 0x00	; 0
    2238:	ce 01       	movw	r24, r28
    223a:	01 96       	adiw	r24, 0x01	; 1
    223c:	f8 de       	rcall	.-528    	; 0x202e <_ZL8rcvr_mmcPhj>
		rcvr_mmc(d, 1);			/* Receive data response */
    223e:	61 e0       	ldi	r22, 0x01	; 1
    2240:	70 e0       	ldi	r23, 0x00	; 0
    2242:	ce 01       	movw	r24, r28
    2244:	01 96       	adiw	r24, 0x01	; 1
    2246:	f3 de       	rcall	.-538    	; 0x202e <_ZL8rcvr_mmcPhj>
		if ((d[0] & 0x1F) != 0x05)	/* If not accepted, return with error */
    2248:	89 81       	ldd	r24, Y+1	; 0x01
    224a:	8f 71       	andi	r24, 0x1F	; 31
    224c:	85 30       	cpi	r24, 0x05	; 5
    224e:	31 f0       	breq	.+12     	; 0x225c <_ZL14xmit_datablockPKhh+0x5a>
			return 0;
    2250:	80 e0       	ldi	r24, 0x00	; 0
    2252:	90 e0       	ldi	r25, 0x00	; 0
    2254:	05 c0       	rjmp	.+10     	; 0x2260 <_ZL14xmit_datablockPKhh+0x5e>
	}

	return 1;
    2256:	81 e0       	ldi	r24, 0x01	; 1
    2258:	90 e0       	ldi	r25, 0x00	; 0
    225a:	02 c0       	rjmp	.+4      	; 0x2260 <_ZL14xmit_datablockPKhh+0x5e>
    225c:	81 e0       	ldi	r24, 0x01	; 1
    225e:	90 e0       	ldi	r25, 0x00	; 0
}
    2260:	0f 90       	pop	r0
    2262:	0f 90       	pop	r0
    2264:	df 91       	pop	r29
    2266:	cf 91       	pop	r28
    2268:	1f 91       	pop	r17
    226a:	ff 90       	pop	r15
    226c:	ef 90       	pop	r14
    226e:	08 95       	ret

00002270 <_ZL8send_cmdhm>:
static
BYTE send_cmd (		/* Returns command response (bit7==1:Send failed)*/
	BYTE cmd,		/* Command byte */
	DWORD arg		/* Argument */
)
{
    2270:	df 92       	push	r13
    2272:	ef 92       	push	r14
    2274:	ff 92       	push	r15
    2276:	0f 93       	push	r16
    2278:	1f 93       	push	r17
    227a:	cf 93       	push	r28
    227c:	df 93       	push	r29
    227e:	cd b7       	in	r28, 0x3d	; 61
    2280:	de b7       	in	r29, 0x3e	; 62
    2282:	27 97       	sbiw	r28, 0x07	; 7
    2284:	0f b6       	in	r0, 0x3f	; 63
    2286:	f8 94       	cli
    2288:	de bf       	out	0x3e, r29	; 62
    228a:	0f be       	out	0x3f, r0	; 63
    228c:	cd bf       	out	0x3d, r28	; 61
    228e:	18 2f       	mov	r17, r24
    2290:	04 2f       	mov	r16, r20
    2292:	f5 2e       	mov	r15, r21
    2294:	e6 2e       	mov	r14, r22
    2296:	d7 2e       	mov	r13, r23
	BYTE n, d, buf[6];


	if (cmd & 0x80) {	/* ACMD<n> is the command sequence of CMD55-CMD<n> */
    2298:	88 23       	and	r24, r24
    229a:	44 f4       	brge	.+16     	; 0x22ac <_ZL8send_cmdhm+0x3c>
		cmd &= 0x7F;
    229c:	1f 77       	andi	r17, 0x7F	; 127
		n = send_cmd(CMD55, 0);
    229e:	40 e0       	ldi	r20, 0x00	; 0
    22a0:	50 e0       	ldi	r21, 0x00	; 0
    22a2:	ba 01       	movw	r22, r20
    22a4:	87 e3       	ldi	r24, 0x37	; 55
    22a6:	e4 df       	rcall	.-56     	; 0x2270 <_ZL8send_cmdhm>
		if (n > 1) return n;
    22a8:	82 30       	cpi	r24, 0x02	; 2
	}

	/* Select the card and wait for ready */
	deselect();
    22aa:	a0 f5       	brcc	.+104    	; 0x2314 <_ZL8send_cmdhm+0xa4>
	if (!select()) return 0xFF;
    22ac:	40 df       	rcall	.-384    	; 0x212e <_ZL8deselectv>
    22ae:	50 df       	rcall	.-352    	; 0x2150 <_ZL6selectv>
    22b0:	89 2b       	or	r24, r25
    22b2:	79 f1       	breq	.+94     	; 0x2312 <_ZL8send_cmdhm+0xa2>

	/* Send a command packet */
	buf[0] = 0x40 | cmd;			/* Start + Command index */
    22b4:	81 2f       	mov	r24, r17
    22b6:	80 64       	ori	r24, 0x40	; 64
    22b8:	8a 83       	std	Y+2, r24	; 0x02
	buf[1] = (BYTE)(arg >> 24);		/* Argument[31..24] */
    22ba:	db 82       	std	Y+3, r13	; 0x03
	buf[2] = (BYTE)(arg >> 16);		/* Argument[23..16] */
    22bc:	ec 82       	std	Y+4, r14	; 0x04
	buf[3] = (BYTE)(arg >> 8);		/* Argument[15..8] */
    22be:	fd 82       	std	Y+5, r15	; 0x05
	buf[4] = (BYTE)arg;				/* Argument[7..0] */
    22c0:	0e 83       	std	Y+6, r16	; 0x06
	n = 0x01;						/* Dummy CRC + Stop */
	if (cmd == CMD0) n = 0x95;		/* (valid CRC for CMD0(0)) */
    22c2:	11 23       	and	r17, r17
    22c4:	11 f0       	breq	.+4      	; 0x22ca <_ZL8send_cmdhm+0x5a>
	buf[0] = 0x40 | cmd;			/* Start + Command index */
	buf[1] = (BYTE)(arg >> 24);		/* Argument[31..24] */
	buf[2] = (BYTE)(arg >> 16);		/* Argument[23..16] */
	buf[3] = (BYTE)(arg >> 8);		/* Argument[15..8] */
	buf[4] = (BYTE)arg;				/* Argument[7..0] */
	n = 0x01;						/* Dummy CRC + Stop */
    22c6:	81 e0       	ldi	r24, 0x01	; 1
    22c8:	01 c0       	rjmp	.+2      	; 0x22cc <_ZL8send_cmdhm+0x5c>
	if (cmd == CMD0) n = 0x95;		/* (valid CRC for CMD0(0)) */
    22ca:	85 e9       	ldi	r24, 0x95	; 149
	if (cmd == CMD8) n = 0x87;		/* (valid CRC for CMD8(0x1AA)) */
    22cc:	18 30       	cpi	r17, 0x08	; 8
    22ce:	09 f4       	brne	.+2      	; 0x22d2 <_ZL8send_cmdhm+0x62>
    22d0:	87 e8       	ldi	r24, 0x87	; 135
	buf[5] = n;
    22d2:	8f 83       	std	Y+7, r24	; 0x07
	xmit_mmc(buf, 6);
    22d4:	66 e0       	ldi	r22, 0x06	; 6
    22d6:	70 e0       	ldi	r23, 0x00	; 0
    22d8:	ce 01       	movw	r24, r28
    22da:	02 96       	adiw	r24, 0x02	; 2
    22dc:	25 de       	rcall	.-950    	; 0x1f28 <_ZL8xmit_mmcPKhj>

	/* Receive command response */
	if (cmd == CMD12) rcvr_mmc(&d, 1);	/* Skip a stuff byte when stop reading */
    22de:	1c 30       	cpi	r17, 0x0C	; 12
    22e0:	29 f4       	brne	.+10     	; 0x22ec <_ZL8send_cmdhm+0x7c>
    22e2:	61 e0       	ldi	r22, 0x01	; 1
    22e4:	70 e0       	ldi	r23, 0x00	; 0
    22e6:	ce 01       	movw	r24, r28
    22e8:	01 96       	adiw	r24, 0x01	; 1
    22ea:	a1 de       	rcall	.-702    	; 0x202e <_ZL8rcvr_mmcPhj>
	n = 10;								/* Wait for a valid response in timeout of 10 attempts */
	do
		rcvr_mmc(&d, 1);
    22ec:	1a e0       	ldi	r17, 0x0A	; 10
    22ee:	61 e0       	ldi	r22, 0x01	; 1
    22f0:	70 e0       	ldi	r23, 0x00	; 0
    22f2:	ce 01       	movw	r24, r28
    22f4:	01 96       	adiw	r24, 0x01	; 1
    22f6:	9b de       	rcall	.-714    	; 0x202e <_ZL8rcvr_mmcPhj>
	while ((d & 0x80) && --n);
    22f8:	89 81       	ldd	r24, Y+1	; 0x01
    22fa:	88 23       	and	r24, r24
    22fc:	24 f4       	brge	.+8      	; 0x2306 <_ZL8send_cmdhm+0x96>
    22fe:	11 50       	subi	r17, 0x01	; 1
    2300:	21 f0       	breq	.+8      	; 0x230a <_ZL8send_cmdhm+0x9a>
    2302:	91 e0       	ldi	r25, 0x01	; 1
    2304:	03 c0       	rjmp	.+6      	; 0x230c <_ZL8send_cmdhm+0x9c>
    2306:	90 e0       	ldi	r25, 0x00	; 0
    2308:	01 c0       	rjmp	.+2      	; 0x230c <_ZL8send_cmdhm+0x9c>
    230a:	90 e0       	ldi	r25, 0x00	; 0
	xmit_mmc(buf, 6);

	/* Receive command response */
	if (cmd == CMD12) rcvr_mmc(&d, 1);	/* Skip a stuff byte when stop reading */
	n = 10;								/* Wait for a valid response in timeout of 10 attempts */
	do
    230c:	91 11       	cpse	r25, r1
    230e:	ef cf       	rjmp	.-34     	; 0x22ee <_ZL8send_cmdhm+0x7e>
    2310:	01 c0       	rjmp	.+2      	; 0x2314 <_ZL8send_cmdhm+0xa4>
		if (n > 1) return n;
	}

	/* Select the card and wait for ready */
	deselect();
	if (!select()) return 0xFF;
    2312:	8f ef       	ldi	r24, 0xFF	; 255
	do
		rcvr_mmc(&d, 1);
	while ((d & 0x80) && --n);

	return d;			/* Return with the response value */
}
    2314:	27 96       	adiw	r28, 0x07	; 7
    2316:	0f b6       	in	r0, 0x3f	; 63
    2318:	f8 94       	cli
    231a:	de bf       	out	0x3e, r29	; 62
    231c:	0f be       	out	0x3f, r0	; 63
    231e:	cd bf       	out	0x3d, r28	; 61
    2320:	df 91       	pop	r29
    2322:	cf 91       	pop	r28
    2324:	1f 91       	pop	r17
    2326:	0f 91       	pop	r16
    2328:	ff 90       	pop	r15
    232a:	ef 90       	pop	r14
    232c:	df 90       	pop	r13
    232e:	08 95       	ret

00002330 <disk_status>:

DSTATUS disk_status (
	BYTE drv			/* Drive number (always 0) */
)
{
	if (drv) return STA_NOINIT;
    2330:	81 11       	cpse	r24, r1
    2332:	03 c0       	rjmp	.+6      	; 0x233a <disk_status+0xa>

	return Stat;
    2334:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <_ZL4Stat>
    2338:	08 95       	ret

DSTATUS disk_status (
	BYTE drv			/* Drive number (always 0) */
)
{
	if (drv) return STA_NOINIT;
    233a:	81 e0       	ldi	r24, 0x01	; 1

	return Stat;
}
    233c:	08 95       	ret

0000233e <disk_initialize>:
/*-----------------------------------------------------------------------*/

DSTATUS disk_initialize (
	BYTE drv		/* Physical drive number (0) */
)
{
    233e:	ef 92       	push	r14
    2340:	ff 92       	push	r15
    2342:	0f 93       	push	r16
    2344:	1f 93       	push	r17
    2346:	cf 93       	push	r28
    2348:	df 93       	push	r29
    234a:	00 d0       	rcall	.+0      	; 0x234c <disk_initialize+0xe>
    234c:	00 d0       	rcall	.+0      	; 0x234e <disk_initialize+0x10>
    234e:	cd b7       	in	r28, 0x3d	; 61
    2350:	de b7       	in	r29, 0x3e	; 62
	BYTE n, ty, cmd, buf[4];
	UINT tmr;
	DSTATUS s;


	if (drv) return RES_NOTRDY;
    2352:	81 11       	cpse	r24, r1
    2354:	b8 c0       	rjmp	.+368    	; 0x24c6 <disk_initialize+0x188>

	dly_us(10000);			/* 10ms */
    2356:	80 e1       	ldi	r24, 0x10	; 16
    2358:	97 e2       	ldi	r25, 0x27	; 39
    235a:	e2 dd       	rcall	.-1084   	; 0x1f20 <_ZL6dly_usj>
	CS_INIT(); CS_H();		/* Initialize port pin tied to CS */
    235c:	84 b1       	in	r24, 0x04	; 4
    235e:	82 60       	ori	r24, 0x02	; 2
    2360:	84 b9       	out	0x04, r24	; 4
    2362:	85 b1       	in	r24, 0x05	; 5
    2364:	82 60       	ori	r24, 0x02	; 2
    2366:	85 b9       	out	0x05, r24	; 5
	CK_INIT(); CK_L();		/* Initialize port pin tied to SCLK */
    2368:	84 b1       	in	r24, 0x04	; 4
    236a:	80 68       	ori	r24, 0x80	; 128
    236c:	84 b9       	out	0x04, r24	; 4
    236e:	85 b1       	in	r24, 0x05	; 5
    2370:	8f 77       	andi	r24, 0x7F	; 127
    2372:	85 b9       	out	0x05, r24	; 5
	DI_INIT();				/* Initialize port pin tied to DI */
    2374:	84 b1       	in	r24, 0x04	; 4
    2376:	80 62       	ori	r24, 0x20	; 32
    2378:	84 b9       	out	0x04, r24	; 4
	DO_INIT();				/* Initialize port pin tied to DO */

	for (n = 10; n; n--) rcvr_mmc(buf, 1);	/* Apply 80 dummy clocks and the card gets ready to receive command */
    237a:	1a e0       	ldi	r17, 0x0A	; 10
    237c:	11 23       	and	r17, r17
    237e:	39 f0       	breq	.+14     	; 0x238e <disk_initialize+0x50>
    2380:	61 e0       	ldi	r22, 0x01	; 1
    2382:	70 e0       	ldi	r23, 0x00	; 0
    2384:	ce 01       	movw	r24, r28
    2386:	01 96       	adiw	r24, 0x01	; 1
    2388:	52 de       	rcall	.-860    	; 0x202e <_ZL8rcvr_mmcPhj>
    238a:	11 50       	subi	r17, 0x01	; 1
    238c:	f7 cf       	rjmp	.-18     	; 0x237c <disk_initialize+0x3e>

	ty = 0;
	if (send_cmd(CMD0, 0) == 1) {			/* Enter Idle state */
    238e:	40 e0       	ldi	r20, 0x00	; 0
    2390:	50 e0       	ldi	r21, 0x00	; 0
    2392:	ba 01       	movw	r22, r20
    2394:	80 e0       	ldi	r24, 0x00	; 0
    2396:	6c df       	rcall	.-296    	; 0x2270 <_ZL8send_cmdhm>
    2398:	81 30       	cpi	r24, 0x01	; 1
    239a:	09 f0       	breq	.+2      	; 0x239e <disk_initialize+0x60>
    239c:	7d c0       	rjmp	.+250    	; 0x2498 <disk_initialize+0x15a>
		if (send_cmd(CMD8, 0x1AA) == 1) {	/* SDv2? */
    239e:	4a ea       	ldi	r20, 0xAA	; 170
    23a0:	51 e0       	ldi	r21, 0x01	; 1
    23a2:	60 e0       	ldi	r22, 0x00	; 0
    23a4:	70 e0       	ldi	r23, 0x00	; 0
    23a6:	88 e0       	ldi	r24, 0x08	; 8
    23a8:	63 df       	rcall	.-314    	; 0x2270 <_ZL8send_cmdhm>
    23aa:	81 30       	cpi	r24, 0x01	; 1
    23ac:	09 f0       	breq	.+2      	; 0x23b0 <disk_initialize+0x72>
    23ae:	3e c0       	rjmp	.+124    	; 0x242c <disk_initialize+0xee>
			rcvr_mmc(buf, 4);							/* Get trailing return value of R7 resp */
    23b0:	64 e0       	ldi	r22, 0x04	; 4
    23b2:	70 e0       	ldi	r23, 0x00	; 0
    23b4:	ce 01       	movw	r24, r28
    23b6:	01 96       	adiw	r24, 0x01	; 1
    23b8:	3a de       	rcall	.-908    	; 0x202e <_ZL8rcvr_mmcPhj>
			if (buf[2] == 0x01 && buf[3] == 0xAA) {		/* The card can work at vdd range of 2.7-3.6V */
    23ba:	8b 81       	ldd	r24, Y+3	; 0x03
    23bc:	81 30       	cpi	r24, 0x01	; 1
    23be:	09 f0       	breq	.+2      	; 0x23c2 <disk_initialize+0x84>
    23c0:	6d c0       	rjmp	.+218    	; 0x249c <disk_initialize+0x15e>
    23c2:	8c 81       	ldd	r24, Y+4	; 0x04
    23c4:	8a 3a       	cpi	r24, 0xAA	; 170
    23c6:	09 f0       	breq	.+2      	; 0x23ca <disk_initialize+0x8c>
    23c8:	6b c0       	rjmp	.+214    	; 0x24a0 <disk_initialize+0x162>
    23ca:	08 ee       	ldi	r16, 0xE8	; 232
    23cc:	13 e0       	ldi	r17, 0x03	; 3
				for (tmr = 1000; tmr; tmr--) {			/* Wait for leaving idle state (ACMD41 with HCS bit) */
    23ce:	01 15       	cp	r16, r1
    23d0:	11 05       	cpc	r17, r1
    23d2:	71 f0       	breq	.+28     	; 0x23f0 <disk_initialize+0xb2>
					if (send_cmd(ACMD41, 1UL << 30) == 0) break;
    23d4:	40 e0       	ldi	r20, 0x00	; 0
    23d6:	50 e0       	ldi	r21, 0x00	; 0
    23d8:	60 e0       	ldi	r22, 0x00	; 0
    23da:	70 e4       	ldi	r23, 0x40	; 64
    23dc:	89 ea       	ldi	r24, 0xA9	; 169
    23de:	48 df       	rcall	.-368    	; 0x2270 <_ZL8send_cmdhm>
    23e0:	88 23       	and	r24, r24
					dly_us(1000);
    23e2:	31 f0       	breq	.+12     	; 0x23f0 <disk_initialize+0xb2>
    23e4:	88 ee       	ldi	r24, 0xE8	; 232
    23e6:	93 e0       	ldi	r25, 0x03	; 3
    23e8:	9b dd       	rcall	.-1226   	; 0x1f20 <_ZL6dly_usj>
	ty = 0;
	if (send_cmd(CMD0, 0) == 1) {			/* Enter Idle state */
		if (send_cmd(CMD8, 0x1AA) == 1) {	/* SDv2? */
			rcvr_mmc(buf, 4);							/* Get trailing return value of R7 resp */
			if (buf[2] == 0x01 && buf[3] == 0xAA) {		/* The card can work at vdd range of 2.7-3.6V */
				for (tmr = 1000; tmr; tmr--) {			/* Wait for leaving idle state (ACMD41 with HCS bit) */
    23ea:	01 50       	subi	r16, 0x01	; 1
    23ec:	11 09       	sbc	r17, r1
					if (send_cmd(ACMD41, 1UL << 30) == 0) break;
					dly_us(1000);
				}
				if (tmr && send_cmd(CMD58, 0) == 0) {	/* Check CCS bit in the OCR */
    23ee:	ef cf       	rjmp	.-34     	; 0x23ce <disk_initialize+0x90>
    23f0:	01 2b       	or	r16, r17
    23f2:	49 f0       	breq	.+18     	; 0x2406 <disk_initialize+0xc8>
    23f4:	40 e0       	ldi	r20, 0x00	; 0
    23f6:	50 e0       	ldi	r21, 0x00	; 0
    23f8:	ba 01       	movw	r22, r20
    23fa:	8a e3       	ldi	r24, 0x3A	; 58
    23fc:	39 df       	rcall	.-398    	; 0x2270 <_ZL8send_cmdhm>
    23fe:	81 11       	cpse	r24, r1
    2400:	04 c0       	rjmp	.+8      	; 0x240a <disk_initialize+0xcc>
    2402:	81 e0       	ldi	r24, 0x01	; 1
    2404:	03 c0       	rjmp	.+6      	; 0x240c <disk_initialize+0xce>
    2406:	80 e0       	ldi	r24, 0x00	; 0
    2408:	01 c0       	rjmp	.+2      	; 0x240c <disk_initialize+0xce>
    240a:	80 e0       	ldi	r24, 0x00	; 0
    240c:	88 23       	and	r24, r24
    240e:	09 f4       	brne	.+2      	; 0x2412 <disk_initialize+0xd4>
					rcvr_mmc(buf, 4);
    2410:	49 c0       	rjmp	.+146    	; 0x24a4 <disk_initialize+0x166>
    2412:	64 e0       	ldi	r22, 0x04	; 4
    2414:	70 e0       	ldi	r23, 0x00	; 0
    2416:	ce 01       	movw	r24, r28
    2418:	01 96       	adiw	r24, 0x01	; 1
    241a:	09 de       	rcall	.-1006   	; 0x202e <_ZL8rcvr_mmcPhj>
					ty = (buf[0] & 0x40) ? CT_SD2 | CT_BLOCK : CT_SD2;	/* SDv2 */
    241c:	89 81       	ldd	r24, Y+1	; 0x01
    241e:	86 ff       	sbrs	r24, 6
    2420:	43 c0       	rjmp	.+134    	; 0x24a8 <disk_initialize+0x16a>
    2422:	0f 2e       	mov	r0, r31
    2424:	fc e0       	ldi	r31, 0x0C	; 12
    2426:	ff 2e       	mov	r15, r31
    2428:	f0 2d       	mov	r31, r0
				}
			}
		} else {							/* SDv1 or MMCv3 */
			if (send_cmd(ACMD41, 0) <= 1) 	{
    242a:	43 c0       	rjmp	.+134    	; 0x24b2 <disk_initialize+0x174>
    242c:	40 e0       	ldi	r20, 0x00	; 0
    242e:	50 e0       	ldi	r21, 0x00	; 0
    2430:	ba 01       	movw	r22, r20
    2432:	89 ea       	ldi	r24, 0xA9	; 169
    2434:	1d df       	rcall	.-454    	; 0x2270 <_ZL8send_cmdhm>
    2436:	82 30       	cpi	r24, 0x02	; 2
    2438:	40 f4       	brcc	.+16     	; 0x244a <disk_initialize+0x10c>
				ty = CT_SD1; cmd = ACMD41;	/* SDv1 */
    243a:	0f 2e       	mov	r0, r31
    243c:	f9 ea       	ldi	r31, 0xA9	; 169
    243e:	ef 2e       	mov	r14, r31
    2440:	f0 2d       	mov	r31, r0
    2442:	68 94       	set
    2444:	ff 24       	eor	r15, r15
    2446:	f1 f8       	bld	r15, 1
    2448:	04 c0       	rjmp	.+8      	; 0x2452 <disk_initialize+0x114>
			} else {
				ty = CT_MMC; cmd = CMD1;	/* MMCv3 */
    244a:	ee 24       	eor	r14, r14
    244c:	e3 94       	inc	r14
    244e:	ff 24       	eor	r15, r15
			}
			for (tmr = 1000; tmr; tmr--) {			/* Wait for leaving idle state */
    2450:	f3 94       	inc	r15
    2452:	08 ee       	ldi	r16, 0xE8	; 232
    2454:	13 e0       	ldi	r17, 0x03	; 3
    2456:	01 15       	cp	r16, r1
				if (send_cmd(cmd, 0) == 0) break;
    2458:	11 05       	cpc	r17, r1
    245a:	69 f0       	breq	.+26     	; 0x2476 <disk_initialize+0x138>
    245c:	40 e0       	ldi	r20, 0x00	; 0
    245e:	50 e0       	ldi	r21, 0x00	; 0
    2460:	ba 01       	movw	r22, r20
    2462:	8e 2d       	mov	r24, r14
    2464:	05 df       	rcall	.-502    	; 0x2270 <_ZL8send_cmdhm>
    2466:	88 23       	and	r24, r24
				dly_us(1000);
    2468:	31 f0       	breq	.+12     	; 0x2476 <disk_initialize+0x138>
    246a:	88 ee       	ldi	r24, 0xE8	; 232
    246c:	93 e0       	ldi	r25, 0x03	; 3
			if (send_cmd(ACMD41, 0) <= 1) 	{
				ty = CT_SD1; cmd = ACMD41;	/* SDv1 */
			} else {
				ty = CT_MMC; cmd = CMD1;	/* MMCv3 */
			}
			for (tmr = 1000; tmr; tmr--) {			/* Wait for leaving idle state */
    246e:	58 dd       	rcall	.-1360   	; 0x1f20 <_ZL6dly_usj>
    2470:	01 50       	subi	r16, 0x01	; 1
    2472:	11 09       	sbc	r17, r1
				if (send_cmd(cmd, 0) == 0) break;
				dly_us(1000);
			}
			if (!tmr || send_cmd(CMD16, 512) != 0)	/* Set R/W block length to 512 */
    2474:	f0 cf       	rjmp	.-32     	; 0x2456 <disk_initialize+0x118>
    2476:	01 2b       	or	r16, r17
    2478:	49 f0       	breq	.+18     	; 0x248c <disk_initialize+0x14e>
    247a:	40 e0       	ldi	r20, 0x00	; 0
    247c:	52 e0       	ldi	r21, 0x02	; 2
    247e:	60 e0       	ldi	r22, 0x00	; 0
    2480:	70 e0       	ldi	r23, 0x00	; 0
    2482:	80 e1       	ldi	r24, 0x10	; 16
    2484:	f5 de       	rcall	.-534    	; 0x2270 <_ZL8send_cmdhm>
    2486:	81 11       	cpse	r24, r1
    2488:	03 c0       	rjmp	.+6      	; 0x2490 <disk_initialize+0x152>
    248a:	03 c0       	rjmp	.+6      	; 0x2492 <disk_initialize+0x154>
    248c:	81 e0       	ldi	r24, 0x01	; 1
    248e:	01 c0       	rjmp	.+2      	; 0x2492 <disk_initialize+0x154>
    2490:	81 e0       	ldi	r24, 0x01	; 1
    2492:	81 11       	cpse	r24, r1
    2494:	0d c0       	rjmp	.+26     	; 0x24b0 <disk_initialize+0x172>
    2496:	0d c0       	rjmp	.+26     	; 0x24b2 <disk_initialize+0x174>
	DI_INIT();				/* Initialize port pin tied to DI */
	DO_INIT();				/* Initialize port pin tied to DO */

	for (n = 10; n; n--) rcvr_mmc(buf, 1);	/* Apply 80 dummy clocks and the card gets ready to receive command */

	ty = 0;
    2498:	f1 2c       	mov	r15, r1
    249a:	0b c0       	rjmp	.+22     	; 0x24b2 <disk_initialize+0x174>
    249c:	f1 2c       	mov	r15, r1
    249e:	09 c0       	rjmp	.+18     	; 0x24b2 <disk_initialize+0x174>
    24a0:	f1 2c       	mov	r15, r1
    24a2:	07 c0       	rjmp	.+14     	; 0x24b2 <disk_initialize+0x174>
    24a4:	f1 2c       	mov	r15, r1
					if (send_cmd(ACMD41, 1UL << 30) == 0) break;
					dly_us(1000);
				}
				if (tmr && send_cmd(CMD58, 0) == 0) {	/* Check CCS bit in the OCR */
					rcvr_mmc(buf, 4);
					ty = (buf[0] & 0x40) ? CT_SD2 | CT_BLOCK : CT_SD2;	/* SDv2 */
    24a6:	05 c0       	rjmp	.+10     	; 0x24b2 <disk_initialize+0x174>
    24a8:	68 94       	set
    24aa:	ff 24       	eor	r15, r15
    24ac:	f2 f8       	bld	r15, 2
			for (tmr = 1000; tmr; tmr--) {			/* Wait for leaving idle state */
				if (send_cmd(cmd, 0) == 0) break;
				dly_us(1000);
			}
			if (!tmr || send_cmd(CMD16, 512) != 0)	/* Set R/W block length to 512 */
				ty = 0;
    24ae:	01 c0       	rjmp	.+2      	; 0x24b2 <disk_initialize+0x174>
		}
	}
	CardType = ty;
    24b0:	f1 2c       	mov	r15, r1
    24b2:	f0 92 f2 03 	sts	0x03F2, r15	; 0x8003f2 <_ZL8CardType>
	s = ty ? 0 : STA_NOINIT;
    24b6:	11 e0       	ldi	r17, 0x01	; 1
    24b8:	f1 10       	cpse	r15, r1
	Stat = s;
    24ba:	10 e0       	ldi	r17, 0x00	; 0
    24bc:	10 93 06 01 	sts	0x0106, r17	; 0x800106 <_ZL4Stat>

	deselect();
    24c0:	36 de       	rcall	.-916    	; 0x212e <_ZL8deselectv>

	return s;
    24c2:	81 2f       	mov	r24, r17
    24c4:	01 c0       	rjmp	.+2      	; 0x24c8 <disk_initialize+0x18a>
	BYTE n, ty, cmd, buf[4];
	UINT tmr;
	DSTATUS s;


	if (drv) return RES_NOTRDY;
    24c6:	83 e0       	ldi	r24, 0x03	; 3
	Stat = s;

	deselect();

	return s;
}
    24c8:	0f 90       	pop	r0
    24ca:	0f 90       	pop	r0
    24cc:	0f 90       	pop	r0
    24ce:	0f 90       	pop	r0
    24d0:	df 91       	pop	r29
    24d2:	cf 91       	pop	r28
    24d4:	1f 91       	pop	r17
    24d6:	0f 91       	pop	r16
    24d8:	ff 90       	pop	r15
    24da:	ef 90       	pop	r14
    24dc:	08 95       	ret

000024de <disk_read>:
	BYTE drv,			/* Physical drive nmuber (0) */
	BYTE *buff,			/* Pointer to the data buffer to store read data */
	DWORD sector,		/* Start sector number (LBA) */
	BYTE count			/* Sector count (1..256(0)) */
)
{
    24de:	cf 92       	push	r12
    24e0:	df 92       	push	r13
    24e2:	ef 92       	push	r14
    24e4:	ff 92       	push	r15
    24e6:	0f 93       	push	r16
    24e8:	cf 93       	push	r28
    24ea:	df 93       	push	r29
    24ec:	eb 01       	movw	r28, r22
    24ee:	69 01       	movw	r12, r18
    24f0:	7a 01       	movw	r14, r20
	if (disk_status(drv) & STA_NOINIT) return RES_NOTRDY;
    24f2:	1e df       	rcall	.-452    	; 0x2330 <disk_status>
    24f4:	80 fd       	sbrc	r24, 0
    24f6:	3e c0       	rjmp	.+124    	; 0x2574 <disk_read+0x96>
	if (!(CardType & CT_BLOCK)) sector *= 512;	/* Convert LBA to byte address if needed */
    24f8:	80 91 f2 03 	lds	r24, 0x03F2	; 0x8003f2 <_ZL8CardType>
    24fc:	83 fd       	sbrc	r24, 3
    24fe:	09 c0       	rjmp	.+18     	; 0x2512 <disk_read+0x34>
    2500:	0b 2e       	mov	r0, r27
    2502:	b9 e0       	ldi	r27, 0x09	; 9
    2504:	cc 0c       	add	r12, r12
    2506:	dd 1c       	adc	r13, r13
    2508:	ee 1c       	adc	r14, r14
    250a:	ff 1c       	adc	r15, r15
    250c:	ba 95       	dec	r27
    250e:	d1 f7       	brne	.-12     	; 0x2504 <disk_read+0x26>
    2510:	b0 2d       	mov	r27, r0

	if (count == 1) {	/* Single block read */
    2512:	01 30       	cpi	r16, 0x01	; 1
    2514:	a1 f4       	brne	.+40     	; 0x253e <disk_read+0x60>
		if ((send_cmd(CMD17, sector) == 0)	/* READ_SINGLE_BLOCK */
    2516:	b7 01       	movw	r22, r14
    2518:	a6 01       	movw	r20, r12
    251a:	81 e1       	ldi	r24, 0x11	; 17
    251c:	a9 de       	rcall	.-686    	; 0x2270 <_ZL8send_cmdhm>
			&& rcvr_datablock(buff, 512))
    251e:	81 11       	cpse	r24, r1
    2520:	08 c0       	rjmp	.+16     	; 0x2532 <disk_read+0x54>
    2522:	60 e0       	ldi	r22, 0x00	; 0
    2524:	72 e0       	ldi	r23, 0x02	; 2
    2526:	ce 01       	movw	r24, r28
    2528:	31 de       	rcall	.-926    	; 0x218c <_ZL14rcvr_datablockPhj>
    252a:	89 2b       	or	r24, r25
    252c:	21 f0       	breq	.+8      	; 0x2536 <disk_read+0x58>
    252e:	81 e0       	ldi	r24, 0x01	; 1
    2530:	03 c0       	rjmp	.+6      	; 0x2538 <disk_read+0x5a>
    2532:	80 e0       	ldi	r24, 0x00	; 0
    2534:	01 c0       	rjmp	.+2      	; 0x2538 <disk_read+0x5a>
    2536:	80 e0       	ldi	r24, 0x00	; 0
{
	if (disk_status(drv) & STA_NOINIT) return RES_NOTRDY;
	if (!(CardType & CT_BLOCK)) sector *= 512;	/* Convert LBA to byte address if needed */

	if (count == 1) {	/* Single block read */
		if ((send_cmd(CMD17, sector) == 0)	/* READ_SINGLE_BLOCK */
    2538:	81 11       	cpse	r24, r1
    253a:	16 c0       	rjmp	.+44     	; 0x2568 <disk_read+0x8a>
    253c:	16 c0       	rjmp	.+44     	; 0x256a <disk_read+0x8c>
			&& rcvr_datablock(buff, 512))
			count = 0;
	}
	else {				/* Multiple block read */
		if (send_cmd(CMD18, sector) == 0) {	/* READ_MULTIPLE_BLOCK */
    253e:	b7 01       	movw	r22, r14
    2540:	a6 01       	movw	r20, r12
    2542:	82 e1       	ldi	r24, 0x12	; 18
    2544:	95 de       	rcall	.-726    	; 0x2270 <_ZL8send_cmdhm>
    2546:	81 11       	cpse	r24, r1
    2548:	10 c0       	rjmp	.+32     	; 0x256a <disk_read+0x8c>
			do {
				if (!rcvr_datablock(buff, 512)) break;
    254a:	60 e0       	ldi	r22, 0x00	; 0
    254c:	72 e0       	ldi	r23, 0x02	; 2
    254e:	ce 01       	movw	r24, r28
    2550:	1d de       	rcall	.-966    	; 0x218c <_ZL14rcvr_datablockPhj>
    2552:	89 2b       	or	r24, r25
    2554:	19 f0       	breq	.+6      	; 0x255c <disk_read+0x7e>
    2556:	de 5f       	subi	r29, 0xFE	; 254
				buff += 512;
    2558:	01 50       	subi	r16, 0x01	; 1
			&& rcvr_datablock(buff, 512))
			count = 0;
	}
	else {				/* Multiple block read */
		if (send_cmd(CMD18, sector) == 0) {	/* READ_MULTIPLE_BLOCK */
			do {
    255a:	b9 f7       	brne	.-18     	; 0x254a <disk_read+0x6c>
				if (!rcvr_datablock(buff, 512)) break;
				buff += 512;
			} while (--count);
			send_cmd(CMD12, 0);				/* STOP_TRANSMISSION */
    255c:	40 e0       	ldi	r20, 0x00	; 0
    255e:	50 e0       	ldi	r21, 0x00	; 0
    2560:	ba 01       	movw	r22, r20
    2562:	8c e0       	ldi	r24, 0x0C	; 12
    2564:	85 de       	rcall	.-758    	; 0x2270 <_ZL8send_cmdhm>
    2566:	01 c0       	rjmp	.+2      	; 0x256a <disk_read+0x8c>
	if (!(CardType & CT_BLOCK)) sector *= 512;	/* Convert LBA to byte address if needed */

	if (count == 1) {	/* Single block read */
		if ((send_cmd(CMD17, sector) == 0)	/* READ_SINGLE_BLOCK */
			&& rcvr_datablock(buff, 512))
			count = 0;
    2568:	00 e0       	ldi	r16, 0x00	; 0
				buff += 512;
			} while (--count);
			send_cmd(CMD12, 0);				/* STOP_TRANSMISSION */
		}
	}
	deselect();
    256a:	e1 dd       	rcall	.-1086   	; 0x212e <_ZL8deselectv>
    256c:	00 23       	and	r16, r16

	return count ? RES_ERROR : RES_OK;
    256e:	21 f0       	breq	.+8      	; 0x2578 <disk_read+0x9a>
    2570:	81 e0       	ldi	r24, 0x01	; 1
    2572:	03 c0       	rjmp	.+6      	; 0x257a <disk_read+0x9c>
    2574:	83 e0       	ldi	r24, 0x03	; 3
	BYTE *buff,			/* Pointer to the data buffer to store read data */
	DWORD sector,		/* Start sector number (LBA) */
	BYTE count			/* Sector count (1..256(0)) */
)
{
	if (disk_status(drv) & STA_NOINIT) return RES_NOTRDY;
    2576:	01 c0       	rjmp	.+2      	; 0x257a <disk_read+0x9c>
    2578:	80 e0       	ldi	r24, 0x00	; 0
			send_cmd(CMD12, 0);				/* STOP_TRANSMISSION */
		}
	}
	deselect();

	return count ? RES_ERROR : RES_OK;
    257a:	df 91       	pop	r29
}
    257c:	cf 91       	pop	r28
    257e:	0f 91       	pop	r16
    2580:	ff 90       	pop	r15
    2582:	ef 90       	pop	r14
    2584:	df 90       	pop	r13
    2586:	cf 90       	pop	r12
    2588:	08 95       	ret

0000258a <disk_write>:
    258a:	cf 92       	push	r12
	BYTE drv,			/* Physical drive nmuber (0) */
	const BYTE *buff,	/* Pointer to the data to be written */
	DWORD sector,		/* Start sector number (LBA) */
	BYTE count			/* Sector count (1..256(0)) */
)
{
    258c:	df 92       	push	r13
    258e:	ef 92       	push	r14
    2590:	ff 92       	push	r15
    2592:	0f 93       	push	r16
    2594:	cf 93       	push	r28
    2596:	df 93       	push	r29
    2598:	eb 01       	movw	r28, r22
    259a:	69 01       	movw	r12, r18
    259c:	7a 01       	movw	r14, r20
	if (disk_status(drv) & STA_NOINIT) return RES_NOTRDY;
    259e:	c8 de       	rcall	.-624    	; 0x2330 <disk_status>
    25a0:	80 fd       	sbrc	r24, 0
    25a2:	47 c0       	rjmp	.+142    	; 0x2632 <disk_write+0xa8>
	if (!(CardType & CT_BLOCK)) sector *= 512;	/* Convert LBA to byte address if needed */
    25a4:	80 91 f2 03 	lds	r24, 0x03F2	; 0x8003f2 <_ZL8CardType>
    25a8:	83 fd       	sbrc	r24, 3
    25aa:	09 c0       	rjmp	.+18     	; 0x25be <disk_write+0x34>
    25ac:	0b 2e       	mov	r0, r27
    25ae:	b9 e0       	ldi	r27, 0x09	; 9
    25b0:	cc 0c       	add	r12, r12
    25b2:	dd 1c       	adc	r13, r13
    25b4:	ee 1c       	adc	r14, r14
    25b6:	ff 1c       	adc	r15, r15
    25b8:	ba 95       	dec	r27
    25ba:	d1 f7       	brne	.-12     	; 0x25b0 <disk_write+0x26>
    25bc:	b0 2d       	mov	r27, r0

	if (count == 1) {	/* Single block write */
    25be:	01 30       	cpi	r16, 0x01	; 1
    25c0:	99 f4       	brne	.+38     	; 0x25e8 <disk_write+0x5e>
		if ((send_cmd(CMD24, sector) == 0)	/* WRITE_BLOCK */
    25c2:	b7 01       	movw	r22, r14
    25c4:	a6 01       	movw	r20, r12
    25c6:	88 e1       	ldi	r24, 0x18	; 24
    25c8:	53 de       	rcall	.-858    	; 0x2270 <_ZL8send_cmdhm>
			&& xmit_datablock(buff, 0xFE))
    25ca:	81 11       	cpse	r24, r1
    25cc:	07 c0       	rjmp	.+14     	; 0x25dc <disk_write+0x52>
    25ce:	6e ef       	ldi	r22, 0xFE	; 254
    25d0:	ce 01       	movw	r24, r28
    25d2:	17 de       	rcall	.-978    	; 0x2202 <_ZL14xmit_datablockPKhh>
    25d4:	89 2b       	or	r24, r25
    25d6:	21 f0       	breq	.+8      	; 0x25e0 <disk_write+0x56>
    25d8:	81 e0       	ldi	r24, 0x01	; 1
    25da:	03 c0       	rjmp	.+6      	; 0x25e2 <disk_write+0x58>
    25dc:	80 e0       	ldi	r24, 0x00	; 0
    25de:	01 c0       	rjmp	.+2      	; 0x25e2 <disk_write+0x58>
    25e0:	80 e0       	ldi	r24, 0x00	; 0
{
	if (disk_status(drv) & STA_NOINIT) return RES_NOTRDY;
	if (!(CardType & CT_BLOCK)) sector *= 512;	/* Convert LBA to byte address if needed */

	if (count == 1) {	/* Single block write */
		if ((send_cmd(CMD24, sector) == 0)	/* WRITE_BLOCK */
    25e2:	81 11       	cpse	r24, r1
    25e4:	1e c0       	rjmp	.+60     	; 0x2622 <disk_write+0x98>
    25e6:	20 c0       	rjmp	.+64     	; 0x2628 <disk_write+0x9e>
			&& xmit_datablock(buff, 0xFE))
			count = 0;
	}
	else {				/* Multiple block write */
		if (CardType & CT_SDC) send_cmd(ACMD23, count);
    25e8:	86 70       	andi	r24, 0x06	; 6
    25ea:	31 f0       	breq	.+12     	; 0x25f8 <disk_write+0x6e>
    25ec:	40 2f       	mov	r20, r16
    25ee:	50 e0       	ldi	r21, 0x00	; 0
    25f0:	60 e0       	ldi	r22, 0x00	; 0
    25f2:	70 e0       	ldi	r23, 0x00	; 0
    25f4:	87 e9       	ldi	r24, 0x97	; 151
    25f6:	3c de       	rcall	.-904    	; 0x2270 <_ZL8send_cmdhm>
		if (send_cmd(CMD25, sector) == 0) {	/* WRITE_MULTIPLE_BLOCK */
    25f8:	b7 01       	movw	r22, r14
    25fa:	a6 01       	movw	r20, r12
    25fc:	89 e1       	ldi	r24, 0x19	; 25
    25fe:	38 de       	rcall	.-912    	; 0x2270 <_ZL8send_cmdhm>
    2600:	81 11       	cpse	r24, r1
    2602:	12 c0       	rjmp	.+36     	; 0x2628 <disk_write+0x9e>
			do {
				if (!xmit_datablock(buff, 0xFC)) break;
    2604:	6c ef       	ldi	r22, 0xFC	; 252
    2606:	ce 01       	movw	r24, r28
    2608:	fc dd       	rcall	.-1032   	; 0x2202 <_ZL14xmit_datablockPKhh>
    260a:	89 2b       	or	r24, r25
    260c:	19 f0       	breq	.+6      	; 0x2614 <disk_write+0x8a>
    260e:	de 5f       	subi	r29, 0xFE	; 254
			count = 0;
	}
	else {				/* Multiple block write */
		if (CardType & CT_SDC) send_cmd(ACMD23, count);
		if (send_cmd(CMD25, sector) == 0) {	/* WRITE_MULTIPLE_BLOCK */
			do {
    2610:	01 50       	subi	r16, 0x01	; 1
    2612:	c1 f7       	brne	.-16     	; 0x2604 <disk_write+0x7a>
				if (!xmit_datablock(buff, 0xFC)) break;
				buff += 512;
			} while (--count);
			if (!xmit_datablock(0, 0xFD))	/* STOP_TRAN token */
    2614:	6d ef       	ldi	r22, 0xFD	; 253
    2616:	80 e0       	ldi	r24, 0x00	; 0
    2618:	90 e0       	ldi	r25, 0x00	; 0
    261a:	f3 dd       	rcall	.-1050   	; 0x2202 <_ZL14xmit_datablockPKhh>
    261c:	89 2b       	or	r24, r25
    261e:	19 f0       	breq	.+6      	; 0x2626 <disk_write+0x9c>
    2620:	03 c0       	rjmp	.+6      	; 0x2628 <disk_write+0x9e>
	if (!(CardType & CT_BLOCK)) sector *= 512;	/* Convert LBA to byte address if needed */

	if (count == 1) {	/* Single block write */
		if ((send_cmd(CMD24, sector) == 0)	/* WRITE_BLOCK */
			&& xmit_datablock(buff, 0xFE))
			count = 0;
    2622:	00 e0       	ldi	r16, 0x00	; 0
    2624:	01 c0       	rjmp	.+2      	; 0x2628 <disk_write+0x9e>
			do {
				if (!xmit_datablock(buff, 0xFC)) break;
				buff += 512;
			} while (--count);
			if (!xmit_datablock(0, 0xFD))	/* STOP_TRAN token */
				count = 1;
    2626:	01 e0       	ldi	r16, 0x01	; 1
		}
	}
	deselect();
    2628:	82 dd       	rcall	.-1276   	; 0x212e <_ZL8deselectv>
    262a:	00 23       	and	r16, r16

	return count ? RES_ERROR : RES_OK;
    262c:	21 f0       	breq	.+8      	; 0x2636 <disk_write+0xac>
    262e:	81 e0       	ldi	r24, 0x01	; 1
    2630:	03 c0       	rjmp	.+6      	; 0x2638 <disk_write+0xae>
    2632:	83 e0       	ldi	r24, 0x03	; 3
	const BYTE *buff,	/* Pointer to the data to be written */
	DWORD sector,		/* Start sector number (LBA) */
	BYTE count			/* Sector count (1..256(0)) */
)
{
	if (disk_status(drv) & STA_NOINIT) return RES_NOTRDY;
    2634:	01 c0       	rjmp	.+2      	; 0x2638 <disk_write+0xae>
    2636:	80 e0       	ldi	r24, 0x00	; 0
				count = 1;
		}
	}
	deselect();

	return count ? RES_ERROR : RES_OK;
    2638:	df 91       	pop	r29
}
    263a:	cf 91       	pop	r28
    263c:	0f 91       	pop	r16
    263e:	ff 90       	pop	r15
    2640:	ef 90       	pop	r14
    2642:	df 90       	pop	r13
    2644:	cf 90       	pop	r12
    2646:	08 95       	ret

00002648 <disk_ioctl>:
    2648:	ef 92       	push	r14
DRESULT disk_ioctl (
	BYTE drv,		/* Physical drive nmuber (0) */
	BYTE ctrl,		/* Control code */
	void *buff		/* Buffer to send/receive control data */
)
{
    264a:	ff 92       	push	r15
    264c:	1f 93       	push	r17
    264e:	cf 93       	push	r28
    2650:	df 93       	push	r29
    2652:	cd b7       	in	r28, 0x3d	; 61
    2654:	de b7       	in	r29, 0x3e	; 62
    2656:	60 97       	sbiw	r28, 0x10	; 16
    2658:	0f b6       	in	r0, 0x3f	; 63
    265a:	f8 94       	cli
    265c:	de bf       	out	0x3e, r29	; 62
    265e:	0f be       	out	0x3f, r0	; 63
    2660:	cd bf       	out	0x3d, r28	; 61
    2662:	16 2f       	mov	r17, r22
    2664:	7a 01       	movw	r14, r20
	DRESULT res;
	BYTE n, csd[16];
	DWORD cs;


	if (disk_status(drv) & STA_NOINIT) return RES_NOTRDY;	/* Check if card is in the socket */
    2666:	64 de       	rcall	.-824    	; 0x2330 <disk_status>
    2668:	80 fd       	sbrc	r24, 0
    266a:	a9 c0       	rjmp	.+338    	; 0x27be <disk_ioctl+0x176>

	res = RES_ERROR;
	switch (ctrl) {
    266c:	11 30       	cpi	r17, 0x01	; 1
    266e:	59 f0       	breq	.+22     	; 0x2686 <disk_ioctl+0x3e>
    2670:	20 f0       	brcs	.+8      	; 0x267a <disk_ioctl+0x32>
    2672:	13 30       	cpi	r17, 0x03	; 3
    2674:	09 f4       	brne	.+2      	; 0x2678 <disk_ioctl+0x30>
    2676:	90 c0       	rjmp	.+288    	; 0x2798 <disk_ioctl+0x150>
		case CTRL_SYNC :		/* Make sure that no pending write process */
			if (select()) res = RES_OK;
    2678:	9a c0       	rjmp	.+308    	; 0x27ae <disk_ioctl+0x166>
    267a:	6a dd       	rcall	.-1324   	; 0x2150 <_ZL6selectv>
    267c:	89 2b       	or	r24, r25
    267e:	09 f0       	breq	.+2      	; 0x2682 <disk_ioctl+0x3a>
    2680:	98 c0       	rjmp	.+304    	; 0x27b2 <disk_ioctl+0x16a>
	DWORD cs;


	if (disk_status(drv) & STA_NOINIT) return RES_NOTRDY;	/* Check if card is in the socket */

	res = RES_ERROR;
    2682:	11 e0       	ldi	r17, 0x01	; 1
    2684:	99 c0       	rjmp	.+306    	; 0x27b8 <disk_ioctl+0x170>
		case CTRL_SYNC :		/* Make sure that no pending write process */
			if (select()) res = RES_OK;
			break;

		case GET_SECTOR_COUNT :	/* Get number of sectors on the disk (DWORD) */
			if ((send_cmd(CMD9, 0) == 0) && rcvr_datablock(csd, 16)) {
    2686:	40 e0       	ldi	r20, 0x00	; 0
    2688:	50 e0       	ldi	r21, 0x00	; 0
    268a:	ba 01       	movw	r22, r20
    268c:	89 e0       	ldi	r24, 0x09	; 9
    268e:	f0 dd       	rcall	.-1056   	; 0x2270 <_ZL8send_cmdhm>
    2690:	81 11       	cpse	r24, r1
    2692:	09 c0       	rjmp	.+18     	; 0x26a6 <disk_ioctl+0x5e>
    2694:	60 e1       	ldi	r22, 0x10	; 16
    2696:	70 e0       	ldi	r23, 0x00	; 0
    2698:	ce 01       	movw	r24, r28
    269a:	01 96       	adiw	r24, 0x01	; 1
    269c:	77 dd       	rcall	.-1298   	; 0x218c <_ZL14rcvr_datablockPhj>
    269e:	89 2b       	or	r24, r25
    26a0:	21 f0       	breq	.+8      	; 0x26aa <disk_ioctl+0x62>
    26a2:	81 e0       	ldi	r24, 0x01	; 1
    26a4:	03 c0       	rjmp	.+6      	; 0x26ac <disk_ioctl+0x64>
    26a6:	80 e0       	ldi	r24, 0x00	; 0
    26a8:	01 c0       	rjmp	.+2      	; 0x26ac <disk_ioctl+0x64>
    26aa:	80 e0       	ldi	r24, 0x00	; 0
    26ac:	88 23       	and	r24, r24
    26ae:	09 f4       	brne	.+2      	; 0x26b2 <disk_ioctl+0x6a>
    26b0:	82 c0       	rjmp	.+260    	; 0x27b6 <disk_ioctl+0x16e>
				if ((csd[0] >> 6) == 1) {	/* SDC ver 2.00 */
    26b2:	89 81       	ldd	r24, Y+1	; 0x01
    26b4:	90 e0       	ldi	r25, 0x00	; 0
    26b6:	08 2e       	mov	r0, r24
    26b8:	89 2f       	mov	r24, r25
    26ba:	00 0c       	add	r0, r0
    26bc:	88 1f       	adc	r24, r24
    26be:	99 0b       	sbc	r25, r25
    26c0:	00 0c       	add	r0, r0
    26c2:	88 1f       	adc	r24, r24
    26c4:	99 1f       	adc	r25, r25
    26c6:	01 97       	sbiw	r24, 0x01	; 1
    26c8:	31 f5       	brne	.+76     	; 0x2716 <disk_ioctl+0xce>
					cs = csd[9] + ((WORD)csd[8] << 8) + ((DWORD)(csd[7] & 63) << 16) + 1;
    26ca:	8a 85       	ldd	r24, Y+10	; 0x0a
    26cc:	29 85       	ldd	r18, Y+9	; 0x09
    26ce:	30 e0       	ldi	r19, 0x00	; 0
    26d0:	32 2f       	mov	r19, r18
    26d2:	22 27       	eor	r18, r18
    26d4:	28 0f       	add	r18, r24
    26d6:	31 1d       	adc	r19, r1
    26d8:	88 85       	ldd	r24, Y+8	; 0x08
    26da:	8f 73       	andi	r24, 0x3F	; 63
    26dc:	90 e0       	ldi	r25, 0x00	; 0
    26de:	a0 e0       	ldi	r26, 0x00	; 0
    26e0:	b0 e0       	ldi	r27, 0x00	; 0
    26e2:	dc 01       	movw	r26, r24
    26e4:	99 27       	eor	r25, r25
    26e6:	88 27       	eor	r24, r24
    26e8:	82 0f       	add	r24, r18
    26ea:	93 1f       	adc	r25, r19
    26ec:	a1 1d       	adc	r26, r1
    26ee:	b1 1d       	adc	r27, r1
    26f0:	01 96       	adiw	r24, 0x01	; 1
    26f2:	a1 1d       	adc	r26, r1
    26f4:	b1 1d       	adc	r27, r1
					*(DWORD*)buff = cs << 10;
    26f6:	07 2e       	mov	r0, r23
    26f8:	7a e0       	ldi	r23, 0x0A	; 10
    26fa:	88 0f       	add	r24, r24
    26fc:	99 1f       	adc	r25, r25
    26fe:	aa 1f       	adc	r26, r26
    2700:	bb 1f       	adc	r27, r27
    2702:	7a 95       	dec	r23
    2704:	d1 f7       	brne	.-12     	; 0x26fa <disk_ioctl+0xb2>
    2706:	70 2d       	mov	r23, r0
    2708:	f7 01       	movw	r30, r14
    270a:	80 83       	st	Z, r24
    270c:	91 83       	std	Z+1, r25	; 0x01
    270e:	a2 83       	std	Z+2, r26	; 0x02
    2710:	b3 83       	std	Z+3, r27	; 0x03
				} else {					/* SDC ver 1.XX or MMC */
					n = (csd[5] & 15) + ((csd[10] & 128) >> 7) + ((csd[9] & 3) << 1) + 2;
					cs = (csd[8] >> 6) + ((WORD)csd[7] << 2) + ((WORD)(csd[6] & 3) << 10) + 1;
					*(DWORD*)buff = cs << (n - 9);
				}
				res = RES_OK;
    2712:	10 e0       	ldi	r17, 0x00	; 0
    2714:	51 c0       	rjmp	.+162    	; 0x27b8 <disk_ioctl+0x170>
			if ((send_cmd(CMD9, 0) == 0) && rcvr_datablock(csd, 16)) {
				if ((csd[0] >> 6) == 1) {	/* SDC ver 2.00 */
					cs = csd[9] + ((WORD)csd[8] << 8) + ((DWORD)(csd[7] & 63) << 16) + 1;
					*(DWORD*)buff = cs << 10;
				} else {					/* SDC ver 1.XX or MMC */
					n = (csd[5] & 15) + ((csd[10] & 128) >> 7) + ((csd[9] & 3) << 1) + 2;
    2716:	8e 81       	ldd	r24, Y+6	; 0x06
    2718:	2b 85       	ldd	r18, Y+11	; 0x0b
    271a:	9a 85       	ldd	r25, Y+10	; 0x0a
    271c:	38 2f       	mov	r19, r24
    271e:	3f 70       	andi	r19, 0x0F	; 15
    2720:	82 2f       	mov	r24, r18
    2722:	88 1f       	adc	r24, r24
    2724:	88 27       	eor	r24, r24
    2726:	88 1f       	adc	r24, r24
    2728:	83 0f       	add	r24, r19
    272a:	93 70       	andi	r25, 0x03	; 3
    272c:	99 0f       	add	r25, r25
    272e:	89 0f       	add	r24, r25
    2730:	42 e0       	ldi	r20, 0x02	; 2
    2732:	48 0f       	add	r20, r24
					cs = (csd[8] >> 6) + ((WORD)csd[7] << 2) + ((WORD)(csd[6] & 3) << 10) + 1;
    2734:	89 85       	ldd	r24, Y+9	; 0x09
    2736:	90 e0       	ldi	r25, 0x00	; 0
    2738:	bc 01       	movw	r22, r24
    273a:	06 2e       	mov	r0, r22
    273c:	67 2f       	mov	r22, r23
    273e:	00 0c       	add	r0, r0
    2740:	66 1f       	adc	r22, r22
    2742:	77 0b       	sbc	r23, r23
    2744:	00 0c       	add	r0, r0
    2746:	66 1f       	adc	r22, r22
    2748:	77 1f       	adc	r23, r23
    274a:	28 85       	ldd	r18, Y+8	; 0x08
    274c:	30 e0       	ldi	r19, 0x00	; 0
    274e:	c9 01       	movw	r24, r18
    2750:	88 0f       	add	r24, r24
    2752:	99 1f       	adc	r25, r25
    2754:	88 0f       	add	r24, r24
    2756:	99 1f       	adc	r25, r25
    2758:	86 0f       	add	r24, r22
    275a:	97 1f       	adc	r25, r23
    275c:	2f 81       	ldd	r18, Y+7	; 0x07
    275e:	23 70       	andi	r18, 0x03	; 3
    2760:	30 e0       	ldi	r19, 0x00	; 0
    2762:	32 2f       	mov	r19, r18
    2764:	22 27       	eor	r18, r18
    2766:	33 0f       	add	r19, r19
    2768:	33 0f       	add	r19, r19
    276a:	82 0f       	add	r24, r18
    276c:	93 1f       	adc	r25, r19
    276e:	01 96       	adiw	r24, 0x01	; 1
    2770:	a0 e0       	ldi	r26, 0x00	; 0
    2772:	b0 e0       	ldi	r27, 0x00	; 0
					*(DWORD*)buff = cs << (n - 9);
    2774:	24 2f       	mov	r18, r20
    2776:	30 e0       	ldi	r19, 0x00	; 0
    2778:	29 50       	subi	r18, 0x09	; 9
    277a:	31 09       	sbc	r19, r1
    277c:	04 c0       	rjmp	.+8      	; 0x2786 <disk_ioctl+0x13e>
    277e:	88 0f       	add	r24, r24
    2780:	99 1f       	adc	r25, r25
    2782:	aa 1f       	adc	r26, r26
    2784:	bb 1f       	adc	r27, r27
    2786:	2a 95       	dec	r18
    2788:	d2 f7       	brpl	.-12     	; 0x277e <disk_ioctl+0x136>
    278a:	f7 01       	movw	r30, r14
    278c:	80 83       	st	Z, r24
    278e:	91 83       	std	Z+1, r25	; 0x01
    2790:	a2 83       	std	Z+2, r26	; 0x02
    2792:	b3 83       	std	Z+3, r27	; 0x03
				}
				res = RES_OK;
    2794:	10 e0       	ldi	r17, 0x00	; 0
    2796:	10 c0       	rjmp	.+32     	; 0x27b8 <disk_ioctl+0x170>
			}
			break;

		case GET_BLOCK_SIZE :	/* Get erase block size in unit of sector (DWORD) */
			*(DWORD*)buff = 128;
    2798:	80 e8       	ldi	r24, 0x80	; 128
    279a:	90 e0       	ldi	r25, 0x00	; 0
    279c:	a0 e0       	ldi	r26, 0x00	; 0
    279e:	b0 e0       	ldi	r27, 0x00	; 0
    27a0:	f7 01       	movw	r30, r14
    27a2:	80 83       	st	Z, r24
    27a4:	91 83       	std	Z+1, r25	; 0x01
    27a6:	a2 83       	std	Z+2, r26	; 0x02
    27a8:	b3 83       	std	Z+3, r27	; 0x03
			res = RES_OK;
    27aa:	10 e0       	ldi	r17, 0x00	; 0
			break;
    27ac:	05 c0       	rjmp	.+10     	; 0x27b8 <disk_ioctl+0x170>

		default:
			res = RES_PARERR;
    27ae:	14 e0       	ldi	r17, 0x04	; 4
	if (disk_status(drv) & STA_NOINIT) return RES_NOTRDY;	/* Check if card is in the socket */

	res = RES_ERROR;
	switch (ctrl) {
		case CTRL_SYNC :		/* Make sure that no pending write process */
			if (select()) res = RES_OK;
    27b0:	03 c0       	rjmp	.+6      	; 0x27b8 <disk_ioctl+0x170>
    27b2:	10 e0       	ldi	r17, 0x00	; 0
	DWORD cs;


	if (disk_status(drv) & STA_NOINIT) return RES_NOTRDY;	/* Check if card is in the socket */

	res = RES_ERROR;
    27b4:	01 c0       	rjmp	.+2      	; 0x27b8 <disk_ioctl+0x170>

		default:
			res = RES_PARERR;
	}

	deselect();
    27b6:	11 e0       	ldi	r17, 0x01	; 1
    27b8:	ba dc       	rcall	.-1676   	; 0x212e <_ZL8deselectv>

	return res;
    27ba:	81 2f       	mov	r24, r17
    27bc:	01 c0       	rjmp	.+2      	; 0x27c0 <disk_ioctl+0x178>
	DRESULT res;
	BYTE n, csd[16];
	DWORD cs;


	if (disk_status(drv) & STA_NOINIT) return RES_NOTRDY;	/* Check if card is in the socket */
    27be:	83 e0       	ldi	r24, 0x03	; 3
	}

	deselect();

	return res;
}
    27c0:	60 96       	adiw	r28, 0x10	; 16
    27c2:	0f b6       	in	r0, 0x3f	; 63
    27c4:	f8 94       	cli
    27c6:	de bf       	out	0x3e, r29	; 62
    27c8:	0f be       	out	0x3f, r0	; 63
    27ca:	cd bf       	out	0x3d, r28	; 61
    27cc:	df 91       	pop	r29
    27ce:	cf 91       	pop	r28
    27d0:	1f 91       	pop	r17
    27d2:	ff 90       	pop	r15
    27d4:	ef 90       	pop	r14
    27d6:	08 95       	ret

000027d8 <__udivmodsi4>:
    27d8:	a1 e2       	ldi	r26, 0x21	; 33
    27da:	1a 2e       	mov	r1, r26
    27dc:	aa 1b       	sub	r26, r26
    27de:	bb 1b       	sub	r27, r27
    27e0:	fd 01       	movw	r30, r26
    27e2:	0d c0       	rjmp	.+26     	; 0x27fe <__udivmodsi4_ep>

000027e4 <__udivmodsi4_loop>:
    27e4:	aa 1f       	adc	r26, r26
    27e6:	bb 1f       	adc	r27, r27
    27e8:	ee 1f       	adc	r30, r30
    27ea:	ff 1f       	adc	r31, r31
    27ec:	a2 17       	cp	r26, r18
    27ee:	b3 07       	cpc	r27, r19
    27f0:	e4 07       	cpc	r30, r20
    27f2:	f5 07       	cpc	r31, r21
    27f4:	20 f0       	brcs	.+8      	; 0x27fe <__udivmodsi4_ep>
    27f6:	a2 1b       	sub	r26, r18
    27f8:	b3 0b       	sbc	r27, r19
    27fa:	e4 0b       	sbc	r30, r20
    27fc:	f5 0b       	sbc	r31, r21

000027fe <__udivmodsi4_ep>:
    27fe:	66 1f       	adc	r22, r22
    2800:	77 1f       	adc	r23, r23
    2802:	88 1f       	adc	r24, r24
    2804:	99 1f       	adc	r25, r25
    2806:	1a 94       	dec	r1
    2808:	69 f7       	brne	.-38     	; 0x27e4 <__udivmodsi4_loop>
    280a:	60 95       	com	r22
    280c:	70 95       	com	r23
    280e:	80 95       	com	r24
    2810:	90 95       	com	r25
    2812:	9b 01       	movw	r18, r22
    2814:	ac 01       	movw	r20, r24
    2816:	bd 01       	movw	r22, r26
    2818:	cf 01       	movw	r24, r30
    281a:	08 95       	ret

0000281c <__muluhisi3>:
    281c:	09 d0       	rcall	.+18     	; 0x2830 <__umulhisi3>
    281e:	a5 9f       	mul	r26, r21
    2820:	90 0d       	add	r25, r0
    2822:	b4 9f       	mul	r27, r20
    2824:	90 0d       	add	r25, r0
    2826:	a4 9f       	mul	r26, r20
    2828:	80 0d       	add	r24, r0
    282a:	91 1d       	adc	r25, r1
    282c:	11 24       	eor	r1, r1
    282e:	08 95       	ret

00002830 <__umulhisi3>:
    2830:	a2 9f       	mul	r26, r18
    2832:	b0 01       	movw	r22, r0
    2834:	b3 9f       	mul	r27, r19
    2836:	c0 01       	movw	r24, r0
    2838:	a3 9f       	mul	r26, r19
    283a:	70 0d       	add	r23, r0
    283c:	81 1d       	adc	r24, r1
    283e:	11 24       	eor	r1, r1
    2840:	91 1d       	adc	r25, r1
    2842:	b2 9f       	mul	r27, r18
    2844:	70 0d       	add	r23, r0
    2846:	81 1d       	adc	r24, r1
    2848:	11 24       	eor	r1, r1
    284a:	91 1d       	adc	r25, r1
    284c:	08 95       	ret

0000284e <malloc>:
    284e:	0f 93       	push	r16
    2850:	1f 93       	push	r17
    2852:	cf 93       	push	r28
    2854:	df 93       	push	r29
    2856:	82 30       	cpi	r24, 0x02	; 2
    2858:	91 05       	cpc	r25, r1
    285a:	10 f4       	brcc	.+4      	; 0x2860 <malloc+0x12>
    285c:	82 e0       	ldi	r24, 0x02	; 2
    285e:	90 e0       	ldi	r25, 0x00	; 0
    2860:	e0 91 f5 03 	lds	r30, 0x03F5	; 0x8003f5 <__flp>
    2864:	f0 91 f6 03 	lds	r31, 0x03F6	; 0x8003f6 <__flp+0x1>
    2868:	20 e0       	ldi	r18, 0x00	; 0
    286a:	30 e0       	ldi	r19, 0x00	; 0
    286c:	a0 e0       	ldi	r26, 0x00	; 0
    286e:	b0 e0       	ldi	r27, 0x00	; 0
    2870:	30 97       	sbiw	r30, 0x00	; 0
    2872:	19 f1       	breq	.+70     	; 0x28ba <malloc+0x6c>
    2874:	40 81       	ld	r20, Z
    2876:	51 81       	ldd	r21, Z+1	; 0x01
    2878:	02 81       	ldd	r16, Z+2	; 0x02
    287a:	13 81       	ldd	r17, Z+3	; 0x03
    287c:	48 17       	cp	r20, r24
    287e:	59 07       	cpc	r21, r25
    2880:	c8 f0       	brcs	.+50     	; 0x28b4 <malloc+0x66>
    2882:	84 17       	cp	r24, r20
    2884:	95 07       	cpc	r25, r21
    2886:	69 f4       	brne	.+26     	; 0x28a2 <malloc+0x54>
    2888:	10 97       	sbiw	r26, 0x00	; 0
    288a:	31 f0       	breq	.+12     	; 0x2898 <malloc+0x4a>
    288c:	12 96       	adiw	r26, 0x02	; 2
    288e:	0c 93       	st	X, r16
    2890:	12 97       	sbiw	r26, 0x02	; 2
    2892:	13 96       	adiw	r26, 0x03	; 3
    2894:	1c 93       	st	X, r17
    2896:	27 c0       	rjmp	.+78     	; 0x28e6 <malloc+0x98>
    2898:	00 93 f5 03 	sts	0x03F5, r16	; 0x8003f5 <__flp>
    289c:	10 93 f6 03 	sts	0x03F6, r17	; 0x8003f6 <__flp+0x1>
    28a0:	22 c0       	rjmp	.+68     	; 0x28e6 <malloc+0x98>
    28a2:	21 15       	cp	r18, r1
    28a4:	31 05       	cpc	r19, r1
    28a6:	19 f0       	breq	.+6      	; 0x28ae <malloc+0x60>
    28a8:	42 17       	cp	r20, r18
    28aa:	53 07       	cpc	r21, r19
    28ac:	18 f4       	brcc	.+6      	; 0x28b4 <malloc+0x66>
    28ae:	9a 01       	movw	r18, r20
    28b0:	bd 01       	movw	r22, r26
    28b2:	ef 01       	movw	r28, r30
    28b4:	df 01       	movw	r26, r30
    28b6:	f8 01       	movw	r30, r16
    28b8:	db cf       	rjmp	.-74     	; 0x2870 <malloc+0x22>
    28ba:	21 15       	cp	r18, r1
    28bc:	31 05       	cpc	r19, r1
    28be:	f9 f0       	breq	.+62     	; 0x28fe <malloc+0xb0>
    28c0:	28 1b       	sub	r18, r24
    28c2:	39 0b       	sbc	r19, r25
    28c4:	24 30       	cpi	r18, 0x04	; 4
    28c6:	31 05       	cpc	r19, r1
    28c8:	80 f4       	brcc	.+32     	; 0x28ea <malloc+0x9c>
    28ca:	8a 81       	ldd	r24, Y+2	; 0x02
    28cc:	9b 81       	ldd	r25, Y+3	; 0x03
    28ce:	61 15       	cp	r22, r1
    28d0:	71 05       	cpc	r23, r1
    28d2:	21 f0       	breq	.+8      	; 0x28dc <malloc+0x8e>
    28d4:	fb 01       	movw	r30, r22
    28d6:	93 83       	std	Z+3, r25	; 0x03
    28d8:	82 83       	std	Z+2, r24	; 0x02
    28da:	04 c0       	rjmp	.+8      	; 0x28e4 <malloc+0x96>
    28dc:	90 93 f6 03 	sts	0x03F6, r25	; 0x8003f6 <__flp+0x1>
    28e0:	80 93 f5 03 	sts	0x03F5, r24	; 0x8003f5 <__flp>
    28e4:	fe 01       	movw	r30, r28
    28e6:	32 96       	adiw	r30, 0x02	; 2
    28e8:	44 c0       	rjmp	.+136    	; 0x2972 <malloc+0x124>
    28ea:	fe 01       	movw	r30, r28
    28ec:	e2 0f       	add	r30, r18
    28ee:	f3 1f       	adc	r31, r19
    28f0:	81 93       	st	Z+, r24
    28f2:	91 93       	st	Z+, r25
    28f4:	22 50       	subi	r18, 0x02	; 2
    28f6:	31 09       	sbc	r19, r1
    28f8:	39 83       	std	Y+1, r19	; 0x01
    28fa:	28 83       	st	Y, r18
    28fc:	3a c0       	rjmp	.+116    	; 0x2972 <malloc+0x124>
    28fe:	20 91 f3 03 	lds	r18, 0x03F3	; 0x8003f3 <__brkval>
    2902:	30 91 f4 03 	lds	r19, 0x03F4	; 0x8003f4 <__brkval+0x1>
    2906:	23 2b       	or	r18, r19
    2908:	41 f4       	brne	.+16     	; 0x291a <malloc+0xcc>
    290a:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
    290e:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
    2912:	30 93 f4 03 	sts	0x03F4, r19	; 0x8003f4 <__brkval+0x1>
    2916:	20 93 f3 03 	sts	0x03F3, r18	; 0x8003f3 <__brkval>
    291a:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    291e:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    2922:	21 15       	cp	r18, r1
    2924:	31 05       	cpc	r19, r1
    2926:	41 f4       	brne	.+16     	; 0x2938 <malloc+0xea>
    2928:	2d b7       	in	r18, 0x3d	; 61
    292a:	3e b7       	in	r19, 0x3e	; 62
    292c:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
    2930:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
    2934:	24 1b       	sub	r18, r20
    2936:	35 0b       	sbc	r19, r21
    2938:	e0 91 f3 03 	lds	r30, 0x03F3	; 0x8003f3 <__brkval>
    293c:	f0 91 f4 03 	lds	r31, 0x03F4	; 0x8003f4 <__brkval+0x1>
    2940:	e2 17       	cp	r30, r18
    2942:	f3 07       	cpc	r31, r19
    2944:	a0 f4       	brcc	.+40     	; 0x296e <malloc+0x120>
    2946:	2e 1b       	sub	r18, r30
    2948:	3f 0b       	sbc	r19, r31
    294a:	28 17       	cp	r18, r24
    294c:	39 07       	cpc	r19, r25
    294e:	78 f0       	brcs	.+30     	; 0x296e <malloc+0x120>
    2950:	ac 01       	movw	r20, r24
    2952:	4e 5f       	subi	r20, 0xFE	; 254
    2954:	5f 4f       	sbci	r21, 0xFF	; 255
    2956:	24 17       	cp	r18, r20
    2958:	35 07       	cpc	r19, r21
    295a:	48 f0       	brcs	.+18     	; 0x296e <malloc+0x120>
    295c:	4e 0f       	add	r20, r30
    295e:	5f 1f       	adc	r21, r31
    2960:	50 93 f4 03 	sts	0x03F4, r21	; 0x8003f4 <__brkval+0x1>
    2964:	40 93 f3 03 	sts	0x03F3, r20	; 0x8003f3 <__brkval>
    2968:	81 93       	st	Z+, r24
    296a:	91 93       	st	Z+, r25
    296c:	02 c0       	rjmp	.+4      	; 0x2972 <malloc+0x124>
    296e:	e0 e0       	ldi	r30, 0x00	; 0
    2970:	f0 e0       	ldi	r31, 0x00	; 0
    2972:	cf 01       	movw	r24, r30
    2974:	df 91       	pop	r29
    2976:	cf 91       	pop	r28
    2978:	1f 91       	pop	r17
    297a:	0f 91       	pop	r16
    297c:	08 95       	ret

0000297e <free>:
    297e:	cf 93       	push	r28
    2980:	df 93       	push	r29
    2982:	00 97       	sbiw	r24, 0x00	; 0
    2984:	09 f4       	brne	.+2      	; 0x2988 <free+0xa>
    2986:	81 c0       	rjmp	.+258    	; 0x2a8a <free+0x10c>
    2988:	fc 01       	movw	r30, r24
    298a:	32 97       	sbiw	r30, 0x02	; 2
    298c:	13 82       	std	Z+3, r1	; 0x03
    298e:	12 82       	std	Z+2, r1	; 0x02
    2990:	a0 91 f5 03 	lds	r26, 0x03F5	; 0x8003f5 <__flp>
    2994:	b0 91 f6 03 	lds	r27, 0x03F6	; 0x8003f6 <__flp+0x1>
    2998:	10 97       	sbiw	r26, 0x00	; 0
    299a:	81 f4       	brne	.+32     	; 0x29bc <free+0x3e>
    299c:	20 81       	ld	r18, Z
    299e:	31 81       	ldd	r19, Z+1	; 0x01
    29a0:	82 0f       	add	r24, r18
    29a2:	93 1f       	adc	r25, r19
    29a4:	20 91 f3 03 	lds	r18, 0x03F3	; 0x8003f3 <__brkval>
    29a8:	30 91 f4 03 	lds	r19, 0x03F4	; 0x8003f4 <__brkval+0x1>
    29ac:	28 17       	cp	r18, r24
    29ae:	39 07       	cpc	r19, r25
    29b0:	51 f5       	brne	.+84     	; 0x2a06 <free+0x88>
    29b2:	f0 93 f4 03 	sts	0x03F4, r31	; 0x8003f4 <__brkval+0x1>
    29b6:	e0 93 f3 03 	sts	0x03F3, r30	; 0x8003f3 <__brkval>
    29ba:	67 c0       	rjmp	.+206    	; 0x2a8a <free+0x10c>
    29bc:	ed 01       	movw	r28, r26
    29be:	20 e0       	ldi	r18, 0x00	; 0
    29c0:	30 e0       	ldi	r19, 0x00	; 0
    29c2:	ce 17       	cp	r28, r30
    29c4:	df 07       	cpc	r29, r31
    29c6:	40 f4       	brcc	.+16     	; 0x29d8 <free+0x5a>
    29c8:	4a 81       	ldd	r20, Y+2	; 0x02
    29ca:	5b 81       	ldd	r21, Y+3	; 0x03
    29cc:	9e 01       	movw	r18, r28
    29ce:	41 15       	cp	r20, r1
    29d0:	51 05       	cpc	r21, r1
    29d2:	f1 f0       	breq	.+60     	; 0x2a10 <free+0x92>
    29d4:	ea 01       	movw	r28, r20
    29d6:	f5 cf       	rjmp	.-22     	; 0x29c2 <free+0x44>
    29d8:	d3 83       	std	Z+3, r29	; 0x03
    29da:	c2 83       	std	Z+2, r28	; 0x02
    29dc:	40 81       	ld	r20, Z
    29de:	51 81       	ldd	r21, Z+1	; 0x01
    29e0:	84 0f       	add	r24, r20
    29e2:	95 1f       	adc	r25, r21
    29e4:	c8 17       	cp	r28, r24
    29e6:	d9 07       	cpc	r29, r25
    29e8:	59 f4       	brne	.+22     	; 0x2a00 <free+0x82>
    29ea:	88 81       	ld	r24, Y
    29ec:	99 81       	ldd	r25, Y+1	; 0x01
    29ee:	84 0f       	add	r24, r20
    29f0:	95 1f       	adc	r25, r21
    29f2:	02 96       	adiw	r24, 0x02	; 2
    29f4:	91 83       	std	Z+1, r25	; 0x01
    29f6:	80 83       	st	Z, r24
    29f8:	8a 81       	ldd	r24, Y+2	; 0x02
    29fa:	9b 81       	ldd	r25, Y+3	; 0x03
    29fc:	93 83       	std	Z+3, r25	; 0x03
    29fe:	82 83       	std	Z+2, r24	; 0x02
    2a00:	21 15       	cp	r18, r1
    2a02:	31 05       	cpc	r19, r1
    2a04:	29 f4       	brne	.+10     	; 0x2a10 <free+0x92>
    2a06:	f0 93 f6 03 	sts	0x03F6, r31	; 0x8003f6 <__flp+0x1>
    2a0a:	e0 93 f5 03 	sts	0x03F5, r30	; 0x8003f5 <__flp>
    2a0e:	3d c0       	rjmp	.+122    	; 0x2a8a <free+0x10c>
    2a10:	e9 01       	movw	r28, r18
    2a12:	fb 83       	std	Y+3, r31	; 0x03
    2a14:	ea 83       	std	Y+2, r30	; 0x02
    2a16:	49 91       	ld	r20, Y+
    2a18:	59 91       	ld	r21, Y+
    2a1a:	c4 0f       	add	r28, r20
    2a1c:	d5 1f       	adc	r29, r21
    2a1e:	ec 17       	cp	r30, r28
    2a20:	fd 07       	cpc	r31, r29
    2a22:	61 f4       	brne	.+24     	; 0x2a3c <free+0xbe>
    2a24:	80 81       	ld	r24, Z
    2a26:	91 81       	ldd	r25, Z+1	; 0x01
    2a28:	84 0f       	add	r24, r20
    2a2a:	95 1f       	adc	r25, r21
    2a2c:	02 96       	adiw	r24, 0x02	; 2
    2a2e:	e9 01       	movw	r28, r18
    2a30:	99 83       	std	Y+1, r25	; 0x01
    2a32:	88 83       	st	Y, r24
    2a34:	82 81       	ldd	r24, Z+2	; 0x02
    2a36:	93 81       	ldd	r25, Z+3	; 0x03
    2a38:	9b 83       	std	Y+3, r25	; 0x03
    2a3a:	8a 83       	std	Y+2, r24	; 0x02
    2a3c:	e0 e0       	ldi	r30, 0x00	; 0
    2a3e:	f0 e0       	ldi	r31, 0x00	; 0
    2a40:	12 96       	adiw	r26, 0x02	; 2
    2a42:	8d 91       	ld	r24, X+
    2a44:	9c 91       	ld	r25, X
    2a46:	13 97       	sbiw	r26, 0x03	; 3
    2a48:	00 97       	sbiw	r24, 0x00	; 0
    2a4a:	19 f0       	breq	.+6      	; 0x2a52 <free+0xd4>
    2a4c:	fd 01       	movw	r30, r26
    2a4e:	dc 01       	movw	r26, r24
    2a50:	f7 cf       	rjmp	.-18     	; 0x2a40 <free+0xc2>
    2a52:	8d 91       	ld	r24, X+
    2a54:	9c 91       	ld	r25, X
    2a56:	11 97       	sbiw	r26, 0x01	; 1
    2a58:	9d 01       	movw	r18, r26
    2a5a:	2e 5f       	subi	r18, 0xFE	; 254
    2a5c:	3f 4f       	sbci	r19, 0xFF	; 255
    2a5e:	82 0f       	add	r24, r18
    2a60:	93 1f       	adc	r25, r19
    2a62:	20 91 f3 03 	lds	r18, 0x03F3	; 0x8003f3 <__brkval>
    2a66:	30 91 f4 03 	lds	r19, 0x03F4	; 0x8003f4 <__brkval+0x1>
    2a6a:	28 17       	cp	r18, r24
    2a6c:	39 07       	cpc	r19, r25
    2a6e:	69 f4       	brne	.+26     	; 0x2a8a <free+0x10c>
    2a70:	30 97       	sbiw	r30, 0x00	; 0
    2a72:	29 f4       	brne	.+10     	; 0x2a7e <free+0x100>
    2a74:	10 92 f6 03 	sts	0x03F6, r1	; 0x8003f6 <__flp+0x1>
    2a78:	10 92 f5 03 	sts	0x03F5, r1	; 0x8003f5 <__flp>
    2a7c:	02 c0       	rjmp	.+4      	; 0x2a82 <free+0x104>
    2a7e:	13 82       	std	Z+3, r1	; 0x03
    2a80:	12 82       	std	Z+2, r1	; 0x02
    2a82:	b0 93 f4 03 	sts	0x03F4, r27	; 0x8003f4 <__brkval+0x1>
    2a86:	a0 93 f3 03 	sts	0x03F3, r26	; 0x8003f3 <__brkval>
    2a8a:	df 91       	pop	r29
    2a8c:	cf 91       	pop	r28
    2a8e:	08 95       	ret

00002a90 <_exit>:
    2a90:	f8 94       	cli

00002a92 <__stop_program>:
    2a92:	ff cf       	rjmp	.-2      	; 0x2a92 <__stop_program>
