
SD_Card.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000010e  00800100  00002e8c  00002f20  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002e8c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000023d  0080020e  0080020e  0000302e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000302e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00003060  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001d8  00000000  00000000  000030a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000387d  00000000  00000000  00003278  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000d18  00000000  00000000  00006af5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000023c7  00000000  00000000  0000780d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000009e4  00000000  00000000  00009bd4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000009bc  00000000  00000000  0000a5b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00004560  00000000  00000000  0000af74  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001d8  00000000  00000000  0000f4d4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
       2:	00 00       	nop
       4:	61 c0       	rjmp	.+194    	; 0xc8 <__bad_interrupt>
       6:	00 00       	nop
       8:	5f c0       	rjmp	.+190    	; 0xc8 <__bad_interrupt>
       a:	00 00       	nop
       c:	5d c0       	rjmp	.+186    	; 0xc8 <__bad_interrupt>
       e:	00 00       	nop
      10:	5b c0       	rjmp	.+182    	; 0xc8 <__bad_interrupt>
      12:	00 00       	nop
      14:	59 c0       	rjmp	.+178    	; 0xc8 <__bad_interrupt>
      16:	00 00       	nop
      18:	57 c0       	rjmp	.+174    	; 0xc8 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	55 c0       	rjmp	.+170    	; 0xc8 <__bad_interrupt>
      1e:	00 00       	nop
      20:	53 c0       	rjmp	.+166    	; 0xc8 <__bad_interrupt>
      22:	00 00       	nop
      24:	51 c0       	rjmp	.+162    	; 0xc8 <__bad_interrupt>
      26:	00 00       	nop
      28:	4f c0       	rjmp	.+158    	; 0xc8 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	4d c0       	rjmp	.+154    	; 0xc8 <__bad_interrupt>
      2e:	00 00       	nop
      30:	4b c0       	rjmp	.+150    	; 0xc8 <__bad_interrupt>
      32:	00 00       	nop
      34:	49 c0       	rjmp	.+146    	; 0xc8 <__bad_interrupt>
      36:	00 00       	nop
      38:	47 c0       	rjmp	.+142    	; 0xc8 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	45 c0       	rjmp	.+138    	; 0xc8 <__bad_interrupt>
      3e:	00 00       	nop
      40:	43 c0       	rjmp	.+134    	; 0xc8 <__bad_interrupt>
      42:	00 00       	nop
      44:	41 c0       	rjmp	.+130    	; 0xc8 <__bad_interrupt>
      46:	00 00       	nop
      48:	3f c0       	rjmp	.+126    	; 0xc8 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	3d c0       	rjmp	.+122    	; 0xc8 <__bad_interrupt>
      4e:	00 00       	nop
      50:	3b c0       	rjmp	.+118    	; 0xc8 <__bad_interrupt>
      52:	00 00       	nop
      54:	39 c0       	rjmp	.+114    	; 0xc8 <__bad_interrupt>
      56:	00 00       	nop
      58:	37 c0       	rjmp	.+110    	; 0xc8 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	35 c0       	rjmp	.+106    	; 0xc8 <__bad_interrupt>
      5e:	00 00       	nop
      60:	33 c0       	rjmp	.+102    	; 0xc8 <__bad_interrupt>
      62:	00 00       	nop
      64:	31 c0       	rjmp	.+98     	; 0xc8 <__bad_interrupt>
      66:	00 00       	nop
      68:	2f c0       	rjmp	.+94     	; 0xc8 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	2d c0       	rjmp	.+90     	; 0xc8 <__bad_interrupt>
      6e:	00 00       	nop
      70:	2b c0       	rjmp	.+86     	; 0xc8 <__bad_interrupt>
      72:	00 00       	nop
      74:	29 c0       	rjmp	.+82     	; 0xc8 <__bad_interrupt>
      76:	00 00       	nop
      78:	27 c0       	rjmp	.+78     	; 0xc8 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	25 c0       	rjmp	.+74     	; 0xc8 <__bad_interrupt>
      7e:	00 00       	nop
      80:	23 c0       	rjmp	.+70     	; 0xc8 <__bad_interrupt>
      82:	00 00       	nop
      84:	21 c0       	rjmp	.+66     	; 0xc8 <__bad_interrupt>
      86:	00 00       	nop
      88:	1f c0       	rjmp	.+62     	; 0xc8 <__bad_interrupt>
	...

0000008c <__ctors_end>:
      8c:	11 24       	eor	r1, r1
      8e:	1f be       	out	0x3f, r1	; 63
      90:	cf ef       	ldi	r28, 0xFF	; 255
      92:	d0 e4       	ldi	r29, 0x40	; 64
      94:	de bf       	out	0x3e, r29	; 62
      96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
      98:	12 e0       	ldi	r17, 0x02	; 2
      9a:	a0 e0       	ldi	r26, 0x00	; 0
      9c:	b1 e0       	ldi	r27, 0x01	; 1
      9e:	ec e8       	ldi	r30, 0x8C	; 140
      a0:	fe e2       	ldi	r31, 0x2E	; 46
      a2:	00 e0       	ldi	r16, 0x00	; 0
      a4:	0b bf       	out	0x3b, r16	; 59
      a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
      a8:	07 90       	elpm	r0, Z+
      aa:	0d 92       	st	X+, r0
      ac:	ae 30       	cpi	r26, 0x0E	; 14
      ae:	b1 07       	cpc	r27, r17
      b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
      b2:	24 e0       	ldi	r18, 0x04	; 4
      b4:	ae e0       	ldi	r26, 0x0E	; 14
      b6:	b2 e0       	ldi	r27, 0x02	; 2
      b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
      ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
      bc:	ab 34       	cpi	r26, 0x4B	; 75
      be:	b2 07       	cpc	r27, r18
      c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
      c2:	08 d0       	rcall	.+16     	; 0xd4 <main>
      c4:	0c 94 44 17 	jmp	0x2e88	; 0x2e88 <_exit>

000000c8 <__bad_interrupt>:
      c8:	9b cf       	rjmp	.-202    	; 0x0 <__vectors>

000000ca <get_fattime>:
	| ((DWORD)8 << 21)				// Month 7 
	| ((DWORD)2 << 16)				// Day 28 
	| ((DWORD)20 << 11)				// Hour 0..24
	| ((DWORD)30 << 5)				// Min 0 
	| ((DWORD)0 >> 1);				// Sec/2 0
}
      ca:	60 ec       	ldi	r22, 0xC0	; 192
      cc:	73 ea       	ldi	r23, 0xA3	; 163
      ce:	82 e0       	ldi	r24, 0x02	; 2
      d0:	93 e4       	ldi	r25, 0x43	; 67
      d2:	08 95       	ret

000000d4 <main>:



int main(void)
{
      d4:	cf 93       	push	r28
      d6:	df 93       	push	r29
      d8:	00 d0       	rcall	.+0      	; 0xda <main+0x6>
      da:	cd b7       	in	r28, 0x3d	; 61
      dc:	de b7       	in	r29, 0x3e	; 62
	DDRD |= (1<<PD0); // Set LED pin output
      de:	8a b1       	in	r24, 0x0a	; 10
      e0:	81 60       	ori	r24, 0x01	; 1
      e2:	8a b9       	out	0x0a, r24	; 10
	PORTD &= ~(1<<PD0); // Turn LED off
      e4:	8b b1       	in	r24, 0x0b	; 11
      e6:	8e 7f       	andi	r24, 0xFE	; 254
      e8:	8b b9       	out	0x0b, r24	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
      ea:	8f e4       	ldi	r24, 0x4F	; 79
      ec:	93 ec       	ldi	r25, 0xC3	; 195
      ee:	01 97       	sbiw	r24, 0x01	; 1
      f0:	f1 f7       	brne	.-4      	; 0xee <main+0x1a>
      f2:	00 c0       	rjmp	.+0      	; 0xf4 <main+0x20>
      f4:	00 00       	nop
	// reboot delay
	_delay_ms(200);
	
	// init sdcard
	UINT bw;
	f_mount(0, &FatFs);		// Give a work area to the FatFs module 
      f6:	60 e1       	ldi	r22, 0x10	; 16
      f8:	72 e0       	ldi	r23, 0x02	; 2
      fa:	80 e0       	ldi	r24, 0x00	; 0
      fc:	0e 94 9b 0c 	call	0x1936	; 0x1936 <f_mount>
	// open file
	fp = (FIL *)malloc(sizeof (FIL));
     100:	80 e2       	ldi	r24, 0x20	; 32
     102:	90 e0       	ldi	r25, 0x00	; 0
     104:	0e 94 23 16 	call	0x2c46	; 0x2c46 <malloc>
     108:	90 93 0f 02 	sts	0x020F, r25	; 0x80020f <__data_end+0x1>
     10c:	80 93 0e 02 	sts	0x020E, r24	; 0x80020e <__data_end>
	if (f_open(fp, "file.txt", FA_WRITE | FA_CREATE_ALWAYS) == FR_OK) {	// Create a file // THREEDO: Change from text
     110:	4a e0       	ldi	r20, 0x0A	; 10
     112:	67 e0       	ldi	r22, 0x07	; 7
     114:	71 e0       	ldi	r23, 0x01	; 1
     116:	0e 94 b9 0c 	call	0x1972	; 0x1972 <f_open>
     11a:	81 11       	cpse	r24, r1
     11c:	1a c0       	rjmp	.+52     	; 0x152 <main+0x7e>
		char *text = "Hello World! SDCard support up and running!\r\n";
		f_write(fp, text, strlen(text), &bw);	// Write data to the file 
     11e:	9e 01       	movw	r18, r28
     120:	2f 5f       	subi	r18, 0xFF	; 255
     122:	3f 4f       	sbci	r19, 0xFF	; 255
     124:	4d e2       	ldi	r20, 0x2D	; 45
     126:	50 e0       	ldi	r21, 0x00	; 0
     128:	60 e1       	ldi	r22, 0x10	; 16
     12a:	71 e0       	ldi	r23, 0x01	; 1
     12c:	80 91 0e 02 	lds	r24, 0x020E	; 0x80020e <__data_end>
     130:	90 91 0f 02 	lds	r25, 0x020F	; 0x80020f <__data_end+0x1>
     134:	0e 94 c5 0d 	call	0x1b8a	; 0x1b8a <f_write>
		f_close(fp); // Close the file 
     138:	80 91 0e 02 	lds	r24, 0x020E	; 0x80020e <__data_end>
     13c:	90 91 0f 02 	lds	r25, 0x020F	; 0x80020f <__data_end+0x1>
     140:	0e 94 b4 0f 	call	0x1f68	; 0x1f68 <f_close>
		if (bw == strlen(text)) { // We wrote the entire string
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	9a 81       	ldd	r25, Y+2	; 0x02
     148:	8d 97       	sbiw	r24, 0x2d	; 45
     14a:	19 f4       	brne	.+6      	; 0x152 <main+0x7e>
			PORTD |= (1<<PD0); // Turn LED on
     14c:	8b b1       	in	r24, 0x0b	; 11
     14e:	81 60       	ori	r24, 0x01	; 1
     150:	8b b9       	out	0x0b, r24	; 11
		}
		//else led2.Set(1); //TODO: Fix
	}
	// test append
	if (f_open(fp, "file.txt", FA_WRITE | FA_OPEN_ALWAYS) == FR_OK) {	// Open existing or create new file
     152:	42 e1       	ldi	r20, 0x12	; 18
     154:	67 e0       	ldi	r22, 0x07	; 7
     156:	71 e0       	ldi	r23, 0x01	; 1
     158:	80 91 0e 02 	lds	r24, 0x020E	; 0x80020e <__data_end>
     15c:	90 91 0f 02 	lds	r25, 0x020F	; 0x80020f <__data_end+0x1>
     160:	0e 94 b9 0c 	call	0x1972	; 0x1972 <f_open>
     164:	81 11       	cpse	r24, r1
     166:	27 c0       	rjmp	.+78     	; 0x1b6 <main+0xe2>
		if (f_lseek(fp, f_size(fp)) == FR_OK) 
     168:	80 91 0e 02 	lds	r24, 0x020E	; 0x80020e <__data_end>
     16c:	90 91 0f 02 	lds	r25, 0x020F	; 0x80020f <__data_end+0x1>
     170:	fc 01       	movw	r30, r24
     172:	42 85       	ldd	r20, Z+10	; 0x0a
     174:	53 85       	ldd	r21, Z+11	; 0x0b
     176:	64 85       	ldd	r22, Z+12	; 0x0c
     178:	75 85       	ldd	r23, Z+13	; 0x0d
     17a:	0e 94 bf 0f 	call	0x1f7e	; 0x1f7e <f_lseek>
     17e:	81 11       	cpse	r24, r1
     180:	14 c0       	rjmp	.+40     	; 0x1aa <main+0xd6>
			{
			char *text2 = "This is a new line, appended to existing file!\r\n";
			f_write(fp, text2, strlen(text2), &bw);	// Write data to the file
     182:	9e 01       	movw	r18, r28
     184:	2f 5f       	subi	r18, 0xFF	; 255
     186:	3f 4f       	sbci	r19, 0xFF	; 255
     188:	40 e3       	ldi	r20, 0x30	; 48
     18a:	50 e0       	ldi	r21, 0x00	; 0
     18c:	6e e3       	ldi	r22, 0x3E	; 62
     18e:	71 e0       	ldi	r23, 0x01	; 1
     190:	80 91 0e 02 	lds	r24, 0x020E	; 0x80020e <__data_end>
     194:	90 91 0f 02 	lds	r25, 0x020F	; 0x80020f <__data_end+0x1>
     198:	0e 94 c5 0d 	call	0x1b8a	; 0x1b8a <f_write>
			if (bw == strlen(text2)) { //we wrote the entire string
     19c:	89 81       	ldd	r24, Y+1	; 0x01
     19e:	9a 81       	ldd	r25, Y+2	; 0x02
     1a0:	c0 97       	sbiw	r24, 0x30	; 48
     1a2:	19 f4       	brne	.+6      	; 0x1aa <main+0xd6>
				PORTD &= ~(1<<PD0); // Turn LED off
     1a4:	8b b1       	in	r24, 0x0b	; 11
     1a6:	8e 7f       	andi	r24, 0xFE	; 254
     1a8:	8b b9       	out	0x0b, r24	; 11
			}
			
		}	
		f_close(fp);// Close the file		
     1aa:	80 91 0e 02 	lds	r24, 0x020E	; 0x80020e <__data_end>
     1ae:	90 91 0f 02 	lds	r25, 0x020F	; 0x80020f <__data_end+0x1>
     1b2:	0e 94 b4 0f 	call	0x1f68	; 0x1f68 <f_close>
		lcd.send_format_string("Read:%s", text);
	}	
	*/
	
	// signaling led
	PORTD |= (1<<PD0); // Turn LED on
     1b6:	8b b1       	in	r24, 0x0b	; 11
     1b8:	81 60       	ori	r24, 0x01	; 1
     1ba:	8b b9       	out	0x0b, r24	; 11
     1bc:	ff cf       	rjmp	.-2      	; 0x1bc <main+0xe8>

000001be <_ZL7mem_cpyPvPKvj>:
		mem_cpy(rbuff, &fp->buf[fp->fptr % SS(fp->fs)], rcnt);	/* Pick partial sector */
#endif
	}

	LEAVE_FF(fp->fs, FR_OK);
}
     1be:	dc 01       	movw	r26, r24
     1c0:	fb 01       	movw	r30, r22
     1c2:	42 30       	cpi	r20, 0x02	; 2
     1c4:	51 05       	cpc	r21, r1
     1c6:	38 f0       	brcs	.+14     	; 0x1d6 <_ZL7mem_cpyPvPKvj+0x18>
     1c8:	81 91       	ld	r24, Z+
     1ca:	91 91       	ld	r25, Z+
     1cc:	8d 93       	st	X+, r24
     1ce:	9d 93       	st	X+, r25
     1d0:	42 50       	subi	r20, 0x02	; 2
     1d2:	51 09       	sbc	r21, r1
     1d4:	f6 cf       	rjmp	.-20     	; 0x1c2 <_ZL7mem_cpyPvPKvj+0x4>
     1d6:	ca 01       	movw	r24, r20
     1d8:	01 97       	sbiw	r24, 0x01	; 1
     1da:	45 2b       	or	r20, r21
     1dc:	31 f0       	breq	.+12     	; 0x1ea <_ZL7mem_cpyPvPKvj+0x2c>
     1de:	20 81       	ld	r18, Z
     1e0:	2c 93       	st	X, r18
     1e2:	ac 01       	movw	r20, r24
     1e4:	31 96       	adiw	r30, 0x01	; 1
     1e6:	11 96       	adiw	r26, 0x01	; 1
     1e8:	f6 cf       	rjmp	.-20     	; 0x1d6 <_ZL7mem_cpyPvPKvj+0x18>
     1ea:	08 95       	ret

000001ec <_ZL7mem_setPvij>:
     1ec:	fc 01       	movw	r30, r24
     1ee:	ca 01       	movw	r24, r20
     1f0:	01 97       	sbiw	r24, 0x01	; 1
     1f2:	45 2b       	or	r20, r21
     1f4:	21 f0       	breq	.+8      	; 0x1fe <_ZL7mem_setPvij+0x12>
     1f6:	60 83       	st	Z, r22
     1f8:	ac 01       	movw	r20, r24
     1fa:	31 96       	adiw	r30, 0x01	; 1
     1fc:	f8 cf       	rjmp	.-16     	; 0x1ee <_ZL7mem_setPvij+0x2>
     1fe:	08 95       	ret

00000200 <_ZL7mem_cmpPKvS0_j>:
     200:	cf 93       	push	r28
     202:	df 93       	push	r29
     204:	ec 01       	movw	r28, r24
     206:	db 01       	movw	r26, r22
     208:	80 e0       	ldi	r24, 0x00	; 0
     20a:	90 e0       	ldi	r25, 0x00	; 0
     20c:	fa 01       	movw	r30, r20
     20e:	31 97       	sbiw	r30, 0x01	; 1
     210:	45 2b       	or	r20, r21
     212:	81 f0       	breq	.+32     	; 0x234 <_ZL7mem_cmpPKvS0_j+0x34>
     214:	9e 01       	movw	r18, r28
     216:	2f 5f       	subi	r18, 0xFF	; 255
     218:	3f 4f       	sbci	r19, 0xFF	; 255
     21a:	88 81       	ld	r24, Y
     21c:	90 e0       	ldi	r25, 0x00	; 0
     21e:	ad 01       	movw	r20, r26
     220:	4f 5f       	subi	r20, 0xFF	; 255
     222:	5f 4f       	sbci	r21, 0xFF	; 255
     224:	6c 91       	ld	r22, X
     226:	86 1b       	sub	r24, r22
     228:	91 09       	sbc	r25, r1
     22a:	31 f4       	brne	.+12     	; 0x238 <_ZL7mem_cmpPKvS0_j+0x38>
     22c:	da 01       	movw	r26, r20
     22e:	e9 01       	movw	r28, r18
     230:	21 e0       	ldi	r18, 0x01	; 1
     232:	05 c0       	rjmp	.+10     	; 0x23e <_ZL7mem_cmpPKvS0_j+0x3e>
     234:	20 e0       	ldi	r18, 0x00	; 0
     236:	03 c0       	rjmp	.+6      	; 0x23e <_ZL7mem_cmpPKvS0_j+0x3e>
     238:	da 01       	movw	r26, r20
     23a:	e9 01       	movw	r28, r18
     23c:	20 e0       	ldi	r18, 0x00	; 0
     23e:	af 01       	movw	r20, r30
     240:	21 11       	cpse	r18, r1
     242:	e4 cf       	rjmp	.-56     	; 0x20c <_ZL7mem_cmpPKvS0_j+0xc>
     244:	df 91       	pop	r29
     246:	cf 91       	pop	r28
     248:	08 95       	ret

0000024a <_ZL7chk_chrPKci>:
     24a:	fc 01       	movw	r30, r24
     24c:	80 81       	ld	r24, Z
     24e:	88 23       	and	r24, r24
     250:	39 f0       	breq	.+14     	; 0x260 <_ZL7chk_chrPKci+0x16>
     252:	28 2f       	mov	r18, r24
     254:	30 e0       	ldi	r19, 0x00	; 0
     256:	26 17       	cp	r18, r22
     258:	37 07       	cpc	r19, r23
     25a:	11 f0       	breq	.+4      	; 0x260 <_ZL7chk_chrPKci+0x16>
     25c:	31 96       	adiw	r30, 0x01	; 1
     25e:	f6 cf       	rjmp	.-20     	; 0x24c <_ZL7chk_chrPKci+0x2>
     260:	90 e0       	ldi	r25, 0x00	; 0
     262:	08 95       	ret

00000264 <_ZL8ld_clustP5FATFSPh>:
     264:	0f 93       	push	r16
     266:	1f 93       	push	r17
     268:	dc 01       	movw	r26, r24
     26a:	fb 01       	movw	r30, r22
     26c:	62 8d       	ldd	r22, Z+26	; 0x1a
     26e:	73 8d       	ldd	r23, Z+27	; 0x1b
     270:	80 e0       	ldi	r24, 0x00	; 0
     272:	90 e0       	ldi	r25, 0x00	; 0
     274:	2c 91       	ld	r18, X
     276:	23 30       	cpi	r18, 0x03	; 3
     278:	59 f4       	brne	.+22     	; 0x290 <_ZL8ld_clustP5FATFSPh+0x2c>
     27a:	04 89       	ldd	r16, Z+20	; 0x14
     27c:	15 89       	ldd	r17, Z+21	; 0x15
     27e:	20 e0       	ldi	r18, 0x00	; 0
     280:	30 e0       	ldi	r19, 0x00	; 0
     282:	98 01       	movw	r18, r16
     284:	11 27       	eor	r17, r17
     286:	00 27       	eor	r16, r16
     288:	60 2b       	or	r22, r16
     28a:	71 2b       	or	r23, r17
     28c:	82 2b       	or	r24, r18
     28e:	93 2b       	or	r25, r19
     290:	1f 91       	pop	r17
     292:	0f 91       	pop	r16
     294:	08 95       	ret

00000296 <_ZL8st_clustPhm>:
     296:	fc 01       	movw	r30, r24
     298:	53 8f       	std	Z+27, r21	; 0x1b
     29a:	42 8f       	std	Z+26, r20	; 0x1a
     29c:	75 8b       	std	Z+21, r23	; 0x15
     29e:	64 8b       	std	Z+20, r22	; 0x14
     2a0:	08 95       	ret

000002a2 <_ZL11create_nameP3DIRPPKc>:
     2a2:	4f 92       	push	r4
     2a4:	5f 92       	push	r5
     2a6:	6f 92       	push	r6
     2a8:	8f 92       	push	r8
     2aa:	9f 92       	push	r9
     2ac:	af 92       	push	r10
     2ae:	bf 92       	push	r11
     2b0:	cf 92       	push	r12
     2b2:	df 92       	push	r13
     2b4:	ef 92       	push	r14
     2b6:	ff 92       	push	r15
     2b8:	1f 93       	push	r17
     2ba:	cf 93       	push	r28
     2bc:	df 93       	push	r29
     2be:	fc 01       	movw	r30, r24
     2c0:	5b 01       	movw	r10, r22
     2c2:	db 01       	movw	r26, r22
     2c4:	cd 91       	ld	r28, X+
     2c6:	dc 91       	ld	r29, X
     2c8:	98 81       	ld	r25, Y
     2ca:	9f 32       	cpi	r25, 0x2F	; 47
     2cc:	11 f0       	breq	.+4      	; 0x2d2 <_ZL11create_nameP3DIRPPKc+0x30>
     2ce:	9c 35       	cpi	r25, 0x5C	; 92
     2d0:	11 f4       	brne	.+4      	; 0x2d6 <_ZL11create_nameP3DIRPPKc+0x34>
     2d2:	21 96       	adiw	r28, 0x01	; 1
     2d4:	f9 cf       	rjmp	.-14     	; 0x2c8 <_ZL11create_nameP3DIRPPKc+0x26>
     2d6:	c4 88       	ldd	r12, Z+20	; 0x14
     2d8:	d5 88       	ldd	r13, Z+21	; 0x15
     2da:	4b e0       	ldi	r20, 0x0B	; 11
     2dc:	50 e0       	ldi	r21, 0x00	; 0
     2de:	60 e2       	ldi	r22, 0x20	; 32
     2e0:	70 e0       	ldi	r23, 0x00	; 0
     2e2:	c6 01       	movw	r24, r12
     2e4:	83 df       	rcall	.-250    	; 0x1ec <_ZL7mem_setPvij>
     2e6:	41 2c       	mov	r4, r1
     2e8:	51 2c       	mov	r5, r1
     2ea:	80 e0       	ldi	r24, 0x00	; 0
     2ec:	90 e0       	ldi	r25, 0x00	; 0
     2ee:	68 94       	set
     2f0:	88 24       	eor	r8, r8
     2f2:	83 f8       	bld	r8, 3
     2f4:	91 2c       	mov	r9, r1
     2f6:	61 2c       	mov	r6, r1
     2f8:	01 c0       	rjmp	.+2      	; 0x2fc <_ZL11create_nameP3DIRPPKc+0x5a>
     2fa:	c7 01       	movw	r24, r14
     2fc:	7c 01       	movw	r14, r24
     2fe:	bf ef       	ldi	r27, 0xFF	; 255
     300:	eb 1a       	sub	r14, r27
     302:	fb 0a       	sbc	r15, r27
     304:	fe 01       	movw	r30, r28
     306:	e8 0f       	add	r30, r24
     308:	f9 1f       	adc	r31, r25
     30a:	10 81       	ld	r17, Z
     30c:	11 32       	cpi	r17, 0x21	; 33
     30e:	08 f4       	brcc	.+2      	; 0x312 <_ZL11create_nameP3DIRPPKc+0x70>
     310:	49 c0       	rjmp	.+146    	; 0x3a4 <_ZL11create_nameP3DIRPPKc+0x102>
     312:	1f 32       	cpi	r17, 0x2F	; 47
     314:	09 f4       	brne	.+2      	; 0x318 <_ZL11create_nameP3DIRPPKc+0x76>
     316:	46 c0       	rjmp	.+140    	; 0x3a4 <_ZL11create_nameP3DIRPPKc+0x102>
     318:	1c 35       	cpi	r17, 0x5C	; 92
     31a:	09 f4       	brne	.+2      	; 0x31e <_ZL11create_nameP3DIRPPKc+0x7c>
     31c:	43 c0       	rjmp	.+134    	; 0x3a4 <_ZL11create_nameP3DIRPPKc+0x102>
     31e:	1e 32       	cpi	r17, 0x2E	; 46
     320:	19 f0       	breq	.+6      	; 0x328 <_ZL11create_nameP3DIRPPKc+0x86>
     322:	48 14       	cp	r4, r8
     324:	59 04       	cpc	r5, r9
     326:	a0 f0       	brcs	.+40     	; 0x350 <_ZL11create_nameP3DIRPPKc+0xae>
     328:	e8 e0       	ldi	r30, 0x08	; 8
     32a:	8e 16       	cp	r8, r30
     32c:	91 04       	cpc	r9, r1
     32e:	09 f0       	breq	.+2      	; 0x332 <_ZL11create_nameP3DIRPPKc+0x90>
     330:	5f c0       	rjmp	.+190    	; 0x3f0 <_ZL11create_nameP3DIRPPKc+0x14e>
     332:	1e 32       	cpi	r17, 0x2E	; 46
     334:	09 f0       	breq	.+2      	; 0x338 <_ZL11create_nameP3DIRPPKc+0x96>
     336:	5e c0       	rjmp	.+188    	; 0x3f4 <_ZL11create_nameP3DIRPPKc+0x152>
     338:	66 0c       	add	r6, r6
     33a:	66 0c       	add	r6, r6
     33c:	68 94       	set
     33e:	44 24       	eor	r4, r4
     340:	43 f8       	bld	r4, 3
     342:	51 2c       	mov	r5, r1
     344:	0f 2e       	mov	r0, r31
     346:	fb e0       	ldi	r31, 0x0B	; 11
     348:	8f 2e       	mov	r8, r31
     34a:	91 2c       	mov	r9, r1
     34c:	f0 2d       	mov	r31, r0
     34e:	d5 cf       	rjmp	.-86     	; 0x2fa <_ZL11create_nameP3DIRPPKc+0x58>
     350:	11 23       	and	r17, r17
     352:	44 f4       	brge	.+16     	; 0x364 <_ZL11create_nameP3DIRPPKc+0xc2>
     354:	f6 2d       	mov	r31, r6
     356:	f3 60       	ori	r31, 0x03	; 3
     358:	6f 2e       	mov	r6, r31
     35a:	e1 2f       	mov	r30, r17
     35c:	f0 e0       	ldi	r31, 0x00	; 0
     35e:	e2 5f       	subi	r30, 0xF2	; 242
     360:	fe 4f       	sbci	r31, 0xFE	; 254
     362:	10 81       	ld	r17, Z
     364:	61 2f       	mov	r22, r17
     366:	70 e0       	ldi	r23, 0x00	; 0
     368:	8f e6       	ldi	r24, 0x6F	; 111
     36a:	91 e0       	ldi	r25, 0x01	; 1
     36c:	6e df       	rcall	.-292    	; 0x24a <_ZL7chk_chrPKci>
     36e:	89 2b       	or	r24, r25
     370:	09 f0       	breq	.+2      	; 0x374 <_ZL11create_nameP3DIRPPKc+0xd2>
     372:	42 c0       	rjmp	.+132    	; 0x3f8 <_ZL11create_nameP3DIRPPKc+0x156>
     374:	8f eb       	ldi	r24, 0xBF	; 191
     376:	81 0f       	add	r24, r17
     378:	8a 31       	cpi	r24, 0x1A	; 26
     37a:	20 f4       	brcc	.+8      	; 0x384 <_ZL11create_nameP3DIRPPKc+0xe2>
     37c:	26 2d       	mov	r18, r6
     37e:	22 60       	ori	r18, 0x02	; 2
     380:	62 2e       	mov	r6, r18
     382:	08 c0       	rjmp	.+16     	; 0x394 <_ZL11create_nameP3DIRPPKc+0xf2>
     384:	8f e9       	ldi	r24, 0x9F	; 159
     386:	81 0f       	add	r24, r17
     388:	8a 31       	cpi	r24, 0x1A	; 26
     38a:	20 f4       	brcc	.+8      	; 0x394 <_ZL11create_nameP3DIRPPKc+0xf2>
     38c:	86 2d       	mov	r24, r6
     38e:	81 60       	ori	r24, 0x01	; 1
     390:	68 2e       	mov	r6, r24
     392:	10 52       	subi	r17, 0x20	; 32
     394:	f6 01       	movw	r30, r12
     396:	e4 0d       	add	r30, r4
     398:	f5 1d       	adc	r31, r5
     39a:	10 83       	st	Z, r17
     39c:	d2 01       	movw	r26, r4
     39e:	11 96       	adiw	r26, 0x01	; 1
     3a0:	2d 01       	movw	r4, r26
     3a2:	ab cf       	rjmp	.-170    	; 0x2fa <_ZL11create_nameP3DIRPPKc+0x58>
     3a4:	ce 0d       	add	r28, r14
     3a6:	df 1d       	adc	r29, r15
     3a8:	f5 01       	movw	r30, r10
     3aa:	d1 83       	std	Z+1, r29	; 0x01
     3ac:	c0 83       	st	Z, r28
     3ae:	11 32       	cpi	r17, 0x21	; 33
     3b0:	10 f4       	brcc	.+4      	; 0x3b6 <_ZL11create_nameP3DIRPPKc+0x114>
     3b2:	94 e0       	ldi	r25, 0x04	; 4
     3b4:	01 c0       	rjmp	.+2      	; 0x3b8 <_ZL11create_nameP3DIRPPKc+0x116>
     3b6:	90 e0       	ldi	r25, 0x00	; 0
     3b8:	45 28       	or	r4, r5
     3ba:	01 f1       	breq	.+64     	; 0x3fc <_ZL11create_nameP3DIRPPKc+0x15a>
     3bc:	d6 01       	movw	r26, r12
     3be:	8c 91       	ld	r24, X
     3c0:	85 3e       	cpi	r24, 0xE5	; 229
     3c2:	11 f4       	brne	.+4      	; 0x3c8 <_ZL11create_nameP3DIRPPKc+0x126>
     3c4:	85 e0       	ldi	r24, 0x05	; 5
     3c6:	8c 93       	st	X, r24
     3c8:	b8 e0       	ldi	r27, 0x08	; 8
     3ca:	8b 16       	cp	r8, r27
     3cc:	91 04       	cpc	r9, r1
     3ce:	11 f4       	brne	.+4      	; 0x3d4 <_ZL11create_nameP3DIRPPKc+0x132>
     3d0:	66 0c       	add	r6, r6
     3d2:	66 0c       	add	r6, r6
     3d4:	86 2d       	mov	r24, r6
     3d6:	83 70       	andi	r24, 0x03	; 3
     3d8:	81 30       	cpi	r24, 0x01	; 1
     3da:	09 f4       	brne	.+2      	; 0x3de <_ZL11create_nameP3DIRPPKc+0x13c>
     3dc:	90 61       	ori	r25, 0x10	; 16
     3de:	86 2d       	mov	r24, r6
     3e0:	8c 70       	andi	r24, 0x0C	; 12
     3e2:	84 30       	cpi	r24, 0x04	; 4
     3e4:	09 f4       	brne	.+2      	; 0x3e8 <_ZL11create_nameP3DIRPPKc+0x146>
     3e6:	98 60       	ori	r25, 0x08	; 8
     3e8:	f6 01       	movw	r30, r12
     3ea:	93 87       	std	Z+11, r25	; 0x0b
     3ec:	80 e0       	ldi	r24, 0x00	; 0
     3ee:	07 c0       	rjmp	.+14     	; 0x3fe <_ZL11create_nameP3DIRPPKc+0x15c>
     3f0:	86 e0       	ldi	r24, 0x06	; 6
     3f2:	05 c0       	rjmp	.+10     	; 0x3fe <_ZL11create_nameP3DIRPPKc+0x15c>
     3f4:	86 e0       	ldi	r24, 0x06	; 6
     3f6:	03 c0       	rjmp	.+6      	; 0x3fe <_ZL11create_nameP3DIRPPKc+0x15c>
     3f8:	86 e0       	ldi	r24, 0x06	; 6
     3fa:	01 c0       	rjmp	.+2      	; 0x3fe <_ZL11create_nameP3DIRPPKc+0x15c>
     3fc:	86 e0       	ldi	r24, 0x06	; 6
     3fe:	df 91       	pop	r29
     400:	cf 91       	pop	r28
     402:	1f 91       	pop	r17
     404:	ff 90       	pop	r15
     406:	ef 90       	pop	r14
     408:	df 90       	pop	r13
     40a:	cf 90       	pop	r12
     40c:	bf 90       	pop	r11
     40e:	af 90       	pop	r10
     410:	9f 90       	pop	r9
     412:	8f 90       	pop	r8
     414:	6f 90       	pop	r6
     416:	5f 90       	pop	r5
     418:	4f 90       	pop	r4
     41a:	08 95       	ret

0000041c <_ZL8check_fsP5FATFSm>:
     41c:	0f 93       	push	r16
     41e:	cf 93       	push	r28
     420:	df 93       	push	r29
     422:	ec 01       	movw	r28, r24
     424:	9a 01       	movw	r18, r20
     426:	ab 01       	movw	r20, r22
     428:	bc 01       	movw	r22, r24
     42a:	6e 5c       	subi	r22, 0xCE	; 206
     42c:	7f 4f       	sbci	r23, 0xFF	; 255
     42e:	01 e0       	ldi	r16, 0x01	; 1
     430:	89 81       	ldd	r24, Y+1	; 0x01
     432:	0e 94 6b 14 	call	0x28d6	; 0x28d6 <disk_read>
     436:	81 11       	cpse	r24, r1
     438:	22 c0       	rjmp	.+68     	; 0x47e <_ZL8check_fsP5FATFSm+0x62>
     43a:	fe 01       	movw	r30, r28
     43c:	e0 5d       	subi	r30, 0xD0	; 208
     43e:	fd 4f       	sbci	r31, 0xFD	; 253
     440:	80 81       	ld	r24, Z
     442:	91 81       	ldd	r25, Z+1	; 0x01
     444:	85 35       	cpi	r24, 0x55	; 85
     446:	9a 4a       	sbci	r25, 0xAA	; 170
     448:	e1 f4       	brne	.+56     	; 0x482 <_ZL8check_fsP5FATFSm+0x66>
     44a:	e8 5c       	subi	r30, 0xC8	; 200
     44c:	f1 40       	sbci	r31, 0x01	; 1
     44e:	80 81       	ld	r24, Z
     450:	91 81       	ldd	r25, Z+1	; 0x01
     452:	a2 81       	ldd	r26, Z+2	; 0x02
     454:	b3 81       	ldd	r27, Z+3	; 0x03
     456:	bb 27       	eor	r27, r27
     458:	86 34       	cpi	r24, 0x46	; 70
     45a:	91 44       	sbci	r25, 0x41	; 65
     45c:	a4 45       	sbci	r26, 0x54	; 84
     45e:	b1 05       	cpc	r27, r1
     460:	91 f0       	breq	.+36     	; 0x486 <_ZL8check_fsP5FATFSm+0x6a>
     462:	cc 57       	subi	r28, 0x7C	; 124
     464:	df 4f       	sbci	r29, 0xFF	; 255
     466:	88 81       	ld	r24, Y
     468:	99 81       	ldd	r25, Y+1	; 0x01
     46a:	aa 81       	ldd	r26, Y+2	; 0x02
     46c:	bb 81       	ldd	r27, Y+3	; 0x03
     46e:	bb 27       	eor	r27, r27
     470:	86 34       	cpi	r24, 0x46	; 70
     472:	91 44       	sbci	r25, 0x41	; 65
     474:	a4 45       	sbci	r26, 0x54	; 84
     476:	b1 05       	cpc	r27, r1
     478:	41 f4       	brne	.+16     	; 0x48a <_ZL8check_fsP5FATFSm+0x6e>
     47a:	80 e0       	ldi	r24, 0x00	; 0
     47c:	07 c0       	rjmp	.+14     	; 0x48c <_ZL8check_fsP5FATFSm+0x70>
     47e:	83 e0       	ldi	r24, 0x03	; 3
     480:	05 c0       	rjmp	.+10     	; 0x48c <_ZL8check_fsP5FATFSm+0x70>
     482:	82 e0       	ldi	r24, 0x02	; 2
     484:	03 c0       	rjmp	.+6      	; 0x48c <_ZL8check_fsP5FATFSm+0x70>
     486:	80 e0       	ldi	r24, 0x00	; 0
     488:	01 c0       	rjmp	.+2      	; 0x48c <_ZL8check_fsP5FATFSm+0x70>
     48a:	81 e0       	ldi	r24, 0x01	; 1
     48c:	df 91       	pop	r29
     48e:	cf 91       	pop	r28
     490:	0f 91       	pop	r16
     492:	08 95       	ret

00000494 <_ZL11sync_windowP5FATFS>:
     494:	8f 92       	push	r8
     496:	9f 92       	push	r9
     498:	af 92       	push	r10
     49a:	bf 92       	push	r11
     49c:	cf 92       	push	r12
     49e:	df 92       	push	r13
     4a0:	ef 92       	push	r14
     4a2:	ff 92       	push	r15
     4a4:	0f 93       	push	r16
     4a6:	cf 93       	push	r28
     4a8:	df 93       	push	r29
     4aa:	fc 01       	movw	r30, r24
     4ac:	24 81       	ldd	r18, Z+4	; 0x04
     4ae:	22 23       	and	r18, r18
     4b0:	09 f4       	brne	.+2      	; 0x4b4 <_ZL11sync_windowP5FATFS+0x20>
     4b2:	42 c0       	rjmp	.+132    	; 0x538 <_ZL11sync_windowP5FATFS+0xa4>
     4b4:	ec 01       	movw	r28, r24
     4b6:	c6 a4       	ldd	r12, Z+46	; 0x2e
     4b8:	d7 a4       	ldd	r13, Z+47	; 0x2f
     4ba:	e0 a8       	ldd	r14, Z+48	; 0x30
     4bc:	f1 a8       	ldd	r15, Z+49	; 0x31
     4be:	4c 01       	movw	r8, r24
     4c0:	f2 e3       	ldi	r31, 0x32	; 50
     4c2:	8f 0e       	add	r8, r31
     4c4:	91 1c       	adc	r9, r1
     4c6:	01 e0       	ldi	r16, 0x01	; 1
     4c8:	a7 01       	movw	r20, r14
     4ca:	96 01       	movw	r18, r12
     4cc:	b4 01       	movw	r22, r8
     4ce:	89 81       	ldd	r24, Y+1	; 0x01
     4d0:	0e 94 c1 14 	call	0x2982	; 0x2982 <disk_write>
     4d4:	81 11       	cpse	r24, r1
     4d6:	32 c0       	rjmp	.+100    	; 0x53c <_ZL11sync_windowP5FATFS+0xa8>
     4d8:	1c 82       	std	Y+4, r1	; 0x04
     4da:	8a a1       	ldd	r24, Y+34	; 0x22
     4dc:	9b a1       	ldd	r25, Y+35	; 0x23
     4de:	ac a1       	ldd	r26, Y+36	; 0x24
     4e0:	bd a1       	ldd	r27, Y+37	; 0x25
     4e2:	c8 16       	cp	r12, r24
     4e4:	d9 06       	cpc	r13, r25
     4e6:	ea 06       	cpc	r14, r26
     4e8:	fb 06       	cpc	r15, r27
     4ea:	50 f1       	brcs	.+84     	; 0x540 <_ZL11sync_windowP5FATFS+0xac>
     4ec:	4a 8d       	ldd	r20, Y+26	; 0x1a
     4ee:	5b 8d       	ldd	r21, Y+27	; 0x1b
     4f0:	6c 8d       	ldd	r22, Y+28	; 0x1c
     4f2:	7d 8d       	ldd	r23, Y+29	; 0x1d
     4f4:	84 0f       	add	r24, r20
     4f6:	95 1f       	adc	r25, r21
     4f8:	a6 1f       	adc	r26, r22
     4fa:	b7 1f       	adc	r27, r23
     4fc:	c8 16       	cp	r12, r24
     4fe:	d9 06       	cpc	r13, r25
     500:	ea 06       	cpc	r14, r26
     502:	fb 06       	cpc	r15, r27
     504:	f8 f4       	brcc	.+62     	; 0x544 <_ZL11sync_windowP5FATFS+0xb0>
     506:	ab 80       	ldd	r10, Y+3	; 0x03
     508:	b1 2c       	mov	r11, r1
     50a:	82 e0       	ldi	r24, 0x02	; 2
     50c:	a8 16       	cp	r10, r24
     50e:	b1 04       	cpc	r11, r1
     510:	d8 f0       	brcs	.+54     	; 0x548 <_ZL11sync_windowP5FATFS+0xb4>
     512:	8a 8d       	ldd	r24, Y+26	; 0x1a
     514:	9b 8d       	ldd	r25, Y+27	; 0x1b
     516:	ac 8d       	ldd	r26, Y+28	; 0x1c
     518:	bd 8d       	ldd	r27, Y+29	; 0x1d
     51a:	c8 0e       	add	r12, r24
     51c:	d9 1e       	adc	r13, r25
     51e:	ea 1e       	adc	r14, r26
     520:	fb 1e       	adc	r15, r27
     522:	01 e0       	ldi	r16, 0x01	; 1
     524:	a7 01       	movw	r20, r14
     526:	96 01       	movw	r18, r12
     528:	b4 01       	movw	r22, r8
     52a:	89 81       	ldd	r24, Y+1	; 0x01
     52c:	0e 94 c1 14 	call	0x2982	; 0x2982 <disk_write>
     530:	e1 e0       	ldi	r30, 0x01	; 1
     532:	ae 1a       	sub	r10, r30
     534:	b1 08       	sbc	r11, r1
     536:	e9 cf       	rjmp	.-46     	; 0x50a <_ZL11sync_windowP5FATFS+0x76>
     538:	80 e0       	ldi	r24, 0x00	; 0
     53a:	07 c0       	rjmp	.+14     	; 0x54a <_ZL11sync_windowP5FATFS+0xb6>
     53c:	81 e0       	ldi	r24, 0x01	; 1
     53e:	05 c0       	rjmp	.+10     	; 0x54a <_ZL11sync_windowP5FATFS+0xb6>
     540:	80 e0       	ldi	r24, 0x00	; 0
     542:	03 c0       	rjmp	.+6      	; 0x54a <_ZL11sync_windowP5FATFS+0xb6>
     544:	80 e0       	ldi	r24, 0x00	; 0
     546:	01 c0       	rjmp	.+2      	; 0x54a <_ZL11sync_windowP5FATFS+0xb6>
     548:	80 e0       	ldi	r24, 0x00	; 0
     54a:	df 91       	pop	r29
     54c:	cf 91       	pop	r28
     54e:	0f 91       	pop	r16
     550:	ff 90       	pop	r15
     552:	ef 90       	pop	r14
     554:	df 90       	pop	r13
     556:	cf 90       	pop	r12
     558:	bf 90       	pop	r11
     55a:	af 90       	pop	r10
     55c:	9f 90       	pop	r9
     55e:	8f 90       	pop	r8
     560:	08 95       	ret

00000562 <_ZL11move_windowP5FATFSm>:
     562:	cf 92       	push	r12
     564:	df 92       	push	r13
     566:	ef 92       	push	r14
     568:	ff 92       	push	r15
     56a:	0f 93       	push	r16
     56c:	1f 93       	push	r17
     56e:	cf 93       	push	r28
     570:	df 93       	push	r29
     572:	fc 01       	movw	r30, r24
     574:	c6 a4       	ldd	r12, Z+46	; 0x2e
     576:	d7 a4       	ldd	r13, Z+47	; 0x2f
     578:	e0 a8       	ldd	r14, Z+48	; 0x30
     57a:	f1 a8       	ldd	r15, Z+49	; 0x31
     57c:	c4 16       	cp	r12, r20
     57e:	d5 06       	cpc	r13, r21
     580:	e6 06       	cpc	r14, r22
     582:	f7 06       	cpc	r15, r23
     584:	b9 f0       	breq	.+46     	; 0x5b4 <_ZL11move_windowP5FATFSm+0x52>
     586:	6a 01       	movw	r12, r20
     588:	7b 01       	movw	r14, r22
     58a:	ec 01       	movw	r28, r24
     58c:	83 df       	rcall	.-250    	; 0x494 <_ZL11sync_windowP5FATFS>
     58e:	18 2f       	mov	r17, r24
     590:	81 11       	cpse	r24, r1
     592:	12 c0       	rjmp	.+36     	; 0x5b8 <_ZL11move_windowP5FATFSm+0x56>
     594:	01 e0       	ldi	r16, 0x01	; 1
     596:	a7 01       	movw	r20, r14
     598:	96 01       	movw	r18, r12
     59a:	be 01       	movw	r22, r28
     59c:	6e 5c       	subi	r22, 0xCE	; 206
     59e:	7f 4f       	sbci	r23, 0xFF	; 255
     5a0:	89 81       	ldd	r24, Y+1	; 0x01
     5a2:	0e 94 6b 14 	call	0x28d6	; 0x28d6 <disk_read>
     5a6:	81 11       	cpse	r24, r1
     5a8:	09 c0       	rjmp	.+18     	; 0x5bc <_ZL11move_windowP5FATFSm+0x5a>
     5aa:	ce a6       	std	Y+46, r12	; 0x2e
     5ac:	df a6       	std	Y+47, r13	; 0x2f
     5ae:	e8 aa       	std	Y+48, r14	; 0x30
     5b0:	f9 aa       	std	Y+49, r15	; 0x31
     5b2:	05 c0       	rjmp	.+10     	; 0x5be <_ZL11move_windowP5FATFSm+0x5c>
     5b4:	10 e0       	ldi	r17, 0x00	; 0
     5b6:	03 c0       	rjmp	.+6      	; 0x5be <_ZL11move_windowP5FATFSm+0x5c>
     5b8:	11 e0       	ldi	r17, 0x01	; 1
     5ba:	01 c0       	rjmp	.+2      	; 0x5be <_ZL11move_windowP5FATFSm+0x5c>
     5bc:	11 e0       	ldi	r17, 0x01	; 1
     5be:	81 2f       	mov	r24, r17
     5c0:	df 91       	pop	r29
     5c2:	cf 91       	pop	r28
     5c4:	1f 91       	pop	r17
     5c6:	0f 91       	pop	r16
     5c8:	ff 90       	pop	r15
     5ca:	ef 90       	pop	r14
     5cc:	df 90       	pop	r13
     5ce:	cf 90       	pop	r12
     5d0:	08 95       	ret

000005d2 <_ZL8validatePv>:
     5d2:	00 97       	sbiw	r24, 0x00	; 0
     5d4:	c9 f0       	breq	.+50     	; 0x608 <_ZL8validatePv+0x36>
     5d6:	dc 01       	movw	r26, r24
     5d8:	ed 91       	ld	r30, X+
     5da:	fc 91       	ld	r31, X
     5dc:	11 97       	sbiw	r26, 0x01	; 1
     5de:	30 97       	sbiw	r30, 0x00	; 0
     5e0:	a9 f0       	breq	.+42     	; 0x60c <_ZL8validatePv+0x3a>
     5e2:	20 81       	ld	r18, Z
     5e4:	22 23       	and	r18, r18
     5e6:	a1 f0       	breq	.+40     	; 0x610 <_ZL8validatePv+0x3e>
     5e8:	26 81       	ldd	r18, Z+6	; 0x06
     5ea:	37 81       	ldd	r19, Z+7	; 0x07
     5ec:	12 96       	adiw	r26, 0x02	; 2
     5ee:	8d 91       	ld	r24, X+
     5f0:	9c 91       	ld	r25, X
     5f2:	13 97       	sbiw	r26, 0x03	; 3
     5f4:	28 17       	cp	r18, r24
     5f6:	39 07       	cpc	r19, r25
     5f8:	69 f4       	brne	.+26     	; 0x614 <_ZL8validatePv+0x42>
     5fa:	81 81       	ldd	r24, Z+1	; 0x01
     5fc:	0e 94 94 13 	call	0x2728	; 0x2728 <disk_status>
     600:	80 ff       	sbrs	r24, 0
     602:	0a c0       	rjmp	.+20     	; 0x618 <_ZL8validatePv+0x46>
     604:	83 e0       	ldi	r24, 0x03	; 3
     606:	08 95       	ret
     608:	89 e0       	ldi	r24, 0x09	; 9
     60a:	08 95       	ret
     60c:	89 e0       	ldi	r24, 0x09	; 9
     60e:	08 95       	ret
     610:	89 e0       	ldi	r24, 0x09	; 9
     612:	08 95       	ret
     614:	89 e0       	ldi	r24, 0x09	; 9
     616:	08 95       	ret
     618:	80 e0       	ldi	r24, 0x00	; 0
     61a:	08 95       	ret

0000061c <_ZL11chk_mountedPPKcPP5FATFSh>:
     61c:	2f 92       	push	r2
     61e:	3f 92       	push	r3
     620:	4f 92       	push	r4
     622:	5f 92       	push	r5
     624:	6f 92       	push	r6
     626:	7f 92       	push	r7
     628:	8f 92       	push	r8
     62a:	9f 92       	push	r9
     62c:	af 92       	push	r10
     62e:	bf 92       	push	r11
     630:	cf 92       	push	r12
     632:	df 92       	push	r13
     634:	ef 92       	push	r14
     636:	ff 92       	push	r15
     638:	0f 93       	push	r16
     63a:	1f 93       	push	r17
     63c:	cf 93       	push	r28
     63e:	df 93       	push	r29
     640:	cd b7       	in	r28, 0x3d	; 61
     642:	de b7       	in	r29, 0x3e	; 62
     644:	2e 97       	sbiw	r28, 0x0e	; 14
     646:	0f b6       	in	r0, 0x3f	; 63
     648:	f8 94       	cli
     64a:	de bf       	out	0x3e, r29	; 62
     64c:	0f be       	out	0x3f, r0	; 63
     64e:	cd bf       	out	0x3d, r28	; 61
     650:	dc 01       	movw	r26, r24
     652:	ed 91       	ld	r30, X+
     654:	fc 91       	ld	r31, X
     656:	e0 80       	ld	r14, Z
     658:	f1 2c       	mov	r15, r1
     65a:	b0 e3       	ldi	r27, 0x30	; 48
     65c:	eb 1a       	sub	r14, r27
     65e:	f1 08       	sbc	r15, r1
     660:	2a e0       	ldi	r18, 0x0A	; 10
     662:	e2 16       	cp	r14, r18
     664:	f1 04       	cpc	r15, r1
     666:	40 f4       	brcc	.+16     	; 0x678 <_ZL11chk_mountedPPKcPP5FATFSh+0x5c>
     668:	21 81       	ldd	r18, Z+1	; 0x01
     66a:	2a 33       	cpi	r18, 0x3A	; 58
     66c:	41 f4       	brne	.+16     	; 0x67e <_ZL11chk_mountedPPKcPP5FATFSh+0x62>
     66e:	32 96       	adiw	r30, 0x02	; 2
     670:	dc 01       	movw	r26, r24
     672:	ed 93       	st	X+, r30
     674:	fc 93       	st	X, r31
     676:	05 c0       	rjmp	.+10     	; 0x682 <_ZL11chk_mountedPPKcPP5FATFSh+0x66>
     678:	e1 2c       	mov	r14, r1
     67a:	f1 2c       	mov	r15, r1
     67c:	02 c0       	rjmp	.+4      	; 0x682 <_ZL11chk_mountedPPKcPP5FATFSh+0x66>
     67e:	e1 2c       	mov	r14, r1
     680:	f1 2c       	mov	r15, r1
     682:	fb 01       	movw	r30, r22
     684:	11 82       	std	Z+1, r1	; 0x01
     686:	10 82       	st	Z, r1
     688:	e1 14       	cp	r14, r1
     68a:	f1 04       	cpc	r15, r1
     68c:	09 f0       	breq	.+2      	; 0x690 <_ZL11chk_mountedPPKcPP5FATFSh+0x74>
     68e:	2a c2       	rjmp	.+1108   	; 0xae4 <_ZL11chk_mountedPPKcPP5FATFSh+0x4c8>
     690:	f7 01       	movw	r30, r14
     692:	ee 0f       	add	r30, r30
     694:	ff 1f       	adc	r31, r31
     696:	ec 5b       	subi	r30, 0xBC	; 188
     698:	fb 4f       	sbci	r31, 0xFB	; 251
     69a:	80 80       	ld	r8, Z
     69c:	91 80       	ldd	r9, Z+1	; 0x01
     69e:	9e 86       	std	Y+14, r9	; 0x0e
     6a0:	8d 86       	std	Y+13, r8	; 0x0d
     6a2:	81 14       	cp	r8, r1
     6a4:	91 04       	cpc	r9, r1
     6a6:	09 f4       	brne	.+2      	; 0x6aa <_ZL11chk_mountedPPKcPP5FATFSh+0x8e>
     6a8:	1f c2       	rjmp	.+1086   	; 0xae8 <_ZL11chk_mountedPPKcPP5FATFSh+0x4cc>
     6aa:	14 2f       	mov	r17, r20
     6ac:	fb 01       	movw	r30, r22
     6ae:	91 82       	std	Z+1, r9	; 0x01
     6b0:	80 82       	st	Z, r8
     6b2:	d4 01       	movw	r26, r8
     6b4:	8c 91       	ld	r24, X
     6b6:	88 23       	and	r24, r24
     6b8:	69 f0       	breq	.+26     	; 0x6d4 <_ZL11chk_mountedPPKcPP5FATFSh+0xb8>
     6ba:	11 96       	adiw	r26, 0x01	; 1
     6bc:	8c 91       	ld	r24, X
     6be:	0e 94 94 13 	call	0x2728	; 0x2728 <disk_status>
     6c2:	80 fd       	sbrc	r24, 0
     6c4:	07 c0       	rjmp	.+14     	; 0x6d4 <_ZL11chk_mountedPPKcPP5FATFSh+0xb8>
     6c6:	11 23       	and	r17, r17
     6c8:	09 f4       	brne	.+2      	; 0x6cc <_ZL11chk_mountedPPKcPP5FATFSh+0xb0>
     6ca:	10 c2       	rjmp	.+1056   	; 0xaec <_ZL11chk_mountedPPKcPP5FATFSh+0x4d0>
     6cc:	82 fd       	sbrc	r24, 2
     6ce:	10 c2       	rjmp	.+1056   	; 0xaf0 <_ZL11chk_mountedPPKcPP5FATFSh+0x4d4>
     6d0:	80 e0       	ldi	r24, 0x00	; 0
     6d2:	2d c2       	rjmp	.+1114   	; 0xb2e <_ZL11chk_mountedPPKcPP5FATFSh+0x512>
     6d4:	ed 85       	ldd	r30, Y+13	; 0x0d
     6d6:	fe 85       	ldd	r31, Y+14	; 0x0e
     6d8:	10 82       	st	Z, r1
     6da:	e1 82       	std	Z+1, r14	; 0x01
     6dc:	8e 2d       	mov	r24, r14
     6de:	0e 94 9b 13 	call	0x2736	; 0x2736 <disk_initialize>
     6e2:	80 fd       	sbrc	r24, 0
     6e4:	07 c2       	rjmp	.+1038   	; 0xaf4 <_ZL11chk_mountedPPKcPP5FATFSh+0x4d8>
     6e6:	11 23       	and	r17, r17
     6e8:	11 f0       	breq	.+4      	; 0x6ee <_ZL11chk_mountedPPKcPP5FATFSh+0xd2>
     6ea:	82 fd       	sbrc	r24, 2
     6ec:	05 c2       	rjmp	.+1034   	; 0xaf8 <_ZL11chk_mountedPPKcPP5FATFSh+0x4dc>
     6ee:	40 e0       	ldi	r20, 0x00	; 0
     6f0:	50 e0       	ldi	r21, 0x00	; 0
     6f2:	ba 01       	movw	r22, r20
     6f4:	8d 85       	ldd	r24, Y+13	; 0x0d
     6f6:	9e 85       	ldd	r25, Y+14	; 0x0e
     6f8:	91 de       	rcall	.-734    	; 0x41c <_ZL8check_fsP5FATFSm>
     6fa:	81 30       	cpi	r24, 0x01	; 1
     6fc:	89 f4       	brne	.+34     	; 0x720 <_ZL11chk_mountedPPKcPP5FATFSh+0x104>
     6fe:	ed 85       	ldd	r30, Y+13	; 0x0d
     700:	fe 85       	ldd	r31, Y+14	; 0x0e
     702:	e0 51       	subi	r30, 0x10	; 16
     704:	fe 4f       	sbci	r31, 0xFE	; 254
     706:	94 81       	ldd	r25, Z+4	; 0x04
     708:	99 23       	and	r25, r25
     70a:	71 f0       	breq	.+28     	; 0x728 <_ZL11chk_mountedPPKcPP5FATFSh+0x10c>
     70c:	c0 84       	ldd	r12, Z+8	; 0x08
     70e:	d1 84       	ldd	r13, Z+9	; 0x09
     710:	e2 84       	ldd	r14, Z+10	; 0x0a
     712:	f3 84       	ldd	r15, Z+11	; 0x0b
     714:	b7 01       	movw	r22, r14
     716:	a6 01       	movw	r20, r12
     718:	8d 85       	ldd	r24, Y+13	; 0x0d
     71a:	9e 85       	ldd	r25, Y+14	; 0x0e
     71c:	7f de       	rcall	.-770    	; 0x41c <_ZL8check_fsP5FATFSm>
     71e:	07 c0       	rjmp	.+14     	; 0x72e <_ZL11chk_mountedPPKcPP5FATFSh+0x112>
     720:	c1 2c       	mov	r12, r1
     722:	d1 2c       	mov	r13, r1
     724:	76 01       	movw	r14, r12
     726:	03 c0       	rjmp	.+6      	; 0x72e <_ZL11chk_mountedPPKcPP5FATFSh+0x112>
     728:	c1 2c       	mov	r12, r1
     72a:	d1 2c       	mov	r13, r1
     72c:	76 01       	movw	r14, r12
     72e:	83 30       	cpi	r24, 0x03	; 3
     730:	09 f4       	brne	.+2      	; 0x734 <_ZL11chk_mountedPPKcPP5FATFSh+0x118>
     732:	e4 c1       	rjmp	.+968    	; 0xafc <_ZL11chk_mountedPPKcPP5FATFSh+0x4e0>
     734:	81 11       	cpse	r24, r1
     736:	e4 c1       	rjmp	.+968    	; 0xb00 <_ZL11chk_mountedPPKcPP5FATFSh+0x4e4>
     738:	ad 85       	ldd	r26, Y+13	; 0x0d
     73a:	be 85       	ldd	r27, Y+14	; 0x0e
     73c:	dd 96       	adiw	r26, 0x3d	; 61
     73e:	8d 91       	ld	r24, X+
     740:	9c 91       	ld	r25, X
     742:	de 97       	sbiw	r26, 0x3e	; 62
     744:	81 15       	cp	r24, r1
     746:	92 40       	sbci	r25, 0x02	; 2
     748:	09 f0       	breq	.+2      	; 0x74c <_ZL11chk_mountedPPKcPP5FATFSh+0x130>
     74a:	dc c1       	rjmp	.+952    	; 0xb04 <_ZL11chk_mountedPPKcPP5FATFSh+0x4e8>
     74c:	ed 85       	ldd	r30, Y+13	; 0x0d
     74e:	fe 85       	ldd	r31, Y+14	; 0x0e
     750:	e8 5b       	subi	r30, 0xB8	; 184
     752:	ff 4f       	sbci	r31, 0xFF	; 255
     754:	80 81       	ld	r24, Z
     756:	91 81       	ldd	r25, Z+1	; 0x01
     758:	2c 01       	movw	r4, r24
     75a:	61 2c       	mov	r6, r1
     75c:	71 2c       	mov	r7, r1
     75e:	41 14       	cp	r4, r1
     760:	51 04       	cpc	r5, r1
     762:	61 04       	cpc	r6, r1
     764:	71 04       	cpc	r7, r1
     766:	41 f4       	brne	.+16     	; 0x778 <_ZL11chk_mountedPPKcPP5FATFSh+0x15c>
     768:	ed 85       	ldd	r30, Y+13	; 0x0d
     76a:	fe 85       	ldd	r31, Y+14	; 0x0e
     76c:	ea 5a       	subi	r30, 0xAA	; 170
     76e:	ff 4f       	sbci	r31, 0xFF	; 255
     770:	40 80       	ld	r4, Z
     772:	51 80       	ldd	r5, Z+1	; 0x01
     774:	62 80       	ldd	r6, Z+2	; 0x02
     776:	73 80       	ldd	r7, Z+3	; 0x03
     778:	ed 85       	ldd	r30, Y+13	; 0x0d
     77a:	fe 85       	ldd	r31, Y+14	; 0x0e
     77c:	42 8e       	std	Z+26, r4	; 0x1a
     77e:	53 8e       	std	Z+27, r5	; 0x1b
     780:	64 8e       	std	Z+28, r6	; 0x1c
     782:	75 8e       	std	Z+29, r7	; 0x1d
     784:	ee 5b       	subi	r30, 0xBE	; 190
     786:	ff 4f       	sbci	r31, 0xFF	; 255
     788:	a0 81       	ld	r26, Z
     78a:	ed 85       	ldd	r30, Y+13	; 0x0d
     78c:	fe 85       	ldd	r31, Y+14	; 0x0e
     78e:	a3 83       	std	Z+3, r26	; 0x03
     790:	8f ef       	ldi	r24, 0xFF	; 255
     792:	8a 0f       	add	r24, r26
     794:	82 30       	cpi	r24, 0x02	; 2
     796:	08 f0       	brcs	.+2      	; 0x79a <_ZL11chk_mountedPPKcPP5FATFSh+0x17e>
     798:	b7 c1       	rjmp	.+878    	; 0xb08 <_ZL11chk_mountedPPKcPP5FATFSh+0x4ec>
     79a:	b0 e0       	ldi	r27, 0x00	; 0
     79c:	a3 01       	movw	r20, r6
     79e:	92 01       	movw	r18, r4
     7a0:	0e 94 0a 16 	call	0x2c14	; 0x2c14 <__muluhisi3>
     7a4:	6d 83       	std	Y+5, r22	; 0x05
     7a6:	7e 83       	std	Y+6, r23	; 0x06
     7a8:	8f 83       	std	Y+7, r24	; 0x07
     7aa:	98 87       	std	Y+8, r25	; 0x08
     7ac:	27 ad       	ldd	r18, Z+63	; 0x3f
     7ae:	22 83       	std	Z+2, r18	; 0x02
     7b0:	22 23       	and	r18, r18
     7b2:	09 f4       	brne	.+2      	; 0x7b6 <_ZL11chk_mountedPPKcPP5FATFSh+0x19a>
     7b4:	ab c1       	rjmp	.+854    	; 0xb0c <_ZL11chk_mountedPPKcPP5FATFSh+0x4f0>
     7b6:	42 2f       	mov	r20, r18
     7b8:	50 e0       	ldi	r21, 0x00	; 0
     7ba:	ca 01       	movw	r24, r20
     7bc:	01 97       	sbiw	r24, 0x01	; 1
     7be:	84 23       	and	r24, r20
     7c0:	95 23       	and	r25, r21
     7c2:	89 2b       	or	r24, r25
     7c4:	09 f0       	breq	.+2      	; 0x7c8 <_ZL11chk_mountedPPKcPP5FATFSh+0x1ac>
     7c6:	a4 c1       	rjmp	.+840    	; 0xb10 <_ZL11chk_mountedPPKcPP5FATFSh+0x4f4>
     7c8:	ed 5b       	subi	r30, 0xBD	; 189
     7ca:	ff 4f       	sbci	r31, 0xFF	; 255
     7cc:	20 80       	ld	r2, Z
     7ce:	31 80       	ldd	r3, Z+1	; 0x01
     7d0:	ad 85       	ldd	r26, Y+13	; 0x0d
     7d2:	be 85       	ldd	r27, Y+14	; 0x0e
     7d4:	19 96       	adiw	r26, 0x09	; 9
     7d6:	3c 92       	st	X, r3
     7d8:	2e 92       	st	-X, r2
     7da:	18 97       	sbiw	r26, 0x08	; 8
     7dc:	c1 01       	movw	r24, r2
     7de:	8f 70       	andi	r24, 0x0F	; 15
     7e0:	99 27       	eor	r25, r25
     7e2:	89 2b       	or	r24, r25
     7e4:	09 f0       	breq	.+2      	; 0x7e8 <_ZL11chk_mountedPPKcPP5FATFSh+0x1cc>
     7e6:	96 c1       	rjmp	.+812    	; 0xb14 <_ZL11chk_mountedPPKcPP5FATFSh+0x4f8>
     7e8:	fd 01       	movw	r30, r26
     7ea:	eb 5b       	subi	r30, 0xBB	; 187
     7ec:	ff 4f       	sbci	r31, 0xFF	; 255
     7ee:	60 81       	ld	r22, Z
     7f0:	71 81       	ldd	r23, Z+1	; 0x01
     7f2:	cb 01       	movw	r24, r22
     7f4:	a0 e0       	ldi	r26, 0x00	; 0
     7f6:	b0 e0       	ldi	r27, 0x00	; 0
     7f8:	00 97       	sbiw	r24, 0x00	; 0
     7fa:	a1 05       	cpc	r26, r1
     7fc:	b1 05       	cpc	r27, r1
     7fe:	41 f4       	brne	.+16     	; 0x810 <_ZL11chk_mountedPPKcPP5FATFSh+0x1f4>
     800:	ed 85       	ldd	r30, Y+13	; 0x0d
     802:	fe 85       	ldd	r31, Y+14	; 0x0e
     804:	ee 5a       	subi	r30, 0xAE	; 174
     806:	ff 4f       	sbci	r31, 0xFF	; 255
     808:	80 81       	ld	r24, Z
     80a:	91 81       	ldd	r25, Z+1	; 0x01
     80c:	a2 81       	ldd	r26, Z+2	; 0x02
     80e:	b3 81       	ldd	r27, Z+3	; 0x03
     810:	ed 85       	ldd	r30, Y+13	; 0x0d
     812:	fe 85       	ldd	r31, Y+14	; 0x0e
     814:	e0 5c       	subi	r30, 0xC0	; 192
     816:	ff 4f       	sbci	r31, 0xFF	; 255
     818:	40 81       	ld	r20, Z
     81a:	51 81       	ldd	r21, Z+1	; 0x01
     81c:	41 15       	cp	r20, r1
     81e:	51 05       	cpc	r21, r1
     820:	09 f4       	brne	.+2      	; 0x824 <_ZL11chk_mountedPPKcPP5FATFSh+0x208>
     822:	7a c1       	rjmp	.+756    	; 0xb18 <_ZL11chk_mountedPPKcPP5FATFSh+0x4fc>
     824:	4a 01       	movw	r8, r20
     826:	a1 2c       	mov	r10, r1
     828:	b1 2c       	mov	r11, r1
     82a:	89 86       	std	Y+9, r8	; 0x09
     82c:	9a 86       	std	Y+10, r9	; 0x0a
     82e:	ab 86       	std	Y+11, r10	; 0x0b
     830:	bc 86       	std	Y+12, r11	; 0x0c
     832:	8d 80       	ldd	r8, Y+5	; 0x05
     834:	9e 80       	ldd	r9, Y+6	; 0x06
     836:	af 80       	ldd	r10, Y+7	; 0x07
     838:	b8 84       	ldd	r11, Y+8	; 0x08
     83a:	49 85       	ldd	r20, Y+9	; 0x09
     83c:	5a 85       	ldd	r21, Y+10	; 0x0a
     83e:	6b 85       	ldd	r22, Y+11	; 0x0b
     840:	7c 85       	ldd	r23, Y+12	; 0x0c
     842:	84 0e       	add	r8, r20
     844:	95 1e       	adc	r9, r21
     846:	a6 1e       	adc	r10, r22
     848:	b7 1e       	adc	r11, r23
     84a:	f1 01       	movw	r30, r2
     84c:	f2 95       	swap	r31
     84e:	e2 95       	swap	r30
     850:	ef 70       	andi	r30, 0x0F	; 15
     852:	ef 27       	eor	r30, r31
     854:	ff 70       	andi	r31, 0x0F	; 15
     856:	ef 27       	eor	r30, r31
     858:	b5 01       	movw	r22, r10
     85a:	a4 01       	movw	r20, r8
     85c:	4e 0f       	add	r20, r30
     85e:	5f 1f       	adc	r21, r31
     860:	61 1d       	adc	r22, r1
     862:	71 1d       	adc	r23, r1
     864:	49 83       	std	Y+1, r20	; 0x01
     866:	5a 83       	std	Y+2, r21	; 0x02
     868:	6b 83       	std	Y+3, r22	; 0x03
     86a:	7c 83       	std	Y+4, r23	; 0x04
     86c:	84 17       	cp	r24, r20
     86e:	95 07       	cpc	r25, r21
     870:	a6 07       	cpc	r26, r22
     872:	b7 07       	cpc	r27, r23
     874:	08 f4       	brcc	.+2      	; 0x878 <_ZL11chk_mountedPPKcPP5FATFSh+0x25c>
     876:	52 c1       	rjmp	.+676    	; 0xb1c <_ZL11chk_mountedPPKcPP5FATFSh+0x500>
     878:	bc 01       	movw	r22, r24
     87a:	cd 01       	movw	r24, r26
     87c:	89 80       	ldd	r8, Y+1	; 0x01
     87e:	9a 80       	ldd	r9, Y+2	; 0x02
     880:	ab 80       	ldd	r10, Y+3	; 0x03
     882:	bc 80       	ldd	r11, Y+4	; 0x04
     884:	68 19       	sub	r22, r8
     886:	79 09       	sbc	r23, r9
     888:	8a 09       	sbc	r24, r10
     88a:	9b 09       	sbc	r25, r11
     88c:	30 e0       	ldi	r19, 0x00	; 0
     88e:	40 e0       	ldi	r20, 0x00	; 0
     890:	50 e0       	ldi	r21, 0x00	; 0
     892:	0e 94 e8 15 	call	0x2bd0	; 0x2bd0 <__udivmodsi4>
     896:	da 01       	movw	r26, r20
     898:	c9 01       	movw	r24, r18
     89a:	21 15       	cp	r18, r1
     89c:	31 05       	cpc	r19, r1
     89e:	41 05       	cpc	r20, r1
     8a0:	51 05       	cpc	r21, r1
     8a2:	09 f4       	brne	.+2      	; 0x8a6 <_ZL11chk_mountedPPKcPP5FATFSh+0x28a>
     8a4:	3d c1       	rjmp	.+634    	; 0xb20 <_ZL11chk_mountedPPKcPP5FATFSh+0x504>
     8a6:	26 3f       	cpi	r18, 0xF6	; 246
     8a8:	6f e0       	ldi	r22, 0x0F	; 15
     8aa:	36 07       	cpc	r19, r22
     8ac:	41 05       	cpc	r20, r1
     8ae:	51 05       	cpc	r21, r1
     8b0:	10 f4       	brcc	.+4      	; 0x8b6 <_ZL11chk_mountedPPKcPP5FATFSh+0x29a>
     8b2:	11 e0       	ldi	r17, 0x01	; 1
     8b4:	01 c0       	rjmp	.+2      	; 0x8b8 <_ZL11chk_mountedPPKcPP5FATFSh+0x29c>
     8b6:	12 e0       	ldi	r17, 0x02	; 2
     8b8:	86 3f       	cpi	r24, 0xF6	; 246
     8ba:	9f 4f       	sbci	r25, 0xFF	; 255
     8bc:	a1 05       	cpc	r26, r1
     8be:	b1 05       	cpc	r27, r1
     8c0:	08 f0       	brcs	.+2      	; 0x8c4 <_ZL11chk_mountedPPKcPP5FATFSh+0x2a8>
     8c2:	13 e0       	ldi	r17, 0x03	; 3
     8c4:	49 01       	movw	r8, r18
     8c6:	5a 01       	movw	r10, r20
     8c8:	82 e0       	ldi	r24, 0x02	; 2
     8ca:	88 0e       	add	r8, r24
     8cc:	91 1c       	adc	r9, r1
     8ce:	a1 1c       	adc	r10, r1
     8d0:	b1 1c       	adc	r11, r1
     8d2:	ad 85       	ldd	r26, Y+13	; 0x0d
     8d4:	be 85       	ldd	r27, Y+14	; 0x0e
     8d6:	56 96       	adiw	r26, 0x16	; 22
     8d8:	8d 92       	st	X+, r8
     8da:	9d 92       	st	X+, r9
     8dc:	ad 92       	st	X+, r10
     8de:	bc 92       	st	X, r11
     8e0:	59 97       	sbiw	r26, 0x19	; 25
     8e2:	fd 01       	movw	r30, r26
     8e4:	c6 8e       	std	Z+30, r12	; 0x1e
     8e6:	d7 8e       	std	Z+31, r13	; 0x1f
     8e8:	e0 a2       	std	Z+32, r14	; 0x20
     8ea:	f1 a2       	std	Z+33, r15	; 0x21
     8ec:	89 85       	ldd	r24, Y+9	; 0x09
     8ee:	9a 85       	ldd	r25, Y+10	; 0x0a
     8f0:	ab 85       	ldd	r26, Y+11	; 0x0b
     8f2:	bc 85       	ldd	r27, Y+12	; 0x0c
     8f4:	8c 0d       	add	r24, r12
     8f6:	9d 1d       	adc	r25, r13
     8f8:	ae 1d       	adc	r26, r14
     8fa:	bf 1d       	adc	r27, r15
     8fc:	82 a3       	std	Z+34, r24	; 0x22
     8fe:	93 a3       	std	Z+35, r25	; 0x23
     900:	a4 a3       	std	Z+36, r26	; 0x24
     902:	b5 a3       	std	Z+37, r27	; 0x25
     904:	49 81       	ldd	r20, Y+1	; 0x01
     906:	5a 81       	ldd	r21, Y+2	; 0x02
     908:	6b 81       	ldd	r22, Y+3	; 0x03
     90a:	7c 81       	ldd	r23, Y+4	; 0x04
     90c:	4c 0d       	add	r20, r12
     90e:	5d 1d       	adc	r21, r13
     910:	6e 1d       	adc	r22, r14
     912:	7f 1d       	adc	r23, r15
     914:	42 a7       	std	Z+42, r20	; 0x2a
     916:	53 a7       	std	Z+43, r21	; 0x2b
     918:	64 a7       	std	Z+44, r22	; 0x2c
     91a:	75 a7       	std	Z+45, r23	; 0x2d
     91c:	13 30       	cpi	r17, 0x03	; 3
     91e:	c1 f4       	brne	.+48     	; 0x950 <_ZL11chk_mountedPPKcPP5FATFSh+0x334>
     920:	23 28       	or	r2, r3
     922:	09 f0       	breq	.+2      	; 0x926 <_ZL11chk_mountedPPKcPP5FATFSh+0x30a>
     924:	ff c0       	rjmp	.+510    	; 0xb24 <_ZL11chk_mountedPPKcPP5FATFSh+0x508>
     926:	e2 5a       	subi	r30, 0xA2	; 162
     928:	ff 4f       	sbci	r31, 0xFF	; 255
     92a:	80 81       	ld	r24, Z
     92c:	91 81       	ldd	r25, Z+1	; 0x01
     92e:	a2 81       	ldd	r26, Z+2	; 0x02
     930:	b3 81       	ldd	r27, Z+3	; 0x03
     932:	ed 85       	ldd	r30, Y+13	; 0x0d
     934:	fe 85       	ldd	r31, Y+14	; 0x0e
     936:	86 a3       	std	Z+38, r24	; 0x26
     938:	97 a3       	std	Z+39, r25	; 0x27
     93a:	a0 a7       	std	Z+40, r26	; 0x28
     93c:	b1 a7       	std	Z+41, r27	; 0x29
     93e:	88 0c       	add	r8, r8
     940:	99 1c       	adc	r9, r9
     942:	aa 1c       	adc	r10, r10
     944:	bb 1c       	adc	r11, r11
     946:	88 0c       	add	r8, r8
     948:	99 1c       	adc	r9, r9
     94a:	aa 1c       	adc	r10, r10
     94c:	bb 1c       	adc	r11, r11
     94e:	2d c0       	rjmp	.+90     	; 0x9aa <_ZL11chk_mountedPPKcPP5FATFSh+0x38e>
     950:	23 28       	or	r2, r3
     952:	09 f4       	brne	.+2      	; 0x956 <_ZL11chk_mountedPPKcPP5FATFSh+0x33a>
     954:	e9 c0       	rjmp	.+466    	; 0xb28 <_ZL11chk_mountedPPKcPP5FATFSh+0x50c>
     956:	2d 81       	ldd	r18, Y+5	; 0x05
     958:	3e 81       	ldd	r19, Y+6	; 0x06
     95a:	4f 81       	ldd	r20, Y+7	; 0x07
     95c:	58 85       	ldd	r21, Y+8	; 0x08
     95e:	82 0f       	add	r24, r18
     960:	93 1f       	adc	r25, r19
     962:	a4 1f       	adc	r26, r20
     964:	b5 1f       	adc	r27, r21
     966:	ed 85       	ldd	r30, Y+13	; 0x0d
     968:	fe 85       	ldd	r31, Y+14	; 0x0e
     96a:	86 a3       	std	Z+38, r24	; 0x26
     96c:	97 a3       	std	Z+39, r25	; 0x27
     96e:	a0 a7       	std	Z+40, r26	; 0x28
     970:	b1 a7       	std	Z+41, r27	; 0x29
     972:	12 30       	cpi	r17, 0x02	; 2
     974:	29 f4       	brne	.+10     	; 0x980 <_ZL11chk_mountedPPKcPP5FATFSh+0x364>
     976:	88 0c       	add	r8, r8
     978:	99 1c       	adc	r9, r9
     97a:	aa 1c       	adc	r10, r10
     97c:	bb 1c       	adc	r11, r11
     97e:	15 c0       	rjmp	.+42     	; 0x9aa <_ZL11chk_mountedPPKcPP5FATFSh+0x38e>
     980:	a3 e0       	ldi	r26, 0x03	; 3
     982:	b0 e0       	ldi	r27, 0x00	; 0
     984:	a5 01       	movw	r20, r10
     986:	94 01       	movw	r18, r8
     988:	0e 94 0a 16 	call	0x2c14	; 0x2c14 <__muluhisi3>
     98c:	dc 01       	movw	r26, r24
     98e:	cb 01       	movw	r24, r22
     990:	b6 95       	lsr	r27
     992:	a7 95       	ror	r26
     994:	97 95       	ror	r25
     996:	87 95       	ror	r24
     998:	f1 e0       	ldi	r31, 0x01	; 1
     99a:	8f 22       	and	r8, r31
     99c:	99 24       	eor	r9, r9
     99e:	aa 24       	eor	r10, r10
     9a0:	bb 24       	eor	r11, r11
     9a2:	88 0e       	add	r8, r24
     9a4:	99 1e       	adc	r9, r25
     9a6:	aa 1e       	adc	r10, r26
     9a8:	bb 1e       	adc	r11, r27
     9aa:	2f ef       	ldi	r18, 0xFF	; 255
     9ac:	82 0e       	add	r8, r18
     9ae:	21 e0       	ldi	r18, 0x01	; 1
     9b0:	92 1e       	adc	r9, r18
     9b2:	a1 1c       	adc	r10, r1
     9b4:	b1 1c       	adc	r11, r1
     9b6:	07 2e       	mov	r0, r23
     9b8:	79 e0       	ldi	r23, 0x09	; 9
     9ba:	b6 94       	lsr	r11
     9bc:	a7 94       	ror	r10
     9be:	97 94       	ror	r9
     9c0:	87 94       	ror	r8
     9c2:	7a 95       	dec	r23
     9c4:	d1 f7       	brne	.-12     	; 0x9ba <_ZL11chk_mountedPPKcPP5FATFSh+0x39e>
     9c6:	70 2d       	mov	r23, r0
     9c8:	48 14       	cp	r4, r8
     9ca:	59 04       	cpc	r5, r9
     9cc:	6a 04       	cpc	r6, r10
     9ce:	7b 04       	cpc	r7, r11
     9d0:	08 f4       	brcc	.+2      	; 0x9d4 <_ZL11chk_mountedPPKcPP5FATFSh+0x3b8>
     9d2:	ac c0       	rjmp	.+344    	; 0xb2c <_ZL11chk_mountedPPKcPP5FATFSh+0x510>
     9d4:	8f ef       	ldi	r24, 0xFF	; 255
     9d6:	9f ef       	ldi	r25, 0xFF	; 255
     9d8:	dc 01       	movw	r26, r24
     9da:	ed 85       	ldd	r30, Y+13	; 0x0d
     9dc:	fe 85       	ldd	r31, Y+14	; 0x0e
     9de:	86 87       	std	Z+14, r24	; 0x0e
     9e0:	97 87       	std	Z+15, r25	; 0x0f
     9e2:	a0 8b       	std	Z+16, r26	; 0x10
     9e4:	b1 8b       	std	Z+17, r27	; 0x11
     9e6:	df 01       	movw	r26, r30
     9e8:	12 86       	std	Z+10, r1	; 0x0a
     9ea:	13 86       	std	Z+11, r1	; 0x0b
     9ec:	14 86       	std	Z+12, r1	; 0x0c
     9ee:	15 86       	std	Z+13, r1	; 0x0d
     9f0:	13 30       	cpi	r17, 0x03	; 3
     9f2:	09 f0       	breq	.+2      	; 0x9f6 <_ZL11chk_mountedPPKcPP5FATFSh+0x3da>
     9f4:	5f c0       	rjmp	.+190    	; 0xab4 <_ZL11chk_mountedPPKcPP5FATFSh+0x498>
     9f6:	15 82       	std	Z+5, r1	; 0x05
     9f8:	ee 59       	subi	r30, 0x9E	; 158
     9fa:	ff 4f       	sbci	r31, 0xFF	; 255
     9fc:	80 81       	ld	r24, Z
     9fe:	91 81       	ldd	r25, Z+1	; 0x01
     a00:	a7 01       	movw	r20, r14
     a02:	96 01       	movw	r18, r12
     a04:	28 0f       	add	r18, r24
     a06:	39 1f       	adc	r19, r25
     a08:	41 1d       	adc	r20, r1
     a0a:	51 1d       	adc	r21, r1
     a0c:	fd 01       	movw	r30, r26
     a0e:	22 8b       	std	Z+18, r18	; 0x12
     a10:	33 8b       	std	Z+19, r19	; 0x13
     a12:	44 8b       	std	Z+20, r20	; 0x14
     a14:	55 8b       	std	Z+21, r21	; 0x15
     a16:	01 e0       	ldi	r16, 0x01	; 1
     a18:	bd 01       	movw	r22, r26
     a1a:	6e 5c       	subi	r22, 0xCE	; 206
     a1c:	7f 4f       	sbci	r23, 0xFF	; 255
     a1e:	81 81       	ldd	r24, Z+1	; 0x01
     a20:	0e 94 6b 14 	call	0x28d6	; 0x28d6 <disk_read>
     a24:	81 11       	cpse	r24, r1
     a26:	23 c0       	rjmp	.+70     	; 0xa6e <_ZL11chk_mountedPPKcPP5FATFSh+0x452>
     a28:	ed 85       	ldd	r30, Y+13	; 0x0d
     a2a:	fe 85       	ldd	r31, Y+14	; 0x0e
     a2c:	e0 5d       	subi	r30, 0xD0	; 208
     a2e:	fd 4f       	sbci	r31, 0xFD	; 253
     a30:	80 81       	ld	r24, Z
     a32:	91 81       	ldd	r25, Z+1	; 0x01
     a34:	85 35       	cpi	r24, 0x55	; 85
     a36:	9a 4a       	sbci	r25, 0xAA	; 170
     a38:	e1 f4       	brne	.+56     	; 0xa72 <_ZL11chk_mountedPPKcPP5FATFSh+0x456>
     a3a:	ed 85       	ldd	r30, Y+13	; 0x0d
     a3c:	fe 85       	ldd	r31, Y+14	; 0x0e
     a3e:	82 a9       	ldd	r24, Z+50	; 0x32
     a40:	93 a9       	ldd	r25, Z+51	; 0x33
     a42:	a4 a9       	ldd	r26, Z+52	; 0x34
     a44:	b5 a9       	ldd	r27, Z+53	; 0x35
     a46:	82 35       	cpi	r24, 0x52	; 82
     a48:	92 45       	sbci	r25, 0x52	; 82
     a4a:	a1 46       	sbci	r26, 0x61	; 97
     a4c:	b1 44       	sbci	r27, 0x41	; 65
     a4e:	99 f4       	brne	.+38     	; 0xa76 <_ZL11chk_mountedPPKcPP5FATFSh+0x45a>
     a50:	ed 85       	ldd	r30, Y+13	; 0x0d
     a52:	fe 85       	ldd	r31, Y+14	; 0x0e
     a54:	ea 5e       	subi	r30, 0xEA	; 234
     a56:	fd 4f       	sbci	r31, 0xFD	; 253
     a58:	80 81       	ld	r24, Z
     a5a:	91 81       	ldd	r25, Z+1	; 0x01
     a5c:	a2 81       	ldd	r26, Z+2	; 0x02
     a5e:	b3 81       	ldd	r27, Z+3	; 0x03
     a60:	82 37       	cpi	r24, 0x72	; 114
     a62:	92 47       	sbci	r25, 0x72	; 114
     a64:	a1 44       	sbci	r26, 0x41	; 65
     a66:	b1 46       	sbci	r27, 0x61	; 97
     a68:	41 f0       	breq	.+16     	; 0xa7a <_ZL11chk_mountedPPKcPP5FATFSh+0x45e>
     a6a:	80 e0       	ldi	r24, 0x00	; 0
     a6c:	07 c0       	rjmp	.+14     	; 0xa7c <_ZL11chk_mountedPPKcPP5FATFSh+0x460>
     a6e:	80 e0       	ldi	r24, 0x00	; 0
     a70:	05 c0       	rjmp	.+10     	; 0xa7c <_ZL11chk_mountedPPKcPP5FATFSh+0x460>
     a72:	80 e0       	ldi	r24, 0x00	; 0
     a74:	03 c0       	rjmp	.+6      	; 0xa7c <_ZL11chk_mountedPPKcPP5FATFSh+0x460>
     a76:	80 e0       	ldi	r24, 0x00	; 0
     a78:	01 c0       	rjmp	.+2      	; 0xa7c <_ZL11chk_mountedPPKcPP5FATFSh+0x460>
     a7a:	81 e0       	ldi	r24, 0x01	; 1
     a7c:	88 23       	and	r24, r24
     a7e:	d1 f0       	breq	.+52     	; 0xab4 <_ZL11chk_mountedPPKcPP5FATFSh+0x498>
     a80:	ed 85       	ldd	r30, Y+13	; 0x0d
     a82:	fe 85       	ldd	r31, Y+14	; 0x0e
     a84:	e2 5e       	subi	r30, 0xE2	; 226
     a86:	fd 4f       	sbci	r31, 0xFD	; 253
     a88:	80 81       	ld	r24, Z
     a8a:	91 81       	ldd	r25, Z+1	; 0x01
     a8c:	a2 81       	ldd	r26, Z+2	; 0x02
     a8e:	b3 81       	ldd	r27, Z+3	; 0x03
     a90:	ed 85       	ldd	r30, Y+13	; 0x0d
     a92:	fe 85       	ldd	r31, Y+14	; 0x0e
     a94:	82 87       	std	Z+10, r24	; 0x0a
     a96:	93 87       	std	Z+11, r25	; 0x0b
     a98:	a4 87       	std	Z+12, r26	; 0x0c
     a9a:	b5 87       	std	Z+13, r27	; 0x0d
     a9c:	e6 5e       	subi	r30, 0xE6	; 230
     a9e:	fd 4f       	sbci	r31, 0xFD	; 253
     aa0:	80 81       	ld	r24, Z
     aa2:	91 81       	ldd	r25, Z+1	; 0x01
     aa4:	a2 81       	ldd	r26, Z+2	; 0x02
     aa6:	b3 81       	ldd	r27, Z+3	; 0x03
     aa8:	ed 85       	ldd	r30, Y+13	; 0x0d
     aaa:	fe 85       	ldd	r31, Y+14	; 0x0e
     aac:	86 87       	std	Z+14, r24	; 0x0e
     aae:	97 87       	std	Z+15, r25	; 0x0f
     ab0:	a0 8b       	std	Z+16, r26	; 0x10
     ab2:	b1 8b       	std	Z+17, r27	; 0x11
     ab4:	ad 85       	ldd	r26, Y+13	; 0x0d
     ab6:	be 85       	ldd	r27, Y+14	; 0x0e
     ab8:	1c 93       	st	X, r17
     aba:	80 91 42 04 	lds	r24, 0x0442	; 0x800442 <_ZL4Fsid>
     abe:	90 91 43 04 	lds	r25, 0x0443	; 0x800443 <_ZL4Fsid+0x1>
     ac2:	01 96       	adiw	r24, 0x01	; 1
     ac4:	90 93 43 04 	sts	0x0443, r25	; 0x800443 <_ZL4Fsid+0x1>
     ac8:	80 93 42 04 	sts	0x0442, r24	; 0x800442 <_ZL4Fsid>
     acc:	17 96       	adiw	r26, 0x07	; 7
     ace:	9c 93       	st	X, r25
     ad0:	8e 93       	st	-X, r24
     ad2:	16 97       	sbiw	r26, 0x06	; 6
     ad4:	fd 01       	movw	r30, r26
     ad6:	16 a6       	std	Z+46, r1	; 0x2e
     ad8:	17 a6       	std	Z+47, r1	; 0x2f
     ada:	10 aa       	std	Z+48, r1	; 0x30
     adc:	11 aa       	std	Z+49, r1	; 0x31
     ade:	14 82       	std	Z+4, r1	; 0x04
     ae0:	80 e0       	ldi	r24, 0x00	; 0
     ae2:	25 c0       	rjmp	.+74     	; 0xb2e <_ZL11chk_mountedPPKcPP5FATFSh+0x512>
     ae4:	8b e0       	ldi	r24, 0x0B	; 11
     ae6:	23 c0       	rjmp	.+70     	; 0xb2e <_ZL11chk_mountedPPKcPP5FATFSh+0x512>
     ae8:	8c e0       	ldi	r24, 0x0C	; 12
     aea:	21 c0       	rjmp	.+66     	; 0xb2e <_ZL11chk_mountedPPKcPP5FATFSh+0x512>
     aec:	80 e0       	ldi	r24, 0x00	; 0
     aee:	1f c0       	rjmp	.+62     	; 0xb2e <_ZL11chk_mountedPPKcPP5FATFSh+0x512>
     af0:	8a e0       	ldi	r24, 0x0A	; 10
     af2:	1d c0       	rjmp	.+58     	; 0xb2e <_ZL11chk_mountedPPKcPP5FATFSh+0x512>
     af4:	83 e0       	ldi	r24, 0x03	; 3
     af6:	1b c0       	rjmp	.+54     	; 0xb2e <_ZL11chk_mountedPPKcPP5FATFSh+0x512>
     af8:	8a e0       	ldi	r24, 0x0A	; 10
     afa:	19 c0       	rjmp	.+50     	; 0xb2e <_ZL11chk_mountedPPKcPP5FATFSh+0x512>
     afc:	81 e0       	ldi	r24, 0x01	; 1
     afe:	17 c0       	rjmp	.+46     	; 0xb2e <_ZL11chk_mountedPPKcPP5FATFSh+0x512>
     b00:	8d e0       	ldi	r24, 0x0D	; 13
     b02:	15 c0       	rjmp	.+42     	; 0xb2e <_ZL11chk_mountedPPKcPP5FATFSh+0x512>
     b04:	8d e0       	ldi	r24, 0x0D	; 13
     b06:	13 c0       	rjmp	.+38     	; 0xb2e <_ZL11chk_mountedPPKcPP5FATFSh+0x512>
     b08:	8d e0       	ldi	r24, 0x0D	; 13
     b0a:	11 c0       	rjmp	.+34     	; 0xb2e <_ZL11chk_mountedPPKcPP5FATFSh+0x512>
     b0c:	8d e0       	ldi	r24, 0x0D	; 13
     b0e:	0f c0       	rjmp	.+30     	; 0xb2e <_ZL11chk_mountedPPKcPP5FATFSh+0x512>
     b10:	8d e0       	ldi	r24, 0x0D	; 13
     b12:	0d c0       	rjmp	.+26     	; 0xb2e <_ZL11chk_mountedPPKcPP5FATFSh+0x512>
     b14:	8d e0       	ldi	r24, 0x0D	; 13
     b16:	0b c0       	rjmp	.+22     	; 0xb2e <_ZL11chk_mountedPPKcPP5FATFSh+0x512>
     b18:	8d e0       	ldi	r24, 0x0D	; 13
     b1a:	09 c0       	rjmp	.+18     	; 0xb2e <_ZL11chk_mountedPPKcPP5FATFSh+0x512>
     b1c:	8d e0       	ldi	r24, 0x0D	; 13
     b1e:	07 c0       	rjmp	.+14     	; 0xb2e <_ZL11chk_mountedPPKcPP5FATFSh+0x512>
     b20:	8d e0       	ldi	r24, 0x0D	; 13
     b22:	05 c0       	rjmp	.+10     	; 0xb2e <_ZL11chk_mountedPPKcPP5FATFSh+0x512>
     b24:	8d e0       	ldi	r24, 0x0D	; 13
     b26:	03 c0       	rjmp	.+6      	; 0xb2e <_ZL11chk_mountedPPKcPP5FATFSh+0x512>
     b28:	8d e0       	ldi	r24, 0x0D	; 13
     b2a:	01 c0       	rjmp	.+2      	; 0xb2e <_ZL11chk_mountedPPKcPP5FATFSh+0x512>
     b2c:	8d e0       	ldi	r24, 0x0D	; 13
     b2e:	2e 96       	adiw	r28, 0x0e	; 14
     b30:	0f b6       	in	r0, 0x3f	; 63
     b32:	f8 94       	cli
     b34:	de bf       	out	0x3e, r29	; 62
     b36:	0f be       	out	0x3f, r0	; 63
     b38:	cd bf       	out	0x3d, r28	; 61
     b3a:	df 91       	pop	r29
     b3c:	cf 91       	pop	r28
     b3e:	1f 91       	pop	r17
     b40:	0f 91       	pop	r16
     b42:	ff 90       	pop	r15
     b44:	ef 90       	pop	r14
     b46:	df 90       	pop	r13
     b48:	cf 90       	pop	r12
     b4a:	bf 90       	pop	r11
     b4c:	af 90       	pop	r10
     b4e:	9f 90       	pop	r9
     b50:	8f 90       	pop	r8
     b52:	7f 90       	pop	r7
     b54:	6f 90       	pop	r6
     b56:	5f 90       	pop	r5
     b58:	4f 90       	pop	r4
     b5a:	3f 90       	pop	r3
     b5c:	2f 90       	pop	r2
     b5e:	08 95       	ret

00000b60 <_ZL7sync_fsP5FATFS>:
     b60:	ef 92       	push	r14
     b62:	ff 92       	push	r15
     b64:	0f 93       	push	r16
     b66:	1f 93       	push	r17
     b68:	cf 93       	push	r28
     b6a:	df 93       	push	r29
     b6c:	ec 01       	movw	r28, r24
     b6e:	92 dc       	rcall	.-1756   	; 0x494 <_ZL11sync_windowP5FATFS>
     b70:	18 2f       	mov	r17, r24
     b72:	81 11       	cpse	r24, r1
     b74:	52 c0       	rjmp	.+164    	; 0xc1a <_ZL7sync_fsP5FATFS+0xba>
     b76:	88 81       	ld	r24, Y
     b78:	83 30       	cpi	r24, 0x03	; 3
     b7a:	09 f0       	breq	.+2      	; 0xb7e <_ZL7sync_fsP5FATFS+0x1e>
     b7c:	46 c0       	rjmp	.+140    	; 0xc0a <_ZL7sync_fsP5FATFS+0xaa>
     b7e:	8d 81       	ldd	r24, Y+5	; 0x05
     b80:	88 23       	and	r24, r24
     b82:	09 f4       	brne	.+2      	; 0xb86 <_ZL7sync_fsP5FATFS+0x26>
     b84:	42 c0       	rjmp	.+132    	; 0xc0a <_ZL7sync_fsP5FATFS+0xaa>
     b86:	1e a6       	std	Y+46, r1	; 0x2e
     b88:	1f a6       	std	Y+47, r1	; 0x2f
     b8a:	18 aa       	std	Y+48, r1	; 0x30
     b8c:	19 aa       	std	Y+49, r1	; 0x31
     b8e:	40 e0       	ldi	r20, 0x00	; 0
     b90:	52 e0       	ldi	r21, 0x02	; 2
     b92:	60 e0       	ldi	r22, 0x00	; 0
     b94:	70 e0       	ldi	r23, 0x00	; 0
     b96:	7e 01       	movw	r14, r28
     b98:	82 e3       	ldi	r24, 0x32	; 50
     b9a:	e8 0e       	add	r14, r24
     b9c:	f1 1c       	adc	r15, r1
     b9e:	c7 01       	movw	r24, r14
     ba0:	25 db       	rcall	.-2486   	; 0x1ec <_ZL7mem_setPvij>
     ba2:	85 e5       	ldi	r24, 0x55	; 85
     ba4:	9a ea       	ldi	r25, 0xAA	; 170
     ba6:	fe 01       	movw	r30, r28
     ba8:	e0 5d       	subi	r30, 0xD0	; 208
     baa:	fd 4f       	sbci	r31, 0xFD	; 253
     bac:	91 83       	std	Z+1, r25	; 0x01
     bae:	80 83       	st	Z, r24
     bb0:	82 e5       	ldi	r24, 0x52	; 82
     bb2:	92 e5       	ldi	r25, 0x52	; 82
     bb4:	a1 e6       	ldi	r26, 0x61	; 97
     bb6:	b1 e4       	ldi	r27, 0x41	; 65
     bb8:	8a ab       	std	Y+50, r24	; 0x32
     bba:	9b ab       	std	Y+51, r25	; 0x33
     bbc:	ac ab       	std	Y+52, r26	; 0x34
     bbe:	bd ab       	std	Y+53, r27	; 0x35
     bc0:	82 e7       	ldi	r24, 0x72	; 114
     bc2:	92 e7       	ldi	r25, 0x72	; 114
     bc4:	a1 e4       	ldi	r26, 0x41	; 65
     bc6:	b1 e6       	ldi	r27, 0x61	; 97
     bc8:	7a 97       	sbiw	r30, 0x1a	; 26
     bca:	80 83       	st	Z, r24
     bcc:	91 83       	std	Z+1, r25	; 0x01
     bce:	a2 83       	std	Z+2, r26	; 0x02
     bd0:	b3 83       	std	Z+3, r27	; 0x03
     bd2:	8e 85       	ldd	r24, Y+14	; 0x0e
     bd4:	9f 85       	ldd	r25, Y+15	; 0x0f
     bd6:	a8 89       	ldd	r26, Y+16	; 0x10
     bd8:	b9 89       	ldd	r27, Y+17	; 0x11
     bda:	34 96       	adiw	r30, 0x04	; 4
     bdc:	80 83       	st	Z, r24
     bde:	91 83       	std	Z+1, r25	; 0x01
     be0:	a2 83       	std	Z+2, r26	; 0x02
     be2:	b3 83       	std	Z+3, r27	; 0x03
     be4:	8a 85       	ldd	r24, Y+10	; 0x0a
     be6:	9b 85       	ldd	r25, Y+11	; 0x0b
     be8:	ac 85       	ldd	r26, Y+12	; 0x0c
     bea:	bd 85       	ldd	r27, Y+13	; 0x0d
     bec:	34 96       	adiw	r30, 0x04	; 4
     bee:	80 83       	st	Z, r24
     bf0:	91 83       	std	Z+1, r25	; 0x01
     bf2:	a2 83       	std	Z+2, r26	; 0x02
     bf4:	b3 83       	std	Z+3, r27	; 0x03
     bf6:	2a 89       	ldd	r18, Y+18	; 0x12
     bf8:	3b 89       	ldd	r19, Y+19	; 0x13
     bfa:	4c 89       	ldd	r20, Y+20	; 0x14
     bfc:	5d 89       	ldd	r21, Y+21	; 0x15
     bfe:	01 e0       	ldi	r16, 0x01	; 1
     c00:	b7 01       	movw	r22, r14
     c02:	89 81       	ldd	r24, Y+1	; 0x01
     c04:	0e 94 c1 14 	call	0x2982	; 0x2982 <disk_write>
     c08:	1d 82       	std	Y+5, r1	; 0x05
     c0a:	40 e0       	ldi	r20, 0x00	; 0
     c0c:	50 e0       	ldi	r21, 0x00	; 0
     c0e:	60 e0       	ldi	r22, 0x00	; 0
     c10:	89 81       	ldd	r24, Y+1	; 0x01
     c12:	0e 94 20 15 	call	0x2a40	; 0x2a40 <disk_ioctl>
     c16:	81 11       	cpse	r24, r1
     c18:	11 e0       	ldi	r17, 0x01	; 1
     c1a:	81 2f       	mov	r24, r17
     c1c:	df 91       	pop	r29
     c1e:	cf 91       	pop	r28
     c20:	1f 91       	pop	r17
     c22:	0f 91       	pop	r16
     c24:	ff 90       	pop	r15
     c26:	ef 90       	pop	r14
     c28:	08 95       	ret

00000c2a <_Z10clust2sectP5FATFSm>:
     c2a:	0f 93       	push	r16
     c2c:	1f 93       	push	r17
     c2e:	fc 01       	movw	r30, r24
     c30:	9a 01       	movw	r18, r20
     c32:	ab 01       	movw	r20, r22
     c34:	22 50       	subi	r18, 0x02	; 2
     c36:	31 09       	sbc	r19, r1
     c38:	41 09       	sbc	r20, r1
     c3a:	51 09       	sbc	r21, r1
     c3c:	86 89       	ldd	r24, Z+22	; 0x16
     c3e:	97 89       	ldd	r25, Z+23	; 0x17
     c40:	a0 8d       	ldd	r26, Z+24	; 0x18
     c42:	b1 8d       	ldd	r27, Z+25	; 0x19
     c44:	02 97       	sbiw	r24, 0x02	; 2
     c46:	a1 09       	sbc	r26, r1
     c48:	b1 09       	sbc	r27, r1
     c4a:	28 17       	cp	r18, r24
     c4c:	39 07       	cpc	r19, r25
     c4e:	4a 07       	cpc	r20, r26
     c50:	5b 07       	cpc	r21, r27
     c52:	68 f4       	brcc	.+26     	; 0xc6e <_Z10clust2sectP5FATFSm+0x44>
     c54:	a2 81       	ldd	r26, Z+2	; 0x02
     c56:	b0 e0       	ldi	r27, 0x00	; 0
     c58:	0e 94 0a 16 	call	0x2c14	; 0x2c14 <__muluhisi3>
     c5c:	02 a5       	ldd	r16, Z+42	; 0x2a
     c5e:	13 a5       	ldd	r17, Z+43	; 0x2b
     c60:	24 a5       	ldd	r18, Z+44	; 0x2c
     c62:	35 a5       	ldd	r19, Z+45	; 0x2d
     c64:	60 0f       	add	r22, r16
     c66:	71 1f       	adc	r23, r17
     c68:	82 1f       	adc	r24, r18
     c6a:	93 1f       	adc	r25, r19
     c6c:	03 c0       	rjmp	.+6      	; 0xc74 <_Z10clust2sectP5FATFSm+0x4a>
     c6e:	60 e0       	ldi	r22, 0x00	; 0
     c70:	70 e0       	ldi	r23, 0x00	; 0
     c72:	cb 01       	movw	r24, r22
     c74:	1f 91       	pop	r17
     c76:	0f 91       	pop	r16
     c78:	08 95       	ret

00000c7a <_Z7get_fatP5FATFSm>:
     c7a:	af 92       	push	r10
     c7c:	bf 92       	push	r11
     c7e:	cf 92       	push	r12
     c80:	df 92       	push	r13
     c82:	ef 92       	push	r14
     c84:	ff 92       	push	r15
     c86:	0f 93       	push	r16
     c88:	1f 93       	push	r17
     c8a:	cf 93       	push	r28
     c8c:	df 93       	push	r29
     c8e:	42 30       	cpi	r20, 0x02	; 2
     c90:	51 05       	cpc	r21, r1
     c92:	61 05       	cpc	r22, r1
     c94:	71 05       	cpc	r23, r1
     c96:	08 f4       	brcc	.+2      	; 0xc9a <_Z7get_fatP5FATFSm+0x20>
     c98:	b2 c0       	rjmp	.+356    	; 0xdfe <_Z7get_fatP5FATFSm+0x184>
     c9a:	fc 01       	movw	r30, r24
     c9c:	06 89       	ldd	r16, Z+22	; 0x16
     c9e:	17 89       	ldd	r17, Z+23	; 0x17
     ca0:	20 8d       	ldd	r18, Z+24	; 0x18
     ca2:	31 8d       	ldd	r19, Z+25	; 0x19
     ca4:	40 17       	cp	r20, r16
     ca6:	51 07       	cpc	r21, r17
     ca8:	62 07       	cpc	r22, r18
     caa:	73 07       	cpc	r23, r19
     cac:	08 f0       	brcs	.+2      	; 0xcb0 <_Z7get_fatP5FATFSm+0x36>
     cae:	ac c0       	rjmp	.+344    	; 0xe08 <_Z7get_fatP5FATFSm+0x18e>
     cb0:	6a 01       	movw	r12, r20
     cb2:	7b 01       	movw	r14, r22
     cb4:	ec 01       	movw	r28, r24
     cb6:	80 81       	ld	r24, Z
     cb8:	82 30       	cpi	r24, 0x02	; 2
     cba:	09 f4       	brne	.+2      	; 0xcbe <_Z7get_fatP5FATFSm+0x44>
     cbc:	4d c0       	rjmp	.+154    	; 0xd58 <_Z7get_fatP5FATFSm+0xde>
     cbe:	83 30       	cpi	r24, 0x03	; 3
     cc0:	09 f4       	brne	.+2      	; 0xcc4 <_Z7get_fatP5FATFSm+0x4a>
     cc2:	6d c0       	rjmp	.+218    	; 0xd9e <_Z7get_fatP5FATFSm+0x124>
     cc4:	81 30       	cpi	r24, 0x01	; 1
     cc6:	09 f0       	breq	.+2      	; 0xcca <_Z7get_fatP5FATFSm+0x50>
     cc8:	a4 c0       	rjmp	.+328    	; 0xe12 <_Z7get_fatP5FATFSm+0x198>
     cca:	5a 01       	movw	r10, r20
     ccc:	b6 94       	lsr	r11
     cce:	a7 94       	ror	r10
     cd0:	a4 0e       	add	r10, r20
     cd2:	b5 1e       	adc	r11, r21
     cd4:	42 a1       	ldd	r20, Z+34	; 0x22
     cd6:	53 a1       	ldd	r21, Z+35	; 0x23
     cd8:	64 a1       	ldd	r22, Z+36	; 0x24
     cda:	75 a1       	ldd	r23, Z+37	; 0x25
     cdc:	c5 01       	movw	r24, r10
     cde:	89 2f       	mov	r24, r25
     ce0:	99 27       	eor	r25, r25
     ce2:	86 95       	lsr	r24
     ce4:	48 0f       	add	r20, r24
     ce6:	59 1f       	adc	r21, r25
     ce8:	61 1d       	adc	r22, r1
     cea:	71 1d       	adc	r23, r1
     cec:	cf 01       	movw	r24, r30
     cee:	39 dc       	rcall	.-1934   	; 0x562 <_ZL11move_windowP5FATFSm>
     cf0:	81 11       	cpse	r24, r1
     cf2:	93 c0       	rjmp	.+294    	; 0xe1a <_Z7get_fatP5FATFSm+0x1a0>
     cf4:	f5 01       	movw	r30, r10
     cf6:	f1 70       	andi	r31, 0x01	; 1
     cf8:	ec 0f       	add	r30, r28
     cfa:	fd 1f       	adc	r31, r29
     cfc:	02 a9       	ldd	r16, Z+50	; 0x32
     cfe:	10 e0       	ldi	r17, 0x00	; 0
     d00:	ff ef       	ldi	r31, 0xFF	; 255
     d02:	af 1a       	sub	r10, r31
     d04:	bf 0a       	sbc	r11, r31
     d06:	4a a1       	ldd	r20, Y+34	; 0x22
     d08:	5b a1       	ldd	r21, Y+35	; 0x23
     d0a:	6c a1       	ldd	r22, Y+36	; 0x24
     d0c:	7d a1       	ldd	r23, Y+37	; 0x25
     d0e:	c5 01       	movw	r24, r10
     d10:	89 2f       	mov	r24, r25
     d12:	99 27       	eor	r25, r25
     d14:	86 95       	lsr	r24
     d16:	48 0f       	add	r20, r24
     d18:	59 1f       	adc	r21, r25
     d1a:	61 1d       	adc	r22, r1
     d1c:	71 1d       	adc	r23, r1
     d1e:	ce 01       	movw	r24, r28
     d20:	20 dc       	rcall	.-1984   	; 0x562 <_ZL11move_windowP5FATFSm>
     d22:	81 11       	cpse	r24, r1
     d24:	7e c0       	rjmp	.+252    	; 0xe22 <_Z7get_fatP5FATFSm+0x1a8>
     d26:	81 e0       	ldi	r24, 0x01	; 1
     d28:	b8 22       	and	r11, r24
     d2a:	ca 0d       	add	r28, r10
     d2c:	db 1d       	adc	r29, r11
     d2e:	6a a9       	ldd	r22, Y+50	; 0x32
     d30:	70 e0       	ldi	r23, 0x00	; 0
     d32:	76 2f       	mov	r23, r22
     d34:	66 27       	eor	r22, r22
     d36:	60 2b       	or	r22, r16
     d38:	71 2b       	or	r23, r17
     d3a:	c0 fe       	sbrs	r12, 0
     d3c:	09 c0       	rjmp	.+18     	; 0xd50 <_Z7get_fatP5FATFSm+0xd6>
     d3e:	72 95       	swap	r23
     d40:	62 95       	swap	r22
     d42:	6f 70       	andi	r22, 0x0F	; 15
     d44:	67 27       	eor	r22, r23
     d46:	7f 70       	andi	r23, 0x0F	; 15
     d48:	67 27       	eor	r22, r23
     d4a:	80 e0       	ldi	r24, 0x00	; 0
     d4c:	90 e0       	ldi	r25, 0x00	; 0
     d4e:	74 c0       	rjmp	.+232    	; 0xe38 <_Z7get_fatP5FATFSm+0x1be>
     d50:	7f 70       	andi	r23, 0x0F	; 15
     d52:	80 e0       	ldi	r24, 0x00	; 0
     d54:	90 e0       	ldi	r25, 0x00	; 0
     d56:	70 c0       	rjmp	.+224    	; 0xe38 <_Z7get_fatP5FATFSm+0x1be>
     d58:	42 a1       	ldd	r20, Z+34	; 0x22
     d5a:	53 a1       	ldd	r21, Z+35	; 0x23
     d5c:	64 a1       	ldd	r22, Z+36	; 0x24
     d5e:	75 a1       	ldd	r23, Z+37	; 0x25
     d60:	bb 27       	eor	r27, r27
     d62:	af 2d       	mov	r26, r15
     d64:	9e 2d       	mov	r25, r14
     d66:	8d 2d       	mov	r24, r13
     d68:	48 0f       	add	r20, r24
     d6a:	59 1f       	adc	r21, r25
     d6c:	6a 1f       	adc	r22, r26
     d6e:	7b 1f       	adc	r23, r27
     d70:	cf 01       	movw	r24, r30
     d72:	f7 db       	rcall	.-2066   	; 0x562 <_ZL11move_windowP5FATFSm>
     d74:	81 11       	cpse	r24, r1
     d76:	59 c0       	rjmp	.+178    	; 0xe2a <_Z7get_fatP5FATFSm+0x1b0>
     d78:	b7 01       	movw	r22, r14
     d7a:	a6 01       	movw	r20, r12
     d7c:	44 0f       	add	r20, r20
     d7e:	55 1f       	adc	r21, r21
     d80:	66 1f       	adc	r22, r22
     d82:	77 1f       	adc	r23, r23
     d84:	4e 7f       	andi	r20, 0xFE	; 254
     d86:	51 70       	andi	r21, 0x01	; 1
     d88:	66 27       	eor	r22, r22
     d8a:	77 27       	eor	r23, r23
     d8c:	4e 5c       	subi	r20, 0xCE	; 206
     d8e:	5f 4f       	sbci	r21, 0xFF	; 255
     d90:	c4 0f       	add	r28, r20
     d92:	d5 1f       	adc	r29, r21
     d94:	68 81       	ld	r22, Y
     d96:	79 81       	ldd	r23, Y+1	; 0x01
     d98:	80 e0       	ldi	r24, 0x00	; 0
     d9a:	90 e0       	ldi	r25, 0x00	; 0
     d9c:	4d c0       	rjmp	.+154    	; 0xe38 <_Z7get_fatP5FATFSm+0x1be>
     d9e:	42 a1       	ldd	r20, Z+34	; 0x22
     da0:	53 a1       	ldd	r21, Z+35	; 0x23
     da2:	64 a1       	ldd	r22, Z+36	; 0x24
     da4:	75 a1       	ldd	r23, Z+37	; 0x25
     da6:	d7 01       	movw	r26, r14
     da8:	c6 01       	movw	r24, r12
     daa:	68 94       	set
     dac:	16 f8       	bld	r1, 6
     dae:	b6 95       	lsr	r27
     db0:	a7 95       	ror	r26
     db2:	97 95       	ror	r25
     db4:	87 95       	ror	r24
     db6:	16 94       	lsr	r1
     db8:	d1 f7       	brne	.-12     	; 0xdae <_Z7get_fatP5FATFSm+0x134>
     dba:	48 0f       	add	r20, r24
     dbc:	59 1f       	adc	r21, r25
     dbe:	6a 1f       	adc	r22, r26
     dc0:	7b 1f       	adc	r23, r27
     dc2:	cf 01       	movw	r24, r30
     dc4:	ce db       	rcall	.-2148   	; 0x562 <_ZL11move_windowP5FATFSm>
     dc6:	81 11       	cpse	r24, r1
     dc8:	34 c0       	rjmp	.+104    	; 0xe32 <_Z7get_fatP5FATFSm+0x1b8>
     dca:	b7 01       	movw	r22, r14
     dcc:	a6 01       	movw	r20, r12
     dce:	44 0f       	add	r20, r20
     dd0:	55 1f       	adc	r21, r21
     dd2:	66 1f       	adc	r22, r22
     dd4:	77 1f       	adc	r23, r23
     dd6:	44 0f       	add	r20, r20
     dd8:	55 1f       	adc	r21, r21
     dda:	66 1f       	adc	r22, r22
     ddc:	77 1f       	adc	r23, r23
     dde:	4c 7f       	andi	r20, 0xFC	; 252
     de0:	51 70       	andi	r21, 0x01	; 1
     de2:	66 27       	eor	r22, r22
     de4:	77 27       	eor	r23, r23
     de6:	4e 5c       	subi	r20, 0xCE	; 206
     de8:	5f 4f       	sbci	r21, 0xFF	; 255
     dea:	c4 0f       	add	r28, r20
     dec:	d5 1f       	adc	r29, r21
     dee:	88 81       	ld	r24, Y
     df0:	99 81       	ldd	r25, Y+1	; 0x01
     df2:	aa 81       	ldd	r26, Y+2	; 0x02
     df4:	bb 81       	ldd	r27, Y+3	; 0x03
     df6:	bc 01       	movw	r22, r24
     df8:	cd 01       	movw	r24, r26
     dfa:	9f 70       	andi	r25, 0x0F	; 15
     dfc:	1d c0       	rjmp	.+58     	; 0xe38 <_Z7get_fatP5FATFSm+0x1be>
     dfe:	61 e0       	ldi	r22, 0x01	; 1
     e00:	70 e0       	ldi	r23, 0x00	; 0
     e02:	80 e0       	ldi	r24, 0x00	; 0
     e04:	90 e0       	ldi	r25, 0x00	; 0
     e06:	18 c0       	rjmp	.+48     	; 0xe38 <_Z7get_fatP5FATFSm+0x1be>
     e08:	61 e0       	ldi	r22, 0x01	; 1
     e0a:	70 e0       	ldi	r23, 0x00	; 0
     e0c:	80 e0       	ldi	r24, 0x00	; 0
     e0e:	90 e0       	ldi	r25, 0x00	; 0
     e10:	13 c0       	rjmp	.+38     	; 0xe38 <_Z7get_fatP5FATFSm+0x1be>
     e12:	6f ef       	ldi	r22, 0xFF	; 255
     e14:	7f ef       	ldi	r23, 0xFF	; 255
     e16:	cb 01       	movw	r24, r22
     e18:	0f c0       	rjmp	.+30     	; 0xe38 <_Z7get_fatP5FATFSm+0x1be>
     e1a:	6f ef       	ldi	r22, 0xFF	; 255
     e1c:	7f ef       	ldi	r23, 0xFF	; 255
     e1e:	cb 01       	movw	r24, r22
     e20:	0b c0       	rjmp	.+22     	; 0xe38 <_Z7get_fatP5FATFSm+0x1be>
     e22:	6f ef       	ldi	r22, 0xFF	; 255
     e24:	7f ef       	ldi	r23, 0xFF	; 255
     e26:	cb 01       	movw	r24, r22
     e28:	07 c0       	rjmp	.+14     	; 0xe38 <_Z7get_fatP5FATFSm+0x1be>
     e2a:	6f ef       	ldi	r22, 0xFF	; 255
     e2c:	7f ef       	ldi	r23, 0xFF	; 255
     e2e:	cb 01       	movw	r24, r22
     e30:	03 c0       	rjmp	.+6      	; 0xe38 <_Z7get_fatP5FATFSm+0x1be>
     e32:	6f ef       	ldi	r22, 0xFF	; 255
     e34:	7f ef       	ldi	r23, 0xFF	; 255
     e36:	cb 01       	movw	r24, r22
     e38:	df 91       	pop	r29
     e3a:	cf 91       	pop	r28
     e3c:	1f 91       	pop	r17
     e3e:	0f 91       	pop	r16
     e40:	ff 90       	pop	r15
     e42:	ef 90       	pop	r14
     e44:	df 90       	pop	r13
     e46:	cf 90       	pop	r12
     e48:	bf 90       	pop	r11
     e4a:	af 90       	pop	r10
     e4c:	08 95       	ret

00000e4e <_ZL7dir_sdiP3DIRt>:
     e4e:	ef 92       	push	r14
     e50:	ff 92       	push	r15
     e52:	0f 93       	push	r16
     e54:	1f 93       	push	r17
     e56:	cf 93       	push	r28
     e58:	df 93       	push	r29
     e5a:	ec 01       	movw	r28, r24
     e5c:	8b 01       	movw	r16, r22
     e5e:	7d 83       	std	Y+5, r23	; 0x05
     e60:	6c 83       	std	Y+4, r22	; 0x04
     e62:	4e 81       	ldd	r20, Y+6	; 0x06
     e64:	5f 81       	ldd	r21, Y+7	; 0x07
     e66:	68 85       	ldd	r22, Y+8	; 0x08
     e68:	79 85       	ldd	r23, Y+9	; 0x09
     e6a:	41 30       	cpi	r20, 0x01	; 1
     e6c:	51 05       	cpc	r21, r1
     e6e:	61 05       	cpc	r22, r1
     e70:	71 05       	cpc	r23, r1
     e72:	09 f4       	brne	.+2      	; 0xe76 <_ZL7dir_sdiP3DIRt+0x28>
     e74:	91 c0       	rjmp	.+290    	; 0xf98 <_ZL7dir_sdiP3DIRt+0x14a>
     e76:	e8 81       	ld	r30, Y
     e78:	f9 81       	ldd	r31, Y+1	; 0x01
     e7a:	86 89       	ldd	r24, Z+22	; 0x16
     e7c:	97 89       	ldd	r25, Z+23	; 0x17
     e7e:	a0 8d       	ldd	r26, Z+24	; 0x18
     e80:	b1 8d       	ldd	r27, Z+25	; 0x19
     e82:	48 17       	cp	r20, r24
     e84:	59 07       	cpc	r21, r25
     e86:	6a 07       	cpc	r22, r26
     e88:	7b 07       	cpc	r23, r27
     e8a:	08 f0       	brcs	.+2      	; 0xe8e <_ZL7dir_sdiP3DIRt+0x40>
     e8c:	87 c0       	rjmp	.+270    	; 0xf9c <_ZL7dir_sdiP3DIRt+0x14e>
     e8e:	41 15       	cp	r20, r1
     e90:	51 05       	cpc	r21, r1
     e92:	61 05       	cpc	r22, r1
     e94:	71 05       	cpc	r23, r1
     e96:	39 f4       	brne	.+14     	; 0xea6 <_ZL7dir_sdiP3DIRt+0x58>
     e98:	80 81       	ld	r24, Z
     e9a:	83 30       	cpi	r24, 0x03	; 3
     e9c:	21 f4       	brne	.+8      	; 0xea6 <_ZL7dir_sdiP3DIRt+0x58>
     e9e:	46 a1       	ldd	r20, Z+38	; 0x26
     ea0:	57 a1       	ldd	r21, Z+39	; 0x27
     ea2:	60 a5       	ldd	r22, Z+40	; 0x28
     ea4:	71 a5       	ldd	r23, Z+41	; 0x29
     ea6:	41 15       	cp	r20, r1
     ea8:	51 05       	cpc	r21, r1
     eaa:	61 05       	cpc	r22, r1
     eac:	71 05       	cpc	r23, r1
     eae:	f1 f4       	brne	.+60     	; 0xeec <_ZL7dir_sdiP3DIRt+0x9e>
     eb0:	4a 87       	std	Y+10, r20	; 0x0a
     eb2:	5b 87       	std	Y+11, r21	; 0x0b
     eb4:	6c 87       	std	Y+12, r22	; 0x0c
     eb6:	7d 87       	std	Y+13, r23	; 0x0d
     eb8:	80 85       	ldd	r24, Z+8	; 0x08
     eba:	91 85       	ldd	r25, Z+9	; 0x09
     ebc:	08 17       	cp	r16, r24
     ebe:	19 07       	cpc	r17, r25
     ec0:	08 f0       	brcs	.+2      	; 0xec4 <_ZL7dir_sdiP3DIRt+0x76>
     ec2:	6e c0       	rjmp	.+220    	; 0xfa0 <_ZL7dir_sdiP3DIRt+0x152>
     ec4:	86 a1       	ldd	r24, Z+38	; 0x26
     ec6:	97 a1       	ldd	r25, Z+39	; 0x27
     ec8:	a0 a5       	ldd	r26, Z+40	; 0x28
     eca:	b1 a5       	ldd	r27, Z+41	; 0x29
     ecc:	98 01       	movw	r18, r16
     ece:	32 95       	swap	r19
     ed0:	22 95       	swap	r18
     ed2:	2f 70       	andi	r18, 0x0F	; 15
     ed4:	23 27       	eor	r18, r19
     ed6:	3f 70       	andi	r19, 0x0F	; 15
     ed8:	23 27       	eor	r18, r19
     eda:	82 0f       	add	r24, r18
     edc:	93 1f       	adc	r25, r19
     ede:	a1 1d       	adc	r26, r1
     ee0:	b1 1d       	adc	r27, r1
     ee2:	8e 87       	std	Y+14, r24	; 0x0e
     ee4:	9f 87       	std	Y+15, r25	; 0x0f
     ee6:	a8 8b       	std	Y+16, r26	; 0x10
     ee8:	b9 8b       	std	Y+17, r27	; 0x11
     eea:	40 c0       	rjmp	.+128    	; 0xf6c <_ZL7dir_sdiP3DIRt+0x11e>
     eec:	e2 80       	ldd	r14, Z+2	; 0x02
     eee:	80 e1       	ldi	r24, 0x10	; 16
     ef0:	e8 9e       	mul	r14, r24
     ef2:	70 01       	movw	r14, r0
     ef4:	11 24       	eor	r1, r1
     ef6:	0e 15       	cp	r16, r14
     ef8:	1f 05       	cpc	r17, r15
     efa:	00 f1       	brcs	.+64     	; 0xf3c <_ZL7dir_sdiP3DIRt+0xee>
     efc:	88 81       	ld	r24, Y
     efe:	99 81       	ldd	r25, Y+1	; 0x01
     f00:	bc de       	rcall	.-648    	; 0xc7a <_Z7get_fatP5FATFSm>
     f02:	ab 01       	movw	r20, r22
     f04:	bc 01       	movw	r22, r24
     f06:	4f 3f       	cpi	r20, 0xFF	; 255
     f08:	8f ef       	ldi	r24, 0xFF	; 255
     f0a:	58 07       	cpc	r21, r24
     f0c:	68 07       	cpc	r22, r24
     f0e:	78 07       	cpc	r23, r24
     f10:	09 f4       	brne	.+2      	; 0xf14 <_ZL7dir_sdiP3DIRt+0xc6>
     f12:	48 c0       	rjmp	.+144    	; 0xfa4 <_ZL7dir_sdiP3DIRt+0x156>
     f14:	42 30       	cpi	r20, 0x02	; 2
     f16:	51 05       	cpc	r21, r1
     f18:	61 05       	cpc	r22, r1
     f1a:	71 05       	cpc	r23, r1
     f1c:	08 f4       	brcc	.+2      	; 0xf20 <_ZL7dir_sdiP3DIRt+0xd2>
     f1e:	44 c0       	rjmp	.+136    	; 0xfa8 <_ZL7dir_sdiP3DIRt+0x15a>
     f20:	e8 81       	ld	r30, Y
     f22:	f9 81       	ldd	r31, Y+1	; 0x01
     f24:	86 89       	ldd	r24, Z+22	; 0x16
     f26:	97 89       	ldd	r25, Z+23	; 0x17
     f28:	a0 8d       	ldd	r26, Z+24	; 0x18
     f2a:	b1 8d       	ldd	r27, Z+25	; 0x19
     f2c:	48 17       	cp	r20, r24
     f2e:	59 07       	cpc	r21, r25
     f30:	6a 07       	cpc	r22, r26
     f32:	7b 07       	cpc	r23, r27
     f34:	d8 f5       	brcc	.+118    	; 0xfac <_ZL7dir_sdiP3DIRt+0x15e>
     f36:	0e 19       	sub	r16, r14
     f38:	1f 09       	sbc	r17, r15
     f3a:	dd cf       	rjmp	.-70     	; 0xef6 <_ZL7dir_sdiP3DIRt+0xa8>
     f3c:	4a 87       	std	Y+10, r20	; 0x0a
     f3e:	5b 87       	std	Y+11, r21	; 0x0b
     f40:	6c 87       	std	Y+12, r22	; 0x0c
     f42:	7d 87       	std	Y+13, r23	; 0x0d
     f44:	88 81       	ld	r24, Y
     f46:	99 81       	ldd	r25, Y+1	; 0x01
     f48:	70 de       	rcall	.-800    	; 0xc2a <_Z10clust2sectP5FATFSm>
     f4a:	98 01       	movw	r18, r16
     f4c:	32 95       	swap	r19
     f4e:	22 95       	swap	r18
     f50:	2f 70       	andi	r18, 0x0F	; 15
     f52:	23 27       	eor	r18, r19
     f54:	3f 70       	andi	r19, 0x0F	; 15
     f56:	23 27       	eor	r18, r19
     f58:	dc 01       	movw	r26, r24
     f5a:	cb 01       	movw	r24, r22
     f5c:	82 0f       	add	r24, r18
     f5e:	93 1f       	adc	r25, r19
     f60:	a1 1d       	adc	r26, r1
     f62:	b1 1d       	adc	r27, r1
     f64:	8e 87       	std	Y+14, r24	; 0x0e
     f66:	9f 87       	std	Y+15, r25	; 0x0f
     f68:	a8 8b       	std	Y+16, r26	; 0x10
     f6a:	b9 8b       	std	Y+17, r27	; 0x11
     f6c:	28 81       	ld	r18, Y
     f6e:	39 81       	ldd	r19, Y+1	; 0x01
     f70:	0f 70       	andi	r16, 0x0F	; 15
     f72:	11 27       	eor	r17, r17
     f74:	c8 01       	movw	r24, r16
     f76:	88 0f       	add	r24, r24
     f78:	99 1f       	adc	r25, r25
     f7a:	82 95       	swap	r24
     f7c:	92 95       	swap	r25
     f7e:	90 7f       	andi	r25, 0xF0	; 240
     f80:	98 27       	eor	r25, r24
     f82:	80 7f       	andi	r24, 0xF0	; 240
     f84:	98 27       	eor	r25, r24
     f86:	89 01       	movw	r16, r18
     f88:	0e 5c       	subi	r16, 0xCE	; 206
     f8a:	1f 4f       	sbci	r17, 0xFF	; 255
     f8c:	08 0f       	add	r16, r24
     f8e:	19 1f       	adc	r17, r25
     f90:	1b 8b       	std	Y+19, r17	; 0x13
     f92:	0a 8b       	std	Y+18, r16	; 0x12
     f94:	80 e0       	ldi	r24, 0x00	; 0
     f96:	0b c0       	rjmp	.+22     	; 0xfae <_ZL7dir_sdiP3DIRt+0x160>
     f98:	82 e0       	ldi	r24, 0x02	; 2
     f9a:	09 c0       	rjmp	.+18     	; 0xfae <_ZL7dir_sdiP3DIRt+0x160>
     f9c:	82 e0       	ldi	r24, 0x02	; 2
     f9e:	07 c0       	rjmp	.+14     	; 0xfae <_ZL7dir_sdiP3DIRt+0x160>
     fa0:	82 e0       	ldi	r24, 0x02	; 2
     fa2:	05 c0       	rjmp	.+10     	; 0xfae <_ZL7dir_sdiP3DIRt+0x160>
     fa4:	81 e0       	ldi	r24, 0x01	; 1
     fa6:	03 c0       	rjmp	.+6      	; 0xfae <_ZL7dir_sdiP3DIRt+0x160>
     fa8:	82 e0       	ldi	r24, 0x02	; 2
     faa:	01 c0       	rjmp	.+2      	; 0xfae <_ZL7dir_sdiP3DIRt+0x160>
     fac:	82 e0       	ldi	r24, 0x02	; 2
     fae:	df 91       	pop	r29
     fb0:	cf 91       	pop	r28
     fb2:	1f 91       	pop	r17
     fb4:	0f 91       	pop	r16
     fb6:	ff 90       	pop	r15
     fb8:	ef 90       	pop	r14
     fba:	08 95       	ret

00000fbc <_Z7put_fatP5FATFSmm>:
     fbc:	4f 92       	push	r4
     fbe:	5f 92       	push	r5
     fc0:	6f 92       	push	r6
     fc2:	7f 92       	push	r7
     fc4:	af 92       	push	r10
     fc6:	bf 92       	push	r11
     fc8:	cf 92       	push	r12
     fca:	df 92       	push	r13
     fcc:	ef 92       	push	r14
     fce:	ff 92       	push	r15
     fd0:	0f 93       	push	r16
     fd2:	1f 93       	push	r17
     fd4:	cf 93       	push	r28
     fd6:	df 93       	push	r29
     fd8:	00 d0       	rcall	.+0      	; 0xfda <_Z7put_fatP5FATFSmm+0x1e>
     fda:	00 d0       	rcall	.+0      	; 0xfdc <_Z7put_fatP5FATFSmm+0x20>
     fdc:	00 d0       	rcall	.+0      	; 0xfde <_Z7put_fatP5FATFSmm+0x22>
     fde:	cd b7       	in	r28, 0x3d	; 61
     fe0:	de b7       	in	r29, 0x3e	; 62
     fe2:	42 30       	cpi	r20, 0x02	; 2
     fe4:	51 05       	cpc	r21, r1
     fe6:	61 05       	cpc	r22, r1
     fe8:	71 05       	cpc	r23, r1
     fea:	08 f4       	brcc	.+2      	; 0xfee <_Z7put_fatP5FATFSmm+0x32>
     fec:	f4 c0       	rjmp	.+488    	; 0x11d6 <__EEPROM_REGION_LENGTH__+0x1d6>
     fee:	fc 01       	movw	r30, r24
     ff0:	c6 88       	ldd	r12, Z+22	; 0x16
     ff2:	d7 88       	ldd	r13, Z+23	; 0x17
     ff4:	e0 8c       	ldd	r14, Z+24	; 0x18
     ff6:	f1 8c       	ldd	r15, Z+25	; 0x19
     ff8:	4c 15       	cp	r20, r12
     ffa:	5d 05       	cpc	r21, r13
     ffc:	6e 05       	cpc	r22, r14
     ffe:	7f 05       	cpc	r23, r15
    1000:	08 f0       	brcs	.+2      	; 0x1004 <__EEPROM_REGION_LENGTH__+0x4>
    1002:	eb c0       	rjmp	.+470    	; 0x11da <__EEPROM_REGION_LENGTH__+0x1da>
    1004:	28 01       	movw	r4, r16
    1006:	39 01       	movw	r6, r18
    1008:	6a 01       	movw	r12, r20
    100a:	7b 01       	movw	r14, r22
    100c:	9e 83       	std	Y+6, r25	; 0x06
    100e:	8d 83       	std	Y+5, r24	; 0x05
    1010:	80 81       	ld	r24, Z
    1012:	82 30       	cpi	r24, 0x02	; 2
    1014:	09 f4       	brne	.+2      	; 0x1018 <__EEPROM_REGION_LENGTH__+0x18>
    1016:	75 c0       	rjmp	.+234    	; 0x1102 <__EEPROM_REGION_LENGTH__+0x102>
    1018:	83 30       	cpi	r24, 0x03	; 3
    101a:	09 f4       	brne	.+2      	; 0x101e <__EEPROM_REGION_LENGTH__+0x1e>
    101c:	98 c0       	rjmp	.+304    	; 0x114e <__EEPROM_REGION_LENGTH__+0x14e>
    101e:	81 30       	cpi	r24, 0x01	; 1
    1020:	09 f0       	breq	.+2      	; 0x1024 <__EEPROM_REGION_LENGTH__+0x24>
    1022:	d3 c0       	rjmp	.+422    	; 0x11ca <__EEPROM_REGION_LENGTH__+0x1ca>
    1024:	5a 01       	movw	r10, r20
    1026:	b6 94       	lsr	r11
    1028:	a7 94       	ror	r10
    102a:	a4 0e       	add	r10, r20
    102c:	b5 1e       	adc	r11, r21
    102e:	42 a1       	ldd	r20, Z+34	; 0x22
    1030:	53 a1       	ldd	r21, Z+35	; 0x23
    1032:	64 a1       	ldd	r22, Z+36	; 0x24
    1034:	75 a1       	ldd	r23, Z+37	; 0x25
    1036:	c5 01       	movw	r24, r10
    1038:	89 2f       	mov	r24, r25
    103a:	99 27       	eor	r25, r25
    103c:	86 95       	lsr	r24
    103e:	48 0f       	add	r20, r24
    1040:	59 1f       	adc	r21, r25
    1042:	61 1d       	adc	r22, r1
    1044:	71 1d       	adc	r23, r1
    1046:	cf 01       	movw	r24, r30
    1048:	8c da       	rcall	.-2792   	; 0x562 <_ZL11move_windowP5FATFSm>
    104a:	81 11       	cpse	r24, r1
    104c:	bf c0       	rjmp	.+382    	; 0x11cc <__EEPROM_REGION_LENGTH__+0x1cc>
    104e:	c5 01       	movw	r24, r10
    1050:	91 70       	andi	r25, 0x01	; 1
    1052:	a7 01       	movw	r20, r14
    1054:	96 01       	movw	r18, r12
    1056:	21 70       	andi	r18, 0x01	; 1
    1058:	33 27       	eor	r19, r19
    105a:	44 27       	eor	r20, r20
    105c:	55 27       	eor	r21, r21
    105e:	29 83       	std	Y+1, r18	; 0x01
    1060:	3a 83       	std	Y+2, r19	; 0x02
    1062:	4b 83       	std	Y+3, r20	; 0x03
    1064:	5c 83       	std	Y+4, r21	; 0x04
    1066:	c0 fe       	sbrs	r12, 0
    1068:	0c c0       	rjmp	.+24     	; 0x1082 <__EEPROM_REGION_LENGTH__+0x82>
    106a:	40 e1       	ldi	r20, 0x10	; 16
    106c:	44 9e       	mul	r4, r20
    106e:	90 01       	movw	r18, r0
    1070:	11 24       	eor	r1, r1
    1072:	ed 81       	ldd	r30, Y+5	; 0x05
    1074:	fe 81       	ldd	r31, Y+6	; 0x06
    1076:	e8 0f       	add	r30, r24
    1078:	f9 1f       	adc	r31, r25
    107a:	42 a9       	ldd	r20, Z+50	; 0x32
    107c:	4f 70       	andi	r20, 0x0F	; 15
    107e:	24 2b       	or	r18, r20
    1080:	01 c0       	rjmp	.+2      	; 0x1084 <__EEPROM_REGION_LENGTH__+0x84>
    1082:	24 2d       	mov	r18, r4
    1084:	ed 81       	ldd	r30, Y+5	; 0x05
    1086:	fe 81       	ldd	r31, Y+6	; 0x06
    1088:	e8 0f       	add	r30, r24
    108a:	f9 1f       	adc	r31, r25
    108c:	22 ab       	std	Z+50, r18	; 0x32
    108e:	5f ef       	ldi	r21, 0xFF	; 255
    1090:	a5 1a       	sub	r10, r21
    1092:	b5 0a       	sbc	r11, r21
    1094:	81 e0       	ldi	r24, 0x01	; 1
    1096:	ed 81       	ldd	r30, Y+5	; 0x05
    1098:	fe 81       	ldd	r31, Y+6	; 0x06
    109a:	84 83       	std	Z+4, r24	; 0x04
    109c:	42 a1       	ldd	r20, Z+34	; 0x22
    109e:	53 a1       	ldd	r21, Z+35	; 0x23
    10a0:	64 a1       	ldd	r22, Z+36	; 0x24
    10a2:	75 a1       	ldd	r23, Z+37	; 0x25
    10a4:	c5 01       	movw	r24, r10
    10a6:	89 2f       	mov	r24, r25
    10a8:	99 27       	eor	r25, r25
    10aa:	86 95       	lsr	r24
    10ac:	48 0f       	add	r20, r24
    10ae:	59 1f       	adc	r21, r25
    10b0:	61 1d       	adc	r22, r1
    10b2:	71 1d       	adc	r23, r1
    10b4:	cf 01       	movw	r24, r30
    10b6:	55 da       	rcall	.-2902   	; 0x562 <_ZL11move_windowP5FATFSm>
    10b8:	81 11       	cpse	r24, r1
    10ba:	88 c0       	rjmp	.+272    	; 0x11cc <__EEPROM_REGION_LENGTH__+0x1cc>
    10bc:	f1 e0       	ldi	r31, 0x01	; 1
    10be:	bf 22       	and	r11, r31
    10c0:	29 81       	ldd	r18, Y+1	; 0x01
    10c2:	3a 81       	ldd	r19, Y+2	; 0x02
    10c4:	4b 81       	ldd	r20, Y+3	; 0x03
    10c6:	5c 81       	ldd	r21, Y+4	; 0x04
    10c8:	23 2b       	or	r18, r19
    10ca:	24 2b       	or	r18, r20
    10cc:	25 2b       	or	r18, r21
    10ce:	49 f0       	breq	.+18     	; 0x10e2 <__EEPROM_REGION_LENGTH__+0xe2>
    10d0:	68 94       	set
    10d2:	13 f8       	bld	r1, 3
    10d4:	76 94       	lsr	r7
    10d6:	67 94       	ror	r6
    10d8:	57 94       	ror	r5
    10da:	47 94       	ror	r4
    10dc:	16 94       	lsr	r1
    10de:	d1 f7       	brne	.-12     	; 0x10d4 <__EEPROM_REGION_LENGTH__+0xd4>
    10e0:	0a c0       	rjmp	.+20     	; 0x10f6 <__EEPROM_REGION_LENGTH__+0xf6>
    10e2:	ed 81       	ldd	r30, Y+5	; 0x05
    10e4:	fe 81       	ldd	r31, Y+6	; 0x06
    10e6:	ea 0d       	add	r30, r10
    10e8:	fb 1d       	adc	r31, r11
    10ea:	22 a9       	ldd	r18, Z+50	; 0x32
    10ec:	20 7f       	andi	r18, 0xF0	; 240
    10ee:	95 2d       	mov	r25, r5
    10f0:	9f 70       	andi	r25, 0x0F	; 15
    10f2:	42 2e       	mov	r4, r18
    10f4:	49 2a       	or	r4, r25
    10f6:	ed 81       	ldd	r30, Y+5	; 0x05
    10f8:	fe 81       	ldd	r31, Y+6	; 0x06
    10fa:	ea 0d       	add	r30, r10
    10fc:	fb 1d       	adc	r31, r11
    10fe:	42 aa       	std	Z+50, r4	; 0x32
    1100:	65 c0       	rjmp	.+202    	; 0x11cc <__EEPROM_REGION_LENGTH__+0x1cc>
    1102:	ed 81       	ldd	r30, Y+5	; 0x05
    1104:	fe 81       	ldd	r31, Y+6	; 0x06
    1106:	42 a1       	ldd	r20, Z+34	; 0x22
    1108:	53 a1       	ldd	r21, Z+35	; 0x23
    110a:	64 a1       	ldd	r22, Z+36	; 0x24
    110c:	75 a1       	ldd	r23, Z+37	; 0x25
    110e:	bb 27       	eor	r27, r27
    1110:	af 2d       	mov	r26, r15
    1112:	9e 2d       	mov	r25, r14
    1114:	8d 2d       	mov	r24, r13
    1116:	48 0f       	add	r20, r24
    1118:	59 1f       	adc	r21, r25
    111a:	6a 1f       	adc	r22, r26
    111c:	7b 1f       	adc	r23, r27
    111e:	cf 01       	movw	r24, r30
    1120:	20 da       	rcall	.-3008   	; 0x562 <_ZL11move_windowP5FATFSm>
    1122:	81 11       	cpse	r24, r1
    1124:	53 c0       	rjmp	.+166    	; 0x11cc <__EEPROM_REGION_LENGTH__+0x1cc>
    1126:	cc 0c       	add	r12, r12
    1128:	dd 1c       	adc	r13, r13
    112a:	ee 1c       	adc	r14, r14
    112c:	ff 1c       	adc	r15, r15
    112e:	e8 94       	clt
    1130:	c0 f8       	bld	r12, 0
    1132:	f1 e0       	ldi	r31, 0x01	; 1
    1134:	df 22       	and	r13, r31
    1136:	ee 24       	eor	r14, r14
    1138:	ff 24       	eor	r15, r15
    113a:	22 e3       	ldi	r18, 0x32	; 50
    113c:	c2 0e       	add	r12, r18
    113e:	d1 1c       	adc	r13, r1
    1140:	ed 81       	ldd	r30, Y+5	; 0x05
    1142:	fe 81       	ldd	r31, Y+6	; 0x06
    1144:	ec 0d       	add	r30, r12
    1146:	fd 1d       	adc	r31, r13
    1148:	51 82       	std	Z+1, r5	; 0x01
    114a:	40 82       	st	Z, r4
    114c:	3f c0       	rjmp	.+126    	; 0x11cc <__EEPROM_REGION_LENGTH__+0x1cc>
    114e:	ed 81       	ldd	r30, Y+5	; 0x05
    1150:	fe 81       	ldd	r31, Y+6	; 0x06
    1152:	42 a1       	ldd	r20, Z+34	; 0x22
    1154:	53 a1       	ldd	r21, Z+35	; 0x23
    1156:	64 a1       	ldd	r22, Z+36	; 0x24
    1158:	75 a1       	ldd	r23, Z+37	; 0x25
    115a:	d7 01       	movw	r26, r14
    115c:	c6 01       	movw	r24, r12
    115e:	68 94       	set
    1160:	16 f8       	bld	r1, 6
    1162:	b6 95       	lsr	r27
    1164:	a7 95       	ror	r26
    1166:	97 95       	ror	r25
    1168:	87 95       	ror	r24
    116a:	16 94       	lsr	r1
    116c:	d1 f7       	brne	.-12     	; 0x1162 <__EEPROM_REGION_LENGTH__+0x162>
    116e:	48 0f       	add	r20, r24
    1170:	59 1f       	adc	r21, r25
    1172:	6a 1f       	adc	r22, r26
    1174:	7b 1f       	adc	r23, r27
    1176:	cf 01       	movw	r24, r30
    1178:	f4 d9       	rcall	.-3096   	; 0x562 <_ZL11move_windowP5FATFSm>
    117a:	81 11       	cpse	r24, r1
    117c:	27 c0       	rjmp	.+78     	; 0x11cc <__EEPROM_REGION_LENGTH__+0x1cc>
    117e:	cc 0c       	add	r12, r12
    1180:	dd 1c       	adc	r13, r13
    1182:	ee 1c       	adc	r14, r14
    1184:	ff 1c       	adc	r15, r15
    1186:	cc 0c       	add	r12, r12
    1188:	dd 1c       	adc	r13, r13
    118a:	ee 1c       	adc	r14, r14
    118c:	ff 1c       	adc	r15, r15
    118e:	fc ef       	ldi	r31, 0xFC	; 252
    1190:	cf 22       	and	r12, r31
    1192:	f1 e0       	ldi	r31, 0x01	; 1
    1194:	df 22       	and	r13, r31
    1196:	ee 24       	eor	r14, r14
    1198:	ff 24       	eor	r15, r15
    119a:	22 e3       	ldi	r18, 0x32	; 50
    119c:	c2 0e       	add	r12, r18
    119e:	d1 1c       	adc	r13, r1
    11a0:	ed 81       	ldd	r30, Y+5	; 0x05
    11a2:	fe 81       	ldd	r31, Y+6	; 0x06
    11a4:	ec 0d       	add	r30, r12
    11a6:	fd 1d       	adc	r31, r13
    11a8:	00 81       	ld	r16, Z
    11aa:	11 81       	ldd	r17, Z+1	; 0x01
    11ac:	22 81       	ldd	r18, Z+2	; 0x02
    11ae:	33 81       	ldd	r19, Z+3	; 0x03
    11b0:	00 27       	eor	r16, r16
    11b2:	11 27       	eor	r17, r17
    11b4:	22 27       	eor	r18, r18
    11b6:	30 7f       	andi	r19, 0xF0	; 240
    11b8:	40 2a       	or	r4, r16
    11ba:	51 2a       	or	r5, r17
    11bc:	62 2a       	or	r6, r18
    11be:	73 2a       	or	r7, r19
    11c0:	40 82       	st	Z, r4
    11c2:	51 82       	std	Z+1, r5	; 0x01
    11c4:	62 82       	std	Z+2, r6	; 0x02
    11c6:	73 82       	std	Z+3, r7	; 0x03
    11c8:	01 c0       	rjmp	.+2      	; 0x11cc <__EEPROM_REGION_LENGTH__+0x1cc>
    11ca:	82 e0       	ldi	r24, 0x02	; 2
    11cc:	91 e0       	ldi	r25, 0x01	; 1
    11ce:	ed 81       	ldd	r30, Y+5	; 0x05
    11d0:	fe 81       	ldd	r31, Y+6	; 0x06
    11d2:	94 83       	std	Z+4, r25	; 0x04
    11d4:	03 c0       	rjmp	.+6      	; 0x11dc <__EEPROM_REGION_LENGTH__+0x1dc>
    11d6:	82 e0       	ldi	r24, 0x02	; 2
    11d8:	01 c0       	rjmp	.+2      	; 0x11dc <__EEPROM_REGION_LENGTH__+0x1dc>
    11da:	82 e0       	ldi	r24, 0x02	; 2
    11dc:	26 96       	adiw	r28, 0x06	; 6
    11de:	0f b6       	in	r0, 0x3f	; 63
    11e0:	f8 94       	cli
    11e2:	de bf       	out	0x3e, r29	; 62
    11e4:	0f be       	out	0x3f, r0	; 63
    11e6:	cd bf       	out	0x3d, r28	; 61
    11e8:	df 91       	pop	r29
    11ea:	cf 91       	pop	r28
    11ec:	1f 91       	pop	r17
    11ee:	0f 91       	pop	r16
    11f0:	ff 90       	pop	r15
    11f2:	ef 90       	pop	r14
    11f4:	df 90       	pop	r13
    11f6:	cf 90       	pop	r12
    11f8:	bf 90       	pop	r11
    11fa:	af 90       	pop	r10
    11fc:	7f 90       	pop	r7
    11fe:	6f 90       	pop	r6
    1200:	5f 90       	pop	r5
    1202:	4f 90       	pop	r4
    1204:	08 95       	ret

00001206 <_ZL12create_chainP5FATFSm>:
    1206:	4f 92       	push	r4
    1208:	5f 92       	push	r5
    120a:	6f 92       	push	r6
    120c:	7f 92       	push	r7
    120e:	8f 92       	push	r8
    1210:	9f 92       	push	r9
    1212:	af 92       	push	r10
    1214:	bf 92       	push	r11
    1216:	cf 92       	push	r12
    1218:	df 92       	push	r13
    121a:	ef 92       	push	r14
    121c:	ff 92       	push	r15
    121e:	0f 93       	push	r16
    1220:	1f 93       	push	r17
    1222:	cf 93       	push	r28
    1224:	df 93       	push	r29
    1226:	ec 01       	movw	r28, r24
    1228:	2a 01       	movw	r4, r20
    122a:	3b 01       	movw	r6, r22
    122c:	41 15       	cp	r20, r1
    122e:	51 05       	cpc	r21, r1
    1230:	61 05       	cpc	r22, r1
    1232:	71 05       	cpc	r23, r1
    1234:	99 f4       	brne	.+38     	; 0x125c <_ZL12create_chainP5FATFSm+0x56>
    1236:	8a 84       	ldd	r8, Y+10	; 0x0a
    1238:	9b 84       	ldd	r9, Y+11	; 0x0b
    123a:	ac 84       	ldd	r10, Y+12	; 0x0c
    123c:	bd 84       	ldd	r11, Y+13	; 0x0d
    123e:	81 14       	cp	r8, r1
    1240:	91 04       	cpc	r9, r1
    1242:	a1 04       	cpc	r10, r1
    1244:	b1 04       	cpc	r11, r1
    1246:	f1 f0       	breq	.+60     	; 0x1284 <_ZL12create_chainP5FATFSm+0x7e>
    1248:	8e 89       	ldd	r24, Y+22	; 0x16
    124a:	9f 89       	ldd	r25, Y+23	; 0x17
    124c:	a8 8d       	ldd	r26, Y+24	; 0x18
    124e:	b9 8d       	ldd	r27, Y+25	; 0x19
    1250:	88 16       	cp	r8, r24
    1252:	99 06       	cpc	r9, r25
    1254:	aa 06       	cpc	r10, r26
    1256:	bb 06       	cpc	r11, r27
    1258:	d0 f4       	brcc	.+52     	; 0x128e <_ZL12create_chainP5FATFSm+0x88>
    125a:	1d c0       	rjmp	.+58     	; 0x1296 <_ZL12create_chainP5FATFSm+0x90>
    125c:	0e dd       	rcall	.-1508   	; 0xc7a <_Z7get_fatP5FATFSm>
    125e:	62 30       	cpi	r22, 0x02	; 2
    1260:	71 05       	cpc	r23, r1
    1262:	81 05       	cpc	r24, r1
    1264:	91 05       	cpc	r25, r1
    1266:	08 f4       	brcc	.+2      	; 0x126a <_ZL12create_chainP5FATFSm+0x64>
    1268:	88 c0       	rjmp	.+272    	; 0x137a <_ZL12create_chainP5FATFSm+0x174>
    126a:	ce 88       	ldd	r12, Y+22	; 0x16
    126c:	df 88       	ldd	r13, Y+23	; 0x17
    126e:	e8 8c       	ldd	r14, Y+24	; 0x18
    1270:	f9 8c       	ldd	r15, Y+25	; 0x19
    1272:	6c 15       	cp	r22, r12
    1274:	7d 05       	cpc	r23, r13
    1276:	8e 05       	cpc	r24, r14
    1278:	9f 05       	cpc	r25, r15
    127a:	08 f4       	brcc	.+2      	; 0x127e <_ZL12create_chainP5FATFSm+0x78>
    127c:	83 c0       	rjmp	.+262    	; 0x1384 <_ZL12create_chainP5FATFSm+0x17e>
    127e:	53 01       	movw	r10, r6
    1280:	42 01       	movw	r8, r4
    1282:	09 c0       	rjmp	.+18     	; 0x1296 <_ZL12create_chainP5FATFSm+0x90>
    1284:	81 2c       	mov	r8, r1
    1286:	91 2c       	mov	r9, r1
    1288:	54 01       	movw	r10, r8
    128a:	83 94       	inc	r8
    128c:	04 c0       	rjmp	.+8      	; 0x1296 <_ZL12create_chainP5FATFSm+0x90>
    128e:	81 2c       	mov	r8, r1
    1290:	91 2c       	mov	r9, r1
    1292:	54 01       	movw	r10, r8
    1294:	83 94       	inc	r8
    1296:	75 01       	movw	r14, r10
    1298:	64 01       	movw	r12, r8
    129a:	2f ef       	ldi	r18, 0xFF	; 255
    129c:	c2 1a       	sub	r12, r18
    129e:	d2 0a       	sbc	r13, r18
    12a0:	e2 0a       	sbc	r14, r18
    12a2:	f2 0a       	sbc	r15, r18
    12a4:	8e 89       	ldd	r24, Y+22	; 0x16
    12a6:	9f 89       	ldd	r25, Y+23	; 0x17
    12a8:	a8 8d       	ldd	r26, Y+24	; 0x18
    12aa:	b9 8d       	ldd	r27, Y+25	; 0x19
    12ac:	c8 16       	cp	r12, r24
    12ae:	d9 06       	cpc	r13, r25
    12b0:	ea 06       	cpc	r14, r26
    12b2:	fb 06       	cpc	r15, r27
    12b4:	60 f0       	brcs	.+24     	; 0x12ce <_ZL12create_chainP5FATFSm+0xc8>
    12b6:	82 e0       	ldi	r24, 0x02	; 2
    12b8:	88 16       	cp	r8, r24
    12ba:	91 04       	cpc	r9, r1
    12bc:	a1 04       	cpc	r10, r1
    12be:	b1 04       	cpc	r11, r1
    12c0:	08 f4       	brcc	.+2      	; 0x12c4 <_ZL12create_chainP5FATFSm+0xbe>
    12c2:	64 c0       	rjmp	.+200    	; 0x138c <_ZL12create_chainP5FATFSm+0x186>
    12c4:	c1 2c       	mov	r12, r1
    12c6:	d1 2c       	mov	r13, r1
    12c8:	76 01       	movw	r14, r12
    12ca:	68 94       	set
    12cc:	c1 f8       	bld	r12, 1
    12ce:	b7 01       	movw	r22, r14
    12d0:	a6 01       	movw	r20, r12
    12d2:	ce 01       	movw	r24, r28
    12d4:	d2 dc       	rcall	.-1628   	; 0xc7a <_Z7get_fatP5FATFSm>
    12d6:	61 15       	cp	r22, r1
    12d8:	71 05       	cpc	r23, r1
    12da:	81 05       	cpc	r24, r1
    12dc:	91 05       	cpc	r25, r1
    12de:	99 f0       	breq	.+38     	; 0x1306 <_ZL12create_chainP5FATFSm+0x100>
    12e0:	6f 3f       	cpi	r22, 0xFF	; 255
    12e2:	2f ef       	ldi	r18, 0xFF	; 255
    12e4:	72 07       	cpc	r23, r18
    12e6:	82 07       	cpc	r24, r18
    12e8:	92 07       	cpc	r25, r18
    12ea:	09 f4       	brne	.+2      	; 0x12ee <_ZL12create_chainP5FATFSm+0xe8>
    12ec:	54 c0       	rjmp	.+168    	; 0x1396 <_ZL12create_chainP5FATFSm+0x190>
    12ee:	61 30       	cpi	r22, 0x01	; 1
    12f0:	71 05       	cpc	r23, r1
    12f2:	81 05       	cpc	r24, r1
    12f4:	91 05       	cpc	r25, r1
    12f6:	09 f4       	brne	.+2      	; 0x12fa <_ZL12create_chainP5FATFSm+0xf4>
    12f8:	52 c0       	rjmp	.+164    	; 0x139e <_ZL12create_chainP5FATFSm+0x198>
    12fa:	c8 14       	cp	r12, r8
    12fc:	d9 04       	cpc	r13, r9
    12fe:	ea 04       	cpc	r14, r10
    1300:	fb 04       	cpc	r15, r11
    1302:	59 f6       	brne	.-106    	; 0x129a <_ZL12create_chainP5FATFSm+0x94>
    1304:	50 c0       	rjmp	.+160    	; 0x13a6 <_ZL12create_chainP5FATFSm+0x1a0>
    1306:	0f ef       	ldi	r16, 0xFF	; 255
    1308:	1f ef       	ldi	r17, 0xFF	; 255
    130a:	2f ef       	ldi	r18, 0xFF	; 255
    130c:	3f e0       	ldi	r19, 0x0F	; 15
    130e:	b7 01       	movw	r22, r14
    1310:	a6 01       	movw	r20, r12
    1312:	ce 01       	movw	r24, r28
    1314:	53 de       	rcall	.-858    	; 0xfbc <_Z7put_fatP5FATFSmm>
    1316:	81 11       	cpse	r24, r1
    1318:	0b c0       	rjmp	.+22     	; 0x1330 <_ZL12create_chainP5FATFSm+0x12a>
    131a:	41 14       	cp	r4, r1
    131c:	51 04       	cpc	r5, r1
    131e:	61 04       	cpc	r6, r1
    1320:	71 04       	cpc	r7, r1
    1322:	31 f0       	breq	.+12     	; 0x1330 <_ZL12create_chainP5FATFSm+0x12a>
    1324:	97 01       	movw	r18, r14
    1326:	86 01       	movw	r16, r12
    1328:	b3 01       	movw	r22, r6
    132a:	a2 01       	movw	r20, r4
    132c:	ce 01       	movw	r24, r28
    132e:	46 de       	rcall	.-884    	; 0xfbc <_Z7put_fatP5FATFSmm>
    1330:	81 11       	cpse	r24, r1
    1332:	1c c0       	rjmp	.+56     	; 0x136c <_ZL12create_chainP5FATFSm+0x166>
    1334:	ca 86       	std	Y+10, r12	; 0x0a
    1336:	db 86       	std	Y+11, r13	; 0x0b
    1338:	ec 86       	std	Y+12, r14	; 0x0c
    133a:	fd 86       	std	Y+13, r15	; 0x0d
    133c:	8e 85       	ldd	r24, Y+14	; 0x0e
    133e:	9f 85       	ldd	r25, Y+15	; 0x0f
    1340:	a8 89       	ldd	r26, Y+16	; 0x10
    1342:	b9 89       	ldd	r27, Y+17	; 0x11
    1344:	8f 3f       	cpi	r24, 0xFF	; 255
    1346:	2f ef       	ldi	r18, 0xFF	; 255
    1348:	92 07       	cpc	r25, r18
    134a:	a2 07       	cpc	r26, r18
    134c:	b2 07       	cpc	r27, r18
    134e:	81 f1       	breq	.+96     	; 0x13b0 <_ZL12create_chainP5FATFSm+0x1aa>
    1350:	01 97       	sbiw	r24, 0x01	; 1
    1352:	a1 09       	sbc	r26, r1
    1354:	b1 09       	sbc	r27, r1
    1356:	8e 87       	std	Y+14, r24	; 0x0e
    1358:	9f 87       	std	Y+15, r25	; 0x0f
    135a:	a8 8b       	std	Y+16, r26	; 0x10
    135c:	b9 8b       	std	Y+17, r27	; 0x11
    135e:	81 e0       	ldi	r24, 0x01	; 1
    1360:	8d 83       	std	Y+5, r24	; 0x05
    1362:	4c 2d       	mov	r20, r12
    1364:	3d 2d       	mov	r19, r13
    1366:	2e 2d       	mov	r18, r14
    1368:	9f 2d       	mov	r25, r15
    136a:	2b c0       	rjmp	.+86     	; 0x13c2 <_ZL12create_chainP5FATFSm+0x1bc>
    136c:	81 30       	cpi	r24, 0x01	; 1
    136e:	29 f5       	brne	.+74     	; 0x13ba <_ZL12create_chainP5FATFSm+0x1b4>
    1370:	4f ef       	ldi	r20, 0xFF	; 255
    1372:	3f ef       	ldi	r19, 0xFF	; 255
    1374:	2f ef       	ldi	r18, 0xFF	; 255
    1376:	9f ef       	ldi	r25, 0xFF	; 255
    1378:	24 c0       	rjmp	.+72     	; 0x13c2 <_ZL12create_chainP5FATFSm+0x1bc>
    137a:	41 e0       	ldi	r20, 0x01	; 1
    137c:	30 e0       	ldi	r19, 0x00	; 0
    137e:	20 e0       	ldi	r18, 0x00	; 0
    1380:	90 e0       	ldi	r25, 0x00	; 0
    1382:	1f c0       	rjmp	.+62     	; 0x13c2 <_ZL12create_chainP5FATFSm+0x1bc>
    1384:	46 2f       	mov	r20, r22
    1386:	37 2f       	mov	r19, r23
    1388:	28 2f       	mov	r18, r24
    138a:	1b c0       	rjmp	.+54     	; 0x13c2 <_ZL12create_chainP5FATFSm+0x1bc>
    138c:	40 e0       	ldi	r20, 0x00	; 0
    138e:	30 e0       	ldi	r19, 0x00	; 0
    1390:	20 e0       	ldi	r18, 0x00	; 0
    1392:	90 e0       	ldi	r25, 0x00	; 0
    1394:	16 c0       	rjmp	.+44     	; 0x13c2 <_ZL12create_chainP5FATFSm+0x1bc>
    1396:	46 2f       	mov	r20, r22
    1398:	37 2f       	mov	r19, r23
    139a:	28 2f       	mov	r18, r24
    139c:	12 c0       	rjmp	.+36     	; 0x13c2 <_ZL12create_chainP5FATFSm+0x1bc>
    139e:	46 2f       	mov	r20, r22
    13a0:	37 2f       	mov	r19, r23
    13a2:	28 2f       	mov	r18, r24
    13a4:	0e c0       	rjmp	.+28     	; 0x13c2 <_ZL12create_chainP5FATFSm+0x1bc>
    13a6:	40 e0       	ldi	r20, 0x00	; 0
    13a8:	30 e0       	ldi	r19, 0x00	; 0
    13aa:	20 e0       	ldi	r18, 0x00	; 0
    13ac:	90 e0       	ldi	r25, 0x00	; 0
    13ae:	09 c0       	rjmp	.+18     	; 0x13c2 <_ZL12create_chainP5FATFSm+0x1bc>
    13b0:	4c 2d       	mov	r20, r12
    13b2:	3d 2d       	mov	r19, r13
    13b4:	2e 2d       	mov	r18, r14
    13b6:	9f 2d       	mov	r25, r15
    13b8:	04 c0       	rjmp	.+8      	; 0x13c2 <_ZL12create_chainP5FATFSm+0x1bc>
    13ba:	41 e0       	ldi	r20, 0x01	; 1
    13bc:	30 e0       	ldi	r19, 0x00	; 0
    13be:	20 e0       	ldi	r18, 0x00	; 0
    13c0:	90 e0       	ldi	r25, 0x00	; 0
    13c2:	64 2f       	mov	r22, r20
    13c4:	73 2f       	mov	r23, r19
    13c6:	82 2f       	mov	r24, r18
    13c8:	df 91       	pop	r29
    13ca:	cf 91       	pop	r28
    13cc:	1f 91       	pop	r17
    13ce:	0f 91       	pop	r16
    13d0:	ff 90       	pop	r15
    13d2:	ef 90       	pop	r14
    13d4:	df 90       	pop	r13
    13d6:	cf 90       	pop	r12
    13d8:	bf 90       	pop	r11
    13da:	af 90       	pop	r10
    13dc:	9f 90       	pop	r9
    13de:	8f 90       	pop	r8
    13e0:	7f 90       	pop	r7
    13e2:	6f 90       	pop	r6
    13e4:	5f 90       	pop	r5
    13e6:	4f 90       	pop	r4
    13e8:	08 95       	ret

000013ea <_ZL8dir_nextP3DIRi>:
    13ea:	8f 92       	push	r8
    13ec:	9f 92       	push	r9
    13ee:	af 92       	push	r10
    13f0:	bf 92       	push	r11
    13f2:	cf 92       	push	r12
    13f4:	df 92       	push	r13
    13f6:	ef 92       	push	r14
    13f8:	ff 92       	push	r15
    13fa:	0f 93       	push	r16
    13fc:	1f 93       	push	r17
    13fe:	cf 93       	push	r28
    1400:	df 93       	push	r29
    1402:	dc 01       	movw	r26, r24
    1404:	14 96       	adiw	r26, 0x04	; 4
    1406:	cd 91       	ld	r28, X+
    1408:	dc 91       	ld	r29, X
    140a:	15 97       	sbiw	r26, 0x05	; 5
    140c:	21 96       	adiw	r28, 0x01	; 1
    140e:	09 f4       	brne	.+2      	; 0x1412 <_ZL8dir_nextP3DIRi+0x28>
    1410:	f6 c0       	rjmp	.+492    	; 0x15fe <_ZL8dir_nextP3DIRi+0x214>
    1412:	1e 96       	adiw	r26, 0x0e	; 14
    1414:	8d 90       	ld	r8, X+
    1416:	9d 90       	ld	r9, X+
    1418:	ad 90       	ld	r10, X+
    141a:	bc 90       	ld	r11, X
    141c:	51 97       	sbiw	r26, 0x11	; 17
    141e:	81 14       	cp	r8, r1
    1420:	91 04       	cpc	r9, r1
    1422:	a1 04       	cpc	r10, r1
    1424:	b1 04       	cpc	r11, r1
    1426:	09 f4       	brne	.+2      	; 0x142a <_ZL8dir_nextP3DIRi+0x40>
    1428:	ec c0       	rjmp	.+472    	; 0x1602 <_ZL8dir_nextP3DIRi+0x218>
    142a:	7b 01       	movw	r14, r22
    142c:	8c 01       	movw	r16, r24
    142e:	6e 01       	movw	r12, r28
    1430:	bf e0       	ldi	r27, 0x0F	; 15
    1432:	cb 22       	and	r12, r27
    1434:	dd 24       	eor	r13, r13
    1436:	c1 14       	cp	r12, r1
    1438:	d1 04       	cpc	r13, r1
    143a:	09 f0       	breq	.+2      	; 0x143e <_ZL8dir_nextP3DIRi+0x54>
    143c:	ca c0       	rjmp	.+404    	; 0x15d2 <_ZL8dir_nextP3DIRi+0x1e8>
    143e:	ef ef       	ldi	r30, 0xFF	; 255
    1440:	8e 1a       	sub	r8, r30
    1442:	9e 0a       	sbc	r9, r30
    1444:	ae 0a       	sbc	r10, r30
    1446:	be 0a       	sbc	r11, r30
    1448:	dc 01       	movw	r26, r24
    144a:	1e 96       	adiw	r26, 0x0e	; 14
    144c:	8d 92       	st	X+, r8
    144e:	9d 92       	st	X+, r9
    1450:	ad 92       	st	X+, r10
    1452:	bc 92       	st	X, r11
    1454:	51 97       	sbiw	r26, 0x11	; 17
    1456:	1a 96       	adiw	r26, 0x0a	; 10
    1458:	4d 91       	ld	r20, X+
    145a:	5d 91       	ld	r21, X+
    145c:	6d 91       	ld	r22, X+
    145e:	7c 91       	ld	r23, X
    1460:	1d 97       	sbiw	r26, 0x0d	; 13
    1462:	41 15       	cp	r20, r1
    1464:	51 05       	cpc	r21, r1
    1466:	61 05       	cpc	r22, r1
    1468:	71 05       	cpc	r23, r1
    146a:	49 f4       	brne	.+18     	; 0x147e <_ZL8dir_nextP3DIRi+0x94>
    146c:	ed 91       	ld	r30, X+
    146e:	fc 91       	ld	r31, X
    1470:	80 85       	ldd	r24, Z+8	; 0x08
    1472:	91 85       	ldd	r25, Z+9	; 0x09
    1474:	c8 17       	cp	r28, r24
    1476:	d9 07       	cpc	r29, r25
    1478:	08 f0       	brcs	.+2      	; 0x147c <_ZL8dir_nextP3DIRi+0x92>
    147a:	c5 c0       	rjmp	.+394    	; 0x1606 <_ZL8dir_nextP3DIRi+0x21c>
    147c:	aa c0       	rjmp	.+340    	; 0x15d2 <_ZL8dir_nextP3DIRi+0x1e8>
    147e:	dc 01       	movw	r26, r24
    1480:	ed 91       	ld	r30, X+
    1482:	fc 91       	ld	r31, X
    1484:	22 81       	ldd	r18, Z+2	; 0x02
    1486:	30 e0       	ldi	r19, 0x00	; 0
    1488:	21 50       	subi	r18, 0x01	; 1
    148a:	31 09       	sbc	r19, r1
    148c:	ce 01       	movw	r24, r28
    148e:	92 95       	swap	r25
    1490:	82 95       	swap	r24
    1492:	8f 70       	andi	r24, 0x0F	; 15
    1494:	89 27       	eor	r24, r25
    1496:	9f 70       	andi	r25, 0x0F	; 15
    1498:	89 27       	eor	r24, r25
    149a:	28 23       	and	r18, r24
    149c:	39 23       	and	r19, r25
    149e:	23 2b       	or	r18, r19
    14a0:	09 f0       	breq	.+2      	; 0x14a4 <_ZL8dir_nextP3DIRi+0xba>
    14a2:	97 c0       	rjmp	.+302    	; 0x15d2 <_ZL8dir_nextP3DIRi+0x1e8>
    14a4:	cf 01       	movw	r24, r30
    14a6:	e9 db       	rcall	.-2094   	; 0xc7a <_Z7get_fatP5FATFSm>
    14a8:	4b 01       	movw	r8, r22
    14aa:	5c 01       	movw	r10, r24
    14ac:	62 30       	cpi	r22, 0x02	; 2
    14ae:	71 05       	cpc	r23, r1
    14b0:	81 05       	cpc	r24, r1
    14b2:	91 05       	cpc	r25, r1
    14b4:	08 f4       	brcc	.+2      	; 0x14b8 <_ZL8dir_nextP3DIRi+0xce>
    14b6:	a9 c0       	rjmp	.+338    	; 0x160a <_ZL8dir_nextP3DIRi+0x220>
    14b8:	6f 3f       	cpi	r22, 0xFF	; 255
    14ba:	7f 4f       	sbci	r23, 0xFF	; 255
    14bc:	8f 4f       	sbci	r24, 0xFF	; 255
    14be:	9f 4f       	sbci	r25, 0xFF	; 255
    14c0:	09 f4       	brne	.+2      	; 0x14c4 <_ZL8dir_nextP3DIRi+0xda>
    14c2:	a5 c0       	rjmp	.+330    	; 0x160e <_ZL8dir_nextP3DIRi+0x224>
    14c4:	d8 01       	movw	r26, r16
    14c6:	ed 91       	ld	r30, X+
    14c8:	fc 91       	ld	r31, X
    14ca:	86 89       	ldd	r24, Z+22	; 0x16
    14cc:	97 89       	ldd	r25, Z+23	; 0x17
    14ce:	a0 8d       	ldd	r26, Z+24	; 0x18
    14d0:	b1 8d       	ldd	r27, Z+25	; 0x19
    14d2:	88 16       	cp	r8, r24
    14d4:	99 06       	cpc	r9, r25
    14d6:	aa 06       	cpc	r10, r26
    14d8:	bb 06       	cpc	r11, r27
    14da:	08 f4       	brcc	.+2      	; 0x14de <_ZL8dir_nextP3DIRi+0xf4>
    14dc:	69 c0       	rjmp	.+210    	; 0x15b0 <_ZL8dir_nextP3DIRi+0x1c6>
    14de:	ef 28       	or	r14, r15
    14e0:	09 f4       	brne	.+2      	; 0x14e4 <_ZL8dir_nextP3DIRi+0xfa>
    14e2:	97 c0       	rjmp	.+302    	; 0x1612 <_ZL8dir_nextP3DIRi+0x228>
    14e4:	d8 01       	movw	r26, r16
    14e6:	1a 96       	adiw	r26, 0x0a	; 10
    14e8:	4d 91       	ld	r20, X+
    14ea:	5d 91       	ld	r21, X+
    14ec:	6d 91       	ld	r22, X+
    14ee:	7c 91       	ld	r23, X
    14f0:	1d 97       	sbiw	r26, 0x0d	; 13
    14f2:	cf 01       	movw	r24, r30
    14f4:	88 de       	rcall	.-752    	; 0x1206 <_ZL12create_chainP5FATFSm>
    14f6:	4b 01       	movw	r8, r22
    14f8:	5c 01       	movw	r10, r24
    14fa:	61 15       	cp	r22, r1
    14fc:	71 05       	cpc	r23, r1
    14fe:	81 05       	cpc	r24, r1
    1500:	91 05       	cpc	r25, r1
    1502:	09 f4       	brne	.+2      	; 0x1506 <_ZL8dir_nextP3DIRi+0x11c>
    1504:	88 c0       	rjmp	.+272    	; 0x1616 <_ZL8dir_nextP3DIRi+0x22c>
    1506:	61 30       	cpi	r22, 0x01	; 1
    1508:	71 05       	cpc	r23, r1
    150a:	81 05       	cpc	r24, r1
    150c:	91 05       	cpc	r25, r1
    150e:	09 f4       	brne	.+2      	; 0x1512 <_ZL8dir_nextP3DIRi+0x128>
    1510:	84 c0       	rjmp	.+264    	; 0x161a <_ZL8dir_nextP3DIRi+0x230>
    1512:	6f 3f       	cpi	r22, 0xFF	; 255
    1514:	7f 4f       	sbci	r23, 0xFF	; 255
    1516:	8f 4f       	sbci	r24, 0xFF	; 255
    1518:	9f 4f       	sbci	r25, 0xFF	; 255
    151a:	09 f4       	brne	.+2      	; 0x151e <_ZL8dir_nextP3DIRi+0x134>
    151c:	80 c0       	rjmp	.+256    	; 0x161e <_ZL8dir_nextP3DIRi+0x234>
    151e:	d8 01       	movw	r26, r16
    1520:	8d 91       	ld	r24, X+
    1522:	9c 91       	ld	r25, X
    1524:	0e 94 4a 02 	call	0x494	; 0x494 <_ZL11sync_windowP5FATFS>
    1528:	81 11       	cpse	r24, r1
    152a:	7b c0       	rjmp	.+246    	; 0x1622 <_ZL8dir_nextP3DIRi+0x238>
    152c:	f8 01       	movw	r30, r16
    152e:	80 81       	ld	r24, Z
    1530:	91 81       	ldd	r25, Z+1	; 0x01
    1532:	40 e0       	ldi	r20, 0x00	; 0
    1534:	52 e0       	ldi	r21, 0x02	; 2
    1536:	60 e0       	ldi	r22, 0x00	; 0
    1538:	70 e0       	ldi	r23, 0x00	; 0
    153a:	c2 96       	adiw	r24, 0x32	; 50
    153c:	0e 94 f6 00 	call	0x1ec	; 0x1ec <_ZL7mem_setPvij>
    1540:	d8 01       	movw	r26, r16
    1542:	ed 90       	ld	r14, X+
    1544:	fc 90       	ld	r15, X
    1546:	b5 01       	movw	r22, r10
    1548:	a4 01       	movw	r20, r8
    154a:	c7 01       	movw	r24, r14
    154c:	6e db       	rcall	.-2340   	; 0xc2a <_Z10clust2sectP5FATFSm>
    154e:	f7 01       	movw	r30, r14
    1550:	66 a7       	std	Z+46, r22	; 0x2e
    1552:	77 a7       	std	Z+47, r23	; 0x2f
    1554:	80 ab       	std	Z+48, r24	; 0x30
    1556:	91 ab       	std	Z+49, r25	; 0x31
    1558:	f1 2c       	mov	r15, r1
    155a:	d8 01       	movw	r26, r16
    155c:	ed 91       	ld	r30, X+
    155e:	fc 91       	ld	r31, X
    1560:	11 97       	sbiw	r26, 0x01	; 1
    1562:	82 81       	ldd	r24, Z+2	; 0x02
    1564:	f8 16       	cp	r15, r24
    1566:	c0 f4       	brcc	.+48     	; 0x1598 <_ZL8dir_nextP3DIRi+0x1ae>
    1568:	81 e0       	ldi	r24, 0x01	; 1
    156a:	84 83       	std	Z+4, r24	; 0x04
    156c:	8d 91       	ld	r24, X+
    156e:	9c 91       	ld	r25, X
    1570:	0e 94 4a 02 	call	0x494	; 0x494 <_ZL11sync_windowP5FATFS>
    1574:	81 11       	cpse	r24, r1
    1576:	57 c0       	rjmp	.+174    	; 0x1626 <_ZL8dir_nextP3DIRi+0x23c>
    1578:	d8 01       	movw	r26, r16
    157a:	ed 91       	ld	r30, X+
    157c:	fc 91       	ld	r31, X
    157e:	86 a5       	ldd	r24, Z+46	; 0x2e
    1580:	97 a5       	ldd	r25, Z+47	; 0x2f
    1582:	a0 a9       	ldd	r26, Z+48	; 0x30
    1584:	b1 a9       	ldd	r27, Z+49	; 0x31
    1586:	01 96       	adiw	r24, 0x01	; 1
    1588:	a1 1d       	adc	r26, r1
    158a:	b1 1d       	adc	r27, r1
    158c:	86 a7       	std	Z+46, r24	; 0x2e
    158e:	97 a7       	std	Z+47, r25	; 0x2f
    1590:	a0 ab       	std	Z+48, r26	; 0x30
    1592:	b1 ab       	std	Z+49, r27	; 0x31
    1594:	f3 94       	inc	r15
    1596:	e1 cf       	rjmp	.-62     	; 0x155a <_ZL8dir_nextP3DIRi+0x170>
    1598:	86 a5       	ldd	r24, Z+46	; 0x2e
    159a:	97 a5       	ldd	r25, Z+47	; 0x2f
    159c:	a0 a9       	ldd	r26, Z+48	; 0x30
    159e:	b1 a9       	ldd	r27, Z+49	; 0x31
    15a0:	8f 19       	sub	r24, r15
    15a2:	91 09       	sbc	r25, r1
    15a4:	a1 09       	sbc	r26, r1
    15a6:	b1 09       	sbc	r27, r1
    15a8:	86 a7       	std	Z+46, r24	; 0x2e
    15aa:	97 a7       	std	Z+47, r25	; 0x2f
    15ac:	a0 ab       	std	Z+48, r26	; 0x30
    15ae:	b1 ab       	std	Z+49, r27	; 0x31
    15b0:	f8 01       	movw	r30, r16
    15b2:	82 86       	std	Z+10, r8	; 0x0a
    15b4:	93 86       	std	Z+11, r9	; 0x0b
    15b6:	a4 86       	std	Z+12, r10	; 0x0c
    15b8:	b5 86       	std	Z+13, r11	; 0x0d
    15ba:	b5 01       	movw	r22, r10
    15bc:	a4 01       	movw	r20, r8
    15be:	80 81       	ld	r24, Z
    15c0:	91 81       	ldd	r25, Z+1	; 0x01
    15c2:	33 db       	rcall	.-2458   	; 0xc2a <_Z10clust2sectP5FATFSm>
    15c4:	d8 01       	movw	r26, r16
    15c6:	1e 96       	adiw	r26, 0x0e	; 14
    15c8:	6d 93       	st	X+, r22
    15ca:	7d 93       	st	X+, r23
    15cc:	8d 93       	st	X+, r24
    15ce:	9c 93       	st	X, r25
    15d0:	51 97       	sbiw	r26, 0x11	; 17
    15d2:	f8 01       	movw	r30, r16
    15d4:	d5 83       	std	Z+5, r29	; 0x05
    15d6:	c4 83       	std	Z+4, r28	; 0x04
    15d8:	80 81       	ld	r24, Z
    15da:	91 81       	ldd	r25, Z+1	; 0x01
    15dc:	cc 0c       	add	r12, r12
    15de:	dd 1c       	adc	r13, r13
    15e0:	cc 0c       	add	r12, r12
    15e2:	dd 1c       	adc	r13, r13
    15e4:	cc 0c       	add	r12, r12
    15e6:	dd 1c       	adc	r13, r13
    15e8:	cc 0c       	add	r12, r12
    15ea:	dd 1c       	adc	r13, r13
    15ec:	cc 0c       	add	r12, r12
    15ee:	dd 1c       	adc	r13, r13
    15f0:	c2 96       	adiw	r24, 0x32	; 50
    15f2:	c8 0e       	add	r12, r24
    15f4:	d9 1e       	adc	r13, r25
    15f6:	d3 8a       	std	Z+19, r13	; 0x13
    15f8:	c2 8a       	std	Z+18, r12	; 0x12
    15fa:	80 e0       	ldi	r24, 0x00	; 0
    15fc:	15 c0       	rjmp	.+42     	; 0x1628 <_ZL8dir_nextP3DIRi+0x23e>
    15fe:	84 e0       	ldi	r24, 0x04	; 4
    1600:	13 c0       	rjmp	.+38     	; 0x1628 <_ZL8dir_nextP3DIRi+0x23e>
    1602:	84 e0       	ldi	r24, 0x04	; 4
    1604:	11 c0       	rjmp	.+34     	; 0x1628 <_ZL8dir_nextP3DIRi+0x23e>
    1606:	84 e0       	ldi	r24, 0x04	; 4
    1608:	0f c0       	rjmp	.+30     	; 0x1628 <_ZL8dir_nextP3DIRi+0x23e>
    160a:	82 e0       	ldi	r24, 0x02	; 2
    160c:	0d c0       	rjmp	.+26     	; 0x1628 <_ZL8dir_nextP3DIRi+0x23e>
    160e:	81 e0       	ldi	r24, 0x01	; 1
    1610:	0b c0       	rjmp	.+22     	; 0x1628 <_ZL8dir_nextP3DIRi+0x23e>
    1612:	84 e0       	ldi	r24, 0x04	; 4
    1614:	09 c0       	rjmp	.+18     	; 0x1628 <_ZL8dir_nextP3DIRi+0x23e>
    1616:	87 e0       	ldi	r24, 0x07	; 7
    1618:	07 c0       	rjmp	.+14     	; 0x1628 <_ZL8dir_nextP3DIRi+0x23e>
    161a:	82 e0       	ldi	r24, 0x02	; 2
    161c:	05 c0       	rjmp	.+10     	; 0x1628 <_ZL8dir_nextP3DIRi+0x23e>
    161e:	81 e0       	ldi	r24, 0x01	; 1
    1620:	03 c0       	rjmp	.+6      	; 0x1628 <_ZL8dir_nextP3DIRi+0x23e>
    1622:	81 e0       	ldi	r24, 0x01	; 1
    1624:	01 c0       	rjmp	.+2      	; 0x1628 <_ZL8dir_nextP3DIRi+0x23e>
    1626:	81 e0       	ldi	r24, 0x01	; 1
    1628:	df 91       	pop	r29
    162a:	cf 91       	pop	r28
    162c:	1f 91       	pop	r17
    162e:	0f 91       	pop	r16
    1630:	ff 90       	pop	r15
    1632:	ef 90       	pop	r14
    1634:	df 90       	pop	r13
    1636:	cf 90       	pop	r12
    1638:	bf 90       	pop	r11
    163a:	af 90       	pop	r10
    163c:	9f 90       	pop	r9
    163e:	8f 90       	pop	r8
    1640:	08 95       	ret

00001642 <_ZL8dir_findP3DIR>:
    1642:	1f 93       	push	r17
    1644:	cf 93       	push	r28
    1646:	df 93       	push	r29
    1648:	ec 01       	movw	r28, r24
    164a:	60 e0       	ldi	r22, 0x00	; 0
    164c:	70 e0       	ldi	r23, 0x00	; 0
    164e:	ff db       	rcall	.-2050   	; 0xe4e <_ZL7dir_sdiP3DIRt>
    1650:	81 11       	cpse	r24, r1
    1652:	2e c0       	rjmp	.+92     	; 0x16b0 <_ZL8dir_findP3DIR+0x6e>
    1654:	4e 85       	ldd	r20, Y+14	; 0x0e
    1656:	5f 85       	ldd	r21, Y+15	; 0x0f
    1658:	68 89       	ldd	r22, Y+16	; 0x10
    165a:	79 89       	ldd	r23, Y+17	; 0x11
    165c:	88 81       	ld	r24, Y
    165e:	99 81       	ldd	r25, Y+1	; 0x01
    1660:	0e 94 b1 02 	call	0x562	; 0x562 <_ZL11move_windowP5FATFSm>
    1664:	18 2f       	mov	r17, r24
    1666:	81 11       	cpse	r24, r1
    1668:	1f c0       	rjmp	.+62     	; 0x16a8 <_ZL8dir_findP3DIR+0x66>
    166a:	ea 89       	ldd	r30, Y+18	; 0x12
    166c:	fb 89       	ldd	r31, Y+19	; 0x13
    166e:	80 81       	ld	r24, Z
    1670:	88 23       	and	r24, r24
    1672:	d9 f0       	breq	.+54     	; 0x16aa <_ZL8dir_findP3DIR+0x68>
    1674:	83 85       	ldd	r24, Z+11	; 0x0b
    1676:	83 fd       	sbrc	r24, 3
    1678:	0b c0       	rjmp	.+22     	; 0x1690 <_ZL8dir_findP3DIR+0x4e>
    167a:	6c 89       	ldd	r22, Y+20	; 0x14
    167c:	7d 89       	ldd	r23, Y+21	; 0x15
    167e:	4b e0       	ldi	r20, 0x0B	; 11
    1680:	50 e0       	ldi	r21, 0x00	; 0
    1682:	cf 01       	movw	r24, r30
    1684:	0e 94 00 01 	call	0x200	; 0x200 <_ZL7mem_cmpPKvS0_j>
    1688:	89 2b       	or	r24, r25
    168a:	21 f4       	brne	.+8      	; 0x1694 <_ZL8dir_findP3DIR+0x52>
    168c:	81 e0       	ldi	r24, 0x01	; 1
    168e:	03 c0       	rjmp	.+6      	; 0x1696 <_ZL8dir_findP3DIR+0x54>
    1690:	80 e0       	ldi	r24, 0x00	; 0
    1692:	01 c0       	rjmp	.+2      	; 0x1696 <_ZL8dir_findP3DIR+0x54>
    1694:	80 e0       	ldi	r24, 0x00	; 0
    1696:	81 11       	cpse	r24, r1
    1698:	0a c0       	rjmp	.+20     	; 0x16ae <_ZL8dir_findP3DIR+0x6c>
    169a:	60 e0       	ldi	r22, 0x00	; 0
    169c:	70 e0       	ldi	r23, 0x00	; 0
    169e:	ce 01       	movw	r24, r28
    16a0:	a4 de       	rcall	.-696    	; 0x13ea <_ZL8dir_nextP3DIRi>
    16a2:	88 23       	and	r24, r24
    16a4:	b9 f2       	breq	.-82     	; 0x1654 <_ZL8dir_findP3DIR+0x12>
    16a6:	04 c0       	rjmp	.+8      	; 0x16b0 <_ZL8dir_findP3DIR+0x6e>
    16a8:	03 c0       	rjmp	.+6      	; 0x16b0 <_ZL8dir_findP3DIR+0x6e>
    16aa:	84 e0       	ldi	r24, 0x04	; 4
    16ac:	01 c0       	rjmp	.+2      	; 0x16b0 <_ZL8dir_findP3DIR+0x6e>
    16ae:	81 2f       	mov	r24, r17
    16b0:	df 91       	pop	r29
    16b2:	cf 91       	pop	r28
    16b4:	1f 91       	pop	r17
    16b6:	08 95       	ret

000016b8 <_ZL11follow_pathP3DIRPKc>:
    16b8:	0f 93       	push	r16
    16ba:	1f 93       	push	r17
    16bc:	cf 93       	push	r28
    16be:	df 93       	push	r29
    16c0:	00 d0       	rcall	.+0      	; 0x16c2 <_ZL11follow_pathP3DIRPKc+0xa>
    16c2:	cd b7       	in	r28, 0x3d	; 61
    16c4:	de b7       	in	r29, 0x3e	; 62
    16c6:	8c 01       	movw	r16, r24
    16c8:	7a 83       	std	Y+2, r23	; 0x02
    16ca:	69 83       	std	Y+1, r22	; 0x01
    16cc:	e6 2f       	mov	r30, r22
    16ce:	f7 2f       	mov	r31, r23
    16d0:	80 81       	ld	r24, Z
    16d2:	8f 32       	cpi	r24, 0x2F	; 47
    16d4:	11 f0       	breq	.+4      	; 0x16da <_ZL11follow_pathP3DIRPKc+0x22>
    16d6:	8c 35       	cpi	r24, 0x5C	; 92
    16d8:	19 f4       	brne	.+6      	; 0x16e0 <_ZL11follow_pathP3DIRPKc+0x28>
    16da:	31 96       	adiw	r30, 0x01	; 1
    16dc:	fa 83       	std	Y+2, r31	; 0x02
    16de:	e9 83       	std	Y+1, r30	; 0x01
    16e0:	d8 01       	movw	r26, r16
    16e2:	16 96       	adiw	r26, 0x06	; 6
    16e4:	1d 92       	st	X+, r1
    16e6:	1d 92       	st	X+, r1
    16e8:	1d 92       	st	X+, r1
    16ea:	1c 92       	st	X, r1
    16ec:	19 97       	sbiw	r26, 0x09	; 9
    16ee:	e9 81       	ldd	r30, Y+1	; 0x01
    16f0:	fa 81       	ldd	r31, Y+2	; 0x02
    16f2:	80 81       	ld	r24, Z
    16f4:	80 32       	cpi	r24, 0x20	; 32
    16f6:	40 f4       	brcc	.+16     	; 0x1708 <_ZL11follow_pathP3DIRPKc+0x50>
    16f8:	60 e0       	ldi	r22, 0x00	; 0
    16fa:	70 e0       	ldi	r23, 0x00	; 0
    16fc:	c8 01       	movw	r24, r16
    16fe:	a7 db       	rcall	.-2226   	; 0xe4e <_ZL7dir_sdiP3DIRt>
    1700:	f8 01       	movw	r30, r16
    1702:	13 8a       	std	Z+19, r1	; 0x13
    1704:	12 8a       	std	Z+18, r1	; 0x12
    1706:	2e c0       	rjmp	.+92     	; 0x1764 <_ZL11follow_pathP3DIRPKc+0xac>
    1708:	be 01       	movw	r22, r28
    170a:	6f 5f       	subi	r22, 0xFF	; 255
    170c:	7f 4f       	sbci	r23, 0xFF	; 255
    170e:	c8 01       	movw	r24, r16
    1710:	0e 94 51 01 	call	0x2a2	; 0x2a2 <_ZL11create_nameP3DIRPPKc>
    1714:	81 11       	cpse	r24, r1
    1716:	26 c0       	rjmp	.+76     	; 0x1764 <_ZL11follow_pathP3DIRPKc+0xac>
    1718:	c8 01       	movw	r24, r16
    171a:	93 df       	rcall	.-218    	; 0x1642 <_ZL8dir_findP3DIR>
    171c:	d8 01       	movw	r26, r16
    171e:	54 96       	adiw	r26, 0x14	; 20
    1720:	ed 91       	ld	r30, X+
    1722:	fc 91       	ld	r31, X
    1724:	55 97       	sbiw	r26, 0x15	; 21
    1726:	93 85       	ldd	r25, Z+11	; 0x0b
    1728:	88 23       	and	r24, r24
    172a:	29 f0       	breq	.+10     	; 0x1736 <_ZL11follow_pathP3DIRPKc+0x7e>
    172c:	84 30       	cpi	r24, 0x04	; 4
    172e:	d1 f4       	brne	.+52     	; 0x1764 <_ZL11follow_pathP3DIRPKc+0xac>
    1730:	92 ff       	sbrs	r25, 2
    1732:	15 c0       	rjmp	.+42     	; 0x175e <_ZL11follow_pathP3DIRPKc+0xa6>
    1734:	17 c0       	rjmp	.+46     	; 0x1764 <_ZL11follow_pathP3DIRPKc+0xac>
    1736:	92 fd       	sbrc	r25, 2
    1738:	15 c0       	rjmp	.+42     	; 0x1764 <_ZL11follow_pathP3DIRPKc+0xac>
    173a:	f8 01       	movw	r30, r16
    173c:	62 89       	ldd	r22, Z+18	; 0x12
    173e:	73 89       	ldd	r23, Z+19	; 0x13
    1740:	db 01       	movw	r26, r22
    1742:	1b 96       	adiw	r26, 0x0b	; 11
    1744:	8c 91       	ld	r24, X
    1746:	84 ff       	sbrs	r24, 4
    1748:	0c c0       	rjmp	.+24     	; 0x1762 <_ZL11follow_pathP3DIRPKc+0xaa>
    174a:	80 81       	ld	r24, Z
    174c:	91 81       	ldd	r25, Z+1	; 0x01
    174e:	0e 94 32 01 	call	0x264	; 0x264 <_ZL8ld_clustP5FATFSPh>
    1752:	f8 01       	movw	r30, r16
    1754:	66 83       	std	Z+6, r22	; 0x06
    1756:	77 83       	std	Z+7, r23	; 0x07
    1758:	80 87       	std	Z+8, r24	; 0x08
    175a:	91 87       	std	Z+9, r25	; 0x09
    175c:	d5 cf       	rjmp	.-86     	; 0x1708 <_ZL11follow_pathP3DIRPKc+0x50>
    175e:	85 e0       	ldi	r24, 0x05	; 5
    1760:	01 c0       	rjmp	.+2      	; 0x1764 <_ZL11follow_pathP3DIRPKc+0xac>
    1762:	85 e0       	ldi	r24, 0x05	; 5
    1764:	0f 90       	pop	r0
    1766:	0f 90       	pop	r0
    1768:	df 91       	pop	r29
    176a:	cf 91       	pop	r28
    176c:	1f 91       	pop	r17
    176e:	0f 91       	pop	r16
    1770:	08 95       	ret

00001772 <_ZL9dir_allocP3DIRj>:
    1772:	ef 92       	push	r14
    1774:	ff 92       	push	r15
    1776:	0f 93       	push	r16
    1778:	1f 93       	push	r17
    177a:	cf 93       	push	r28
    177c:	df 93       	push	r29
    177e:	ec 01       	movw	r28, r24
    1780:	7b 01       	movw	r14, r22
    1782:	60 e0       	ldi	r22, 0x00	; 0
    1784:	70 e0       	ldi	r23, 0x00	; 0
    1786:	63 db       	rcall	.-2362   	; 0xe4e <_ZL7dir_sdiP3DIRt>
    1788:	81 11       	cpse	r24, r1
    178a:	21 c0       	rjmp	.+66     	; 0x17ce <_ZL9dir_allocP3DIRj+0x5c>
    178c:	00 e0       	ldi	r16, 0x00	; 0
    178e:	10 e0       	ldi	r17, 0x00	; 0
    1790:	4e 85       	ldd	r20, Y+14	; 0x0e
    1792:	5f 85       	ldd	r21, Y+15	; 0x0f
    1794:	68 89       	ldd	r22, Y+16	; 0x10
    1796:	79 89       	ldd	r23, Y+17	; 0x11
    1798:	88 81       	ld	r24, Y
    179a:	99 81       	ldd	r25, Y+1	; 0x01
    179c:	0e 94 b1 02 	call	0x562	; 0x562 <_ZL11move_windowP5FATFSm>
    17a0:	81 11       	cpse	r24, r1
    17a2:	15 c0       	rjmp	.+42     	; 0x17ce <_ZL9dir_allocP3DIRj+0x5c>
    17a4:	ea 89       	ldd	r30, Y+18	; 0x12
    17a6:	fb 89       	ldd	r31, Y+19	; 0x13
    17a8:	90 81       	ld	r25, Z
    17aa:	95 3e       	cpi	r25, 0xE5	; 229
    17ac:	11 f0       	breq	.+4      	; 0x17b2 <_ZL9dir_allocP3DIRj+0x40>
    17ae:	91 11       	cpse	r25, r1
    17b0:	06 c0       	rjmp	.+12     	; 0x17be <_ZL9dir_allocP3DIRj+0x4c>
    17b2:	0f 5f       	subi	r16, 0xFF	; 255
    17b4:	1f 4f       	sbci	r17, 0xFF	; 255
    17b6:	0e 15       	cp	r16, r14
    17b8:	1f 05       	cpc	r17, r15
    17ba:	19 f4       	brne	.+6      	; 0x17c2 <_ZL9dir_allocP3DIRj+0x50>
    17bc:	08 c0       	rjmp	.+16     	; 0x17ce <_ZL9dir_allocP3DIRj+0x5c>
    17be:	00 e0       	ldi	r16, 0x00	; 0
    17c0:	10 e0       	ldi	r17, 0x00	; 0
    17c2:	61 e0       	ldi	r22, 0x01	; 1
    17c4:	70 e0       	ldi	r23, 0x00	; 0
    17c6:	ce 01       	movw	r24, r28
    17c8:	10 de       	rcall	.-992    	; 0x13ea <_ZL8dir_nextP3DIRi>
    17ca:	88 23       	and	r24, r24
    17cc:	09 f3       	breq	.-62     	; 0x1790 <_ZL9dir_allocP3DIRj+0x1e>
    17ce:	df 91       	pop	r29
    17d0:	cf 91       	pop	r28
    17d2:	1f 91       	pop	r17
    17d4:	0f 91       	pop	r16
    17d6:	ff 90       	pop	r15
    17d8:	ef 90       	pop	r14
    17da:	08 95       	ret

000017dc <_ZL12dir_registerP3DIR>:
    17dc:	0f 93       	push	r16
    17de:	1f 93       	push	r17
    17e0:	cf 93       	push	r28
    17e2:	8c 01       	movw	r16, r24
    17e4:	61 e0       	ldi	r22, 0x01	; 1
    17e6:	70 e0       	ldi	r23, 0x00	; 0
    17e8:	c4 df       	rcall	.-120    	; 0x1772 <_ZL9dir_allocP3DIRj>
    17ea:	c8 2f       	mov	r28, r24
    17ec:	81 11       	cpse	r24, r1
    17ee:	29 c0       	rjmp	.+82     	; 0x1842 <_ZL12dir_registerP3DIR+0x66>
    17f0:	d8 01       	movw	r26, r16
    17f2:	1e 96       	adiw	r26, 0x0e	; 14
    17f4:	4d 91       	ld	r20, X+
    17f6:	5d 91       	ld	r21, X+
    17f8:	6d 91       	ld	r22, X+
    17fa:	7c 91       	ld	r23, X
    17fc:	51 97       	sbiw	r26, 0x11	; 17
    17fe:	8d 91       	ld	r24, X+
    1800:	9c 91       	ld	r25, X
    1802:	0e 94 b1 02 	call	0x562	; 0x562 <_ZL11move_windowP5FATFSm>
    1806:	c8 2f       	mov	r28, r24
    1808:	81 11       	cpse	r24, r1
    180a:	1b c0       	rjmp	.+54     	; 0x1842 <_ZL12dir_registerP3DIR+0x66>
    180c:	40 e2       	ldi	r20, 0x20	; 32
    180e:	50 e0       	ldi	r21, 0x00	; 0
    1810:	60 e0       	ldi	r22, 0x00	; 0
    1812:	70 e0       	ldi	r23, 0x00	; 0
    1814:	f8 01       	movw	r30, r16
    1816:	82 89       	ldd	r24, Z+18	; 0x12
    1818:	93 89       	ldd	r25, Z+19	; 0x13
    181a:	0e 94 f6 00 	call	0x1ec	; 0x1ec <_ZL7mem_setPvij>
    181e:	d8 01       	movw	r26, r16
    1820:	54 96       	adiw	r26, 0x14	; 20
    1822:	6d 91       	ld	r22, X+
    1824:	7c 91       	ld	r23, X
    1826:	55 97       	sbiw	r26, 0x15	; 21
    1828:	4b e0       	ldi	r20, 0x0B	; 11
    182a:	50 e0       	ldi	r21, 0x00	; 0
    182c:	52 96       	adiw	r26, 0x12	; 18
    182e:	8d 91       	ld	r24, X+
    1830:	9c 91       	ld	r25, X
    1832:	53 97       	sbiw	r26, 0x13	; 19
    1834:	0e 94 df 00 	call	0x1be	; 0x1be <_ZL7mem_cpyPvPKvj>
    1838:	d8 01       	movw	r26, r16
    183a:	ed 91       	ld	r30, X+
    183c:	fc 91       	ld	r31, X
    183e:	81 e0       	ldi	r24, 0x01	; 1
    1840:	84 83       	std	Z+4, r24	; 0x04
    1842:	8c 2f       	mov	r24, r28
    1844:	cf 91       	pop	r28
    1846:	1f 91       	pop	r17
    1848:	0f 91       	pop	r16
    184a:	08 95       	ret

0000184c <_ZL12remove_chainP5FATFSm>:
    184c:	8f 92       	push	r8
    184e:	9f 92       	push	r9
    1850:	af 92       	push	r10
    1852:	bf 92       	push	r11
    1854:	cf 92       	push	r12
    1856:	df 92       	push	r13
    1858:	ef 92       	push	r14
    185a:	ff 92       	push	r15
    185c:	0f 93       	push	r16
    185e:	1f 93       	push	r17
    1860:	cf 93       	push	r28
    1862:	df 93       	push	r29
    1864:	ec 01       	movw	r28, r24
    1866:	6a 01       	movw	r12, r20
    1868:	7b 01       	movw	r14, r22
    186a:	42 30       	cpi	r20, 0x02	; 2
    186c:	51 05       	cpc	r21, r1
    186e:	61 05       	cpc	r22, r1
    1870:	71 05       	cpc	r23, r1
    1872:	08 f4       	brcc	.+2      	; 0x1876 <_ZL12remove_chainP5FATFSm+0x2a>
    1874:	4b c0       	rjmp	.+150    	; 0x190c <_ZL12remove_chainP5FATFSm+0xc0>
    1876:	8e 89       	ldd	r24, Y+22	; 0x16
    1878:	9f 89       	ldd	r25, Y+23	; 0x17
    187a:	a8 8d       	ldd	r26, Y+24	; 0x18
    187c:	b9 8d       	ldd	r27, Y+25	; 0x19
    187e:	48 17       	cp	r20, r24
    1880:	59 07       	cpc	r21, r25
    1882:	6a 07       	cpc	r22, r26
    1884:	7b 07       	cpc	r23, r27
    1886:	08 f0       	brcs	.+2      	; 0x188a <_ZL12remove_chainP5FATFSm+0x3e>
    1888:	43 c0       	rjmp	.+134    	; 0x1910 <_ZL12remove_chainP5FATFSm+0xc4>
    188a:	10 e0       	ldi	r17, 0x00	; 0
    188c:	02 c0       	rjmp	.+4      	; 0x1892 <_ZL12remove_chainP5FATFSm+0x46>
    188e:	75 01       	movw	r14, r10
    1890:	64 01       	movw	r12, r8
    1892:	8e 89       	ldd	r24, Y+22	; 0x16
    1894:	9f 89       	ldd	r25, Y+23	; 0x17
    1896:	a8 8d       	ldd	r26, Y+24	; 0x18
    1898:	b9 8d       	ldd	r27, Y+25	; 0x19
    189a:	c8 16       	cp	r12, r24
    189c:	d9 06       	cpc	r13, r25
    189e:	ea 06       	cpc	r14, r26
    18a0:	fb 06       	cpc	r15, r27
    18a2:	d8 f5       	brcc	.+118    	; 0x191a <_ZL12remove_chainP5FATFSm+0xce>
    18a4:	b7 01       	movw	r22, r14
    18a6:	a6 01       	movw	r20, r12
    18a8:	ce 01       	movw	r24, r28
    18aa:	e7 d9       	rcall	.-3122   	; 0xc7a <_Z7get_fatP5FATFSm>
    18ac:	4b 01       	movw	r8, r22
    18ae:	5c 01       	movw	r10, r24
    18b0:	67 2b       	or	r22, r23
    18b2:	68 2b       	or	r22, r24
    18b4:	69 2b       	or	r22, r25
    18b6:	89 f1       	breq	.+98     	; 0x191a <_ZL12remove_chainP5FATFSm+0xce>
    18b8:	81 e0       	ldi	r24, 0x01	; 1
    18ba:	88 16       	cp	r8, r24
    18bc:	91 04       	cpc	r9, r1
    18be:	a1 04       	cpc	r10, r1
    18c0:	b1 04       	cpc	r11, r1
    18c2:	41 f1       	breq	.+80     	; 0x1914 <_ZL12remove_chainP5FATFSm+0xc8>
    18c4:	2f ef       	ldi	r18, 0xFF	; 255
    18c6:	82 16       	cp	r8, r18
    18c8:	92 06       	cpc	r9, r18
    18ca:	a2 06       	cpc	r10, r18
    18cc:	b2 06       	cpc	r11, r18
    18ce:	21 f1       	breq	.+72     	; 0x1918 <_ZL12remove_chainP5FATFSm+0xcc>
    18d0:	00 e0       	ldi	r16, 0x00	; 0
    18d2:	10 e0       	ldi	r17, 0x00	; 0
    18d4:	98 01       	movw	r18, r16
    18d6:	b7 01       	movw	r22, r14
    18d8:	a6 01       	movw	r20, r12
    18da:	ce 01       	movw	r24, r28
    18dc:	6f db       	rcall	.-2338   	; 0xfbc <_Z7put_fatP5FATFSmm>
    18de:	18 2f       	mov	r17, r24
    18e0:	81 11       	cpse	r24, r1
    18e2:	1b c0       	rjmp	.+54     	; 0x191a <_ZL12remove_chainP5FATFSm+0xce>
    18e4:	8e 85       	ldd	r24, Y+14	; 0x0e
    18e6:	9f 85       	ldd	r25, Y+15	; 0x0f
    18e8:	a8 89       	ldd	r26, Y+16	; 0x10
    18ea:	b9 89       	ldd	r27, Y+17	; 0x11
    18ec:	8f 3f       	cpi	r24, 0xFF	; 255
    18ee:	2f ef       	ldi	r18, 0xFF	; 255
    18f0:	92 07       	cpc	r25, r18
    18f2:	a2 07       	cpc	r26, r18
    18f4:	b2 07       	cpc	r27, r18
    18f6:	59 f2       	breq	.-106    	; 0x188e <_ZL12remove_chainP5FATFSm+0x42>
    18f8:	01 96       	adiw	r24, 0x01	; 1
    18fa:	a1 1d       	adc	r26, r1
    18fc:	b1 1d       	adc	r27, r1
    18fe:	8e 87       	std	Y+14, r24	; 0x0e
    1900:	9f 87       	std	Y+15, r25	; 0x0f
    1902:	a8 8b       	std	Y+16, r26	; 0x10
    1904:	b9 8b       	std	Y+17, r27	; 0x11
    1906:	81 e0       	ldi	r24, 0x01	; 1
    1908:	8d 83       	std	Y+5, r24	; 0x05
    190a:	c1 cf       	rjmp	.-126    	; 0x188e <_ZL12remove_chainP5FATFSm+0x42>
    190c:	12 e0       	ldi	r17, 0x02	; 2
    190e:	05 c0       	rjmp	.+10     	; 0x191a <_ZL12remove_chainP5FATFSm+0xce>
    1910:	12 e0       	ldi	r17, 0x02	; 2
    1912:	03 c0       	rjmp	.+6      	; 0x191a <_ZL12remove_chainP5FATFSm+0xce>
    1914:	12 e0       	ldi	r17, 0x02	; 2
    1916:	01 c0       	rjmp	.+2      	; 0x191a <_ZL12remove_chainP5FATFSm+0xce>
    1918:	11 e0       	ldi	r17, 0x01	; 1
    191a:	81 2f       	mov	r24, r17
    191c:	df 91       	pop	r29
    191e:	cf 91       	pop	r28
    1920:	1f 91       	pop	r17
    1922:	0f 91       	pop	r16
    1924:	ff 90       	pop	r15
    1926:	ef 90       	pop	r14
    1928:	df 90       	pop	r13
    192a:	cf 90       	pop	r12
    192c:	bf 90       	pop	r11
    192e:	af 90       	pop	r10
    1930:	9f 90       	pop	r9
    1932:	8f 90       	pop	r8
    1934:	08 95       	ret

00001936 <f_mount>:
    1936:	81 11       	cpse	r24, r1
    1938:	1a c0       	rjmp	.+52     	; 0x196e <f_mount+0x38>
    193a:	90 e0       	ldi	r25, 0x00	; 0
    193c:	fc 01       	movw	r30, r24
    193e:	ee 0f       	add	r30, r30
    1940:	ff 1f       	adc	r31, r31
    1942:	ec 5b       	subi	r30, 0xBC	; 188
    1944:	fb 4f       	sbci	r31, 0xFB	; 251
    1946:	01 90       	ld	r0, Z+
    1948:	f0 81       	ld	r31, Z
    194a:	e0 2d       	mov	r30, r0
    194c:	30 97       	sbiw	r30, 0x00	; 0
    194e:	09 f0       	breq	.+2      	; 0x1952 <f_mount+0x1c>
    1950:	10 82       	st	Z, r1
    1952:	61 15       	cp	r22, r1
    1954:	71 05       	cpc	r23, r1
    1956:	11 f0       	breq	.+4      	; 0x195c <f_mount+0x26>
    1958:	fb 01       	movw	r30, r22
    195a:	10 82       	st	Z, r1
    195c:	88 0f       	add	r24, r24
    195e:	99 1f       	adc	r25, r25
    1960:	fc 01       	movw	r30, r24
    1962:	ec 5b       	subi	r30, 0xBC	; 188
    1964:	fb 4f       	sbci	r31, 0xFB	; 251
    1966:	71 83       	std	Z+1, r23	; 0x01
    1968:	60 83       	st	Z, r22
    196a:	80 e0       	ldi	r24, 0x00	; 0
    196c:	08 95       	ret
    196e:	8b e0       	ldi	r24, 0x0B	; 11
    1970:	08 95       	ret

00001972 <f_open>:
    1972:	4f 92       	push	r4
    1974:	5f 92       	push	r5
    1976:	6f 92       	push	r6
    1978:	7f 92       	push	r7
    197a:	af 92       	push	r10
    197c:	bf 92       	push	r11
    197e:	cf 92       	push	r12
    1980:	df 92       	push	r13
    1982:	ef 92       	push	r14
    1984:	ff 92       	push	r15
    1986:	0f 93       	push	r16
    1988:	1f 93       	push	r17
    198a:	cf 93       	push	r28
    198c:	df 93       	push	r29
    198e:	cd b7       	in	r28, 0x3d	; 61
    1990:	de b7       	in	r29, 0x3e	; 62
    1992:	a8 97       	sbiw	r28, 0x28	; 40
    1994:	0f b6       	in	r0, 0x3f	; 63
    1996:	f8 94       	cli
    1998:	de bf       	out	0x3e, r29	; 62
    199a:	0f be       	out	0x3f, r0	; 63
    199c:	cd bf       	out	0x3d, r28	; 61
    199e:	7c a3       	std	Y+36, r23	; 0x24
    19a0:	6b a3       	std	Y+35, r22	; 0x23
    19a2:	00 97       	sbiw	r24, 0x00	; 0
    19a4:	09 f4       	brne	.+2      	; 0x19a8 <f_open+0x36>
    19a6:	d9 c0       	rjmp	.+434    	; 0x1b5a <f_open+0x1e8>
    19a8:	04 2f       	mov	r16, r20
    19aa:	7c 01       	movw	r14, r24
    19ac:	dc 01       	movw	r26, r24
    19ae:	1d 92       	st	X+, r1
    19b0:	1c 92       	st	X, r1
    19b2:	b4 2f       	mov	r27, r20
    19b4:	bf 71       	andi	r27, 0x1F	; 31
    19b6:	db 2e       	mov	r13, r27
    19b8:	4e 71       	andi	r20, 0x1E	; 30
    19ba:	be 01       	movw	r22, r28
    19bc:	6f 5f       	subi	r22, 0xFF	; 255
    19be:	7f 4f       	sbci	r23, 0xFF	; 255
    19c0:	ce 01       	movw	r24, r28
    19c2:	83 96       	adiw	r24, 0x23	; 35
    19c4:	0e 94 0e 03 	call	0x61c	; 0x61c <_ZL11chk_mountedPPKcPP5FATFSh>
    19c8:	81 11       	cpse	r24, r1
    19ca:	ca c0       	rjmp	.+404    	; 0x1b60 <f_open+0x1ee>
    19cc:	ce 01       	movw	r24, r28
    19ce:	47 96       	adiw	r24, 0x17	; 23
    19d0:	9e 8b       	std	Y+22, r25	; 0x16
    19d2:	8d 8b       	std	Y+21, r24	; 0x15
    19d4:	6b a1       	ldd	r22, Y+35	; 0x23
    19d6:	7c a1       	ldd	r23, Y+36	; 0x24
    19d8:	46 97       	sbiw	r24, 0x16	; 22
    19da:	6e de       	rcall	.-804    	; 0x16b8 <_ZL11follow_pathP3DIRPKc>
    19dc:	18 2f       	mov	r17, r24
    19de:	ab 88       	ldd	r10, Y+19	; 0x13
    19e0:	bc 88       	ldd	r11, Y+20	; 0x14
    19e2:	81 11       	cpse	r24, r1
    19e4:	04 c0       	rjmp	.+8      	; 0x19ee <f_open+0x7c>
    19e6:	a1 14       	cp	r10, r1
    19e8:	b1 04       	cpc	r11, r1
    19ea:	09 f4       	brne	.+2      	; 0x19ee <f_open+0x7c>
    19ec:	16 e0       	ldi	r17, 0x06	; 6
    19ee:	80 2f       	mov	r24, r16
    19f0:	8c 71       	andi	r24, 0x1C	; 28
    19f2:	09 f4       	brne	.+2      	; 0x19f6 <f_open+0x84>
    19f4:	62 c0       	rjmp	.+196    	; 0x1aba <f_open+0x148>
    19f6:	11 23       	and	r17, r17
    19f8:	61 f0       	breq	.+24     	; 0x1a12 <f_open+0xa0>
    19fa:	14 30       	cpi	r17, 0x04	; 4
    19fc:	21 f4       	brne	.+8      	; 0x1a06 <f_open+0x94>
    19fe:	ce 01       	movw	r24, r28
    1a00:	01 96       	adiw	r24, 0x01	; 1
    1a02:	ec de       	rcall	.-552    	; 0x17dc <_ZL12dir_registerP3DIR>
    1a04:	18 2f       	mov	r17, r24
    1a06:	ed 2d       	mov	r30, r13
    1a08:	e8 60       	ori	r30, 0x08	; 8
    1a0a:	de 2e       	mov	r13, r30
    1a0c:	ab 88       	ldd	r10, Y+19	; 0x13
    1a0e:	bc 88       	ldd	r11, Y+20	; 0x14
    1a10:	0b c0       	rjmp	.+22     	; 0x1a28 <f_open+0xb6>
    1a12:	d5 01       	movw	r26, r10
    1a14:	1b 96       	adiw	r26, 0x0b	; 11
    1a16:	8c 91       	ld	r24, X
    1a18:	81 71       	andi	r24, 0x11	; 17
    1a1a:	19 f4       	brne	.+6      	; 0x1a22 <f_open+0xb0>
    1a1c:	02 fd       	sbrc	r16, 2
    1a1e:	03 c0       	rjmp	.+6      	; 0x1a26 <f_open+0xb4>
    1a20:	03 c0       	rjmp	.+6      	; 0x1a28 <f_open+0xb6>
    1a22:	17 e0       	ldi	r17, 0x07	; 7
    1a24:	01 c0       	rjmp	.+2      	; 0x1a28 <f_open+0xb6>
    1a26:	18 e0       	ldi	r17, 0x08	; 8
    1a28:	11 11       	cpse	r17, r1
    1a2a:	56 c0       	rjmp	.+172    	; 0x1ad8 <f_open+0x166>
    1a2c:	d3 fe       	sbrs	r13, 3
    1a2e:	54 c0       	rjmp	.+168    	; 0x1ad8 <f_open+0x166>
    1a30:	0e 94 65 00 	call	0xca	; 0xca <get_fattime>
    1a34:	f5 01       	movw	r30, r10
    1a36:	66 87       	std	Z+14, r22	; 0x0e
    1a38:	77 87       	std	Z+15, r23	; 0x0f
    1a3a:	80 8b       	std	Z+16, r24	; 0x10
    1a3c:	91 8b       	std	Z+17, r25	; 0x11
    1a3e:	13 86       	std	Z+11, r1	; 0x0b
    1a40:	14 8e       	std	Z+28, r1	; 0x1c
    1a42:	15 8e       	std	Z+29, r1	; 0x1d
    1a44:	16 8e       	std	Z+30, r1	; 0x1e
    1a46:	17 8e       	std	Z+31, r1	; 0x1f
    1a48:	b5 01       	movw	r22, r10
    1a4a:	89 81       	ldd	r24, Y+1	; 0x01
    1a4c:	9a 81       	ldd	r25, Y+2	; 0x02
    1a4e:	0e 94 32 01 	call	0x264	; 0x264 <_ZL8ld_clustP5FATFSPh>
    1a52:	2b 01       	movw	r4, r22
    1a54:	3c 01       	movw	r6, r24
    1a56:	40 e0       	ldi	r20, 0x00	; 0
    1a58:	50 e0       	ldi	r21, 0x00	; 0
    1a5a:	ba 01       	movw	r22, r20
    1a5c:	c5 01       	movw	r24, r10
    1a5e:	0e 94 4b 01 	call	0x296	; 0x296 <_ZL8st_clustPhm>
    1a62:	e9 81       	ldd	r30, Y+1	; 0x01
    1a64:	fa 81       	ldd	r31, Y+2	; 0x02
    1a66:	81 e0       	ldi	r24, 0x01	; 1
    1a68:	84 83       	std	Z+4, r24	; 0x04
    1a6a:	41 14       	cp	r4, r1
    1a6c:	51 04       	cpc	r5, r1
    1a6e:	61 04       	cpc	r6, r1
    1a70:	71 04       	cpc	r7, r1
    1a72:	91 f1       	breq	.+100    	; 0x1ad8 <f_open+0x166>
    1a74:	86 a5       	ldd	r24, Z+46	; 0x2e
    1a76:	97 a5       	ldd	r25, Z+47	; 0x2f
    1a78:	a0 a9       	ldd	r26, Z+48	; 0x30
    1a7a:	b1 a9       	ldd	r27, Z+49	; 0x31
    1a7c:	8d a3       	std	Y+37, r24	; 0x25
    1a7e:	9e a3       	std	Y+38, r25	; 0x26
    1a80:	af a3       	std	Y+39, r26	; 0x27
    1a82:	b8 a7       	std	Y+40, r27	; 0x28
    1a84:	b3 01       	movw	r22, r6
    1a86:	a2 01       	movw	r20, r4
    1a88:	cf 01       	movw	r24, r30
    1a8a:	e0 de       	rcall	.-576    	; 0x184c <_ZL12remove_chainP5FATFSm>
    1a8c:	18 2f       	mov	r17, r24
    1a8e:	81 11       	cpse	r24, r1
    1a90:	23 c0       	rjmp	.+70     	; 0x1ad8 <f_open+0x166>
    1a92:	89 81       	ldd	r24, Y+1	; 0x01
    1a94:	9a 81       	ldd	r25, Y+2	; 0x02
    1a96:	a1 e0       	ldi	r26, 0x01	; 1
    1a98:	4a 1a       	sub	r4, r26
    1a9a:	51 08       	sbc	r5, r1
    1a9c:	61 08       	sbc	r6, r1
    1a9e:	71 08       	sbc	r7, r1
    1aa0:	fc 01       	movw	r30, r24
    1aa2:	42 86       	std	Z+10, r4	; 0x0a
    1aa4:	53 86       	std	Z+11, r5	; 0x0b
    1aa6:	64 86       	std	Z+12, r6	; 0x0c
    1aa8:	75 86       	std	Z+13, r7	; 0x0d
    1aaa:	4d a1       	ldd	r20, Y+37	; 0x25
    1aac:	5e a1       	ldd	r21, Y+38	; 0x26
    1aae:	6f a1       	ldd	r22, Y+39	; 0x27
    1ab0:	78 a5       	ldd	r23, Y+40	; 0x28
    1ab2:	0e 94 b1 02 	call	0x562	; 0x562 <_ZL11move_windowP5FATFSm>
    1ab6:	18 2f       	mov	r17, r24
    1ab8:	0f c0       	rjmp	.+30     	; 0x1ad8 <f_open+0x166>
    1aba:	11 11       	cpse	r17, r1
    1abc:	0d c0       	rjmp	.+26     	; 0x1ad8 <f_open+0x166>
    1abe:	d5 01       	movw	r26, r10
    1ac0:	1b 96       	adiw	r26, 0x0b	; 11
    1ac2:	8c 91       	ld	r24, X
    1ac4:	84 fd       	sbrc	r24, 4
    1ac6:	05 c0       	rjmp	.+10     	; 0x1ad2 <f_open+0x160>
    1ac8:	01 ff       	sbrs	r16, 1
    1aca:	06 c0       	rjmp	.+12     	; 0x1ad8 <f_open+0x166>
    1acc:	80 fd       	sbrc	r24, 0
    1ace:	03 c0       	rjmp	.+6      	; 0x1ad6 <f_open+0x164>
    1ad0:	03 c0       	rjmp	.+6      	; 0x1ad8 <f_open+0x166>
    1ad2:	14 e0       	ldi	r17, 0x04	; 4
    1ad4:	01 c0       	rjmp	.+2      	; 0x1ad8 <f_open+0x166>
    1ad6:	17 e0       	ldi	r17, 0x07	; 7
    1ad8:	11 11       	cpse	r17, r1
    1ada:	12 c0       	rjmp	.+36     	; 0x1b00 <f_open+0x18e>
    1adc:	d3 fe       	sbrs	r13, 3
    1ade:	03 c0       	rjmp	.+6      	; 0x1ae6 <f_open+0x174>
    1ae0:	bd 2d       	mov	r27, r13
    1ae2:	b0 62       	ori	r27, 0x20	; 32
    1ae4:	db 2e       	mov	r13, r27
    1ae6:	e9 81       	ldd	r30, Y+1	; 0x01
    1ae8:	fa 81       	ldd	r31, Y+2	; 0x02
    1aea:	86 a5       	ldd	r24, Z+46	; 0x2e
    1aec:	97 a5       	ldd	r25, Z+47	; 0x2f
    1aee:	a0 a9       	ldd	r26, Z+48	; 0x30
    1af0:	b1 a9       	ldd	r27, Z+49	; 0x31
    1af2:	f7 01       	movw	r30, r14
    1af4:	82 8f       	std	Z+26, r24	; 0x1a
    1af6:	93 8f       	std	Z+27, r25	; 0x1b
    1af8:	a4 8f       	std	Z+28, r26	; 0x1c
    1afa:	b5 8f       	std	Z+29, r27	; 0x1d
    1afc:	b7 8e       	std	Z+31, r11	; 0x1f
    1afe:	a6 8e       	std	Z+30, r10	; 0x1e
    1b00:	11 11       	cpse	r17, r1
    1b02:	2d c0       	rjmp	.+90     	; 0x1b5e <f_open+0x1ec>
    1b04:	d7 01       	movw	r26, r14
    1b06:	14 96       	adiw	r26, 0x04	; 4
    1b08:	dc 92       	st	X, r13
    1b0a:	c9 80       	ldd	r12, Y+1	; 0x01
    1b0c:	da 80       	ldd	r13, Y+2	; 0x02
    1b0e:	b5 01       	movw	r22, r10
    1b10:	c6 01       	movw	r24, r12
    1b12:	0e 94 32 01 	call	0x264	; 0x264 <_ZL8ld_clustP5FATFSPh>
    1b16:	f7 01       	movw	r30, r14
    1b18:	66 87       	std	Z+14, r22	; 0x0e
    1b1a:	77 87       	std	Z+15, r23	; 0x0f
    1b1c:	80 8b       	std	Z+16, r24	; 0x10
    1b1e:	91 8b       	std	Z+17, r25	; 0x11
    1b20:	f5 01       	movw	r30, r10
    1b22:	84 8d       	ldd	r24, Z+28	; 0x1c
    1b24:	95 8d       	ldd	r25, Z+29	; 0x1d
    1b26:	a6 8d       	ldd	r26, Z+30	; 0x1e
    1b28:	b7 8d       	ldd	r27, Z+31	; 0x1f
    1b2a:	f7 01       	movw	r30, r14
    1b2c:	82 87       	std	Z+10, r24	; 0x0a
    1b2e:	93 87       	std	Z+11, r25	; 0x0b
    1b30:	a4 87       	std	Z+12, r26	; 0x0c
    1b32:	b5 87       	std	Z+13, r27	; 0x0d
    1b34:	16 82       	std	Z+6, r1	; 0x06
    1b36:	17 82       	std	Z+7, r1	; 0x07
    1b38:	10 86       	std	Z+8, r1	; 0x08
    1b3a:	11 86       	std	Z+9, r1	; 0x09
    1b3c:	16 8a       	std	Z+22, r1	; 0x16
    1b3e:	17 8a       	std	Z+23, r1	; 0x17
    1b40:	10 8e       	std	Z+24, r1	; 0x18
    1b42:	11 8e       	std	Z+25, r1	; 0x19
    1b44:	d1 82       	std	Z+1, r13	; 0x01
    1b46:	c0 82       	st	Z, r12
    1b48:	d6 01       	movw	r26, r12
    1b4a:	16 96       	adiw	r26, 0x06	; 6
    1b4c:	8d 91       	ld	r24, X+
    1b4e:	9c 91       	ld	r25, X
    1b50:	17 97       	sbiw	r26, 0x07	; 7
    1b52:	93 83       	std	Z+3, r25	; 0x03
    1b54:	82 83       	std	Z+2, r24	; 0x02
    1b56:	81 2f       	mov	r24, r17
    1b58:	03 c0       	rjmp	.+6      	; 0x1b60 <f_open+0x1ee>
    1b5a:	89 e0       	ldi	r24, 0x09	; 9
    1b5c:	01 c0       	rjmp	.+2      	; 0x1b60 <f_open+0x1ee>
    1b5e:	81 2f       	mov	r24, r17
    1b60:	a8 96       	adiw	r28, 0x28	; 40
    1b62:	0f b6       	in	r0, 0x3f	; 63
    1b64:	f8 94       	cli
    1b66:	de bf       	out	0x3e, r29	; 62
    1b68:	0f be       	out	0x3f, r0	; 63
    1b6a:	cd bf       	out	0x3d, r28	; 61
    1b6c:	df 91       	pop	r29
    1b6e:	cf 91       	pop	r28
    1b70:	1f 91       	pop	r17
    1b72:	0f 91       	pop	r16
    1b74:	ff 90       	pop	r15
    1b76:	ef 90       	pop	r14
    1b78:	df 90       	pop	r13
    1b7a:	cf 90       	pop	r12
    1b7c:	bf 90       	pop	r11
    1b7e:	af 90       	pop	r10
    1b80:	7f 90       	pop	r7
    1b82:	6f 90       	pop	r6
    1b84:	5f 90       	pop	r5
    1b86:	4f 90       	pop	r4
    1b88:	08 95       	ret

00001b8a <f_write>:
	FIL *fp,			/* Pointer to the file object */
	const void *buff,	/* Pointer to the data to be written */
	UINT btw,			/* Number of bytes to write */
	UINT *bw			/* Pointer to number of bytes written */
)
{
    1b8a:	2f 92       	push	r2
    1b8c:	3f 92       	push	r3
    1b8e:	4f 92       	push	r4
    1b90:	5f 92       	push	r5
    1b92:	6f 92       	push	r6
    1b94:	7f 92       	push	r7
    1b96:	8f 92       	push	r8
    1b98:	9f 92       	push	r9
    1b9a:	af 92       	push	r10
    1b9c:	bf 92       	push	r11
    1b9e:	cf 92       	push	r12
    1ba0:	df 92       	push	r13
    1ba2:	ef 92       	push	r14
    1ba4:	ff 92       	push	r15
    1ba6:	0f 93       	push	r16
    1ba8:	1f 93       	push	r17
    1baa:	cf 93       	push	r28
    1bac:	df 93       	push	r29
    1bae:	ec 01       	movw	r28, r24
    1bb0:	5b 01       	movw	r10, r22
    1bb2:	6a 01       	movw	r12, r20
    1bb4:	49 01       	movw	r8, r18
	UINT wcnt, cc;
	const BYTE *wbuff = (const BYTE*)buff;
	BYTE csect;


	*bw = 0;	/* Clear write byte counter */
    1bb6:	f9 01       	movw	r30, r18
    1bb8:	11 82       	std	Z+1, r1	; 0x01
    1bba:	10 82       	st	Z, r1

	res = validate(fp);						/* Check validity */
    1bbc:	0e 94 e9 02 	call	0x5d2	; 0x5d2 <_ZL8validatePv>
	if (res != FR_OK) LEAVE_FF(fp->fs, res);
    1bc0:	81 11       	cpse	r24, r1
    1bc2:	7b c1       	rjmp	.+758    	; 0x1eba <f_write+0x330>
	if (fp->flag & FA__ERROR)				/* Aborted file? */
    1bc4:	8c 81       	ldd	r24, Y+4	; 0x04
    1bc6:	88 23       	and	r24, r24
    1bc8:	0c f4       	brge	.+2      	; 0x1bcc <f_write+0x42>
    1bca:	74 c1       	rjmp	.+744    	; 0x1eb4 <f_write+0x32a>
		LEAVE_FF(fp->fs, FR_INT_ERR);
	if (!(fp->flag & FA_WRITE))				/* Check access mode */
    1bcc:	81 ff       	sbrs	r24, 1
    1bce:	74 c1       	rjmp	.+744    	; 0x1eb8 <f_write+0x32e>
		LEAVE_FF(fp->fs, FR_DENIED);
	if ((DWORD)(fp->fsize + btw) < fp->fsize) btw = 0;	/* File size cannot reach 4GB */
    1bd0:	8a 85       	ldd	r24, Y+10	; 0x0a
    1bd2:	9b 85       	ldd	r25, Y+11	; 0x0b
    1bd4:	ac 85       	ldd	r26, Y+12	; 0x0c
    1bd6:	bd 85       	ldd	r27, Y+13	; 0x0d
    1bd8:	ac 01       	movw	r20, r24
    1bda:	bd 01       	movw	r22, r26
    1bdc:	4c 0d       	add	r20, r12
    1bde:	5d 1d       	adc	r21, r13
    1be0:	61 1d       	adc	r22, r1
    1be2:	71 1d       	adc	r23, r1
    1be4:	48 17       	cp	r20, r24
    1be6:	59 07       	cpc	r21, r25
    1be8:	6a 07       	cpc	r22, r26
    1bea:	7b 07       	cpc	r23, r27
    1bec:	10 f4       	brcc	.+4      	; 0x1bf2 <f_write+0x68>
    1bee:	c1 2c       	mov	r12, r1
    1bf0:	d1 2c       	mov	r13, r1

	for ( ;  btw;							/* Repeat until all data written */
    1bf2:	c1 14       	cp	r12, r1
    1bf4:	d1 04       	cpc	r13, r1
    1bf6:	09 f4       	brne	.+2      	; 0x1bfa <f_write+0x70>
    1bf8:	47 c1       	rjmp	.+654    	; 0x1e88 <f_write+0x2fe>
		wbuff += wcnt, fp->fptr += wcnt, *bw += wcnt, btw -= wcnt) {
		if ((fp->fptr % SS(fp->fs)) == 0) {	/* On the sector boundary? */
    1bfa:	4e 81       	ldd	r20, Y+6	; 0x06
    1bfc:	5f 81       	ldd	r21, Y+7	; 0x07
    1bfe:	68 85       	ldd	r22, Y+8	; 0x08
    1c00:	79 85       	ldd	r23, Y+9	; 0x09
    1c02:	db 01       	movw	r26, r22
    1c04:	ca 01       	movw	r24, r20
    1c06:	91 70       	andi	r25, 0x01	; 1
    1c08:	aa 27       	eor	r26, r26
    1c0a:	bb 27       	eor	r27, r27
    1c0c:	89 2b       	or	r24, r25
    1c0e:	8a 2b       	or	r24, r26
    1c10:	8b 2b       	or	r24, r27
    1c12:	09 f0       	breq	.+2      	; 0x1c16 <f_write+0x8c>
    1c14:	ef c0       	rjmp	.+478    	; 0x1df4 <f_write+0x26a>
			csect = (BYTE)(fp->fptr / SS(fp->fs) & (fp->fs->csize - 1));	/* Sector offset in the cluster */
    1c16:	e8 81       	ld	r30, Y
    1c18:	f9 81       	ldd	r31, Y+1	; 0x01
    1c1a:	12 81       	ldd	r17, Z+2	; 0x02
    1c1c:	11 50       	subi	r17, 0x01	; 1
    1c1e:	db 01       	movw	r26, r22
    1c20:	ca 01       	movw	r24, r20
    1c22:	07 2e       	mov	r0, r23
    1c24:	79 e0       	ldi	r23, 0x09	; 9
    1c26:	b6 95       	lsr	r27
    1c28:	a7 95       	ror	r26
    1c2a:	97 95       	ror	r25
    1c2c:	87 95       	ror	r24
    1c2e:	7a 95       	dec	r23
    1c30:	d1 f7       	brne	.-12     	; 0x1c26 <f_write+0x9c>
    1c32:	70 2d       	mov	r23, r0
    1c34:	18 23       	and	r17, r24
			if (!csect) {					/* On the cluster boundary? */
    1c36:	e1 f5       	brne	.+120    	; 0x1cb0 <f_write+0x126>
				if (fp->fptr == 0) {		/* On the top of the file? */
    1c38:	45 2b       	or	r20, r21
    1c3a:	46 2b       	or	r20, r22
    1c3c:	47 2b       	or	r20, r23
    1c3e:	99 f4       	brne	.+38     	; 0x1c66 <f_write+0xdc>
					clst = fp->sclust;		/* Follow from the origin */
    1c40:	6e 85       	ldd	r22, Y+14	; 0x0e
    1c42:	7f 85       	ldd	r23, Y+15	; 0x0f
    1c44:	88 89       	ldd	r24, Y+16	; 0x10
    1c46:	99 89       	ldd	r25, Y+17	; 0x11
					if (clst == 0)			/* When no cluster is allocated, */
    1c48:	61 15       	cp	r22, r1
    1c4a:	71 05       	cpc	r23, r1
    1c4c:	81 05       	cpc	r24, r1
    1c4e:	91 05       	cpc	r25, r1
    1c50:	81 f4       	brne	.+32     	; 0x1c72 <f_write+0xe8>
						fp->sclust = clst = create_chain(fp->fs, 0);	/* Create a new cluster chain */
    1c52:	40 e0       	ldi	r20, 0x00	; 0
    1c54:	50 e0       	ldi	r21, 0x00	; 0
    1c56:	ba 01       	movw	r22, r20
    1c58:	cf 01       	movw	r24, r30
    1c5a:	d5 da       	rcall	.-2646   	; 0x1206 <_ZL12create_chainP5FATFSm>
    1c5c:	6e 87       	std	Y+14, r22	; 0x0e
    1c5e:	7f 87       	std	Y+15, r23	; 0x0f
    1c60:	88 8b       	std	Y+16, r24	; 0x10
    1c62:	99 8b       	std	Y+17, r25	; 0x11
    1c64:	06 c0       	rjmp	.+12     	; 0x1c72 <f_write+0xe8>
#if _USE_FASTSEEK
					if (fp->cltbl)
						clst = clmt_clust(fp, fp->fptr);	/* Get cluster# from the CLMT */
					else
#endif
						clst = create_chain(fp->fs, fp->clust);	/* Follow or stretch cluster chain on the FAT */
    1c66:	4a 89       	ldd	r20, Y+18	; 0x12
    1c68:	5b 89       	ldd	r21, Y+19	; 0x13
    1c6a:	6c 89       	ldd	r22, Y+20	; 0x14
    1c6c:	7d 89       	ldd	r23, Y+21	; 0x15
    1c6e:	cf 01       	movw	r24, r30
    1c70:	ca da       	rcall	.-2668   	; 0x1206 <_ZL12create_chainP5FATFSm>
				}
				if (clst == 0) break;		/* Could not allocate a new cluster (disk full) */
    1c72:	61 15       	cp	r22, r1
    1c74:	71 05       	cpc	r23, r1
    1c76:	81 05       	cpc	r24, r1
    1c78:	91 05       	cpc	r25, r1
    1c7a:	09 f4       	brne	.+2      	; 0x1c7e <f_write+0xf4>
    1c7c:	05 c1       	rjmp	.+522    	; 0x1e88 <f_write+0x2fe>
				if (clst == 1) ABORT(fp->fs, FR_INT_ERR);
    1c7e:	61 30       	cpi	r22, 0x01	; 1
    1c80:	71 05       	cpc	r23, r1
    1c82:	81 05       	cpc	r24, r1
    1c84:	91 05       	cpc	r25, r1
    1c86:	29 f4       	brne	.+10     	; 0x1c92 <f_write+0x108>
    1c88:	8c 81       	ldd	r24, Y+4	; 0x04
    1c8a:	80 68       	ori	r24, 0x80	; 128
    1c8c:	8c 83       	std	Y+4, r24	; 0x04
    1c8e:	82 e0       	ldi	r24, 0x02	; 2
    1c90:	14 c1       	rjmp	.+552    	; 0x1eba <f_write+0x330>
				if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
    1c92:	6f 3f       	cpi	r22, 0xFF	; 255
    1c94:	ff ef       	ldi	r31, 0xFF	; 255
    1c96:	7f 07       	cpc	r23, r31
    1c98:	8f 07       	cpc	r24, r31
    1c9a:	9f 07       	cpc	r25, r31
    1c9c:	29 f4       	brne	.+10     	; 0x1ca8 <f_write+0x11e>
    1c9e:	8c 81       	ldd	r24, Y+4	; 0x04
    1ca0:	80 68       	ori	r24, 0x80	; 128
    1ca2:	8c 83       	std	Y+4, r24	; 0x04
    1ca4:	81 e0       	ldi	r24, 0x01	; 1
    1ca6:	09 c1       	rjmp	.+530    	; 0x1eba <f_write+0x330>
				fp->clust = clst;			/* Update current cluster */
    1ca8:	6a 8b       	std	Y+18, r22	; 0x12
    1caa:	7b 8b       	std	Y+19, r23	; 0x13
    1cac:	8c 8b       	std	Y+20, r24	; 0x14
    1cae:	9d 8b       	std	Y+21, r25	; 0x15
			}
#if _FS_TINY
			if (fp->fs->winsect == fp->dsect && sync_window(fp->fs))	/* Write-back sector cache */
    1cb0:	e8 81       	ld	r30, Y
    1cb2:	f9 81       	ldd	r31, Y+1	; 0x01
    1cb4:	46 a5       	ldd	r20, Z+46	; 0x2e
    1cb6:	57 a5       	ldd	r21, Z+47	; 0x2f
    1cb8:	60 a9       	ldd	r22, Z+48	; 0x30
    1cba:	71 a9       	ldd	r23, Z+49	; 0x31
    1cbc:	8e 89       	ldd	r24, Y+22	; 0x16
    1cbe:	9f 89       	ldd	r25, Y+23	; 0x17
    1cc0:	a8 8d       	ldd	r26, Y+24	; 0x18
    1cc2:	b9 8d       	ldd	r27, Y+25	; 0x19
    1cc4:	48 17       	cp	r20, r24
    1cc6:	59 07       	cpc	r21, r25
    1cc8:	6a 07       	cpc	r22, r26
    1cca:	7b 07       	cpc	r23, r27
    1ccc:	39 f4       	brne	.+14     	; 0x1cdc <f_write+0x152>
    1cce:	cf 01       	movw	r24, r30
    1cd0:	0e 94 4a 02 	call	0x494	; 0x494 <_ZL11sync_windowP5FATFS>
    1cd4:	88 23       	and	r24, r24
    1cd6:	21 f0       	breq	.+8      	; 0x1ce0 <f_write+0x156>
    1cd8:	81 e0       	ldi	r24, 0x01	; 1
    1cda:	03 c0       	rjmp	.+6      	; 0x1ce2 <f_write+0x158>
    1cdc:	80 e0       	ldi	r24, 0x00	; 0
    1cde:	01 c0       	rjmp	.+2      	; 0x1ce2 <f_write+0x158>
    1ce0:	80 e0       	ldi	r24, 0x00	; 0
    1ce2:	88 23       	and	r24, r24
    1ce4:	29 f0       	breq	.+10     	; 0x1cf0 <f_write+0x166>
				ABORT(fp->fs, FR_DISK_ERR);
    1ce6:	8c 81       	ldd	r24, Y+4	; 0x04
    1ce8:	80 68       	ori	r24, 0x80	; 128
    1cea:	8c 83       	std	Y+4, r24	; 0x04
    1cec:	81 e0       	ldi	r24, 0x01	; 1
    1cee:	e5 c0       	rjmp	.+458    	; 0x1eba <f_write+0x330>
				if (disk_write(fp->fs->drv, fp->buf, fp->dsect, 1) != RES_OK)
					ABORT(fp->fs, FR_DISK_ERR);
				fp->flag &= ~FA__DIRTY;
			}
#endif
			sect = clust2sect(fp->fs, fp->clust);	/* Get current sector */
    1cf0:	4a 89       	ldd	r20, Y+18	; 0x12
    1cf2:	5b 89       	ldd	r21, Y+19	; 0x13
    1cf4:	6c 89       	ldd	r22, Y+20	; 0x14
    1cf6:	7d 89       	ldd	r23, Y+21	; 0x15
    1cf8:	28 80       	ld	r2, Y
    1cfa:	39 80       	ldd	r3, Y+1	; 0x01
    1cfc:	c1 01       	movw	r24, r2
    1cfe:	0e 94 15 06 	call	0xc2a	; 0xc2a <_Z10clust2sectP5FATFSm>
			if (!sect) ABORT(fp->fs, FR_INT_ERR);
    1d02:	61 15       	cp	r22, r1
    1d04:	71 05       	cpc	r23, r1
    1d06:	81 05       	cpc	r24, r1
    1d08:	91 05       	cpc	r25, r1
    1d0a:	29 f4       	brne	.+10     	; 0x1d16 <f_write+0x18c>
    1d0c:	8c 81       	ldd	r24, Y+4	; 0x04
    1d0e:	80 68       	ori	r24, 0x80	; 128
    1d10:	8c 83       	std	Y+4, r24	; 0x04
    1d12:	82 e0       	ldi	r24, 0x02	; 2
    1d14:	d2 c0       	rjmp	.+420    	; 0x1eba <f_write+0x330>
			sect += csect;
    1d16:	2b 01       	movw	r4, r22
    1d18:	3c 01       	movw	r6, r24
    1d1a:	41 0e       	add	r4, r17
    1d1c:	51 1c       	adc	r5, r1
    1d1e:	61 1c       	adc	r6, r1
    1d20:	71 1c       	adc	r7, r1
			cc = btw / SS(fp->fs);			/* When remaining bytes >= sector size, */
    1d22:	76 01       	movw	r14, r12
    1d24:	ef 2c       	mov	r14, r15
    1d26:	ff 24       	eor	r15, r15
    1d28:	e6 94       	lsr	r14
			if (cc) {						/* Write maximum contiguous sectors directly */
    1d2a:	e1 14       	cp	r14, r1
    1d2c:	f1 04       	cpc	r15, r1
    1d2e:	09 f4       	brne	.+2      	; 0x1d32 <f_write+0x1a8>
    1d30:	40 c0       	rjmp	.+128    	; 0x1db2 <f_write+0x228>
				if (csect + cc > fp->fs->csize)	/* Clip at cluster boundary */
    1d32:	f1 01       	movw	r30, r2
    1d34:	42 81       	ldd	r20, Z+2	; 0x02
    1d36:	24 2f       	mov	r18, r20
    1d38:	30 e0       	ldi	r19, 0x00	; 0
    1d3a:	c7 01       	movw	r24, r14
    1d3c:	81 0f       	add	r24, r17
    1d3e:	91 1d       	adc	r25, r1
    1d40:	28 17       	cp	r18, r24
    1d42:	39 07       	cpc	r19, r25
    1d44:	18 f4       	brcc	.+6      	; 0x1d4c <f_write+0x1c2>
					cc = fp->fs->csize - csect;
    1d46:	79 01       	movw	r14, r18
    1d48:	e1 1a       	sub	r14, r17
    1d4a:	f1 08       	sbc	r15, r1
				if (disk_write(fp->fs->drv, wbuff, sect, (BYTE)cc) != RES_OK)
    1d4c:	0e 2d       	mov	r16, r14
    1d4e:	a3 01       	movw	r20, r6
    1d50:	92 01       	movw	r18, r4
    1d52:	b5 01       	movw	r22, r10
    1d54:	f1 01       	movw	r30, r2
    1d56:	81 81       	ldd	r24, Z+1	; 0x01
    1d58:	14 d6       	rcall	.+3112   	; 0x2982 <disk_write>
    1d5a:	88 23       	and	r24, r24
    1d5c:	29 f0       	breq	.+10     	; 0x1d68 <f_write+0x1de>
					ABORT(fp->fs, FR_DISK_ERR);
    1d5e:	8c 81       	ldd	r24, Y+4	; 0x04
    1d60:	80 68       	ori	r24, 0x80	; 128
    1d62:	8c 83       	std	Y+4, r24	; 0x04
    1d64:	81 e0       	ldi	r24, 0x01	; 1
    1d66:	a9 c0       	rjmp	.+338    	; 0x1eba <f_write+0x330>
#if _FS_TINY
				if (fp->fs->winsect - sect < cc) {	/* Refill sector cache if it gets invalidated by the direct write */
    1d68:	e8 81       	ld	r30, Y
    1d6a:	f9 81       	ldd	r31, Y+1	; 0x01
    1d6c:	86 a5       	ldd	r24, Z+46	; 0x2e
    1d6e:	97 a5       	ldd	r25, Z+47	; 0x2f
    1d70:	a0 a9       	ldd	r26, Z+48	; 0x30
    1d72:	b1 a9       	ldd	r27, Z+49	; 0x31
    1d74:	84 19       	sub	r24, r4
    1d76:	95 09       	sbc	r25, r5
    1d78:	a6 09       	sbc	r26, r6
    1d7a:	b7 09       	sbc	r27, r7
    1d7c:	a7 01       	movw	r20, r14
    1d7e:	60 e0       	ldi	r22, 0x00	; 0
    1d80:	70 e0       	ldi	r23, 0x00	; 0
    1d82:	84 17       	cp	r24, r20
    1d84:	95 07       	cpc	r25, r21
    1d86:	a6 07       	cpc	r26, r22
    1d88:	b7 07       	cpc	r27, r23
    1d8a:	78 f4       	brcc	.+30     	; 0x1daa <f_write+0x220>
					mem_cpy(fp->fs->win, wbuff + ((fp->fs->winsect - sect) * SS(fp->fs)), SS(fp->fs));
    1d8c:	98 2f       	mov	r25, r24
    1d8e:	88 27       	eor	r24, r24
    1d90:	99 0f       	add	r25, r25
    1d92:	b5 01       	movw	r22, r10
    1d94:	68 0f       	add	r22, r24
    1d96:	79 1f       	adc	r23, r25
    1d98:	40 e0       	ldi	r20, 0x00	; 0
    1d9a:	52 e0       	ldi	r21, 0x02	; 2
    1d9c:	cf 01       	movw	r24, r30
    1d9e:	c2 96       	adiw	r24, 0x32	; 50
    1da0:	0e 94 df 00 	call	0x1be	; 0x1be <_ZL7mem_cpyPvPKvj>
					fp->fs->wflag = 0;
    1da4:	e8 81       	ld	r30, Y
    1da6:	f9 81       	ldd	r31, Y+1	; 0x01
    1da8:	14 82       	std	Z+4, r1	; 0x04
				if (fp->dsect - sect < cc) { /* Refill sector cache if it gets invalidated by the direct write */
					mem_cpy(fp->buf, wbuff + ((fp->dsect - sect) * SS(fp->fs)), SS(fp->fs));
					fp->flag &= ~FA__DIRTY;
				}
#endif
				wcnt = SS(fp->fs) * cc;		/* Number of bytes transferred */
    1daa:	fe 2c       	mov	r15, r14
    1dac:	ee 24       	eor	r14, r14
    1dae:	ff 0c       	add	r15, r15
				continue;
    1db0:	53 c0       	rjmp	.+166    	; 0x1e58 <f_write+0x2ce>
			}
#if _FS_TINY
			if (fp->fptr >= fp->fsize) {	/* Avoid silly cache filling at growing edge */
    1db2:	4e 81       	ldd	r20, Y+6	; 0x06
    1db4:	5f 81       	ldd	r21, Y+7	; 0x07
    1db6:	68 85       	ldd	r22, Y+8	; 0x08
    1db8:	79 85       	ldd	r23, Y+9	; 0x09
    1dba:	8a 85       	ldd	r24, Y+10	; 0x0a
    1dbc:	9b 85       	ldd	r25, Y+11	; 0x0b
    1dbe:	ac 85       	ldd	r26, Y+12	; 0x0c
    1dc0:	bd 85       	ldd	r27, Y+13	; 0x0d
    1dc2:	48 17       	cp	r20, r24
    1dc4:	59 07       	cpc	r21, r25
    1dc6:	6a 07       	cpc	r22, r26
    1dc8:	7b 07       	cpc	r23, r27
    1dca:	80 f0       	brcs	.+32     	; 0x1dec <f_write+0x262>
				if (sync_window(fp->fs)) ABORT(fp->fs, FR_DISK_ERR);
    1dcc:	c1 01       	movw	r24, r2
    1dce:	0e 94 4a 02 	call	0x494	; 0x494 <_ZL11sync_windowP5FATFS>
    1dd2:	88 23       	and	r24, r24
    1dd4:	29 f0       	breq	.+10     	; 0x1de0 <f_write+0x256>
    1dd6:	8c 81       	ldd	r24, Y+4	; 0x04
    1dd8:	80 68       	ori	r24, 0x80	; 128
    1dda:	8c 83       	std	Y+4, r24	; 0x04
    1ddc:	81 e0       	ldi	r24, 0x01	; 1
    1dde:	6d c0       	rjmp	.+218    	; 0x1eba <f_write+0x330>
				fp->fs->winsect = sect;
    1de0:	e8 81       	ld	r30, Y
    1de2:	f9 81       	ldd	r31, Y+1	; 0x01
    1de4:	46 a6       	std	Z+46, r4	; 0x2e
    1de6:	57 a6       	std	Z+47, r5	; 0x2f
    1de8:	60 aa       	std	Z+48, r6	; 0x30
    1dea:	71 aa       	std	Z+49, r7	; 0x31
				if (fp->fptr < fp->fsize &&
					disk_read(fp->fs->drv, fp->buf, sect, 1) != RES_OK)
						ABORT(fp->fs, FR_DISK_ERR);
			}
#endif
			fp->dsect = sect;
    1dec:	4e 8a       	std	Y+22, r4	; 0x16
    1dee:	5f 8a       	std	Y+23, r5	; 0x17
    1df0:	68 8e       	std	Y+24, r6	; 0x18
    1df2:	79 8e       	std	Y+25, r7	; 0x19
		}
		wcnt = SS(fp->fs) - ((UINT)fp->fptr % SS(fp->fs));/* Put partial sector into file I/O buffer */
    1df4:	8e 81       	ldd	r24, Y+6	; 0x06
    1df6:	9f 81       	ldd	r25, Y+7	; 0x07
    1df8:	a8 85       	ldd	r26, Y+8	; 0x08
    1dfa:	b9 85       	ldd	r27, Y+9	; 0x09
    1dfc:	91 70       	andi	r25, 0x01	; 1
    1dfe:	20 e0       	ldi	r18, 0x00	; 0
    1e00:	32 e0       	ldi	r19, 0x02	; 2
    1e02:	79 01       	movw	r14, r18
    1e04:	e8 1a       	sub	r14, r24
    1e06:	f9 0a       	sbc	r15, r25
		if (wcnt > btw) wcnt = btw;
    1e08:	ce 14       	cp	r12, r14
    1e0a:	df 04       	cpc	r13, r15
    1e0c:	08 f4       	brcc	.+2      	; 0x1e10 <f_write+0x286>
    1e0e:	76 01       	movw	r14, r12
#if _FS_TINY
		if (move_window(fp->fs, fp->dsect))	/* Move sector window */
    1e10:	4e 89       	ldd	r20, Y+22	; 0x16
    1e12:	5f 89       	ldd	r21, Y+23	; 0x17
    1e14:	68 8d       	ldd	r22, Y+24	; 0x18
    1e16:	79 8d       	ldd	r23, Y+25	; 0x19
    1e18:	88 81       	ld	r24, Y
    1e1a:	99 81       	ldd	r25, Y+1	; 0x01
    1e1c:	0e 94 b1 02 	call	0x562	; 0x562 <_ZL11move_windowP5FATFSm>
    1e20:	88 23       	and	r24, r24
    1e22:	29 f0       	breq	.+10     	; 0x1e2e <f_write+0x2a4>
			ABORT(fp->fs, FR_DISK_ERR);
    1e24:	8c 81       	ldd	r24, Y+4	; 0x04
    1e26:	80 68       	ori	r24, 0x80	; 128
    1e28:	8c 83       	std	Y+4, r24	; 0x04
    1e2a:	81 e0       	ldi	r24, 0x01	; 1
    1e2c:	46 c0       	rjmp	.+140    	; 0x1eba <f_write+0x330>
		mem_cpy(&fp->fs->win[fp->fptr % SS(fp->fs)], wbuff, wcnt);	/* Fit partial sector */
    1e2e:	28 81       	ld	r18, Y
    1e30:	39 81       	ldd	r19, Y+1	; 0x01
    1e32:	4e 81       	ldd	r20, Y+6	; 0x06
    1e34:	5f 81       	ldd	r21, Y+7	; 0x07
    1e36:	68 85       	ldd	r22, Y+8	; 0x08
    1e38:	79 85       	ldd	r23, Y+9	; 0x09
    1e3a:	51 70       	andi	r21, 0x01	; 1
    1e3c:	66 27       	eor	r22, r22
    1e3e:	77 27       	eor	r23, r23
    1e40:	ca 01       	movw	r24, r20
    1e42:	c2 96       	adiw	r24, 0x32	; 50
    1e44:	a7 01       	movw	r20, r14
    1e46:	b5 01       	movw	r22, r10
    1e48:	82 0f       	add	r24, r18
    1e4a:	93 1f       	adc	r25, r19
    1e4c:	0e 94 df 00 	call	0x1be	; 0x1be <_ZL7mem_cpyPvPKvj>
		fp->fs->wflag = 1;
    1e50:	e8 81       	ld	r30, Y
    1e52:	f9 81       	ldd	r31, Y+1	; 0x01
    1e54:	81 e0       	ldi	r24, 0x01	; 1
    1e56:	84 83       	std	Z+4, r24	; 0x04
		LEAVE_FF(fp->fs, FR_INT_ERR);
	if (!(fp->flag & FA_WRITE))				/* Check access mode */
		LEAVE_FF(fp->fs, FR_DENIED);
	if ((DWORD)(fp->fsize + btw) < fp->fsize) btw = 0;	/* File size cannot reach 4GB */

	for ( ;  btw;							/* Repeat until all data written */
    1e58:	ae 0c       	add	r10, r14
    1e5a:	bf 1c       	adc	r11, r15
    1e5c:	8e 81       	ldd	r24, Y+6	; 0x06
    1e5e:	9f 81       	ldd	r25, Y+7	; 0x07
    1e60:	a8 85       	ldd	r26, Y+8	; 0x08
    1e62:	b9 85       	ldd	r27, Y+9	; 0x09
    1e64:	8e 0d       	add	r24, r14
    1e66:	9f 1d       	adc	r25, r15
    1e68:	a1 1d       	adc	r26, r1
    1e6a:	b1 1d       	adc	r27, r1
    1e6c:	8e 83       	std	Y+6, r24	; 0x06
    1e6e:	9f 83       	std	Y+7, r25	; 0x07
    1e70:	a8 87       	std	Y+8, r26	; 0x08
    1e72:	b9 87       	std	Y+9, r27	; 0x09
    1e74:	f4 01       	movw	r30, r8
    1e76:	80 81       	ld	r24, Z
    1e78:	91 81       	ldd	r25, Z+1	; 0x01
    1e7a:	8e 0d       	add	r24, r14
    1e7c:	9f 1d       	adc	r25, r15
    1e7e:	91 83       	std	Z+1, r25	; 0x01
    1e80:	80 83       	st	Z, r24
    1e82:	ce 18       	sub	r12, r14
    1e84:	df 08       	sbc	r13, r15
    1e86:	b5 ce       	rjmp	.-662    	; 0x1bf2 <f_write+0x68>
		mem_cpy(&fp->buf[fp->fptr % SS(fp->fs)], wbuff, wcnt);	/* Fit partial sector */
		fp->flag |= FA__DIRTY;
#endif
	}

	if (fp->fptr > fp->fsize) fp->fsize = fp->fptr;	/* Update file size if needed */
    1e88:	8e 81       	ldd	r24, Y+6	; 0x06
    1e8a:	9f 81       	ldd	r25, Y+7	; 0x07
    1e8c:	a8 85       	ldd	r26, Y+8	; 0x08
    1e8e:	b9 85       	ldd	r27, Y+9	; 0x09
    1e90:	4a 85       	ldd	r20, Y+10	; 0x0a
    1e92:	5b 85       	ldd	r21, Y+11	; 0x0b
    1e94:	6c 85       	ldd	r22, Y+12	; 0x0c
    1e96:	7d 85       	ldd	r23, Y+13	; 0x0d
    1e98:	48 17       	cp	r20, r24
    1e9a:	59 07       	cpc	r21, r25
    1e9c:	6a 07       	cpc	r22, r26
    1e9e:	7b 07       	cpc	r23, r27
    1ea0:	20 f4       	brcc	.+8      	; 0x1eaa <f_write+0x320>
    1ea2:	8a 87       	std	Y+10, r24	; 0x0a
    1ea4:	9b 87       	std	Y+11, r25	; 0x0b
    1ea6:	ac 87       	std	Y+12, r26	; 0x0c
    1ea8:	bd 87       	std	Y+13, r27	; 0x0d
	fp->flag |= FA__WRITTEN;						/* Set file change flag */
    1eaa:	8c 81       	ldd	r24, Y+4	; 0x04
    1eac:	80 62       	ori	r24, 0x20	; 32
    1eae:	8c 83       	std	Y+4, r24	; 0x04

	LEAVE_FF(fp->fs, FR_OK);
    1eb0:	80 e0       	ldi	r24, 0x00	; 0
    1eb2:	03 c0       	rjmp	.+6      	; 0x1eba <f_write+0x330>
	*bw = 0;	/* Clear write byte counter */

	res = validate(fp);						/* Check validity */
	if (res != FR_OK) LEAVE_FF(fp->fs, res);
	if (fp->flag & FA__ERROR)				/* Aborted file? */
		LEAVE_FF(fp->fs, FR_INT_ERR);
    1eb4:	82 e0       	ldi	r24, 0x02	; 2
    1eb6:	01 c0       	rjmp	.+2      	; 0x1eba <f_write+0x330>
	if (!(fp->flag & FA_WRITE))				/* Check access mode */
		LEAVE_FF(fp->fs, FR_DENIED);
    1eb8:	87 e0       	ldi	r24, 0x07	; 7

	if (fp->fptr > fp->fsize) fp->fsize = fp->fptr;	/* Update file size if needed */
	fp->flag |= FA__WRITTEN;						/* Set file change flag */

	LEAVE_FF(fp->fs, FR_OK);
}
    1eba:	df 91       	pop	r29
    1ebc:	cf 91       	pop	r28
    1ebe:	1f 91       	pop	r17
    1ec0:	0f 91       	pop	r16
    1ec2:	ff 90       	pop	r15
    1ec4:	ef 90       	pop	r14
    1ec6:	df 90       	pop	r13
    1ec8:	cf 90       	pop	r12
    1eca:	bf 90       	pop	r11
    1ecc:	af 90       	pop	r10
    1ece:	9f 90       	pop	r9
    1ed0:	8f 90       	pop	r8
    1ed2:	7f 90       	pop	r7
    1ed4:	6f 90       	pop	r6
    1ed6:	5f 90       	pop	r5
    1ed8:	4f 90       	pop	r4
    1eda:	3f 90       	pop	r3
    1edc:	2f 90       	pop	r2
    1ede:	08 95       	ret

00001ee0 <f_sync>:
/*-----------------------------------------------------------------------*/

FRESULT f_sync (
	FIL *fp		/* Pointer to the file object */
)
{
    1ee0:	0f 93       	push	r16
    1ee2:	1f 93       	push	r17
    1ee4:	cf 93       	push	r28
    1ee6:	df 93       	push	r29
    1ee8:	ec 01       	movw	r28, r24
	FRESULT res;
	DWORD tm;
	BYTE *dir;


	res = validate(fp);					/* Check validity of the object */
    1eea:	0e 94 e9 02 	call	0x5d2	; 0x5d2 <_ZL8validatePv>
	if (res == FR_OK) {
    1eee:	81 11       	cpse	r24, r1
    1ef0:	36 c0       	rjmp	.+108    	; 0x1f5e <f_sync+0x7e>
		if (fp->flag & FA__WRITTEN) {	/* Has the file been written? */
    1ef2:	9c 81       	ldd	r25, Y+4	; 0x04
    1ef4:	95 ff       	sbrs	r25, 5
    1ef6:	33 c0       	rjmp	.+102    	; 0x1f5e <f_sync+0x7e>
					LEAVE_FF(fp->fs, FR_DISK_ERR);
				fp->flag &= ~FA__DIRTY;
			}
#endif
			/* Update the directory entry */
			res = move_window(fp->fs, fp->dir_sect);
    1ef8:	4a 8d       	ldd	r20, Y+26	; 0x1a
    1efa:	5b 8d       	ldd	r21, Y+27	; 0x1b
    1efc:	6c 8d       	ldd	r22, Y+28	; 0x1c
    1efe:	7d 8d       	ldd	r23, Y+29	; 0x1d
    1f00:	88 81       	ld	r24, Y
    1f02:	99 81       	ldd	r25, Y+1	; 0x01
    1f04:	0e 94 b1 02 	call	0x562	; 0x562 <_ZL11move_windowP5FATFSm>
			if (res == FR_OK) {
    1f08:	81 11       	cpse	r24, r1
    1f0a:	29 c0       	rjmp	.+82     	; 0x1f5e <f_sync+0x7e>
				dir = fp->dir_ptr;
    1f0c:	0e 8d       	ldd	r16, Y+30	; 0x1e
    1f0e:	1f 8d       	ldd	r17, Y+31	; 0x1f
				dir[DIR_Attr] |= AM_ARC;					/* Set archive bit */
    1f10:	f8 01       	movw	r30, r16
    1f12:	83 85       	ldd	r24, Z+11	; 0x0b
    1f14:	80 62       	ori	r24, 0x20	; 32
    1f16:	83 87       	std	Z+11, r24	; 0x0b
				ST_DWORD(dir+DIR_FileSize, fp->fsize);		/* Update file size */
    1f18:	8a 85       	ldd	r24, Y+10	; 0x0a
    1f1a:	9b 85       	ldd	r25, Y+11	; 0x0b
    1f1c:	ac 85       	ldd	r26, Y+12	; 0x0c
    1f1e:	bd 85       	ldd	r27, Y+13	; 0x0d
    1f20:	84 8f       	std	Z+28, r24	; 0x1c
    1f22:	95 8f       	std	Z+29, r25	; 0x1d
    1f24:	a6 8f       	std	Z+30, r26	; 0x1e
    1f26:	b7 8f       	std	Z+31, r27	; 0x1f
				st_clust(dir, fp->sclust);					/* Update start cluster */
    1f28:	4e 85       	ldd	r20, Y+14	; 0x0e
    1f2a:	5f 85       	ldd	r21, Y+15	; 0x0f
    1f2c:	68 89       	ldd	r22, Y+16	; 0x10
    1f2e:	79 89       	ldd	r23, Y+17	; 0x11
    1f30:	c8 01       	movw	r24, r16
    1f32:	0e 94 4b 01 	call	0x296	; 0x296 <_ZL8st_clustPhm>
				tm = get_fattime();							/* Update updated time */
    1f36:	0e 94 65 00 	call	0xca	; 0xca <get_fattime>
				ST_DWORD(dir+DIR_WrtTime, tm);
    1f3a:	f8 01       	movw	r30, r16
    1f3c:	66 8b       	std	Z+22, r22	; 0x16
    1f3e:	77 8b       	std	Z+23, r23	; 0x17
    1f40:	80 8f       	std	Z+24, r24	; 0x18
    1f42:	91 8f       	std	Z+25, r25	; 0x19
				ST_WORD(dir+DIR_LstAccDate, 0);
    1f44:	13 8a       	std	Z+19, r1	; 0x13
    1f46:	12 8a       	std	Z+18, r1	; 0x12
				fp->flag &= ~FA__WRITTEN;
    1f48:	8c 81       	ldd	r24, Y+4	; 0x04
    1f4a:	8f 7d       	andi	r24, 0xDF	; 223
    1f4c:	8c 83       	std	Y+4, r24	; 0x04
				fp->fs->wflag = 1;
    1f4e:	e8 81       	ld	r30, Y
    1f50:	f9 81       	ldd	r31, Y+1	; 0x01
    1f52:	81 e0       	ldi	r24, 0x01	; 1
    1f54:	84 83       	std	Z+4, r24	; 0x04
				res = sync_fs(fp->fs);
    1f56:	88 81       	ld	r24, Y
    1f58:	99 81       	ldd	r25, Y+1	; 0x01
    1f5a:	0e 94 b0 05 	call	0xb60	; 0xb60 <_ZL7sync_fsP5FATFS>
			}
		}
	}

	LEAVE_FF(fp->fs, res);
}
    1f5e:	df 91       	pop	r29
    1f60:	cf 91       	pop	r28
    1f62:	1f 91       	pop	r17
    1f64:	0f 91       	pop	r16
    1f66:	08 95       	ret

00001f68 <f_close>:
/*-----------------------------------------------------------------------*/

FRESULT f_close (
	FIL *fp		/* Pointer to the file object to be closed */
)
{
    1f68:	cf 93       	push	r28
    1f6a:	df 93       	push	r29
    1f6c:	ec 01       	movw	r28, r24
#endif
		if (res == FR_OK) fp->fs = 0;	/* Discard file object */
		LEAVE_FF(fs, res);
	}
#else
	res = f_sync(fp);		/* Flush cached data */
    1f6e:	b8 df       	rcall	.-144    	; 0x1ee0 <f_sync>
#else
		res = dec_lock(fp->lockid);
#endif
	}
#endif
	if (res == FR_OK) fp->fs = 0;	/* Discard file object */
    1f70:	81 11       	cpse	r24, r1
    1f72:	02 c0       	rjmp	.+4      	; 0x1f78 <f_close+0x10>
    1f74:	19 82       	std	Y+1, r1	; 0x01
    1f76:	18 82       	st	Y, r1
	return res;
#endif
}
    1f78:	df 91       	pop	r29
    1f7a:	cf 91       	pop	r28
    1f7c:	08 95       	ret

00001f7e <f_lseek>:

FRESULT f_lseek (
	FIL *fp,		/* Pointer to the file object */
	DWORD ofs		/* File pointer from top of file */
)
{
    1f7e:	2f 92       	push	r2
    1f80:	3f 92       	push	r3
    1f82:	4f 92       	push	r4
    1f84:	5f 92       	push	r5
    1f86:	6f 92       	push	r6
    1f88:	7f 92       	push	r7
    1f8a:	8f 92       	push	r8
    1f8c:	9f 92       	push	r9
    1f8e:	af 92       	push	r10
    1f90:	bf 92       	push	r11
    1f92:	cf 92       	push	r12
    1f94:	df 92       	push	r13
    1f96:	ef 92       	push	r14
    1f98:	ff 92       	push	r15
    1f9a:	1f 93       	push	r17
    1f9c:	cf 93       	push	r28
    1f9e:	df 93       	push	r29
    1fa0:	00 d0       	rcall	.+0      	; 0x1fa2 <f_lseek+0x24>
    1fa2:	00 d0       	rcall	.+0      	; 0x1fa4 <f_lseek+0x26>
    1fa4:	00 d0       	rcall	.+0      	; 0x1fa6 <f_lseek+0x28>
    1fa6:	cd b7       	in	r28, 0x3d	; 61
    1fa8:	de b7       	in	r29, 0x3e	; 62
    1faa:	9e 83       	std	Y+6, r25	; 0x06
    1fac:	8d 83       	std	Y+5, r24	; 0x05
    1fae:	6a 01       	movw	r12, r20
    1fb0:	7b 01       	movw	r14, r22
	FRESULT res;


	res = validate(fp);					/* Check validity of the object */
    1fb2:	0e 94 e9 02 	call	0x5d2	; 0x5d2 <_ZL8validatePv>
    1fb6:	18 2f       	mov	r17, r24
	if (res != FR_OK) LEAVE_FF(fp->fs, res);
    1fb8:	81 11       	cpse	r24, r1
    1fba:	92 c1       	rjmp	.+804    	; 0x22e0 <f_lseek+0x362>
	if (fp->flag & FA__ERROR)			/* Check abort flag */
    1fbc:	ad 81       	ldd	r26, Y+5	; 0x05
    1fbe:	be 81       	ldd	r27, Y+6	; 0x06
    1fc0:	14 96       	adiw	r26, 0x04	; 4
    1fc2:	8c 91       	ld	r24, X
    1fc4:	14 97       	sbiw	r26, 0x04	; 4
    1fc6:	88 23       	and	r24, r24
    1fc8:	0c f4       	brge	.+2      	; 0x1fcc <f_lseek+0x4e>
    1fca:	8b c1       	rjmp	.+790    	; 0x22e2 <f_lseek+0x364>

	/* Normal Seek */
	{
		DWORD clst, bcs, nsect, ifptr;

		if (ofs > fp->fsize					/* In read-only mode, clip offset with the file size */
    1fcc:	1a 96       	adiw	r26, 0x0a	; 10
    1fce:	4d 91       	ld	r20, X+
    1fd0:	5d 91       	ld	r21, X+
    1fd2:	6d 91       	ld	r22, X+
    1fd4:	7c 91       	ld	r23, X
    1fd6:	1d 97       	sbiw	r26, 0x0d	; 13
    1fd8:	4c 15       	cp	r20, r12
    1fda:	5d 05       	cpc	r21, r13
    1fdc:	6e 05       	cpc	r22, r14
    1fde:	7f 05       	cpc	r23, r15
    1fe0:	20 f4       	brcc	.+8      	; 0x1fea <f_lseek+0x6c>
#if !_FS_READONLY
			 && !(fp->flag & FA_WRITE)
    1fe2:	81 fd       	sbrc	r24, 1
    1fe4:	02 c0       	rjmp	.+4      	; 0x1fea <f_lseek+0x6c>
#endif
			) ofs = fp->fsize;
    1fe6:	6a 01       	movw	r12, r20
    1fe8:	7b 01       	movw	r14, r22

		ifptr = fp->fptr;
    1fea:	ed 81       	ldd	r30, Y+5	; 0x05
    1fec:	fe 81       	ldd	r31, Y+6	; 0x06
    1fee:	46 80       	ldd	r4, Z+6	; 0x06
    1ff0:	57 80       	ldd	r5, Z+7	; 0x07
    1ff2:	60 84       	ldd	r6, Z+8	; 0x08
    1ff4:	71 84       	ldd	r7, Z+9	; 0x09
		fp->fptr = nsect = 0;
    1ff6:	16 82       	std	Z+6, r1	; 0x06
    1ff8:	17 82       	std	Z+7, r1	; 0x07
    1ffa:	10 86       	std	Z+8, r1	; 0x08
    1ffc:	11 86       	std	Z+9, r1	; 0x09
		if (ofs) {
    1ffe:	c1 14       	cp	r12, r1
    2000:	d1 04       	cpc	r13, r1
    2002:	e1 04       	cpc	r14, r1
    2004:	f1 04       	cpc	r15, r1
    2006:	09 f4       	brne	.+2      	; 0x200a <f_lseek+0x8c>
    2008:	30 c1       	rjmp	.+608    	; 0x226a <f_lseek+0x2ec>
			bcs = (DWORD)fp->fs->csize * SS(fp->fs);	/* Cluster size (byte) */
    200a:	20 80       	ld	r2, Z
    200c:	31 80       	ldd	r3, Z+1	; 0x01
    200e:	f1 01       	movw	r30, r2
    2010:	82 80       	ldd	r8, Z+2	; 0x02
    2012:	91 2c       	mov	r9, r1
    2014:	a1 2c       	mov	r10, r1
    2016:	b1 2c       	mov	r11, r1
    2018:	07 2e       	mov	r0, r23
    201a:	79 e0       	ldi	r23, 0x09	; 9
    201c:	88 0c       	add	r8, r8
    201e:	99 1c       	adc	r9, r9
    2020:	aa 1c       	adc	r10, r10
    2022:	bb 1c       	adc	r11, r11
    2024:	7a 95       	dec	r23
    2026:	d1 f7       	brne	.-12     	; 0x201c <f_lseek+0x9e>
    2028:	70 2d       	mov	r23, r0
			if (ifptr > 0 &&
    202a:	41 14       	cp	r4, r1
    202c:	51 04       	cpc	r5, r1
    202e:	61 04       	cpc	r6, r1
    2030:	71 04       	cpc	r7, r1
    2032:	09 f4       	brne	.+2      	; 0x2036 <f_lseek+0xb8>
    2034:	3e c0       	rjmp	.+124    	; 0x20b2 <f_lseek+0x134>
				(ofs - 1) / bcs >= (ifptr - 1) / bcs) {	/* When seek to same or following cluster, */
    2036:	c7 01       	movw	r24, r14
    2038:	b6 01       	movw	r22, r12
    203a:	61 50       	subi	r22, 0x01	; 1
    203c:	71 09       	sbc	r23, r1
    203e:	81 09       	sbc	r24, r1
    2040:	91 09       	sbc	r25, r1
    2042:	a5 01       	movw	r20, r10
    2044:	94 01       	movw	r18, r8
    2046:	c4 d5       	rcall	.+2952   	; 0x2bd0 <__udivmodsi4>
    2048:	29 83       	std	Y+1, r18	; 0x01
    204a:	3a 83       	std	Y+2, r19	; 0x02
    204c:	4b 83       	std	Y+3, r20	; 0x03
    204e:	5c 83       	std	Y+4, r21	; 0x04
    2050:	f1 e0       	ldi	r31, 0x01	; 1
    2052:	4f 1a       	sub	r4, r31
    2054:	51 08       	sbc	r5, r1
    2056:	61 08       	sbc	r6, r1
    2058:	71 08       	sbc	r7, r1
    205a:	c3 01       	movw	r24, r6
    205c:	b2 01       	movw	r22, r4
    205e:	a5 01       	movw	r20, r10
    2060:	94 01       	movw	r18, r8
    2062:	b6 d5       	rcall	.+2924   	; 0x2bd0 <__udivmodsi4>

		ifptr = fp->fptr;
		fp->fptr = nsect = 0;
		if (ofs) {
			bcs = (DWORD)fp->fs->csize * SS(fp->fs);	/* Cluster size (byte) */
			if (ifptr > 0 &&
    2064:	89 81       	ldd	r24, Y+1	; 0x01
    2066:	9a 81       	ldd	r25, Y+2	; 0x02
    2068:	ab 81       	ldd	r26, Y+3	; 0x03
    206a:	bc 81       	ldd	r27, Y+4	; 0x04
    206c:	82 17       	cp	r24, r18
    206e:	93 07       	cpc	r25, r19
    2070:	a4 07       	cpc	r26, r20
    2072:	b5 07       	cpc	r27, r21
    2074:	f0 f0       	brcs	.+60     	; 0x20b2 <f_lseek+0x134>
				(ofs - 1) / bcs >= (ifptr - 1) / bcs) {	/* When seek to same or following cluster, */
				fp->fptr = (ifptr - 1) & ~(bcs - 1);	/* start from the current cluster */
    2076:	88 27       	eor	r24, r24
    2078:	99 27       	eor	r25, r25
    207a:	dc 01       	movw	r26, r24
    207c:	88 19       	sub	r24, r8
    207e:	99 09       	sbc	r25, r9
    2080:	aa 09       	sbc	r26, r10
    2082:	bb 09       	sbc	r27, r11
    2084:	48 22       	and	r4, r24
    2086:	59 22       	and	r5, r25
    2088:	6a 22       	and	r6, r26
    208a:	7b 22       	and	r7, r27
    208c:	ad 81       	ldd	r26, Y+5	; 0x05
    208e:	be 81       	ldd	r27, Y+6	; 0x06
    2090:	16 96       	adiw	r26, 0x06	; 6
    2092:	4d 92       	st	X+, r4
    2094:	5d 92       	st	X+, r5
    2096:	6d 92       	st	X+, r6
    2098:	7c 92       	st	X, r7
    209a:	19 97       	sbiw	r26, 0x09	; 9
				ofs -= fp->fptr;
    209c:	c4 18       	sub	r12, r4
    209e:	d5 08       	sbc	r13, r5
    20a0:	e6 08       	sbc	r14, r6
    20a2:	f7 08       	sbc	r15, r7
				clst = fp->clust;
    20a4:	52 96       	adiw	r26, 0x12	; 18
    20a6:	4d 91       	ld	r20, X+
    20a8:	5d 91       	ld	r21, X+
    20aa:	6d 91       	ld	r22, X+
    20ac:	7c 91       	ld	r23, X
    20ae:	55 97       	sbiw	r26, 0x15	; 21
    20b0:	3c c0       	rjmp	.+120    	; 0x212a <f_lseek+0x1ac>
			} else {									/* When seek to back cluster, */
				clst = fp->sclust;						/* start from the first cluster */
    20b2:	ed 81       	ldd	r30, Y+5	; 0x05
    20b4:	fe 81       	ldd	r31, Y+6	; 0x06
    20b6:	46 85       	ldd	r20, Z+14	; 0x0e
    20b8:	57 85       	ldd	r21, Z+15	; 0x0f
    20ba:	60 89       	ldd	r22, Z+16	; 0x10
    20bc:	71 89       	ldd	r23, Z+17	; 0x11
#if !_FS_READONLY
				if (clst == 0) {						/* If no cluster chain, create a new chain */
    20be:	41 15       	cp	r20, r1
    20c0:	51 05       	cpc	r21, r1
    20c2:	61 05       	cpc	r22, r1
    20c4:	71 05       	cpc	r23, r1
    20c6:	59 f5       	brne	.+86     	; 0x211e <f_lseek+0x1a0>
					clst = create_chain(fp->fs, 0);
    20c8:	40 e0       	ldi	r20, 0x00	; 0
    20ca:	50 e0       	ldi	r21, 0x00	; 0
    20cc:	ba 01       	movw	r22, r20
    20ce:	c1 01       	movw	r24, r2
    20d0:	9a d8       	rcall	.-3788   	; 0x1206 <_ZL12create_chainP5FATFSm>
    20d2:	ab 01       	movw	r20, r22
    20d4:	bc 01       	movw	r22, r24
					if (clst == 1) ABORT(fp->fs, FR_INT_ERR);
    20d6:	41 30       	cpi	r20, 0x01	; 1
    20d8:	51 05       	cpc	r21, r1
    20da:	61 05       	cpc	r22, r1
    20dc:	71 05       	cpc	r23, r1
    20de:	51 f4       	brne	.+20     	; 0x20f4 <f_lseek+0x176>
    20e0:	ad 81       	ldd	r26, Y+5	; 0x05
    20e2:	be 81       	ldd	r27, Y+6	; 0x06
    20e4:	14 96       	adiw	r26, 0x04	; 4
    20e6:	8c 91       	ld	r24, X
    20e8:	14 97       	sbiw	r26, 0x04	; 4
    20ea:	80 68       	ori	r24, 0x80	; 128
    20ec:	14 96       	adiw	r26, 0x04	; 4
    20ee:	8c 93       	st	X, r24
    20f0:	82 e0       	ldi	r24, 0x02	; 2
    20f2:	fa c0       	rjmp	.+500    	; 0x22e8 <f_lseek+0x36a>
					if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
    20f4:	4f 3f       	cpi	r20, 0xFF	; 255
    20f6:	bf ef       	ldi	r27, 0xFF	; 255
    20f8:	5b 07       	cpc	r21, r27
    20fa:	6b 07       	cpc	r22, r27
    20fc:	7b 07       	cpc	r23, r27
    20fe:	39 f4       	brne	.+14     	; 0x210e <f_lseek+0x190>
    2100:	ed 81       	ldd	r30, Y+5	; 0x05
    2102:	fe 81       	ldd	r31, Y+6	; 0x06
    2104:	84 81       	ldd	r24, Z+4	; 0x04
    2106:	80 68       	ori	r24, 0x80	; 128
    2108:	84 83       	std	Z+4, r24	; 0x04
    210a:	81 e0       	ldi	r24, 0x01	; 1
    210c:	ed c0       	rjmp	.+474    	; 0x22e8 <f_lseek+0x36a>
					fp->sclust = clst;
    210e:	ad 81       	ldd	r26, Y+5	; 0x05
    2110:	be 81       	ldd	r27, Y+6	; 0x06
    2112:	1e 96       	adiw	r26, 0x0e	; 14
    2114:	4d 93       	st	X+, r20
    2116:	5d 93       	st	X+, r21
    2118:	6d 93       	st	X+, r22
    211a:	7c 93       	st	X, r23
    211c:	51 97       	sbiw	r26, 0x11	; 17
				}
#endif
				fp->clust = clst;
    211e:	ed 81       	ldd	r30, Y+5	; 0x05
    2120:	fe 81       	ldd	r31, Y+6	; 0x06
    2122:	42 8b       	std	Z+18, r20	; 0x12
    2124:	53 8b       	std	Z+19, r21	; 0x13
    2126:	64 8b       	std	Z+20, r22	; 0x14
    2128:	75 8b       	std	Z+21, r23	; 0x15
			}
			if (clst != 0) {
    212a:	41 15       	cp	r20, r1
    212c:	51 05       	cpc	r21, r1
    212e:	61 05       	cpc	r22, r1
    2130:	71 05       	cpc	r23, r1
    2132:	09 f4       	brne	.+2      	; 0x2136 <f_lseek+0x1b8>
    2134:	9e c0       	rjmp	.+316    	; 0x2272 <f_lseek+0x2f4>
				while (ofs > bcs) {						/* Cluster following loop */
    2136:	8c 14       	cp	r8, r12
    2138:	9d 04       	cpc	r9, r13
    213a:	ae 04       	cpc	r10, r14
    213c:	bf 04       	cpc	r11, r15
    213e:	08 f0       	brcs	.+2      	; 0x2142 <f_lseek+0x1c4>
    2140:	5c c0       	rjmp	.+184    	; 0x21fa <f_lseek+0x27c>
#if !_FS_READONLY
					if (fp->flag & FA_WRITE) {			/* Check if in write mode or not */
    2142:	ad 81       	ldd	r26, Y+5	; 0x05
    2144:	be 81       	ldd	r27, Y+6	; 0x06
    2146:	14 96       	adiw	r26, 0x04	; 4
    2148:	8c 91       	ld	r24, X
    214a:	14 97       	sbiw	r26, 0x04	; 4
    214c:	81 ff       	sbrs	r24, 1
						clst = create_chain(fp->fs, clst);	/* Force stretch if in write mode */
    214e:	0d c0       	rjmp	.+26     	; 0x216a <f_lseek+0x1ec>
    2150:	8d 91       	ld	r24, X+
    2152:	9c 91       	ld	r25, X
    2154:	58 d8       	rcall	.-3920   	; 0x1206 <_ZL12create_chainP5FATFSm>
    2156:	ab 01       	movw	r20, r22
    2158:	bc 01       	movw	r22, r24
						if (clst == 0) {				/* When disk gets full, clip file size */
    215a:	41 15       	cp	r20, r1
    215c:	51 05       	cpc	r21, r1
    215e:	61 05       	cpc	r22, r1
    2160:	71 05       	cpc	r23, r1
    2162:	59 f4       	brne	.+22     	; 0x217a <f_lseek+0x1fc>
							ofs = bcs; break;
    2164:	75 01       	movw	r14, r10
    2166:	64 01       	movw	r12, r8
    2168:	48 c0       	rjmp	.+144    	; 0x21fa <f_lseek+0x27c>
						}
					} else
#endif
						clst = get_fat(fp->fs, clst);	/* Follow cluster chain if not in write mode */
    216a:	ad 81       	ldd	r26, Y+5	; 0x05
    216c:	be 81       	ldd	r27, Y+6	; 0x06
    216e:	8d 91       	ld	r24, X+
    2170:	9c 91       	ld	r25, X
    2172:	0e 94 3d 06 	call	0xc7a	; 0xc7a <_Z7get_fatP5FATFSm>
    2176:	ab 01       	movw	r20, r22
    2178:	bc 01       	movw	r22, r24
					if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
    217a:	4f 3f       	cpi	r20, 0xFF	; 255
    217c:	bf ef       	ldi	r27, 0xFF	; 255
    217e:	5b 07       	cpc	r21, r27
    2180:	6b 07       	cpc	r22, r27
    2182:	7b 07       	cpc	r23, r27
    2184:	39 f4       	brne	.+14     	; 0x2194 <f_lseek+0x216>
    2186:	ed 81       	ldd	r30, Y+5	; 0x05
    2188:	fe 81       	ldd	r31, Y+6	; 0x06
    218a:	84 81       	ldd	r24, Z+4	; 0x04
    218c:	80 68       	ori	r24, 0x80	; 128
    218e:	84 83       	std	Z+4, r24	; 0x04
    2190:	81 e0       	ldi	r24, 0x01	; 1
    2192:	aa c0       	rjmp	.+340    	; 0x22e8 <f_lseek+0x36a>
					if (clst <= 1 || clst >= fp->fs->n_fatent) ABORT(fp->fs, FR_INT_ERR);
    2194:	42 30       	cpi	r20, 0x02	; 2
    2196:	51 05       	cpc	r21, r1
    2198:	61 05       	cpc	r22, r1
    219a:	71 05       	cpc	r23, r1
    219c:	68 f0       	brcs	.+26     	; 0x21b8 <f_lseek+0x23a>
    219e:	ad 81       	ldd	r26, Y+5	; 0x05
    21a0:	be 81       	ldd	r27, Y+6	; 0x06
    21a2:	ed 91       	ld	r30, X+
    21a4:	fc 91       	ld	r31, X
    21a6:	86 89       	ldd	r24, Z+22	; 0x16
    21a8:	97 89       	ldd	r25, Z+23	; 0x17
    21aa:	a0 8d       	ldd	r26, Z+24	; 0x18
    21ac:	b1 8d       	ldd	r27, Z+25	; 0x19
    21ae:	48 17       	cp	r20, r24
    21b0:	59 07       	cpc	r21, r25
    21b2:	6a 07       	cpc	r22, r26
    21b4:	7b 07       	cpc	r23, r27
    21b6:	38 f0       	brcs	.+14     	; 0x21c6 <f_lseek+0x248>
    21b8:	ed 81       	ldd	r30, Y+5	; 0x05
    21ba:	fe 81       	ldd	r31, Y+6	; 0x06
    21bc:	84 81       	ldd	r24, Z+4	; 0x04
    21be:	80 68       	ori	r24, 0x80	; 128
    21c0:	84 83       	std	Z+4, r24	; 0x04
    21c2:	82 e0       	ldi	r24, 0x02	; 2
    21c4:	91 c0       	rjmp	.+290    	; 0x22e8 <f_lseek+0x36a>
					fp->clust = clst;
    21c6:	ad 81       	ldd	r26, Y+5	; 0x05
    21c8:	be 81       	ldd	r27, Y+6	; 0x06
    21ca:	52 96       	adiw	r26, 0x12	; 18
    21cc:	4d 93       	st	X+, r20
    21ce:	5d 93       	st	X+, r21
    21d0:	6d 93       	st	X+, r22
    21d2:	7c 93       	st	X, r23
    21d4:	55 97       	sbiw	r26, 0x15	; 21
					fp->fptr += bcs;
    21d6:	fd 01       	movw	r30, r26
    21d8:	86 81       	ldd	r24, Z+6	; 0x06
    21da:	97 81       	ldd	r25, Z+7	; 0x07
    21dc:	a0 85       	ldd	r26, Z+8	; 0x08
    21de:	b1 85       	ldd	r27, Z+9	; 0x09
    21e0:	88 0d       	add	r24, r8
    21e2:	99 1d       	adc	r25, r9
    21e4:	aa 1d       	adc	r26, r10
    21e6:	bb 1d       	adc	r27, r11
    21e8:	86 83       	std	Z+6, r24	; 0x06
    21ea:	97 83       	std	Z+7, r25	; 0x07
    21ec:	a0 87       	std	Z+8, r26	; 0x08
    21ee:	b1 87       	std	Z+9, r27	; 0x09
					ofs -= bcs;
    21f0:	c8 18       	sub	r12, r8
    21f2:	d9 08       	sbc	r13, r9
    21f4:	ea 08       	sbc	r14, r10
    21f6:	fb 08       	sbc	r15, r11
				}
#endif
				fp->clust = clst;
			}
			if (clst != 0) {
				while (ofs > bcs) {						/* Cluster following loop */
    21f8:	9e cf       	rjmp	.-196    	; 0x2136 <f_lseek+0x1b8>
					if (clst <= 1 || clst >= fp->fs->n_fatent) ABORT(fp->fs, FR_INT_ERR);
					fp->clust = clst;
					fp->fptr += bcs;
					ofs -= bcs;
				}
				fp->fptr += ofs;
    21fa:	ed 81       	ldd	r30, Y+5	; 0x05
    21fc:	fe 81       	ldd	r31, Y+6	; 0x06
    21fe:	86 81       	ldd	r24, Z+6	; 0x06
    2200:	97 81       	ldd	r25, Z+7	; 0x07
    2202:	a0 85       	ldd	r26, Z+8	; 0x08
    2204:	b1 85       	ldd	r27, Z+9	; 0x09
    2206:	8c 0d       	add	r24, r12
    2208:	9d 1d       	adc	r25, r13
    220a:	ae 1d       	adc	r26, r14
    220c:	bf 1d       	adc	r27, r15
    220e:	86 83       	std	Z+6, r24	; 0x06
    2210:	97 83       	std	Z+7, r25	; 0x07
    2212:	a0 87       	std	Z+8, r26	; 0x08
    2214:	b1 87       	std	Z+9, r27	; 0x09
				if (ofs % SS(fp->fs)) {
    2216:	d7 01       	movw	r26, r14
    2218:	c6 01       	movw	r24, r12
    221a:	91 70       	andi	r25, 0x01	; 1
    221c:	aa 27       	eor	r26, r26
    221e:	bb 27       	eor	r27, r27
    2220:	89 2b       	or	r24, r25
    2222:	8a 2b       	or	r24, r26
    2224:	8b 2b       	or	r24, r27
    2226:	49 f1       	breq	.+82     	; 0x227a <f_lseek+0x2fc>
					nsect = clust2sect(fp->fs, clst);	/* Current sector */
    2228:	80 81       	ld	r24, Z
    222a:	91 81       	ldd	r25, Z+1	; 0x01
    222c:	0e 94 15 06 	call	0xc2a	; 0xc2a <_Z10clust2sectP5FATFSm>
					if (!nsect) ABORT(fp->fs, FR_INT_ERR);
    2230:	61 15       	cp	r22, r1
    2232:	71 05       	cpc	r23, r1
    2234:	81 05       	cpc	r24, r1
    2236:	91 05       	cpc	r25, r1
    2238:	51 f4       	brne	.+20     	; 0x224e <f_lseek+0x2d0>
    223a:	ad 81       	ldd	r26, Y+5	; 0x05
    223c:	be 81       	ldd	r27, Y+6	; 0x06
    223e:	14 96       	adiw	r26, 0x04	; 4
    2240:	8c 91       	ld	r24, X
    2242:	14 97       	sbiw	r26, 0x04	; 4
    2244:	80 68       	ori	r24, 0x80	; 128
    2246:	14 96       	adiw	r26, 0x04	; 4
    2248:	8c 93       	st	X, r24
    224a:	82 e0       	ldi	r24, 0x02	; 2
    224c:	4d c0       	rjmp	.+154    	; 0x22e8 <f_lseek+0x36a>
					nsect += ofs / SS(fp->fs);
    224e:	0b 2e       	mov	r0, r27
    2250:	b9 e0       	ldi	r27, 0x09	; 9
    2252:	f6 94       	lsr	r15
    2254:	e7 94       	ror	r14
    2256:	d7 94       	ror	r13
    2258:	c7 94       	ror	r12
    225a:	ba 95       	dec	r27
    225c:	d1 f7       	brne	.-12     	; 0x2252 <f_lseek+0x2d4>
    225e:	b0 2d       	mov	r27, r0
    2260:	c6 0e       	add	r12, r22
    2262:	d7 1e       	adc	r13, r23
    2264:	e8 1e       	adc	r14, r24
    2266:	f9 1e       	adc	r15, r25
    2268:	0b c0       	rjmp	.+22     	; 0x2280 <f_lseek+0x302>
			 && !(fp->flag & FA_WRITE)
#endif
			) ofs = fp->fsize;

		ifptr = fp->fptr;
		fp->fptr = nsect = 0;
    226a:	c1 2c       	mov	r12, r1
    226c:	d1 2c       	mov	r13, r1
    226e:	76 01       	movw	r14, r12
    2270:	07 c0       	rjmp	.+14     	; 0x2280 <f_lseek+0x302>
    2272:	c1 2c       	mov	r12, r1
    2274:	d1 2c       	mov	r13, r1
    2276:	76 01       	movw	r14, r12
    2278:	03 c0       	rjmp	.+6      	; 0x2280 <f_lseek+0x302>
    227a:	c1 2c       	mov	r12, r1
    227c:	d1 2c       	mov	r13, r1
    227e:	76 01       	movw	r14, r12
					if (!nsect) ABORT(fp->fs, FR_INT_ERR);
					nsect += ofs / SS(fp->fs);
				}
			}
		}
		if (fp->fptr % SS(fp->fs) && nsect != fp->dsect) {	/* Fill sector cache if needed */
    2280:	ed 81       	ldd	r30, Y+5	; 0x05
    2282:	fe 81       	ldd	r31, Y+6	; 0x06
    2284:	86 81       	ldd	r24, Z+6	; 0x06
    2286:	97 81       	ldd	r25, Z+7	; 0x07
    2288:	a0 85       	ldd	r26, Z+8	; 0x08
    228a:	b1 85       	ldd	r27, Z+9	; 0x09
    228c:	ac 01       	movw	r20, r24
    228e:	bd 01       	movw	r22, r26
    2290:	51 70       	andi	r21, 0x01	; 1
    2292:	66 27       	eor	r22, r22
    2294:	77 27       	eor	r23, r23
    2296:	45 2b       	or	r20, r21
    2298:	46 2b       	or	r20, r22
    229a:	47 2b       	or	r20, r23
    229c:	69 f0       	breq	.+26     	; 0x22b8 <f_lseek+0x33a>
    229e:	46 89       	ldd	r20, Z+22	; 0x16
    22a0:	57 89       	ldd	r21, Z+23	; 0x17
    22a2:	60 8d       	ldd	r22, Z+24	; 0x18
    22a4:	71 8d       	ldd	r23, Z+25	; 0x19
    22a6:	c4 16       	cp	r12, r20
    22a8:	d5 06       	cpc	r13, r21
    22aa:	e6 06       	cpc	r14, r22
    22ac:	f7 06       	cpc	r15, r23
    22ae:	21 f0       	breq	.+8      	; 0x22b8 <f_lseek+0x33a>
			}
#endif
			if (disk_read(fp->fs->drv, fp->buf, nsect, 1) != RES_OK)	/* Fill sector cache */
				ABORT(fp->fs, FR_DISK_ERR);
#endif
			fp->dsect = nsect;
    22b0:	c6 8a       	std	Z+22, r12	; 0x16
    22b2:	d7 8a       	std	Z+23, r13	; 0x17
    22b4:	e0 8e       	std	Z+24, r14	; 0x18
    22b6:	f1 8e       	std	Z+25, r15	; 0x19
		}
#if !_FS_READONLY
		if (fp->fptr > fp->fsize) {			/* Set file change flag if the file size is extended */
    22b8:	ed 81       	ldd	r30, Y+5	; 0x05
    22ba:	fe 81       	ldd	r31, Y+6	; 0x06
    22bc:	42 85       	ldd	r20, Z+10	; 0x0a
    22be:	53 85       	ldd	r21, Z+11	; 0x0b
    22c0:	64 85       	ldd	r22, Z+12	; 0x0c
    22c2:	75 85       	ldd	r23, Z+13	; 0x0d
    22c4:	48 17       	cp	r20, r24
    22c6:	59 07       	cpc	r21, r25
    22c8:	6a 07       	cpc	r22, r26
    22ca:	7b 07       	cpc	r23, r27
    22cc:	60 f4       	brcc	.+24     	; 0x22e6 <f_lseek+0x368>
			fp->fsize = fp->fptr;
    22ce:	82 87       	std	Z+10, r24	; 0x0a
    22d0:	93 87       	std	Z+11, r25	; 0x0b
    22d2:	a4 87       	std	Z+12, r26	; 0x0c
    22d4:	b5 87       	std	Z+13, r27	; 0x0d
			fp->flag |= FA__WRITTEN;
    22d6:	84 81       	ldd	r24, Z+4	; 0x04
    22d8:	80 62       	ori	r24, 0x20	; 32
    22da:	84 83       	std	Z+4, r24	; 0x04
		}
#endif
	}

	LEAVE_FF(fp->fs, res);
    22dc:	81 2f       	mov	r24, r17
    22de:	04 c0       	rjmp	.+8      	; 0x22e8 <f_lseek+0x36a>
    22e0:	03 c0       	rjmp	.+6      	; 0x22e8 <f_lseek+0x36a>


	res = validate(fp);					/* Check validity of the object */
	if (res != FR_OK) LEAVE_FF(fp->fs, res);
	if (fp->flag & FA__ERROR)			/* Check abort flag */
		LEAVE_FF(fp->fs, FR_INT_ERR);
    22e2:	82 e0       	ldi	r24, 0x02	; 2
    22e4:	01 c0       	rjmp	.+2      	; 0x22e8 <f_lseek+0x36a>
			fp->flag |= FA__WRITTEN;
		}
#endif
	}

	LEAVE_FF(fp->fs, res);
    22e6:	81 2f       	mov	r24, r17
}
    22e8:	26 96       	adiw	r28, 0x06	; 6
    22ea:	0f b6       	in	r0, 0x3f	; 63
    22ec:	f8 94       	cli
    22ee:	de bf       	out	0x3e, r29	; 62
    22f0:	0f be       	out	0x3f, r0	; 63
    22f2:	cd bf       	out	0x3d, r28	; 61
    22f4:	df 91       	pop	r29
    22f6:	cf 91       	pop	r28
    22f8:	1f 91       	pop	r17
    22fa:	ff 90       	pop	r15
    22fc:	ef 90       	pop	r14
    22fe:	df 90       	pop	r13
    2300:	cf 90       	pop	r12
    2302:	bf 90       	pop	r11
    2304:	af 90       	pop	r10
    2306:	9f 90       	pop	r9
    2308:	8f 90       	pop	r8
    230a:	7f 90       	pop	r7
    230c:	6f 90       	pop	r6
    230e:	5f 90       	pop	r5
    2310:	4f 90       	pop	r4
    2312:	3f 90       	pop	r3
    2314:	2f 90       	pop	r2
    2316:	08 95       	ret

00002318 <_ZL6dly_usj>:

static
void dly_us (UINT n)	/* Delay n microseconds (avr-gcc -Os) */
{
	do {
		PINB;
    2318:	23 b1       	in	r18, 0x03	; 3


static
void dly_us (UINT n)	/* Delay n microseconds (avr-gcc -Os) */
{
	do {
    231a:	01 97       	sbiw	r24, 0x01	; 1
    231c:	e9 f7       	brne	.-6      	; 0x2318 <_ZL6dly_usj>
#endif
#if F_CPU >= 14000000
#error Too fast clock
#endif
	} while (--n);
}
    231e:	08 95       	ret

00002320 <_ZL8xmit_mmcPKhj>:
static
void xmit_mmc (
	const BYTE* buff,	/* Data to be sent */
	UINT bc				/* Number of bytes to send */
)
{
    2320:	fc 01       	movw	r30, r24
	BYTE d;


	do {
		d = *buff++;	/* Get a byte to be sent */
    2322:	9f 01       	movw	r18, r30
    2324:	2f 5f       	subi	r18, 0xFF	; 255
    2326:	3f 4f       	sbci	r19, 0xFF	; 255
    2328:	80 81       	ld	r24, Z
		if (d & 0x80) DI_H(); else DI_L();	/* bit7 */
    232a:	88 23       	and	r24, r24
    232c:	24 f4       	brge	.+8      	; 0x2336 <_ZL8xmit_mmcPKhj+0x16>
    232e:	95 b1       	in	r25, 0x05	; 5
    2330:	90 62       	ori	r25, 0x20	; 32
    2332:	95 b9       	out	0x05, r25	; 5
    2334:	03 c0       	rjmp	.+6      	; 0x233c <_ZL8xmit_mmcPKhj+0x1c>
    2336:	95 b1       	in	r25, 0x05	; 5
    2338:	9f 7d       	andi	r25, 0xDF	; 223
    233a:	95 b9       	out	0x05, r25	; 5
		CK_H(); CK_L();
    233c:	95 b1       	in	r25, 0x05	; 5
    233e:	90 68       	ori	r25, 0x80	; 128
    2340:	95 b9       	out	0x05, r25	; 5
    2342:	95 b1       	in	r25, 0x05	; 5
    2344:	9f 77       	andi	r25, 0x7F	; 127
    2346:	95 b9       	out	0x05, r25	; 5
		if (d & 0x40) DI_H(); else DI_L();	/* bit6 */
    2348:	86 ff       	sbrs	r24, 6
    234a:	04 c0       	rjmp	.+8      	; 0x2354 <_ZL8xmit_mmcPKhj+0x34>
    234c:	95 b1       	in	r25, 0x05	; 5
    234e:	90 62       	ori	r25, 0x20	; 32
    2350:	95 b9       	out	0x05, r25	; 5
    2352:	03 c0       	rjmp	.+6      	; 0x235a <_ZL8xmit_mmcPKhj+0x3a>
    2354:	95 b1       	in	r25, 0x05	; 5
    2356:	9f 7d       	andi	r25, 0xDF	; 223
    2358:	95 b9       	out	0x05, r25	; 5
		CK_H(); CK_L();
    235a:	95 b1       	in	r25, 0x05	; 5
    235c:	90 68       	ori	r25, 0x80	; 128
    235e:	95 b9       	out	0x05, r25	; 5
    2360:	95 b1       	in	r25, 0x05	; 5
    2362:	9f 77       	andi	r25, 0x7F	; 127
    2364:	95 b9       	out	0x05, r25	; 5
		if (d & 0x20) DI_H(); else DI_L();	/* bit5 */
    2366:	85 ff       	sbrs	r24, 5
    2368:	04 c0       	rjmp	.+8      	; 0x2372 <_ZL8xmit_mmcPKhj+0x52>
    236a:	95 b1       	in	r25, 0x05	; 5
    236c:	90 62       	ori	r25, 0x20	; 32
    236e:	95 b9       	out	0x05, r25	; 5
    2370:	03 c0       	rjmp	.+6      	; 0x2378 <_ZL8xmit_mmcPKhj+0x58>
    2372:	95 b1       	in	r25, 0x05	; 5
    2374:	9f 7d       	andi	r25, 0xDF	; 223
    2376:	95 b9       	out	0x05, r25	; 5
		CK_H(); CK_L();
    2378:	95 b1       	in	r25, 0x05	; 5
    237a:	90 68       	ori	r25, 0x80	; 128
    237c:	95 b9       	out	0x05, r25	; 5
    237e:	95 b1       	in	r25, 0x05	; 5
    2380:	9f 77       	andi	r25, 0x7F	; 127
    2382:	95 b9       	out	0x05, r25	; 5
		if (d & 0x10) DI_H(); else DI_L();	/* bit4 */
    2384:	84 ff       	sbrs	r24, 4
    2386:	04 c0       	rjmp	.+8      	; 0x2390 <_ZL8xmit_mmcPKhj+0x70>
    2388:	95 b1       	in	r25, 0x05	; 5
    238a:	90 62       	ori	r25, 0x20	; 32
    238c:	95 b9       	out	0x05, r25	; 5
    238e:	03 c0       	rjmp	.+6      	; 0x2396 <_ZL8xmit_mmcPKhj+0x76>
    2390:	95 b1       	in	r25, 0x05	; 5
    2392:	9f 7d       	andi	r25, 0xDF	; 223
    2394:	95 b9       	out	0x05, r25	; 5
		CK_H(); CK_L();
    2396:	95 b1       	in	r25, 0x05	; 5
    2398:	90 68       	ori	r25, 0x80	; 128
    239a:	95 b9       	out	0x05, r25	; 5
    239c:	95 b1       	in	r25, 0x05	; 5
    239e:	9f 77       	andi	r25, 0x7F	; 127
    23a0:	95 b9       	out	0x05, r25	; 5
		if (d & 0x08) DI_H(); else DI_L();	/* bit3 */
    23a2:	83 ff       	sbrs	r24, 3
    23a4:	04 c0       	rjmp	.+8      	; 0x23ae <_ZL8xmit_mmcPKhj+0x8e>
    23a6:	95 b1       	in	r25, 0x05	; 5
    23a8:	90 62       	ori	r25, 0x20	; 32
    23aa:	95 b9       	out	0x05, r25	; 5
    23ac:	03 c0       	rjmp	.+6      	; 0x23b4 <_ZL8xmit_mmcPKhj+0x94>
    23ae:	95 b1       	in	r25, 0x05	; 5
    23b0:	9f 7d       	andi	r25, 0xDF	; 223
    23b2:	95 b9       	out	0x05, r25	; 5
		CK_H(); CK_L();
    23b4:	95 b1       	in	r25, 0x05	; 5
    23b6:	90 68       	ori	r25, 0x80	; 128
    23b8:	95 b9       	out	0x05, r25	; 5
    23ba:	95 b1       	in	r25, 0x05	; 5
    23bc:	9f 77       	andi	r25, 0x7F	; 127
    23be:	95 b9       	out	0x05, r25	; 5
		if (d & 0x04) DI_H(); else DI_L();	/* bit2 */
    23c0:	82 ff       	sbrs	r24, 2
    23c2:	04 c0       	rjmp	.+8      	; 0x23cc <_ZL8xmit_mmcPKhj+0xac>
    23c4:	95 b1       	in	r25, 0x05	; 5
    23c6:	90 62       	ori	r25, 0x20	; 32
    23c8:	95 b9       	out	0x05, r25	; 5
    23ca:	03 c0       	rjmp	.+6      	; 0x23d2 <_ZL8xmit_mmcPKhj+0xb2>
    23cc:	95 b1       	in	r25, 0x05	; 5
    23ce:	9f 7d       	andi	r25, 0xDF	; 223
    23d0:	95 b9       	out	0x05, r25	; 5
		CK_H(); CK_L();
    23d2:	95 b1       	in	r25, 0x05	; 5
    23d4:	90 68       	ori	r25, 0x80	; 128
    23d6:	95 b9       	out	0x05, r25	; 5
    23d8:	95 b1       	in	r25, 0x05	; 5
    23da:	9f 77       	andi	r25, 0x7F	; 127
    23dc:	95 b9       	out	0x05, r25	; 5
		if (d & 0x02) DI_H(); else DI_L();	/* bit1 */
    23de:	81 ff       	sbrs	r24, 1
    23e0:	04 c0       	rjmp	.+8      	; 0x23ea <_ZL8xmit_mmcPKhj+0xca>
    23e2:	95 b1       	in	r25, 0x05	; 5
    23e4:	90 62       	ori	r25, 0x20	; 32
    23e6:	95 b9       	out	0x05, r25	; 5
    23e8:	03 c0       	rjmp	.+6      	; 0x23f0 <_ZL8xmit_mmcPKhj+0xd0>
    23ea:	95 b1       	in	r25, 0x05	; 5
    23ec:	9f 7d       	andi	r25, 0xDF	; 223
    23ee:	95 b9       	out	0x05, r25	; 5
		CK_H(); CK_L();
    23f0:	95 b1       	in	r25, 0x05	; 5
    23f2:	90 68       	ori	r25, 0x80	; 128
    23f4:	95 b9       	out	0x05, r25	; 5
    23f6:	95 b1       	in	r25, 0x05	; 5
    23f8:	9f 77       	andi	r25, 0x7F	; 127
    23fa:	95 b9       	out	0x05, r25	; 5
		if (d & 0x01) DI_H(); else DI_L();	/* bit0 */
    23fc:	80 ff       	sbrs	r24, 0
    23fe:	04 c0       	rjmp	.+8      	; 0x2408 <_ZL8xmit_mmcPKhj+0xe8>
    2400:	85 b1       	in	r24, 0x05	; 5
    2402:	80 62       	ori	r24, 0x20	; 32
    2404:	85 b9       	out	0x05, r24	; 5
    2406:	03 c0       	rjmp	.+6      	; 0x240e <_ZL8xmit_mmcPKhj+0xee>
    2408:	85 b1       	in	r24, 0x05	; 5
    240a:	8f 7d       	andi	r24, 0xDF	; 223
    240c:	85 b9       	out	0x05, r24	; 5
		CK_H(); CK_L();
    240e:	85 b1       	in	r24, 0x05	; 5
    2410:	80 68       	ori	r24, 0x80	; 128
    2412:	85 b9       	out	0x05, r24	; 5
    2414:	85 b1       	in	r24, 0x05	; 5
    2416:	8f 77       	andi	r24, 0x7F	; 127
    2418:	85 b9       	out	0x05, r24	; 5
)
{
	BYTE d;


	do {
    241a:	61 50       	subi	r22, 0x01	; 1
    241c:	71 09       	sbc	r23, r1
		d = *buff++;	/* Get a byte to be sent */
    241e:	f9 01       	movw	r30, r18
)
{
	BYTE d;


	do {
    2420:	09 f0       	breq	.+2      	; 0x2424 <_ZL8xmit_mmcPKhj+0x104>
    2422:	7f cf       	rjmp	.-258    	; 0x2322 <_ZL8xmit_mmcPKhj+0x2>
		if (d & 0x02) DI_H(); else DI_L();	/* bit1 */
		CK_H(); CK_L();
		if (d & 0x01) DI_H(); else DI_L();	/* bit0 */
		CK_H(); CK_L();
	} while (--bc);
}
    2424:	08 95       	ret

00002426 <_ZL8rcvr_mmcPhj>:
static
void rcvr_mmc (
	BYTE *buff,	/* Pointer to read buffer */
	UINT bc		/* Number of bytes to receive */
)
{
    2426:	fc 01       	movw	r30, r24
	BYTE r;


	DI_H();	/* Send 0xFF */
    2428:	85 b1       	in	r24, 0x05	; 5
    242a:	80 62       	ori	r24, 0x20	; 32
    242c:	85 b9       	out	0x05, r24	; 5
    242e:	01 c0       	rjmp	.+2      	; 0x2432 <_ZL8rcvr_mmcPhj+0xc>
		CK_H(); CK_L();
		r <<= 1; if (DO) r++;	/* bit1 */
		CK_H(); CK_L();
		r <<= 1; if (DO) r++;	/* bit0 */
		CK_H(); CK_L();
		*buff++ = r;			/* Store a received byte */
    2430:	f9 01       	movw	r30, r18


	DI_H();	/* Send 0xFF */

	do {
		r = 0;	 if (DO) r++;	/* bit7 */
    2432:	1e 99       	sbic	0x03, 6	; 3
    2434:	02 c0       	rjmp	.+4      	; 0x243a <_ZL8rcvr_mmcPhj+0x14>
    2436:	90 e0       	ldi	r25, 0x00	; 0
    2438:	01 c0       	rjmp	.+2      	; 0x243c <_ZL8rcvr_mmcPhj+0x16>
    243a:	91 e0       	ldi	r25, 0x01	; 1
		CK_H(); CK_L();
    243c:	85 b1       	in	r24, 0x05	; 5
    243e:	80 68       	ori	r24, 0x80	; 128
    2440:	85 b9       	out	0x05, r24	; 5
    2442:	85 b1       	in	r24, 0x05	; 5
    2444:	8f 77       	andi	r24, 0x7F	; 127
    2446:	85 b9       	out	0x05, r24	; 5
		r <<= 1; if (DO) r++;	/* bit6 */
    2448:	99 0f       	add	r25, r25
    244a:	1e 99       	sbic	0x03, 6	; 3
    244c:	9f 5f       	subi	r25, 0xFF	; 255
		CK_H(); CK_L();
    244e:	85 b1       	in	r24, 0x05	; 5
    2450:	80 68       	ori	r24, 0x80	; 128
    2452:	85 b9       	out	0x05, r24	; 5
    2454:	85 b1       	in	r24, 0x05	; 5
    2456:	8f 77       	andi	r24, 0x7F	; 127
    2458:	85 b9       	out	0x05, r24	; 5
		r <<= 1; if (DO) r++;	/* bit5 */
    245a:	99 0f       	add	r25, r25
    245c:	1e 99       	sbic	0x03, 6	; 3
    245e:	9f 5f       	subi	r25, 0xFF	; 255
		CK_H(); CK_L();
    2460:	85 b1       	in	r24, 0x05	; 5
    2462:	80 68       	ori	r24, 0x80	; 128
    2464:	85 b9       	out	0x05, r24	; 5
    2466:	85 b1       	in	r24, 0x05	; 5
    2468:	8f 77       	andi	r24, 0x7F	; 127
    246a:	85 b9       	out	0x05, r24	; 5
		r <<= 1; if (DO) r++;	/* bit4 */
    246c:	99 0f       	add	r25, r25
    246e:	1e 99       	sbic	0x03, 6	; 3
    2470:	9f 5f       	subi	r25, 0xFF	; 255
		CK_H(); CK_L();
    2472:	85 b1       	in	r24, 0x05	; 5
    2474:	80 68       	ori	r24, 0x80	; 128
    2476:	85 b9       	out	0x05, r24	; 5
    2478:	85 b1       	in	r24, 0x05	; 5
    247a:	8f 77       	andi	r24, 0x7F	; 127
    247c:	85 b9       	out	0x05, r24	; 5
		r <<= 1; if (DO) r++;	/* bit3 */
    247e:	99 0f       	add	r25, r25
    2480:	1e 99       	sbic	0x03, 6	; 3
    2482:	9f 5f       	subi	r25, 0xFF	; 255
		CK_H(); CK_L();
    2484:	85 b1       	in	r24, 0x05	; 5
    2486:	80 68       	ori	r24, 0x80	; 128
    2488:	85 b9       	out	0x05, r24	; 5
    248a:	85 b1       	in	r24, 0x05	; 5
    248c:	8f 77       	andi	r24, 0x7F	; 127
    248e:	85 b9       	out	0x05, r24	; 5
		r <<= 1; if (DO) r++;	/* bit2 */
    2490:	99 0f       	add	r25, r25
    2492:	1e 99       	sbic	0x03, 6	; 3
    2494:	9f 5f       	subi	r25, 0xFF	; 255
		CK_H(); CK_L();
    2496:	85 b1       	in	r24, 0x05	; 5
    2498:	80 68       	ori	r24, 0x80	; 128
    249a:	85 b9       	out	0x05, r24	; 5
    249c:	85 b1       	in	r24, 0x05	; 5
    249e:	8f 77       	andi	r24, 0x7F	; 127
    24a0:	85 b9       	out	0x05, r24	; 5
		r <<= 1; if (DO) r++;	/* bit1 */
    24a2:	99 0f       	add	r25, r25
    24a4:	1e 99       	sbic	0x03, 6	; 3
    24a6:	9f 5f       	subi	r25, 0xFF	; 255
		CK_H(); CK_L();
    24a8:	85 b1       	in	r24, 0x05	; 5
    24aa:	80 68       	ori	r24, 0x80	; 128
    24ac:	85 b9       	out	0x05, r24	; 5
    24ae:	85 b1       	in	r24, 0x05	; 5
    24b0:	8f 77       	andi	r24, 0x7F	; 127
    24b2:	85 b9       	out	0x05, r24	; 5
		r <<= 1; if (DO) r++;	/* bit0 */
    24b4:	99 0f       	add	r25, r25
    24b6:	1e 99       	sbic	0x03, 6	; 3
    24b8:	9f 5f       	subi	r25, 0xFF	; 255
		CK_H(); CK_L();
    24ba:	25 b1       	in	r18, 0x05	; 5
    24bc:	20 68       	ori	r18, 0x80	; 128
    24be:	25 b9       	out	0x05, r18	; 5
    24c0:	25 b1       	in	r18, 0x05	; 5
    24c2:	2f 77       	andi	r18, 0x7F	; 127
    24c4:	25 b9       	out	0x05, r18	; 5
		*buff++ = r;			/* Store a received byte */
    24c6:	9f 01       	movw	r18, r30
    24c8:	2f 5f       	subi	r18, 0xFF	; 255
    24ca:	3f 4f       	sbci	r19, 0xFF	; 255
    24cc:	90 83       	st	Z, r25
	BYTE r;


	DI_H();	/* Send 0xFF */

	do {
    24ce:	61 50       	subi	r22, 0x01	; 1
    24d0:	71 09       	sbc	r23, r1
    24d2:	09 f0       	breq	.+2      	; 0x24d6 <_ZL8rcvr_mmcPhj+0xb0>
    24d4:	ad cf       	rjmp	.-166    	; 0x2430 <_ZL8rcvr_mmcPhj+0xa>
		CK_H(); CK_L();
		r <<= 1; if (DO) r++;	/* bit0 */
		CK_H(); CK_L();
		*buff++ = r;			/* Store a received byte */
	} while (--bc);
}
    24d6:	08 95       	ret

000024d8 <_ZL10wait_readyv>:
/* Wait for card ready                                                   */
/*-----------------------------------------------------------------------*/

static
int wait_ready (void)	/* 1:OK, 0:Timeout */
{
    24d8:	0f 93       	push	r16
    24da:	1f 93       	push	r17
    24dc:	cf 93       	push	r28
    24de:	df 93       	push	r29
    24e0:	1f 92       	push	r1
    24e2:	cd b7       	in	r28, 0x3d	; 61
    24e4:	de b7       	in	r29, 0x3e	; 62
	BYTE d;
	UINT tmr;


	for (tmr = 5000; tmr; tmr--) {	/* Wait for ready in timeout of 500ms */
    24e6:	08 e8       	ldi	r16, 0x88	; 136
    24e8:	13 e1       	ldi	r17, 0x13	; 19
    24ea:	01 15       	cp	r16, r1
    24ec:	11 05       	cpc	r17, r1
    24ee:	71 f0       	breq	.+28     	; 0x250c <_ZL10wait_readyv+0x34>
		rcvr_mmc(&d, 1);
    24f0:	61 e0       	ldi	r22, 0x01	; 1
    24f2:	70 e0       	ldi	r23, 0x00	; 0
    24f4:	ce 01       	movw	r24, r28
    24f6:	01 96       	adiw	r24, 0x01	; 1
    24f8:	96 df       	rcall	.-212    	; 0x2426 <_ZL8rcvr_mmcPhj>
		if (d == 0xFF) break;
    24fa:	89 81       	ldd	r24, Y+1	; 0x01
    24fc:	8f 3f       	cpi	r24, 0xFF	; 255
    24fe:	31 f0       	breq	.+12     	; 0x250c <_ZL10wait_readyv+0x34>
		dly_us(100);
    2500:	84 e6       	ldi	r24, 0x64	; 100
    2502:	90 e0       	ldi	r25, 0x00	; 0
    2504:	09 df       	rcall	.-494    	; 0x2318 <_ZL6dly_usj>
{
	BYTE d;
	UINT tmr;


	for (tmr = 5000; tmr; tmr--) {	/* Wait for ready in timeout of 500ms */
    2506:	01 50       	subi	r16, 0x01	; 1
    2508:	11 09       	sbc	r17, r1
    250a:	ef cf       	rjmp	.-34     	; 0x24ea <_ZL10wait_readyv+0x12>
		rcvr_mmc(&d, 1);
		if (d == 0xFF) break;
		dly_us(100);
	}

	return tmr ? 1 : 0;
    250c:	01 2b       	or	r16, r17
    250e:	19 f0       	breq	.+6      	; 0x2516 <_ZL10wait_readyv+0x3e>
    2510:	81 e0       	ldi	r24, 0x01	; 1
    2512:	90 e0       	ldi	r25, 0x00	; 0
    2514:	02 c0       	rjmp	.+4      	; 0x251a <_ZL10wait_readyv+0x42>
    2516:	80 e0       	ldi	r24, 0x00	; 0
    2518:	90 e0       	ldi	r25, 0x00	; 0
}
    251a:	0f 90       	pop	r0
    251c:	df 91       	pop	r29
    251e:	cf 91       	pop	r28
    2520:	1f 91       	pop	r17
    2522:	0f 91       	pop	r16
    2524:	08 95       	ret

00002526 <_ZL8deselectv>:
/* Deselect the card and release SPI bus                                 */
/*-----------------------------------------------------------------------*/

static
void deselect (void)
{
    2526:	cf 93       	push	r28
    2528:	df 93       	push	r29
    252a:	1f 92       	push	r1
    252c:	cd b7       	in	r28, 0x3d	; 61
    252e:	de b7       	in	r29, 0x3e	; 62
	BYTE d;

	CS_H();
    2530:	85 b1       	in	r24, 0x05	; 5
    2532:	82 60       	ori	r24, 0x02	; 2
    2534:	85 b9       	out	0x05, r24	; 5
	rcvr_mmc(&d, 1);	/* Dummy clock (force DO hi-z for multiple slave SPI) */
    2536:	61 e0       	ldi	r22, 0x01	; 1
    2538:	70 e0       	ldi	r23, 0x00	; 0
    253a:	ce 01       	movw	r24, r28
    253c:	01 96       	adiw	r24, 0x01	; 1
    253e:	73 df       	rcall	.-282    	; 0x2426 <_ZL8rcvr_mmcPhj>
}
    2540:	0f 90       	pop	r0
    2542:	df 91       	pop	r29
    2544:	cf 91       	pop	r28
    2546:	08 95       	ret

00002548 <_ZL6selectv>:
/* Select the card and wait for ready                                    */
/*-----------------------------------------------------------------------*/

static
int select (void)	/* 1:OK, 0:Timeout */
{
    2548:	0f 93       	push	r16
    254a:	1f 93       	push	r17
    254c:	cf 93       	push	r28
    254e:	df 93       	push	r29
    2550:	1f 92       	push	r1
    2552:	cd b7       	in	r28, 0x3d	; 61
    2554:	de b7       	in	r29, 0x3e	; 62
	BYTE d;

	CS_L();
    2556:	85 b1       	in	r24, 0x05	; 5
    2558:	8d 7f       	andi	r24, 0xFD	; 253
    255a:	85 b9       	out	0x05, r24	; 5
	rcvr_mmc(&d, 1);	/* Dummy clock (force DO enabled) */
    255c:	61 e0       	ldi	r22, 0x01	; 1
    255e:	70 e0       	ldi	r23, 0x00	; 0
    2560:	ce 01       	movw	r24, r28
    2562:	01 96       	adiw	r24, 0x01	; 1
    2564:	60 df       	rcall	.-320    	; 0x2426 <_ZL8rcvr_mmcPhj>

	if (wait_ready()) return 1;	/* OK */
    2566:	b8 df       	rcall	.-144    	; 0x24d8 <_ZL10wait_readyv>
    2568:	8c 01       	movw	r16, r24
    256a:	89 2b       	or	r24, r25
    256c:	11 f4       	brne	.+4      	; 0x2572 <_ZL6selectv+0x2a>
	deselect();
    256e:	db df       	rcall	.-74     	; 0x2526 <_ZL8deselectv>
    2570:	02 c0       	rjmp	.+4      	; 0x2576 <_ZL6selectv+0x2e>
	return 0;			/* Failed */
    2572:	01 e0       	ldi	r16, 0x01	; 1
	BYTE d;

	CS_L();
	rcvr_mmc(&d, 1);	/* Dummy clock (force DO enabled) */

	if (wait_ready()) return 1;	/* OK */
    2574:	10 e0       	ldi	r17, 0x00	; 0
    2576:	c8 01       	movw	r24, r16
	deselect();
	return 0;			/* Failed */
}
    2578:	0f 90       	pop	r0
    257a:	df 91       	pop	r29
    257c:	cf 91       	pop	r28
    257e:	1f 91       	pop	r17
    2580:	0f 91       	pop	r16
    2582:	08 95       	ret

00002584 <_ZL14rcvr_datablockPhj>:
    2584:	cf 92       	push	r12
static
int rcvr_datablock (	/* 1:OK, 0:Failed */
	BYTE *buff,			/* Data buffer to store received data */
	UINT btr			/* Byte count */
)
{
    2586:	df 92       	push	r13
    2588:	ef 92       	push	r14
    258a:	ff 92       	push	r15
    258c:	0f 93       	push	r16
    258e:	1f 93       	push	r17
    2590:	cf 93       	push	r28
    2592:	df 93       	push	r29
    2594:	00 d0       	rcall	.+0      	; 0x2596 <_ZL14rcvr_datablockPhj+0x12>
    2596:	cd b7       	in	r28, 0x3d	; 61
    2598:	de b7       	in	r29, 0x3e	; 62
    259a:	7c 01       	movw	r14, r24
    259c:	6b 01       	movw	r12, r22
	BYTE d[2];
	UINT tmr;


	for (tmr = 1000; tmr; tmr--) {	/* Wait for data packet in timeout of 100ms */
    259e:	08 ee       	ldi	r16, 0xE8	; 232
    25a0:	13 e0       	ldi	r17, 0x03	; 3
    25a2:	01 15       	cp	r16, r1
    25a4:	11 05       	cpc	r17, r1
    25a6:	71 f0       	breq	.+28     	; 0x25c4 <_ZL14rcvr_datablockPhj+0x40>
		rcvr_mmc(d, 1);
    25a8:	61 e0       	ldi	r22, 0x01	; 1
    25aa:	70 e0       	ldi	r23, 0x00	; 0
    25ac:	ce 01       	movw	r24, r28
    25ae:	01 96       	adiw	r24, 0x01	; 1
    25b0:	3a df       	rcall	.-396    	; 0x2426 <_ZL8rcvr_mmcPhj>
		if (d[0] != 0xFF) break;
    25b2:	89 81       	ldd	r24, Y+1	; 0x01
    25b4:	8f 3f       	cpi	r24, 0xFF	; 255
    25b6:	31 f4       	brne	.+12     	; 0x25c4 <_ZL14rcvr_datablockPhj+0x40>
		dly_us(100);
    25b8:	84 e6       	ldi	r24, 0x64	; 100
    25ba:	90 e0       	ldi	r25, 0x00	; 0
    25bc:	ad de       	rcall	.-678    	; 0x2318 <_ZL6dly_usj>
{
	BYTE d[2];
	UINT tmr;


	for (tmr = 1000; tmr; tmr--) {	/* Wait for data packet in timeout of 100ms */
    25be:	01 50       	subi	r16, 0x01	; 1
    25c0:	11 09       	sbc	r17, r1
    25c2:	ef cf       	rjmp	.-34     	; 0x25a2 <_ZL14rcvr_datablockPhj+0x1e>
		rcvr_mmc(d, 1);
		if (d[0] != 0xFF) break;
		dly_us(100);
	}
	if (d[0] != 0xFE) return 0;		/* If not valid data token, return with error */
    25c4:	89 81       	ldd	r24, Y+1	; 0x01
    25c6:	8e 3f       	cpi	r24, 0xFE	; 254
    25c8:	59 f4       	brne	.+22     	; 0x25e0 <_ZL14rcvr_datablockPhj+0x5c>

	rcvr_mmc(buff, btr);			/* Receive the data block into buffer */
    25ca:	b6 01       	movw	r22, r12
    25cc:	c7 01       	movw	r24, r14
    25ce:	2b df       	rcall	.-426    	; 0x2426 <_ZL8rcvr_mmcPhj>
	rcvr_mmc(d, 2);					/* Discard CRC */
    25d0:	62 e0       	ldi	r22, 0x02	; 2
    25d2:	70 e0       	ldi	r23, 0x00	; 0
    25d4:	ce 01       	movw	r24, r28
    25d6:	01 96       	adiw	r24, 0x01	; 1
    25d8:	26 df       	rcall	.-436    	; 0x2426 <_ZL8rcvr_mmcPhj>

	return 1;						/* Return with success */
    25da:	81 e0       	ldi	r24, 0x01	; 1
    25dc:	90 e0       	ldi	r25, 0x00	; 0
    25de:	02 c0       	rjmp	.+4      	; 0x25e4 <_ZL14rcvr_datablockPhj+0x60>
	for (tmr = 1000; tmr; tmr--) {	/* Wait for data packet in timeout of 100ms */
		rcvr_mmc(d, 1);
		if (d[0] != 0xFF) break;
		dly_us(100);
	}
	if (d[0] != 0xFE) return 0;		/* If not valid data token, return with error */
    25e0:	80 e0       	ldi	r24, 0x00	; 0
    25e2:	90 e0       	ldi	r25, 0x00	; 0

	rcvr_mmc(buff, btr);			/* Receive the data block into buffer */
	rcvr_mmc(d, 2);					/* Discard CRC */

	return 1;						/* Return with success */
}
    25e4:	0f 90       	pop	r0
    25e6:	0f 90       	pop	r0
    25e8:	df 91       	pop	r29
    25ea:	cf 91       	pop	r28
    25ec:	1f 91       	pop	r17
    25ee:	0f 91       	pop	r16
    25f0:	ff 90       	pop	r15
    25f2:	ef 90       	pop	r14
    25f4:	df 90       	pop	r13
    25f6:	cf 90       	pop	r12
    25f8:	08 95       	ret

000025fa <_ZL14xmit_datablockPKhh>:
static
int xmit_datablock (	/* 1:OK, 0:Failed */
	const BYTE *buff,	/* 512 byte data block to be transmitted */
	BYTE token			/* Data/Stop token */
)
{
    25fa:	ef 92       	push	r14
    25fc:	ff 92       	push	r15
    25fe:	1f 93       	push	r17
    2600:	cf 93       	push	r28
    2602:	df 93       	push	r29
    2604:	00 d0       	rcall	.+0      	; 0x2606 <_ZL14xmit_datablockPKhh+0xc>
    2606:	cd b7       	in	r28, 0x3d	; 61
    2608:	de b7       	in	r29, 0x3e	; 62
    260a:	7c 01       	movw	r14, r24
    260c:	16 2f       	mov	r17, r22
	BYTE d[2];


	if (!wait_ready()) return 0;
    260e:	64 df       	rcall	.-312    	; 0x24d8 <_ZL10wait_readyv>
    2610:	00 97       	sbiw	r24, 0x00	; 0
    2612:	11 f1       	breq	.+68     	; 0x2658 <_ZL14xmit_datablockPKhh+0x5e>

	d[0] = token;
    2614:	19 83       	std	Y+1, r17	; 0x01
	xmit_mmc(d, 1);				/* Xmit a token */
    2616:	61 e0       	ldi	r22, 0x01	; 1
    2618:	70 e0       	ldi	r23, 0x00	; 0
    261a:	ce 01       	movw	r24, r28
    261c:	01 96       	adiw	r24, 0x01	; 1
    261e:	80 de       	rcall	.-768    	; 0x2320 <_ZL8xmit_mmcPKhj>
	if (token != 0xFD) {		/* Is it data token? */
    2620:	1d 3f       	cpi	r17, 0xFD	; 253
    2622:	a9 f0       	breq	.+42     	; 0x264e <_ZL14xmit_datablockPKhh+0x54>
		xmit_mmc(buff, 512);	/* Xmit the 512 byte data block to MMC */
    2624:	60 e0       	ldi	r22, 0x00	; 0
    2626:	72 e0       	ldi	r23, 0x02	; 2
    2628:	c7 01       	movw	r24, r14
    262a:	7a de       	rcall	.-780    	; 0x2320 <_ZL8xmit_mmcPKhj>
		rcvr_mmc(d, 2);			/* Xmit dummy CRC (0xFF,0xFF) */
    262c:	62 e0       	ldi	r22, 0x02	; 2
    262e:	70 e0       	ldi	r23, 0x00	; 0
    2630:	ce 01       	movw	r24, r28
    2632:	01 96       	adiw	r24, 0x01	; 1
    2634:	f8 de       	rcall	.-528    	; 0x2426 <_ZL8rcvr_mmcPhj>
		rcvr_mmc(d, 1);			/* Receive data response */
    2636:	61 e0       	ldi	r22, 0x01	; 1
    2638:	70 e0       	ldi	r23, 0x00	; 0
    263a:	ce 01       	movw	r24, r28
    263c:	01 96       	adiw	r24, 0x01	; 1
    263e:	f3 de       	rcall	.-538    	; 0x2426 <_ZL8rcvr_mmcPhj>
		if ((d[0] & 0x1F) != 0x05)	/* If not accepted, return with error */
    2640:	89 81       	ldd	r24, Y+1	; 0x01
    2642:	8f 71       	andi	r24, 0x1F	; 31
    2644:	85 30       	cpi	r24, 0x05	; 5
    2646:	31 f0       	breq	.+12     	; 0x2654 <_ZL14xmit_datablockPKhh+0x5a>
			return 0;
    2648:	80 e0       	ldi	r24, 0x00	; 0
    264a:	90 e0       	ldi	r25, 0x00	; 0
    264c:	05 c0       	rjmp	.+10     	; 0x2658 <_ZL14xmit_datablockPKhh+0x5e>
	}

	return 1;
    264e:	81 e0       	ldi	r24, 0x01	; 1
    2650:	90 e0       	ldi	r25, 0x00	; 0
    2652:	02 c0       	rjmp	.+4      	; 0x2658 <_ZL14xmit_datablockPKhh+0x5e>
    2654:	81 e0       	ldi	r24, 0x01	; 1
    2656:	90 e0       	ldi	r25, 0x00	; 0
}
    2658:	0f 90       	pop	r0
    265a:	0f 90       	pop	r0
    265c:	df 91       	pop	r29
    265e:	cf 91       	pop	r28
    2660:	1f 91       	pop	r17
    2662:	ff 90       	pop	r15
    2664:	ef 90       	pop	r14
    2666:	08 95       	ret

00002668 <_ZL8send_cmdhm>:
static
BYTE send_cmd (		/* Returns command response (bit7==1:Send failed)*/
	BYTE cmd,		/* Command byte */
	DWORD arg		/* Argument */
)
{
    2668:	df 92       	push	r13
    266a:	ef 92       	push	r14
    266c:	ff 92       	push	r15
    266e:	0f 93       	push	r16
    2670:	1f 93       	push	r17
    2672:	cf 93       	push	r28
    2674:	df 93       	push	r29
    2676:	cd b7       	in	r28, 0x3d	; 61
    2678:	de b7       	in	r29, 0x3e	; 62
    267a:	27 97       	sbiw	r28, 0x07	; 7
    267c:	0f b6       	in	r0, 0x3f	; 63
    267e:	f8 94       	cli
    2680:	de bf       	out	0x3e, r29	; 62
    2682:	0f be       	out	0x3f, r0	; 63
    2684:	cd bf       	out	0x3d, r28	; 61
    2686:	18 2f       	mov	r17, r24
    2688:	04 2f       	mov	r16, r20
    268a:	f5 2e       	mov	r15, r21
    268c:	e6 2e       	mov	r14, r22
    268e:	d7 2e       	mov	r13, r23
	BYTE n, d, buf[6];


	if (cmd & 0x80) {	/* ACMD<n> is the command sequense of CMD55-CMD<n> */
    2690:	88 23       	and	r24, r24
    2692:	44 f4       	brge	.+16     	; 0x26a4 <_ZL8send_cmdhm+0x3c>
		cmd &= 0x7F;
    2694:	1f 77       	andi	r17, 0x7F	; 127
		n = send_cmd(CMD55, 0);
    2696:	40 e0       	ldi	r20, 0x00	; 0
    2698:	50 e0       	ldi	r21, 0x00	; 0
    269a:	ba 01       	movw	r22, r20
    269c:	87 e3       	ldi	r24, 0x37	; 55
    269e:	e4 df       	rcall	.-56     	; 0x2668 <_ZL8send_cmdhm>
		if (n > 1) return n;
    26a0:	82 30       	cpi	r24, 0x02	; 2
	}

	/* Select the card and wait for ready */
	deselect();
    26a2:	a0 f5       	brcc	.+104    	; 0x270c <_ZL8send_cmdhm+0xa4>
	if (!select()) return 0xFF;
    26a4:	40 df       	rcall	.-384    	; 0x2526 <_ZL8deselectv>
    26a6:	50 df       	rcall	.-352    	; 0x2548 <_ZL6selectv>
    26a8:	89 2b       	or	r24, r25
    26aa:	79 f1       	breq	.+94     	; 0x270a <_ZL8send_cmdhm+0xa2>

	/* Send a command packet */
	buf[0] = 0x40 | cmd;			/* Start + Command index */
    26ac:	81 2f       	mov	r24, r17
    26ae:	80 64       	ori	r24, 0x40	; 64
    26b0:	8a 83       	std	Y+2, r24	; 0x02
	buf[1] = (BYTE)(arg >> 24);		/* Argument[31..24] */
    26b2:	db 82       	std	Y+3, r13	; 0x03
	buf[2] = (BYTE)(arg >> 16);		/* Argument[23..16] */
    26b4:	ec 82       	std	Y+4, r14	; 0x04
	buf[3] = (BYTE)(arg >> 8);		/* Argument[15..8] */
    26b6:	fd 82       	std	Y+5, r15	; 0x05
	buf[4] = (BYTE)arg;				/* Argument[7..0] */
    26b8:	0e 83       	std	Y+6, r16	; 0x06
	n = 0x01;						/* Dummy CRC + Stop */
	if (cmd == CMD0) n = 0x95;		/* (valid CRC for CMD0(0)) */
    26ba:	11 23       	and	r17, r17
    26bc:	11 f0       	breq	.+4      	; 0x26c2 <_ZL8send_cmdhm+0x5a>
	buf[0] = 0x40 | cmd;			/* Start + Command index */
	buf[1] = (BYTE)(arg >> 24);		/* Argument[31..24] */
	buf[2] = (BYTE)(arg >> 16);		/* Argument[23..16] */
	buf[3] = (BYTE)(arg >> 8);		/* Argument[15..8] */
	buf[4] = (BYTE)arg;				/* Argument[7..0] */
	n = 0x01;						/* Dummy CRC + Stop */
    26be:	81 e0       	ldi	r24, 0x01	; 1
    26c0:	01 c0       	rjmp	.+2      	; 0x26c4 <_ZL8send_cmdhm+0x5c>
	if (cmd == CMD0) n = 0x95;		/* (valid CRC for CMD0(0)) */
    26c2:	85 e9       	ldi	r24, 0x95	; 149
	if (cmd == CMD8) n = 0x87;		/* (valid CRC for CMD8(0x1AA)) */
    26c4:	18 30       	cpi	r17, 0x08	; 8
    26c6:	09 f4       	brne	.+2      	; 0x26ca <_ZL8send_cmdhm+0x62>
    26c8:	87 e8       	ldi	r24, 0x87	; 135
	buf[5] = n;
    26ca:	8f 83       	std	Y+7, r24	; 0x07
	xmit_mmc(buf, 6);
    26cc:	66 e0       	ldi	r22, 0x06	; 6
    26ce:	70 e0       	ldi	r23, 0x00	; 0
    26d0:	ce 01       	movw	r24, r28
    26d2:	02 96       	adiw	r24, 0x02	; 2
    26d4:	25 de       	rcall	.-950    	; 0x2320 <_ZL8xmit_mmcPKhj>

	/* Receive command response */
	if (cmd == CMD12) rcvr_mmc(&d, 1);	/* Skip a stuff byte when stop reading */
    26d6:	1c 30       	cpi	r17, 0x0C	; 12
    26d8:	29 f4       	brne	.+10     	; 0x26e4 <_ZL8send_cmdhm+0x7c>
    26da:	61 e0       	ldi	r22, 0x01	; 1
    26dc:	70 e0       	ldi	r23, 0x00	; 0
    26de:	ce 01       	movw	r24, r28
    26e0:	01 96       	adiw	r24, 0x01	; 1
    26e2:	a1 de       	rcall	.-702    	; 0x2426 <_ZL8rcvr_mmcPhj>
	n = 10;								/* Wait for a valid response in timeout of 10 attempts */
	do
		rcvr_mmc(&d, 1);
    26e4:	1a e0       	ldi	r17, 0x0A	; 10
    26e6:	61 e0       	ldi	r22, 0x01	; 1
    26e8:	70 e0       	ldi	r23, 0x00	; 0
    26ea:	ce 01       	movw	r24, r28
    26ec:	01 96       	adiw	r24, 0x01	; 1
    26ee:	9b de       	rcall	.-714    	; 0x2426 <_ZL8rcvr_mmcPhj>
	while ((d & 0x80) && --n);
    26f0:	89 81       	ldd	r24, Y+1	; 0x01
    26f2:	88 23       	and	r24, r24
    26f4:	24 f4       	brge	.+8      	; 0x26fe <_ZL8send_cmdhm+0x96>
    26f6:	11 50       	subi	r17, 0x01	; 1
    26f8:	21 f0       	breq	.+8      	; 0x2702 <_ZL8send_cmdhm+0x9a>
    26fa:	91 e0       	ldi	r25, 0x01	; 1
    26fc:	03 c0       	rjmp	.+6      	; 0x2704 <_ZL8send_cmdhm+0x9c>
    26fe:	90 e0       	ldi	r25, 0x00	; 0
    2700:	01 c0       	rjmp	.+2      	; 0x2704 <_ZL8send_cmdhm+0x9c>
    2702:	90 e0       	ldi	r25, 0x00	; 0
	xmit_mmc(buf, 6);

	/* Receive command response */
	if (cmd == CMD12) rcvr_mmc(&d, 1);	/* Skip a stuff byte when stop reading */
	n = 10;								/* Wait for a valid response in timeout of 10 attempts */
	do
    2704:	91 11       	cpse	r25, r1
    2706:	ef cf       	rjmp	.-34     	; 0x26e6 <_ZL8send_cmdhm+0x7e>
    2708:	01 c0       	rjmp	.+2      	; 0x270c <_ZL8send_cmdhm+0xa4>
		if (n > 1) return n;
	}

	/* Select the card and wait for ready */
	deselect();
	if (!select()) return 0xFF;
    270a:	8f ef       	ldi	r24, 0xFF	; 255
	do
		rcvr_mmc(&d, 1);
	while ((d & 0x80) && --n);

	return d;			/* Return with the response value */
}
    270c:	27 96       	adiw	r28, 0x07	; 7
    270e:	0f b6       	in	r0, 0x3f	; 63
    2710:	f8 94       	cli
    2712:	de bf       	out	0x3e, r29	; 62
    2714:	0f be       	out	0x3f, r0	; 63
    2716:	cd bf       	out	0x3d, r28	; 61
    2718:	df 91       	pop	r29
    271a:	cf 91       	pop	r28
    271c:	1f 91       	pop	r17
    271e:	0f 91       	pop	r16
    2720:	ff 90       	pop	r15
    2722:	ef 90       	pop	r14
    2724:	df 90       	pop	r13
    2726:	08 95       	ret

00002728 <disk_status>:

DSTATUS disk_status (
	BYTE drv			/* Drive number (always 0) */
)
{
	if (drv) return STA_NOINIT;
    2728:	81 11       	cpse	r24, r1
    272a:	03 c0       	rjmp	.+6      	; 0x2732 <disk_status+0xa>

	return Stat;
    272c:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <_ZL4Stat>
    2730:	08 95       	ret

DSTATUS disk_status (
	BYTE drv			/* Drive number (always 0) */
)
{
	if (drv) return STA_NOINIT;
    2732:	81 e0       	ldi	r24, 0x01	; 1

	return Stat;
}
    2734:	08 95       	ret

00002736 <disk_initialize>:
/*-----------------------------------------------------------------------*/

DSTATUS disk_initialize (
	BYTE drv		/* Physical drive nmuber (0) */
)
{
    2736:	ef 92       	push	r14
    2738:	ff 92       	push	r15
    273a:	0f 93       	push	r16
    273c:	1f 93       	push	r17
    273e:	cf 93       	push	r28
    2740:	df 93       	push	r29
    2742:	00 d0       	rcall	.+0      	; 0x2744 <disk_initialize+0xe>
    2744:	00 d0       	rcall	.+0      	; 0x2746 <disk_initialize+0x10>
    2746:	cd b7       	in	r28, 0x3d	; 61
    2748:	de b7       	in	r29, 0x3e	; 62
	BYTE n, ty, cmd, buf[4];
	UINT tmr;
	DSTATUS s;


	if (drv) return RES_NOTRDY;
    274a:	81 11       	cpse	r24, r1
    274c:	b8 c0       	rjmp	.+368    	; 0x28be <disk_initialize+0x188>

	dly_us(10000);			/* 10ms */
    274e:	80 e1       	ldi	r24, 0x10	; 16
    2750:	97 e2       	ldi	r25, 0x27	; 39
    2752:	e2 dd       	rcall	.-1084   	; 0x2318 <_ZL6dly_usj>
	CS_INIT(); CS_H();		/* Initialize port pin tied to CS */
    2754:	84 b1       	in	r24, 0x04	; 4
    2756:	82 60       	ori	r24, 0x02	; 2
    2758:	84 b9       	out	0x04, r24	; 4
    275a:	85 b1       	in	r24, 0x05	; 5
    275c:	82 60       	ori	r24, 0x02	; 2
    275e:	85 b9       	out	0x05, r24	; 5
	CK_INIT(); CK_L();		/* Initialize port pin tied to SCLK */
    2760:	84 b1       	in	r24, 0x04	; 4
    2762:	80 68       	ori	r24, 0x80	; 128
    2764:	84 b9       	out	0x04, r24	; 4
    2766:	85 b1       	in	r24, 0x05	; 5
    2768:	8f 77       	andi	r24, 0x7F	; 127
    276a:	85 b9       	out	0x05, r24	; 5
	DI_INIT();				/* Initialize port pin tied to DI */
    276c:	84 b1       	in	r24, 0x04	; 4
    276e:	80 62       	ori	r24, 0x20	; 32
    2770:	84 b9       	out	0x04, r24	; 4
	DO_INIT();				/* Initialize port pin tied to DO */

	for (n = 10; n; n--) rcvr_mmc(buf, 1);	/* Apply 80 dummy clocks and the card gets ready to receive command */
    2772:	1a e0       	ldi	r17, 0x0A	; 10
    2774:	11 23       	and	r17, r17
    2776:	39 f0       	breq	.+14     	; 0x2786 <disk_initialize+0x50>
    2778:	61 e0       	ldi	r22, 0x01	; 1
    277a:	70 e0       	ldi	r23, 0x00	; 0
    277c:	ce 01       	movw	r24, r28
    277e:	01 96       	adiw	r24, 0x01	; 1
    2780:	52 de       	rcall	.-860    	; 0x2426 <_ZL8rcvr_mmcPhj>
    2782:	11 50       	subi	r17, 0x01	; 1
    2784:	f7 cf       	rjmp	.-18     	; 0x2774 <disk_initialize+0x3e>

	ty = 0;
	if (send_cmd(CMD0, 0) == 1) {			/* Enter Idle state */
    2786:	40 e0       	ldi	r20, 0x00	; 0
    2788:	50 e0       	ldi	r21, 0x00	; 0
    278a:	ba 01       	movw	r22, r20
    278c:	80 e0       	ldi	r24, 0x00	; 0
    278e:	6c df       	rcall	.-296    	; 0x2668 <_ZL8send_cmdhm>
    2790:	81 30       	cpi	r24, 0x01	; 1
    2792:	09 f0       	breq	.+2      	; 0x2796 <disk_initialize+0x60>
    2794:	7d c0       	rjmp	.+250    	; 0x2890 <disk_initialize+0x15a>
		if (send_cmd(CMD8, 0x1AA) == 1) {	/* SDv2? */
    2796:	4a ea       	ldi	r20, 0xAA	; 170
    2798:	51 e0       	ldi	r21, 0x01	; 1
    279a:	60 e0       	ldi	r22, 0x00	; 0
    279c:	70 e0       	ldi	r23, 0x00	; 0
    279e:	88 e0       	ldi	r24, 0x08	; 8
    27a0:	63 df       	rcall	.-314    	; 0x2668 <_ZL8send_cmdhm>
    27a2:	81 30       	cpi	r24, 0x01	; 1
    27a4:	09 f0       	breq	.+2      	; 0x27a8 <disk_initialize+0x72>
    27a6:	3e c0       	rjmp	.+124    	; 0x2824 <disk_initialize+0xee>
			rcvr_mmc(buf, 4);							/* Get trailing return value of R7 resp */
    27a8:	64 e0       	ldi	r22, 0x04	; 4
    27aa:	70 e0       	ldi	r23, 0x00	; 0
    27ac:	ce 01       	movw	r24, r28
    27ae:	01 96       	adiw	r24, 0x01	; 1
    27b0:	3a de       	rcall	.-908    	; 0x2426 <_ZL8rcvr_mmcPhj>
			if (buf[2] == 0x01 && buf[3] == 0xAA) {		/* The card can work at vdd range of 2.7-3.6V */
    27b2:	8b 81       	ldd	r24, Y+3	; 0x03
    27b4:	81 30       	cpi	r24, 0x01	; 1
    27b6:	09 f0       	breq	.+2      	; 0x27ba <disk_initialize+0x84>
    27b8:	6d c0       	rjmp	.+218    	; 0x2894 <disk_initialize+0x15e>
    27ba:	8c 81       	ldd	r24, Y+4	; 0x04
    27bc:	8a 3a       	cpi	r24, 0xAA	; 170
    27be:	09 f0       	breq	.+2      	; 0x27c2 <disk_initialize+0x8c>
    27c0:	6b c0       	rjmp	.+214    	; 0x2898 <disk_initialize+0x162>
    27c2:	08 ee       	ldi	r16, 0xE8	; 232
    27c4:	13 e0       	ldi	r17, 0x03	; 3
				for (tmr = 1000; tmr; tmr--) {			/* Wait for leaving idle state (ACMD41 with HCS bit) */
    27c6:	01 15       	cp	r16, r1
    27c8:	11 05       	cpc	r17, r1
    27ca:	71 f0       	breq	.+28     	; 0x27e8 <disk_initialize+0xb2>
					if (send_cmd(ACMD41, 1UL << 30) == 0) break;
    27cc:	40 e0       	ldi	r20, 0x00	; 0
    27ce:	50 e0       	ldi	r21, 0x00	; 0
    27d0:	60 e0       	ldi	r22, 0x00	; 0
    27d2:	70 e4       	ldi	r23, 0x40	; 64
    27d4:	89 ea       	ldi	r24, 0xA9	; 169
    27d6:	48 df       	rcall	.-368    	; 0x2668 <_ZL8send_cmdhm>
    27d8:	88 23       	and	r24, r24
					dly_us(1000);
    27da:	31 f0       	breq	.+12     	; 0x27e8 <disk_initialize+0xb2>
    27dc:	88 ee       	ldi	r24, 0xE8	; 232
    27de:	93 e0       	ldi	r25, 0x03	; 3
    27e0:	9b dd       	rcall	.-1226   	; 0x2318 <_ZL6dly_usj>
	ty = 0;
	if (send_cmd(CMD0, 0) == 1) {			/* Enter Idle state */
		if (send_cmd(CMD8, 0x1AA) == 1) {	/* SDv2? */
			rcvr_mmc(buf, 4);							/* Get trailing return value of R7 resp */
			if (buf[2] == 0x01 && buf[3] == 0xAA) {		/* The card can work at vdd range of 2.7-3.6V */
				for (tmr = 1000; tmr; tmr--) {			/* Wait for leaving idle state (ACMD41 with HCS bit) */
    27e2:	01 50       	subi	r16, 0x01	; 1
    27e4:	11 09       	sbc	r17, r1
					if (send_cmd(ACMD41, 1UL << 30) == 0) break;
					dly_us(1000);
				}
				if (tmr && send_cmd(CMD58, 0) == 0) {	/* Check CCS bit in the OCR */
    27e6:	ef cf       	rjmp	.-34     	; 0x27c6 <disk_initialize+0x90>
    27e8:	01 2b       	or	r16, r17
    27ea:	49 f0       	breq	.+18     	; 0x27fe <disk_initialize+0xc8>
    27ec:	40 e0       	ldi	r20, 0x00	; 0
    27ee:	50 e0       	ldi	r21, 0x00	; 0
    27f0:	ba 01       	movw	r22, r20
    27f2:	8a e3       	ldi	r24, 0x3A	; 58
    27f4:	39 df       	rcall	.-398    	; 0x2668 <_ZL8send_cmdhm>
    27f6:	81 11       	cpse	r24, r1
    27f8:	04 c0       	rjmp	.+8      	; 0x2802 <disk_initialize+0xcc>
    27fa:	81 e0       	ldi	r24, 0x01	; 1
    27fc:	03 c0       	rjmp	.+6      	; 0x2804 <disk_initialize+0xce>
    27fe:	80 e0       	ldi	r24, 0x00	; 0
    2800:	01 c0       	rjmp	.+2      	; 0x2804 <disk_initialize+0xce>
    2802:	80 e0       	ldi	r24, 0x00	; 0
    2804:	88 23       	and	r24, r24
    2806:	09 f4       	brne	.+2      	; 0x280a <disk_initialize+0xd4>
					rcvr_mmc(buf, 4);
    2808:	49 c0       	rjmp	.+146    	; 0x289c <disk_initialize+0x166>
    280a:	64 e0       	ldi	r22, 0x04	; 4
    280c:	70 e0       	ldi	r23, 0x00	; 0
    280e:	ce 01       	movw	r24, r28
    2810:	01 96       	adiw	r24, 0x01	; 1
    2812:	09 de       	rcall	.-1006   	; 0x2426 <_ZL8rcvr_mmcPhj>
					ty = (buf[0] & 0x40) ? CT_SD2 | CT_BLOCK : CT_SD2;	/* SDv2 */
    2814:	89 81       	ldd	r24, Y+1	; 0x01
    2816:	86 ff       	sbrs	r24, 6
    2818:	43 c0       	rjmp	.+134    	; 0x28a0 <disk_initialize+0x16a>
    281a:	0f 2e       	mov	r0, r31
    281c:	fc e0       	ldi	r31, 0x0C	; 12
    281e:	ff 2e       	mov	r15, r31
    2820:	f0 2d       	mov	r31, r0
				}
			}
		} else {							/* SDv1 or MMCv3 */
			if (send_cmd(ACMD41, 0) <= 1) 	{
    2822:	43 c0       	rjmp	.+134    	; 0x28aa <disk_initialize+0x174>
    2824:	40 e0       	ldi	r20, 0x00	; 0
    2826:	50 e0       	ldi	r21, 0x00	; 0
    2828:	ba 01       	movw	r22, r20
    282a:	89 ea       	ldi	r24, 0xA9	; 169
    282c:	1d df       	rcall	.-454    	; 0x2668 <_ZL8send_cmdhm>
    282e:	82 30       	cpi	r24, 0x02	; 2
    2830:	40 f4       	brcc	.+16     	; 0x2842 <disk_initialize+0x10c>
				ty = CT_SD1; cmd = ACMD41;	/* SDv1 */
    2832:	0f 2e       	mov	r0, r31
    2834:	f9 ea       	ldi	r31, 0xA9	; 169
    2836:	ef 2e       	mov	r14, r31
    2838:	f0 2d       	mov	r31, r0
    283a:	68 94       	set
    283c:	ff 24       	eor	r15, r15
    283e:	f1 f8       	bld	r15, 1
    2840:	04 c0       	rjmp	.+8      	; 0x284a <disk_initialize+0x114>
			} else {
				ty = CT_MMC; cmd = CMD1;	/* MMCv3 */
    2842:	ee 24       	eor	r14, r14
    2844:	e3 94       	inc	r14
    2846:	ff 24       	eor	r15, r15
			}
			for (tmr = 1000; tmr; tmr--) {			/* Wait for leaving idle state */
    2848:	f3 94       	inc	r15
    284a:	08 ee       	ldi	r16, 0xE8	; 232
    284c:	13 e0       	ldi	r17, 0x03	; 3
    284e:	01 15       	cp	r16, r1
				if (send_cmd(cmd, 0) == 0) break;
    2850:	11 05       	cpc	r17, r1
    2852:	69 f0       	breq	.+26     	; 0x286e <disk_initialize+0x138>
    2854:	40 e0       	ldi	r20, 0x00	; 0
    2856:	50 e0       	ldi	r21, 0x00	; 0
    2858:	ba 01       	movw	r22, r20
    285a:	8e 2d       	mov	r24, r14
    285c:	05 df       	rcall	.-502    	; 0x2668 <_ZL8send_cmdhm>
    285e:	88 23       	and	r24, r24
				dly_us(1000);
    2860:	31 f0       	breq	.+12     	; 0x286e <disk_initialize+0x138>
    2862:	88 ee       	ldi	r24, 0xE8	; 232
    2864:	93 e0       	ldi	r25, 0x03	; 3
			if (send_cmd(ACMD41, 0) <= 1) 	{
				ty = CT_SD1; cmd = ACMD41;	/* SDv1 */
			} else {
				ty = CT_MMC; cmd = CMD1;	/* MMCv3 */
			}
			for (tmr = 1000; tmr; tmr--) {			/* Wait for leaving idle state */
    2866:	58 dd       	rcall	.-1360   	; 0x2318 <_ZL6dly_usj>
    2868:	01 50       	subi	r16, 0x01	; 1
    286a:	11 09       	sbc	r17, r1
				if (send_cmd(cmd, 0) == 0) break;
				dly_us(1000);
			}
			if (!tmr || send_cmd(CMD16, 512) != 0)	/* Set R/W block length to 512 */
    286c:	f0 cf       	rjmp	.-32     	; 0x284e <disk_initialize+0x118>
    286e:	01 2b       	or	r16, r17
    2870:	49 f0       	breq	.+18     	; 0x2884 <disk_initialize+0x14e>
    2872:	40 e0       	ldi	r20, 0x00	; 0
    2874:	52 e0       	ldi	r21, 0x02	; 2
    2876:	60 e0       	ldi	r22, 0x00	; 0
    2878:	70 e0       	ldi	r23, 0x00	; 0
    287a:	80 e1       	ldi	r24, 0x10	; 16
    287c:	f5 de       	rcall	.-534    	; 0x2668 <_ZL8send_cmdhm>
    287e:	81 11       	cpse	r24, r1
    2880:	03 c0       	rjmp	.+6      	; 0x2888 <disk_initialize+0x152>
    2882:	03 c0       	rjmp	.+6      	; 0x288a <disk_initialize+0x154>
    2884:	81 e0       	ldi	r24, 0x01	; 1
    2886:	01 c0       	rjmp	.+2      	; 0x288a <disk_initialize+0x154>
    2888:	81 e0       	ldi	r24, 0x01	; 1
    288a:	81 11       	cpse	r24, r1
    288c:	0d c0       	rjmp	.+26     	; 0x28a8 <disk_initialize+0x172>
    288e:	0d c0       	rjmp	.+26     	; 0x28aa <disk_initialize+0x174>
	DI_INIT();				/* Initialize port pin tied to DI */
	DO_INIT();				/* Initialize port pin tied to DO */

	for (n = 10; n; n--) rcvr_mmc(buf, 1);	/* Apply 80 dummy clocks and the card gets ready to receive command */

	ty = 0;
    2890:	f1 2c       	mov	r15, r1
    2892:	0b c0       	rjmp	.+22     	; 0x28aa <disk_initialize+0x174>
    2894:	f1 2c       	mov	r15, r1
    2896:	09 c0       	rjmp	.+18     	; 0x28aa <disk_initialize+0x174>
    2898:	f1 2c       	mov	r15, r1
    289a:	07 c0       	rjmp	.+14     	; 0x28aa <disk_initialize+0x174>
    289c:	f1 2c       	mov	r15, r1
					if (send_cmd(ACMD41, 1UL << 30) == 0) break;
					dly_us(1000);
				}
				if (tmr && send_cmd(CMD58, 0) == 0) {	/* Check CCS bit in the OCR */
					rcvr_mmc(buf, 4);
					ty = (buf[0] & 0x40) ? CT_SD2 | CT_BLOCK : CT_SD2;	/* SDv2 */
    289e:	05 c0       	rjmp	.+10     	; 0x28aa <disk_initialize+0x174>
    28a0:	68 94       	set
    28a2:	ff 24       	eor	r15, r15
    28a4:	f2 f8       	bld	r15, 2
			for (tmr = 1000; tmr; tmr--) {			/* Wait for leaving idle state */
				if (send_cmd(cmd, 0) == 0) break;
				dly_us(1000);
			}
			if (!tmr || send_cmd(CMD16, 512) != 0)	/* Set R/W block length to 512 */
				ty = 0;
    28a6:	01 c0       	rjmp	.+2      	; 0x28aa <disk_initialize+0x174>
		}
	}
	CardType = ty;
    28a8:	f1 2c       	mov	r15, r1
    28aa:	f0 92 46 04 	sts	0x0446, r15	; 0x800446 <_ZL8CardType>
	s = ty ? 0 : STA_NOINIT;
    28ae:	11 e0       	ldi	r17, 0x01	; 1
    28b0:	f1 10       	cpse	r15, r1
	Stat = s;
    28b2:	10 e0       	ldi	r17, 0x00	; 0
    28b4:	10 93 06 01 	sts	0x0106, r17	; 0x800106 <_ZL4Stat>

	deselect();
    28b8:	36 de       	rcall	.-916    	; 0x2526 <_ZL8deselectv>

	return s;
    28ba:	81 2f       	mov	r24, r17
    28bc:	01 c0       	rjmp	.+2      	; 0x28c0 <disk_initialize+0x18a>
	BYTE n, ty, cmd, buf[4];
	UINT tmr;
	DSTATUS s;


	if (drv) return RES_NOTRDY;
    28be:	83 e0       	ldi	r24, 0x03	; 3
	Stat = s;

	deselect();

	return s;
}
    28c0:	0f 90       	pop	r0
    28c2:	0f 90       	pop	r0
    28c4:	0f 90       	pop	r0
    28c6:	0f 90       	pop	r0
    28c8:	df 91       	pop	r29
    28ca:	cf 91       	pop	r28
    28cc:	1f 91       	pop	r17
    28ce:	0f 91       	pop	r16
    28d0:	ff 90       	pop	r15
    28d2:	ef 90       	pop	r14
    28d4:	08 95       	ret

000028d6 <disk_read>:
	BYTE drv,			/* Physical drive nmuber (0) */
	BYTE *buff,			/* Pointer to the data buffer to store read data */
	DWORD sector,		/* Start sector number (LBA) */
	BYTE count			/* Sector count (1..256(0)) */
)
{
    28d6:	cf 92       	push	r12
    28d8:	df 92       	push	r13
    28da:	ef 92       	push	r14
    28dc:	ff 92       	push	r15
    28de:	0f 93       	push	r16
    28e0:	cf 93       	push	r28
    28e2:	df 93       	push	r29
    28e4:	eb 01       	movw	r28, r22
    28e6:	69 01       	movw	r12, r18
    28e8:	7a 01       	movw	r14, r20
	if (disk_status(drv) & STA_NOINIT) return RES_NOTRDY;
    28ea:	1e df       	rcall	.-452    	; 0x2728 <disk_status>
    28ec:	80 fd       	sbrc	r24, 0
    28ee:	3e c0       	rjmp	.+124    	; 0x296c <disk_read+0x96>
	if (!(CardType & CT_BLOCK)) sector *= 512;	/* Convert LBA to byte address if needed */
    28f0:	80 91 46 04 	lds	r24, 0x0446	; 0x800446 <_ZL8CardType>
    28f4:	83 fd       	sbrc	r24, 3
    28f6:	09 c0       	rjmp	.+18     	; 0x290a <disk_read+0x34>
    28f8:	0b 2e       	mov	r0, r27
    28fa:	b9 e0       	ldi	r27, 0x09	; 9
    28fc:	cc 0c       	add	r12, r12
    28fe:	dd 1c       	adc	r13, r13
    2900:	ee 1c       	adc	r14, r14
    2902:	ff 1c       	adc	r15, r15
    2904:	ba 95       	dec	r27
    2906:	d1 f7       	brne	.-12     	; 0x28fc <disk_read+0x26>
    2908:	b0 2d       	mov	r27, r0

	if (count == 1) {	/* Single block read */
    290a:	01 30       	cpi	r16, 0x01	; 1
    290c:	a1 f4       	brne	.+40     	; 0x2936 <disk_read+0x60>
		if ((send_cmd(CMD17, sector) == 0)	/* READ_SINGLE_BLOCK */
    290e:	b7 01       	movw	r22, r14
    2910:	a6 01       	movw	r20, r12
    2912:	81 e1       	ldi	r24, 0x11	; 17
    2914:	a9 de       	rcall	.-686    	; 0x2668 <_ZL8send_cmdhm>
			&& rcvr_datablock(buff, 512))
    2916:	81 11       	cpse	r24, r1
    2918:	08 c0       	rjmp	.+16     	; 0x292a <disk_read+0x54>
    291a:	60 e0       	ldi	r22, 0x00	; 0
    291c:	72 e0       	ldi	r23, 0x02	; 2
    291e:	ce 01       	movw	r24, r28
    2920:	31 de       	rcall	.-926    	; 0x2584 <_ZL14rcvr_datablockPhj>
    2922:	89 2b       	or	r24, r25
    2924:	21 f0       	breq	.+8      	; 0x292e <disk_read+0x58>
    2926:	81 e0       	ldi	r24, 0x01	; 1
    2928:	03 c0       	rjmp	.+6      	; 0x2930 <disk_read+0x5a>
    292a:	80 e0       	ldi	r24, 0x00	; 0
    292c:	01 c0       	rjmp	.+2      	; 0x2930 <disk_read+0x5a>
    292e:	80 e0       	ldi	r24, 0x00	; 0
{
	if (disk_status(drv) & STA_NOINIT) return RES_NOTRDY;
	if (!(CardType & CT_BLOCK)) sector *= 512;	/* Convert LBA to byte address if needed */

	if (count == 1) {	/* Single block read */
		if ((send_cmd(CMD17, sector) == 0)	/* READ_SINGLE_BLOCK */
    2930:	81 11       	cpse	r24, r1
    2932:	16 c0       	rjmp	.+44     	; 0x2960 <disk_read+0x8a>
    2934:	16 c0       	rjmp	.+44     	; 0x2962 <disk_read+0x8c>
			&& rcvr_datablock(buff, 512))
			count = 0;
	}
	else {				/* Multiple block read */
		if (send_cmd(CMD18, sector) == 0) {	/* READ_MULTIPLE_BLOCK */
    2936:	b7 01       	movw	r22, r14
    2938:	a6 01       	movw	r20, r12
    293a:	82 e1       	ldi	r24, 0x12	; 18
    293c:	95 de       	rcall	.-726    	; 0x2668 <_ZL8send_cmdhm>
    293e:	81 11       	cpse	r24, r1
    2940:	10 c0       	rjmp	.+32     	; 0x2962 <disk_read+0x8c>
			do {
				if (!rcvr_datablock(buff, 512)) break;
    2942:	60 e0       	ldi	r22, 0x00	; 0
    2944:	72 e0       	ldi	r23, 0x02	; 2
    2946:	ce 01       	movw	r24, r28
    2948:	1d de       	rcall	.-966    	; 0x2584 <_ZL14rcvr_datablockPhj>
    294a:	89 2b       	or	r24, r25
    294c:	19 f0       	breq	.+6      	; 0x2954 <disk_read+0x7e>
    294e:	de 5f       	subi	r29, 0xFE	; 254
				buff += 512;
    2950:	01 50       	subi	r16, 0x01	; 1
			&& rcvr_datablock(buff, 512))
			count = 0;
	}
	else {				/* Multiple block read */
		if (send_cmd(CMD18, sector) == 0) {	/* READ_MULTIPLE_BLOCK */
			do {
    2952:	b9 f7       	brne	.-18     	; 0x2942 <disk_read+0x6c>
				if (!rcvr_datablock(buff, 512)) break;
				buff += 512;
			} while (--count);
			send_cmd(CMD12, 0);				/* STOP_TRANSMISSION */
    2954:	40 e0       	ldi	r20, 0x00	; 0
    2956:	50 e0       	ldi	r21, 0x00	; 0
    2958:	ba 01       	movw	r22, r20
    295a:	8c e0       	ldi	r24, 0x0C	; 12
    295c:	85 de       	rcall	.-758    	; 0x2668 <_ZL8send_cmdhm>
    295e:	01 c0       	rjmp	.+2      	; 0x2962 <disk_read+0x8c>
	if (!(CardType & CT_BLOCK)) sector *= 512;	/* Convert LBA to byte address if needed */

	if (count == 1) {	/* Single block read */
		if ((send_cmd(CMD17, sector) == 0)	/* READ_SINGLE_BLOCK */
			&& rcvr_datablock(buff, 512))
			count = 0;
    2960:	00 e0       	ldi	r16, 0x00	; 0
				buff += 512;
			} while (--count);
			send_cmd(CMD12, 0);				/* STOP_TRANSMISSION */
		}
	}
	deselect();
    2962:	e1 dd       	rcall	.-1086   	; 0x2526 <_ZL8deselectv>
    2964:	00 23       	and	r16, r16

	return count ? RES_ERROR : RES_OK;
    2966:	21 f0       	breq	.+8      	; 0x2970 <disk_read+0x9a>
    2968:	81 e0       	ldi	r24, 0x01	; 1
    296a:	03 c0       	rjmp	.+6      	; 0x2972 <disk_read+0x9c>
    296c:	83 e0       	ldi	r24, 0x03	; 3
	BYTE *buff,			/* Pointer to the data buffer to store read data */
	DWORD sector,		/* Start sector number (LBA) */
	BYTE count			/* Sector count (1..256(0)) */
)
{
	if (disk_status(drv) & STA_NOINIT) return RES_NOTRDY;
    296e:	01 c0       	rjmp	.+2      	; 0x2972 <disk_read+0x9c>
    2970:	80 e0       	ldi	r24, 0x00	; 0
			send_cmd(CMD12, 0);				/* STOP_TRANSMISSION */
		}
	}
	deselect();

	return count ? RES_ERROR : RES_OK;
    2972:	df 91       	pop	r29
}
    2974:	cf 91       	pop	r28
    2976:	0f 91       	pop	r16
    2978:	ff 90       	pop	r15
    297a:	ef 90       	pop	r14
    297c:	df 90       	pop	r13
    297e:	cf 90       	pop	r12
    2980:	08 95       	ret

00002982 <disk_write>:
    2982:	cf 92       	push	r12
	BYTE drv,			/* Physical drive nmuber (0) */
	const BYTE *buff,	/* Pointer to the data to be written */
	DWORD sector,		/* Start sector number (LBA) */
	BYTE count			/* Sector count (1..256(0)) */
)
{
    2984:	df 92       	push	r13
    2986:	ef 92       	push	r14
    2988:	ff 92       	push	r15
    298a:	0f 93       	push	r16
    298c:	cf 93       	push	r28
    298e:	df 93       	push	r29
    2990:	eb 01       	movw	r28, r22
    2992:	69 01       	movw	r12, r18
    2994:	7a 01       	movw	r14, r20
	if (disk_status(drv) & STA_NOINIT) return RES_NOTRDY;
    2996:	c8 de       	rcall	.-624    	; 0x2728 <disk_status>
    2998:	80 fd       	sbrc	r24, 0
    299a:	47 c0       	rjmp	.+142    	; 0x2a2a <disk_write+0xa8>
	if (!(CardType & CT_BLOCK)) sector *= 512;	/* Convert LBA to byte address if needed */
    299c:	80 91 46 04 	lds	r24, 0x0446	; 0x800446 <_ZL8CardType>
    29a0:	83 fd       	sbrc	r24, 3
    29a2:	09 c0       	rjmp	.+18     	; 0x29b6 <disk_write+0x34>
    29a4:	0b 2e       	mov	r0, r27
    29a6:	b9 e0       	ldi	r27, 0x09	; 9
    29a8:	cc 0c       	add	r12, r12
    29aa:	dd 1c       	adc	r13, r13
    29ac:	ee 1c       	adc	r14, r14
    29ae:	ff 1c       	adc	r15, r15
    29b0:	ba 95       	dec	r27
    29b2:	d1 f7       	brne	.-12     	; 0x29a8 <disk_write+0x26>
    29b4:	b0 2d       	mov	r27, r0

	if (count == 1) {	/* Single block write */
    29b6:	01 30       	cpi	r16, 0x01	; 1
    29b8:	99 f4       	brne	.+38     	; 0x29e0 <disk_write+0x5e>
		if ((send_cmd(CMD24, sector) == 0)	/* WRITE_BLOCK */
    29ba:	b7 01       	movw	r22, r14
    29bc:	a6 01       	movw	r20, r12
    29be:	88 e1       	ldi	r24, 0x18	; 24
    29c0:	53 de       	rcall	.-858    	; 0x2668 <_ZL8send_cmdhm>
			&& xmit_datablock(buff, 0xFE))
    29c2:	81 11       	cpse	r24, r1
    29c4:	07 c0       	rjmp	.+14     	; 0x29d4 <disk_write+0x52>
    29c6:	6e ef       	ldi	r22, 0xFE	; 254
    29c8:	ce 01       	movw	r24, r28
    29ca:	17 de       	rcall	.-978    	; 0x25fa <_ZL14xmit_datablockPKhh>
    29cc:	89 2b       	or	r24, r25
    29ce:	21 f0       	breq	.+8      	; 0x29d8 <disk_write+0x56>
    29d0:	81 e0       	ldi	r24, 0x01	; 1
    29d2:	03 c0       	rjmp	.+6      	; 0x29da <disk_write+0x58>
    29d4:	80 e0       	ldi	r24, 0x00	; 0
    29d6:	01 c0       	rjmp	.+2      	; 0x29da <disk_write+0x58>
    29d8:	80 e0       	ldi	r24, 0x00	; 0
{
	if (disk_status(drv) & STA_NOINIT) return RES_NOTRDY;
	if (!(CardType & CT_BLOCK)) sector *= 512;	/* Convert LBA to byte address if needed */

	if (count == 1) {	/* Single block write */
		if ((send_cmd(CMD24, sector) == 0)	/* WRITE_BLOCK */
    29da:	81 11       	cpse	r24, r1
    29dc:	1e c0       	rjmp	.+60     	; 0x2a1a <disk_write+0x98>
    29de:	20 c0       	rjmp	.+64     	; 0x2a20 <disk_write+0x9e>
			&& xmit_datablock(buff, 0xFE))
			count = 0;
	}
	else {				/* Multiple block write */
		if (CardType & CT_SDC) send_cmd(ACMD23, count);
    29e0:	86 70       	andi	r24, 0x06	; 6
    29e2:	31 f0       	breq	.+12     	; 0x29f0 <disk_write+0x6e>
    29e4:	40 2f       	mov	r20, r16
    29e6:	50 e0       	ldi	r21, 0x00	; 0
    29e8:	60 e0       	ldi	r22, 0x00	; 0
    29ea:	70 e0       	ldi	r23, 0x00	; 0
    29ec:	87 e9       	ldi	r24, 0x97	; 151
    29ee:	3c de       	rcall	.-904    	; 0x2668 <_ZL8send_cmdhm>
		if (send_cmd(CMD25, sector) == 0) {	/* WRITE_MULTIPLE_BLOCK */
    29f0:	b7 01       	movw	r22, r14
    29f2:	a6 01       	movw	r20, r12
    29f4:	89 e1       	ldi	r24, 0x19	; 25
    29f6:	38 de       	rcall	.-912    	; 0x2668 <_ZL8send_cmdhm>
    29f8:	81 11       	cpse	r24, r1
    29fa:	12 c0       	rjmp	.+36     	; 0x2a20 <disk_write+0x9e>
			do {
				if (!xmit_datablock(buff, 0xFC)) break;
    29fc:	6c ef       	ldi	r22, 0xFC	; 252
    29fe:	ce 01       	movw	r24, r28
    2a00:	fc dd       	rcall	.-1032   	; 0x25fa <_ZL14xmit_datablockPKhh>
    2a02:	89 2b       	or	r24, r25
    2a04:	19 f0       	breq	.+6      	; 0x2a0c <disk_write+0x8a>
    2a06:	de 5f       	subi	r29, 0xFE	; 254
			count = 0;
	}
	else {				/* Multiple block write */
		if (CardType & CT_SDC) send_cmd(ACMD23, count);
		if (send_cmd(CMD25, sector) == 0) {	/* WRITE_MULTIPLE_BLOCK */
			do {
    2a08:	01 50       	subi	r16, 0x01	; 1
    2a0a:	c1 f7       	brne	.-16     	; 0x29fc <disk_write+0x7a>
				if (!xmit_datablock(buff, 0xFC)) break;
				buff += 512;
			} while (--count);
			if (!xmit_datablock(0, 0xFD))	/* STOP_TRAN token */
    2a0c:	6d ef       	ldi	r22, 0xFD	; 253
    2a0e:	80 e0       	ldi	r24, 0x00	; 0
    2a10:	90 e0       	ldi	r25, 0x00	; 0
    2a12:	f3 dd       	rcall	.-1050   	; 0x25fa <_ZL14xmit_datablockPKhh>
    2a14:	89 2b       	or	r24, r25
    2a16:	19 f0       	breq	.+6      	; 0x2a1e <disk_write+0x9c>
    2a18:	03 c0       	rjmp	.+6      	; 0x2a20 <disk_write+0x9e>
	if (!(CardType & CT_BLOCK)) sector *= 512;	/* Convert LBA to byte address if needed */

	if (count == 1) {	/* Single block write */
		if ((send_cmd(CMD24, sector) == 0)	/* WRITE_BLOCK */
			&& xmit_datablock(buff, 0xFE))
			count = 0;
    2a1a:	00 e0       	ldi	r16, 0x00	; 0
    2a1c:	01 c0       	rjmp	.+2      	; 0x2a20 <disk_write+0x9e>
			do {
				if (!xmit_datablock(buff, 0xFC)) break;
				buff += 512;
			} while (--count);
			if (!xmit_datablock(0, 0xFD))	/* STOP_TRAN token */
				count = 1;
    2a1e:	01 e0       	ldi	r16, 0x01	; 1
		}
	}
	deselect();
    2a20:	82 dd       	rcall	.-1276   	; 0x2526 <_ZL8deselectv>
    2a22:	00 23       	and	r16, r16

	return count ? RES_ERROR : RES_OK;
    2a24:	21 f0       	breq	.+8      	; 0x2a2e <disk_write+0xac>
    2a26:	81 e0       	ldi	r24, 0x01	; 1
    2a28:	03 c0       	rjmp	.+6      	; 0x2a30 <disk_write+0xae>
    2a2a:	83 e0       	ldi	r24, 0x03	; 3
	const BYTE *buff,	/* Pointer to the data to be written */
	DWORD sector,		/* Start sector number (LBA) */
	BYTE count			/* Sector count (1..256(0)) */
)
{
	if (disk_status(drv) & STA_NOINIT) return RES_NOTRDY;
    2a2c:	01 c0       	rjmp	.+2      	; 0x2a30 <disk_write+0xae>
    2a2e:	80 e0       	ldi	r24, 0x00	; 0
				count = 1;
		}
	}
	deselect();

	return count ? RES_ERROR : RES_OK;
    2a30:	df 91       	pop	r29
}
    2a32:	cf 91       	pop	r28
    2a34:	0f 91       	pop	r16
    2a36:	ff 90       	pop	r15
    2a38:	ef 90       	pop	r14
    2a3a:	df 90       	pop	r13
    2a3c:	cf 90       	pop	r12
    2a3e:	08 95       	ret

00002a40 <disk_ioctl>:
    2a40:	ef 92       	push	r14
DRESULT disk_ioctl (
	BYTE drv,		/* Physical drive nmuber (0) */
	BYTE ctrl,		/* Control code */
	void *buff		/* Buffer to send/receive control data */
)
{
    2a42:	ff 92       	push	r15
    2a44:	1f 93       	push	r17
    2a46:	cf 93       	push	r28
    2a48:	df 93       	push	r29
    2a4a:	cd b7       	in	r28, 0x3d	; 61
    2a4c:	de b7       	in	r29, 0x3e	; 62
    2a4e:	60 97       	sbiw	r28, 0x10	; 16
    2a50:	0f b6       	in	r0, 0x3f	; 63
    2a52:	f8 94       	cli
    2a54:	de bf       	out	0x3e, r29	; 62
    2a56:	0f be       	out	0x3f, r0	; 63
    2a58:	cd bf       	out	0x3d, r28	; 61
    2a5a:	16 2f       	mov	r17, r22
    2a5c:	7a 01       	movw	r14, r20
	DRESULT res;
	BYTE n, csd[16];
	DWORD cs;


	if (disk_status(drv) & STA_NOINIT) return RES_NOTRDY;	/* Check if card is in the socket */
    2a5e:	64 de       	rcall	.-824    	; 0x2728 <disk_status>
    2a60:	80 fd       	sbrc	r24, 0
    2a62:	a9 c0       	rjmp	.+338    	; 0x2bb6 <disk_ioctl+0x176>

	res = RES_ERROR;
	switch (ctrl) {
    2a64:	11 30       	cpi	r17, 0x01	; 1
    2a66:	59 f0       	breq	.+22     	; 0x2a7e <disk_ioctl+0x3e>
    2a68:	20 f0       	brcs	.+8      	; 0x2a72 <disk_ioctl+0x32>
    2a6a:	13 30       	cpi	r17, 0x03	; 3
    2a6c:	09 f4       	brne	.+2      	; 0x2a70 <disk_ioctl+0x30>
    2a6e:	90 c0       	rjmp	.+288    	; 0x2b90 <disk_ioctl+0x150>
		case CTRL_SYNC :		/* Make sure that no pending write process */
			if (select()) res = RES_OK;
    2a70:	9a c0       	rjmp	.+308    	; 0x2ba6 <disk_ioctl+0x166>
    2a72:	6a dd       	rcall	.-1324   	; 0x2548 <_ZL6selectv>
    2a74:	89 2b       	or	r24, r25
    2a76:	09 f0       	breq	.+2      	; 0x2a7a <disk_ioctl+0x3a>
    2a78:	98 c0       	rjmp	.+304    	; 0x2baa <disk_ioctl+0x16a>
	DWORD cs;


	if (disk_status(drv) & STA_NOINIT) return RES_NOTRDY;	/* Check if card is in the socket */

	res = RES_ERROR;
    2a7a:	11 e0       	ldi	r17, 0x01	; 1
    2a7c:	99 c0       	rjmp	.+306    	; 0x2bb0 <disk_ioctl+0x170>
		case CTRL_SYNC :		/* Make sure that no pending write process */
			if (select()) res = RES_OK;
			break;

		case GET_SECTOR_COUNT :	/* Get number of sectors on the disk (DWORD) */
			if ((send_cmd(CMD9, 0) == 0) && rcvr_datablock(csd, 16)) {
    2a7e:	40 e0       	ldi	r20, 0x00	; 0
    2a80:	50 e0       	ldi	r21, 0x00	; 0
    2a82:	ba 01       	movw	r22, r20
    2a84:	89 e0       	ldi	r24, 0x09	; 9
    2a86:	f0 dd       	rcall	.-1056   	; 0x2668 <_ZL8send_cmdhm>
    2a88:	81 11       	cpse	r24, r1
    2a8a:	09 c0       	rjmp	.+18     	; 0x2a9e <disk_ioctl+0x5e>
    2a8c:	60 e1       	ldi	r22, 0x10	; 16
    2a8e:	70 e0       	ldi	r23, 0x00	; 0
    2a90:	ce 01       	movw	r24, r28
    2a92:	01 96       	adiw	r24, 0x01	; 1
    2a94:	77 dd       	rcall	.-1298   	; 0x2584 <_ZL14rcvr_datablockPhj>
    2a96:	89 2b       	or	r24, r25
    2a98:	21 f0       	breq	.+8      	; 0x2aa2 <disk_ioctl+0x62>
    2a9a:	81 e0       	ldi	r24, 0x01	; 1
    2a9c:	03 c0       	rjmp	.+6      	; 0x2aa4 <disk_ioctl+0x64>
    2a9e:	80 e0       	ldi	r24, 0x00	; 0
    2aa0:	01 c0       	rjmp	.+2      	; 0x2aa4 <disk_ioctl+0x64>
    2aa2:	80 e0       	ldi	r24, 0x00	; 0
    2aa4:	88 23       	and	r24, r24
    2aa6:	09 f4       	brne	.+2      	; 0x2aaa <disk_ioctl+0x6a>
    2aa8:	82 c0       	rjmp	.+260    	; 0x2bae <disk_ioctl+0x16e>
				if ((csd[0] >> 6) == 1) {	/* SDC ver 2.00 */
    2aaa:	89 81       	ldd	r24, Y+1	; 0x01
    2aac:	90 e0       	ldi	r25, 0x00	; 0
    2aae:	08 2e       	mov	r0, r24
    2ab0:	89 2f       	mov	r24, r25
    2ab2:	00 0c       	add	r0, r0
    2ab4:	88 1f       	adc	r24, r24
    2ab6:	99 0b       	sbc	r25, r25
    2ab8:	00 0c       	add	r0, r0
    2aba:	88 1f       	adc	r24, r24
    2abc:	99 1f       	adc	r25, r25
    2abe:	01 97       	sbiw	r24, 0x01	; 1
    2ac0:	31 f5       	brne	.+76     	; 0x2b0e <disk_ioctl+0xce>
					cs = csd[9] + ((WORD)csd[8] << 8) + ((DWORD)(csd[7] & 63) << 16) + 1;
    2ac2:	8a 85       	ldd	r24, Y+10	; 0x0a
    2ac4:	29 85       	ldd	r18, Y+9	; 0x09
    2ac6:	30 e0       	ldi	r19, 0x00	; 0
    2ac8:	32 2f       	mov	r19, r18
    2aca:	22 27       	eor	r18, r18
    2acc:	28 0f       	add	r18, r24
    2ace:	31 1d       	adc	r19, r1
    2ad0:	88 85       	ldd	r24, Y+8	; 0x08
    2ad2:	8f 73       	andi	r24, 0x3F	; 63
    2ad4:	90 e0       	ldi	r25, 0x00	; 0
    2ad6:	a0 e0       	ldi	r26, 0x00	; 0
    2ad8:	b0 e0       	ldi	r27, 0x00	; 0
    2ada:	dc 01       	movw	r26, r24
    2adc:	99 27       	eor	r25, r25
    2ade:	88 27       	eor	r24, r24
    2ae0:	82 0f       	add	r24, r18
    2ae2:	93 1f       	adc	r25, r19
    2ae4:	a1 1d       	adc	r26, r1
    2ae6:	b1 1d       	adc	r27, r1
    2ae8:	01 96       	adiw	r24, 0x01	; 1
    2aea:	a1 1d       	adc	r26, r1
    2aec:	b1 1d       	adc	r27, r1
					*(DWORD*)buff = cs << 10;
    2aee:	07 2e       	mov	r0, r23
    2af0:	7a e0       	ldi	r23, 0x0A	; 10
    2af2:	88 0f       	add	r24, r24
    2af4:	99 1f       	adc	r25, r25
    2af6:	aa 1f       	adc	r26, r26
    2af8:	bb 1f       	adc	r27, r27
    2afa:	7a 95       	dec	r23
    2afc:	d1 f7       	brne	.-12     	; 0x2af2 <disk_ioctl+0xb2>
    2afe:	70 2d       	mov	r23, r0
    2b00:	f7 01       	movw	r30, r14
    2b02:	80 83       	st	Z, r24
    2b04:	91 83       	std	Z+1, r25	; 0x01
    2b06:	a2 83       	std	Z+2, r26	; 0x02
    2b08:	b3 83       	std	Z+3, r27	; 0x03
				} else {					/* SDC ver 1.XX or MMC */
					n = (csd[5] & 15) + ((csd[10] & 128) >> 7) + ((csd[9] & 3) << 1) + 2;
					cs = (csd[8] >> 6) + ((WORD)csd[7] << 2) + ((WORD)(csd[6] & 3) << 10) + 1;
					*(DWORD*)buff = cs << (n - 9);
				}
				res = RES_OK;
    2b0a:	10 e0       	ldi	r17, 0x00	; 0
    2b0c:	51 c0       	rjmp	.+162    	; 0x2bb0 <disk_ioctl+0x170>
			if ((send_cmd(CMD9, 0) == 0) && rcvr_datablock(csd, 16)) {
				if ((csd[0] >> 6) == 1) {	/* SDC ver 2.00 */
					cs = csd[9] + ((WORD)csd[8] << 8) + ((DWORD)(csd[7] & 63) << 16) + 1;
					*(DWORD*)buff = cs << 10;
				} else {					/* SDC ver 1.XX or MMC */
					n = (csd[5] & 15) + ((csd[10] & 128) >> 7) + ((csd[9] & 3) << 1) + 2;
    2b0e:	8e 81       	ldd	r24, Y+6	; 0x06
    2b10:	2b 85       	ldd	r18, Y+11	; 0x0b
    2b12:	9a 85       	ldd	r25, Y+10	; 0x0a
    2b14:	38 2f       	mov	r19, r24
    2b16:	3f 70       	andi	r19, 0x0F	; 15
    2b18:	82 2f       	mov	r24, r18
    2b1a:	88 1f       	adc	r24, r24
    2b1c:	88 27       	eor	r24, r24
    2b1e:	88 1f       	adc	r24, r24
    2b20:	83 0f       	add	r24, r19
    2b22:	93 70       	andi	r25, 0x03	; 3
    2b24:	99 0f       	add	r25, r25
    2b26:	89 0f       	add	r24, r25
    2b28:	42 e0       	ldi	r20, 0x02	; 2
    2b2a:	48 0f       	add	r20, r24
					cs = (csd[8] >> 6) + ((WORD)csd[7] << 2) + ((WORD)(csd[6] & 3) << 10) + 1;
    2b2c:	89 85       	ldd	r24, Y+9	; 0x09
    2b2e:	90 e0       	ldi	r25, 0x00	; 0
    2b30:	bc 01       	movw	r22, r24
    2b32:	06 2e       	mov	r0, r22
    2b34:	67 2f       	mov	r22, r23
    2b36:	00 0c       	add	r0, r0
    2b38:	66 1f       	adc	r22, r22
    2b3a:	77 0b       	sbc	r23, r23
    2b3c:	00 0c       	add	r0, r0
    2b3e:	66 1f       	adc	r22, r22
    2b40:	77 1f       	adc	r23, r23
    2b42:	28 85       	ldd	r18, Y+8	; 0x08
    2b44:	30 e0       	ldi	r19, 0x00	; 0
    2b46:	c9 01       	movw	r24, r18
    2b48:	88 0f       	add	r24, r24
    2b4a:	99 1f       	adc	r25, r25
    2b4c:	88 0f       	add	r24, r24
    2b4e:	99 1f       	adc	r25, r25
    2b50:	86 0f       	add	r24, r22
    2b52:	97 1f       	adc	r25, r23
    2b54:	2f 81       	ldd	r18, Y+7	; 0x07
    2b56:	23 70       	andi	r18, 0x03	; 3
    2b58:	30 e0       	ldi	r19, 0x00	; 0
    2b5a:	32 2f       	mov	r19, r18
    2b5c:	22 27       	eor	r18, r18
    2b5e:	33 0f       	add	r19, r19
    2b60:	33 0f       	add	r19, r19
    2b62:	82 0f       	add	r24, r18
    2b64:	93 1f       	adc	r25, r19
    2b66:	01 96       	adiw	r24, 0x01	; 1
    2b68:	a0 e0       	ldi	r26, 0x00	; 0
    2b6a:	b0 e0       	ldi	r27, 0x00	; 0
					*(DWORD*)buff = cs << (n - 9);
    2b6c:	24 2f       	mov	r18, r20
    2b6e:	30 e0       	ldi	r19, 0x00	; 0
    2b70:	29 50       	subi	r18, 0x09	; 9
    2b72:	31 09       	sbc	r19, r1
    2b74:	04 c0       	rjmp	.+8      	; 0x2b7e <disk_ioctl+0x13e>
    2b76:	88 0f       	add	r24, r24
    2b78:	99 1f       	adc	r25, r25
    2b7a:	aa 1f       	adc	r26, r26
    2b7c:	bb 1f       	adc	r27, r27
    2b7e:	2a 95       	dec	r18
    2b80:	d2 f7       	brpl	.-12     	; 0x2b76 <disk_ioctl+0x136>
    2b82:	f7 01       	movw	r30, r14
    2b84:	80 83       	st	Z, r24
    2b86:	91 83       	std	Z+1, r25	; 0x01
    2b88:	a2 83       	std	Z+2, r26	; 0x02
    2b8a:	b3 83       	std	Z+3, r27	; 0x03
				}
				res = RES_OK;
    2b8c:	10 e0       	ldi	r17, 0x00	; 0
    2b8e:	10 c0       	rjmp	.+32     	; 0x2bb0 <disk_ioctl+0x170>
			}
			break;

		case GET_BLOCK_SIZE :	/* Get erase block size in unit of sector (DWORD) */
			*(DWORD*)buff = 128;
    2b90:	80 e8       	ldi	r24, 0x80	; 128
    2b92:	90 e0       	ldi	r25, 0x00	; 0
    2b94:	a0 e0       	ldi	r26, 0x00	; 0
    2b96:	b0 e0       	ldi	r27, 0x00	; 0
    2b98:	f7 01       	movw	r30, r14
    2b9a:	80 83       	st	Z, r24
    2b9c:	91 83       	std	Z+1, r25	; 0x01
    2b9e:	a2 83       	std	Z+2, r26	; 0x02
    2ba0:	b3 83       	std	Z+3, r27	; 0x03
			res = RES_OK;
    2ba2:	10 e0       	ldi	r17, 0x00	; 0
			break;
    2ba4:	05 c0       	rjmp	.+10     	; 0x2bb0 <disk_ioctl+0x170>

		default:
			res = RES_PARERR;
    2ba6:	14 e0       	ldi	r17, 0x04	; 4
	if (disk_status(drv) & STA_NOINIT) return RES_NOTRDY;	/* Check if card is in the socket */

	res = RES_ERROR;
	switch (ctrl) {
		case CTRL_SYNC :		/* Make sure that no pending write process */
			if (select()) res = RES_OK;
    2ba8:	03 c0       	rjmp	.+6      	; 0x2bb0 <disk_ioctl+0x170>
    2baa:	10 e0       	ldi	r17, 0x00	; 0
	DWORD cs;


	if (disk_status(drv) & STA_NOINIT) return RES_NOTRDY;	/* Check if card is in the socket */

	res = RES_ERROR;
    2bac:	01 c0       	rjmp	.+2      	; 0x2bb0 <disk_ioctl+0x170>

		default:
			res = RES_PARERR;
	}

	deselect();
    2bae:	11 e0       	ldi	r17, 0x01	; 1
    2bb0:	ba dc       	rcall	.-1676   	; 0x2526 <_ZL8deselectv>

	return res;
    2bb2:	81 2f       	mov	r24, r17
    2bb4:	01 c0       	rjmp	.+2      	; 0x2bb8 <disk_ioctl+0x178>
	DRESULT res;
	BYTE n, csd[16];
	DWORD cs;


	if (disk_status(drv) & STA_NOINIT) return RES_NOTRDY;	/* Check if card is in the socket */
    2bb6:	83 e0       	ldi	r24, 0x03	; 3
	}

	deselect();

	return res;
}
    2bb8:	60 96       	adiw	r28, 0x10	; 16
    2bba:	0f b6       	in	r0, 0x3f	; 63
    2bbc:	f8 94       	cli
    2bbe:	de bf       	out	0x3e, r29	; 62
    2bc0:	0f be       	out	0x3f, r0	; 63
    2bc2:	cd bf       	out	0x3d, r28	; 61
    2bc4:	df 91       	pop	r29
    2bc6:	cf 91       	pop	r28
    2bc8:	1f 91       	pop	r17
    2bca:	ff 90       	pop	r15
    2bcc:	ef 90       	pop	r14
    2bce:	08 95       	ret

00002bd0 <__udivmodsi4>:
    2bd0:	a1 e2       	ldi	r26, 0x21	; 33
    2bd2:	1a 2e       	mov	r1, r26
    2bd4:	aa 1b       	sub	r26, r26
    2bd6:	bb 1b       	sub	r27, r27
    2bd8:	fd 01       	movw	r30, r26
    2bda:	0d c0       	rjmp	.+26     	; 0x2bf6 <__udivmodsi4_ep>

00002bdc <__udivmodsi4_loop>:
    2bdc:	aa 1f       	adc	r26, r26
    2bde:	bb 1f       	adc	r27, r27
    2be0:	ee 1f       	adc	r30, r30
    2be2:	ff 1f       	adc	r31, r31
    2be4:	a2 17       	cp	r26, r18
    2be6:	b3 07       	cpc	r27, r19
    2be8:	e4 07       	cpc	r30, r20
    2bea:	f5 07       	cpc	r31, r21
    2bec:	20 f0       	brcs	.+8      	; 0x2bf6 <__udivmodsi4_ep>
    2bee:	a2 1b       	sub	r26, r18
    2bf0:	b3 0b       	sbc	r27, r19
    2bf2:	e4 0b       	sbc	r30, r20
    2bf4:	f5 0b       	sbc	r31, r21

00002bf6 <__udivmodsi4_ep>:
    2bf6:	66 1f       	adc	r22, r22
    2bf8:	77 1f       	adc	r23, r23
    2bfa:	88 1f       	adc	r24, r24
    2bfc:	99 1f       	adc	r25, r25
    2bfe:	1a 94       	dec	r1
    2c00:	69 f7       	brne	.-38     	; 0x2bdc <__udivmodsi4_loop>
    2c02:	60 95       	com	r22
    2c04:	70 95       	com	r23
    2c06:	80 95       	com	r24
    2c08:	90 95       	com	r25
    2c0a:	9b 01       	movw	r18, r22
    2c0c:	ac 01       	movw	r20, r24
    2c0e:	bd 01       	movw	r22, r26
    2c10:	cf 01       	movw	r24, r30
    2c12:	08 95       	ret

00002c14 <__muluhisi3>:
    2c14:	09 d0       	rcall	.+18     	; 0x2c28 <__umulhisi3>
    2c16:	a5 9f       	mul	r26, r21
    2c18:	90 0d       	add	r25, r0
    2c1a:	b4 9f       	mul	r27, r20
    2c1c:	90 0d       	add	r25, r0
    2c1e:	a4 9f       	mul	r26, r20
    2c20:	80 0d       	add	r24, r0
    2c22:	91 1d       	adc	r25, r1
    2c24:	11 24       	eor	r1, r1
    2c26:	08 95       	ret

00002c28 <__umulhisi3>:
    2c28:	a2 9f       	mul	r26, r18
    2c2a:	b0 01       	movw	r22, r0
    2c2c:	b3 9f       	mul	r27, r19
    2c2e:	c0 01       	movw	r24, r0
    2c30:	a3 9f       	mul	r26, r19
    2c32:	70 0d       	add	r23, r0
    2c34:	81 1d       	adc	r24, r1
    2c36:	11 24       	eor	r1, r1
    2c38:	91 1d       	adc	r25, r1
    2c3a:	b2 9f       	mul	r27, r18
    2c3c:	70 0d       	add	r23, r0
    2c3e:	81 1d       	adc	r24, r1
    2c40:	11 24       	eor	r1, r1
    2c42:	91 1d       	adc	r25, r1
    2c44:	08 95       	ret

00002c46 <malloc>:
    2c46:	0f 93       	push	r16
    2c48:	1f 93       	push	r17
    2c4a:	cf 93       	push	r28
    2c4c:	df 93       	push	r29
    2c4e:	82 30       	cpi	r24, 0x02	; 2
    2c50:	91 05       	cpc	r25, r1
    2c52:	10 f4       	brcc	.+4      	; 0x2c58 <malloc+0x12>
    2c54:	82 e0       	ldi	r24, 0x02	; 2
    2c56:	90 e0       	ldi	r25, 0x00	; 0
    2c58:	e0 91 49 04 	lds	r30, 0x0449	; 0x800449 <__flp>
    2c5c:	f0 91 4a 04 	lds	r31, 0x044A	; 0x80044a <__flp+0x1>
    2c60:	20 e0       	ldi	r18, 0x00	; 0
    2c62:	30 e0       	ldi	r19, 0x00	; 0
    2c64:	a0 e0       	ldi	r26, 0x00	; 0
    2c66:	b0 e0       	ldi	r27, 0x00	; 0
    2c68:	30 97       	sbiw	r30, 0x00	; 0
    2c6a:	19 f1       	breq	.+70     	; 0x2cb2 <malloc+0x6c>
    2c6c:	40 81       	ld	r20, Z
    2c6e:	51 81       	ldd	r21, Z+1	; 0x01
    2c70:	02 81       	ldd	r16, Z+2	; 0x02
    2c72:	13 81       	ldd	r17, Z+3	; 0x03
    2c74:	48 17       	cp	r20, r24
    2c76:	59 07       	cpc	r21, r25
    2c78:	c8 f0       	brcs	.+50     	; 0x2cac <malloc+0x66>
    2c7a:	84 17       	cp	r24, r20
    2c7c:	95 07       	cpc	r25, r21
    2c7e:	69 f4       	brne	.+26     	; 0x2c9a <malloc+0x54>
    2c80:	10 97       	sbiw	r26, 0x00	; 0
    2c82:	31 f0       	breq	.+12     	; 0x2c90 <malloc+0x4a>
    2c84:	12 96       	adiw	r26, 0x02	; 2
    2c86:	0c 93       	st	X, r16
    2c88:	12 97       	sbiw	r26, 0x02	; 2
    2c8a:	13 96       	adiw	r26, 0x03	; 3
    2c8c:	1c 93       	st	X, r17
    2c8e:	27 c0       	rjmp	.+78     	; 0x2cde <malloc+0x98>
    2c90:	00 93 49 04 	sts	0x0449, r16	; 0x800449 <__flp>
    2c94:	10 93 4a 04 	sts	0x044A, r17	; 0x80044a <__flp+0x1>
    2c98:	22 c0       	rjmp	.+68     	; 0x2cde <malloc+0x98>
    2c9a:	21 15       	cp	r18, r1
    2c9c:	31 05       	cpc	r19, r1
    2c9e:	19 f0       	breq	.+6      	; 0x2ca6 <malloc+0x60>
    2ca0:	42 17       	cp	r20, r18
    2ca2:	53 07       	cpc	r21, r19
    2ca4:	18 f4       	brcc	.+6      	; 0x2cac <malloc+0x66>
    2ca6:	9a 01       	movw	r18, r20
    2ca8:	bd 01       	movw	r22, r26
    2caa:	ef 01       	movw	r28, r30
    2cac:	df 01       	movw	r26, r30
    2cae:	f8 01       	movw	r30, r16
    2cb0:	db cf       	rjmp	.-74     	; 0x2c68 <malloc+0x22>
    2cb2:	21 15       	cp	r18, r1
    2cb4:	31 05       	cpc	r19, r1
    2cb6:	f9 f0       	breq	.+62     	; 0x2cf6 <malloc+0xb0>
    2cb8:	28 1b       	sub	r18, r24
    2cba:	39 0b       	sbc	r19, r25
    2cbc:	24 30       	cpi	r18, 0x04	; 4
    2cbe:	31 05       	cpc	r19, r1
    2cc0:	80 f4       	brcc	.+32     	; 0x2ce2 <malloc+0x9c>
    2cc2:	8a 81       	ldd	r24, Y+2	; 0x02
    2cc4:	9b 81       	ldd	r25, Y+3	; 0x03
    2cc6:	61 15       	cp	r22, r1
    2cc8:	71 05       	cpc	r23, r1
    2cca:	21 f0       	breq	.+8      	; 0x2cd4 <malloc+0x8e>
    2ccc:	fb 01       	movw	r30, r22
    2cce:	93 83       	std	Z+3, r25	; 0x03
    2cd0:	82 83       	std	Z+2, r24	; 0x02
    2cd2:	04 c0       	rjmp	.+8      	; 0x2cdc <malloc+0x96>
    2cd4:	90 93 4a 04 	sts	0x044A, r25	; 0x80044a <__flp+0x1>
    2cd8:	80 93 49 04 	sts	0x0449, r24	; 0x800449 <__flp>
    2cdc:	fe 01       	movw	r30, r28
    2cde:	32 96       	adiw	r30, 0x02	; 2
    2ce0:	44 c0       	rjmp	.+136    	; 0x2d6a <malloc+0x124>
    2ce2:	fe 01       	movw	r30, r28
    2ce4:	e2 0f       	add	r30, r18
    2ce6:	f3 1f       	adc	r31, r19
    2ce8:	81 93       	st	Z+, r24
    2cea:	91 93       	st	Z+, r25
    2cec:	22 50       	subi	r18, 0x02	; 2
    2cee:	31 09       	sbc	r19, r1
    2cf0:	39 83       	std	Y+1, r19	; 0x01
    2cf2:	28 83       	st	Y, r18
    2cf4:	3a c0       	rjmp	.+116    	; 0x2d6a <malloc+0x124>
    2cf6:	20 91 47 04 	lds	r18, 0x0447	; 0x800447 <__brkval>
    2cfa:	30 91 48 04 	lds	r19, 0x0448	; 0x800448 <__brkval+0x1>
    2cfe:	23 2b       	or	r18, r19
    2d00:	41 f4       	brne	.+16     	; 0x2d12 <malloc+0xcc>
    2d02:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
    2d06:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
    2d0a:	30 93 48 04 	sts	0x0448, r19	; 0x800448 <__brkval+0x1>
    2d0e:	20 93 47 04 	sts	0x0447, r18	; 0x800447 <__brkval>
    2d12:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    2d16:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    2d1a:	21 15       	cp	r18, r1
    2d1c:	31 05       	cpc	r19, r1
    2d1e:	41 f4       	brne	.+16     	; 0x2d30 <malloc+0xea>
    2d20:	2d b7       	in	r18, 0x3d	; 61
    2d22:	3e b7       	in	r19, 0x3e	; 62
    2d24:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
    2d28:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
    2d2c:	24 1b       	sub	r18, r20
    2d2e:	35 0b       	sbc	r19, r21
    2d30:	e0 91 47 04 	lds	r30, 0x0447	; 0x800447 <__brkval>
    2d34:	f0 91 48 04 	lds	r31, 0x0448	; 0x800448 <__brkval+0x1>
    2d38:	e2 17       	cp	r30, r18
    2d3a:	f3 07       	cpc	r31, r19
    2d3c:	a0 f4       	brcc	.+40     	; 0x2d66 <malloc+0x120>
    2d3e:	2e 1b       	sub	r18, r30
    2d40:	3f 0b       	sbc	r19, r31
    2d42:	28 17       	cp	r18, r24
    2d44:	39 07       	cpc	r19, r25
    2d46:	78 f0       	brcs	.+30     	; 0x2d66 <malloc+0x120>
    2d48:	ac 01       	movw	r20, r24
    2d4a:	4e 5f       	subi	r20, 0xFE	; 254
    2d4c:	5f 4f       	sbci	r21, 0xFF	; 255
    2d4e:	24 17       	cp	r18, r20
    2d50:	35 07       	cpc	r19, r21
    2d52:	48 f0       	brcs	.+18     	; 0x2d66 <malloc+0x120>
    2d54:	4e 0f       	add	r20, r30
    2d56:	5f 1f       	adc	r21, r31
    2d58:	50 93 48 04 	sts	0x0448, r21	; 0x800448 <__brkval+0x1>
    2d5c:	40 93 47 04 	sts	0x0447, r20	; 0x800447 <__brkval>
    2d60:	81 93       	st	Z+, r24
    2d62:	91 93       	st	Z+, r25
    2d64:	02 c0       	rjmp	.+4      	; 0x2d6a <malloc+0x124>
    2d66:	e0 e0       	ldi	r30, 0x00	; 0
    2d68:	f0 e0       	ldi	r31, 0x00	; 0
    2d6a:	cf 01       	movw	r24, r30
    2d6c:	df 91       	pop	r29
    2d6e:	cf 91       	pop	r28
    2d70:	1f 91       	pop	r17
    2d72:	0f 91       	pop	r16
    2d74:	08 95       	ret

00002d76 <free>:
    2d76:	cf 93       	push	r28
    2d78:	df 93       	push	r29
    2d7a:	00 97       	sbiw	r24, 0x00	; 0
    2d7c:	09 f4       	brne	.+2      	; 0x2d80 <free+0xa>
    2d7e:	81 c0       	rjmp	.+258    	; 0x2e82 <free+0x10c>
    2d80:	fc 01       	movw	r30, r24
    2d82:	32 97       	sbiw	r30, 0x02	; 2
    2d84:	13 82       	std	Z+3, r1	; 0x03
    2d86:	12 82       	std	Z+2, r1	; 0x02
    2d88:	a0 91 49 04 	lds	r26, 0x0449	; 0x800449 <__flp>
    2d8c:	b0 91 4a 04 	lds	r27, 0x044A	; 0x80044a <__flp+0x1>
    2d90:	10 97       	sbiw	r26, 0x00	; 0
    2d92:	81 f4       	brne	.+32     	; 0x2db4 <free+0x3e>
    2d94:	20 81       	ld	r18, Z
    2d96:	31 81       	ldd	r19, Z+1	; 0x01
    2d98:	82 0f       	add	r24, r18
    2d9a:	93 1f       	adc	r25, r19
    2d9c:	20 91 47 04 	lds	r18, 0x0447	; 0x800447 <__brkval>
    2da0:	30 91 48 04 	lds	r19, 0x0448	; 0x800448 <__brkval+0x1>
    2da4:	28 17       	cp	r18, r24
    2da6:	39 07       	cpc	r19, r25
    2da8:	51 f5       	brne	.+84     	; 0x2dfe <free+0x88>
    2daa:	f0 93 48 04 	sts	0x0448, r31	; 0x800448 <__brkval+0x1>
    2dae:	e0 93 47 04 	sts	0x0447, r30	; 0x800447 <__brkval>
    2db2:	67 c0       	rjmp	.+206    	; 0x2e82 <free+0x10c>
    2db4:	ed 01       	movw	r28, r26
    2db6:	20 e0       	ldi	r18, 0x00	; 0
    2db8:	30 e0       	ldi	r19, 0x00	; 0
    2dba:	ce 17       	cp	r28, r30
    2dbc:	df 07       	cpc	r29, r31
    2dbe:	40 f4       	brcc	.+16     	; 0x2dd0 <free+0x5a>
    2dc0:	4a 81       	ldd	r20, Y+2	; 0x02
    2dc2:	5b 81       	ldd	r21, Y+3	; 0x03
    2dc4:	9e 01       	movw	r18, r28
    2dc6:	41 15       	cp	r20, r1
    2dc8:	51 05       	cpc	r21, r1
    2dca:	f1 f0       	breq	.+60     	; 0x2e08 <free+0x92>
    2dcc:	ea 01       	movw	r28, r20
    2dce:	f5 cf       	rjmp	.-22     	; 0x2dba <free+0x44>
    2dd0:	d3 83       	std	Z+3, r29	; 0x03
    2dd2:	c2 83       	std	Z+2, r28	; 0x02
    2dd4:	40 81       	ld	r20, Z
    2dd6:	51 81       	ldd	r21, Z+1	; 0x01
    2dd8:	84 0f       	add	r24, r20
    2dda:	95 1f       	adc	r25, r21
    2ddc:	c8 17       	cp	r28, r24
    2dde:	d9 07       	cpc	r29, r25
    2de0:	59 f4       	brne	.+22     	; 0x2df8 <free+0x82>
    2de2:	88 81       	ld	r24, Y
    2de4:	99 81       	ldd	r25, Y+1	; 0x01
    2de6:	84 0f       	add	r24, r20
    2de8:	95 1f       	adc	r25, r21
    2dea:	02 96       	adiw	r24, 0x02	; 2
    2dec:	91 83       	std	Z+1, r25	; 0x01
    2dee:	80 83       	st	Z, r24
    2df0:	8a 81       	ldd	r24, Y+2	; 0x02
    2df2:	9b 81       	ldd	r25, Y+3	; 0x03
    2df4:	93 83       	std	Z+3, r25	; 0x03
    2df6:	82 83       	std	Z+2, r24	; 0x02
    2df8:	21 15       	cp	r18, r1
    2dfa:	31 05       	cpc	r19, r1
    2dfc:	29 f4       	brne	.+10     	; 0x2e08 <free+0x92>
    2dfe:	f0 93 4a 04 	sts	0x044A, r31	; 0x80044a <__flp+0x1>
    2e02:	e0 93 49 04 	sts	0x0449, r30	; 0x800449 <__flp>
    2e06:	3d c0       	rjmp	.+122    	; 0x2e82 <free+0x10c>
    2e08:	e9 01       	movw	r28, r18
    2e0a:	fb 83       	std	Y+3, r31	; 0x03
    2e0c:	ea 83       	std	Y+2, r30	; 0x02
    2e0e:	49 91       	ld	r20, Y+
    2e10:	59 91       	ld	r21, Y+
    2e12:	c4 0f       	add	r28, r20
    2e14:	d5 1f       	adc	r29, r21
    2e16:	ec 17       	cp	r30, r28
    2e18:	fd 07       	cpc	r31, r29
    2e1a:	61 f4       	brne	.+24     	; 0x2e34 <free+0xbe>
    2e1c:	80 81       	ld	r24, Z
    2e1e:	91 81       	ldd	r25, Z+1	; 0x01
    2e20:	84 0f       	add	r24, r20
    2e22:	95 1f       	adc	r25, r21
    2e24:	02 96       	adiw	r24, 0x02	; 2
    2e26:	e9 01       	movw	r28, r18
    2e28:	99 83       	std	Y+1, r25	; 0x01
    2e2a:	88 83       	st	Y, r24
    2e2c:	82 81       	ldd	r24, Z+2	; 0x02
    2e2e:	93 81       	ldd	r25, Z+3	; 0x03
    2e30:	9b 83       	std	Y+3, r25	; 0x03
    2e32:	8a 83       	std	Y+2, r24	; 0x02
    2e34:	e0 e0       	ldi	r30, 0x00	; 0
    2e36:	f0 e0       	ldi	r31, 0x00	; 0
    2e38:	12 96       	adiw	r26, 0x02	; 2
    2e3a:	8d 91       	ld	r24, X+
    2e3c:	9c 91       	ld	r25, X
    2e3e:	13 97       	sbiw	r26, 0x03	; 3
    2e40:	00 97       	sbiw	r24, 0x00	; 0
    2e42:	19 f0       	breq	.+6      	; 0x2e4a <free+0xd4>
    2e44:	fd 01       	movw	r30, r26
    2e46:	dc 01       	movw	r26, r24
    2e48:	f7 cf       	rjmp	.-18     	; 0x2e38 <free+0xc2>
    2e4a:	8d 91       	ld	r24, X+
    2e4c:	9c 91       	ld	r25, X
    2e4e:	11 97       	sbiw	r26, 0x01	; 1
    2e50:	9d 01       	movw	r18, r26
    2e52:	2e 5f       	subi	r18, 0xFE	; 254
    2e54:	3f 4f       	sbci	r19, 0xFF	; 255
    2e56:	82 0f       	add	r24, r18
    2e58:	93 1f       	adc	r25, r19
    2e5a:	20 91 47 04 	lds	r18, 0x0447	; 0x800447 <__brkval>
    2e5e:	30 91 48 04 	lds	r19, 0x0448	; 0x800448 <__brkval+0x1>
    2e62:	28 17       	cp	r18, r24
    2e64:	39 07       	cpc	r19, r25
    2e66:	69 f4       	brne	.+26     	; 0x2e82 <free+0x10c>
    2e68:	30 97       	sbiw	r30, 0x00	; 0
    2e6a:	29 f4       	brne	.+10     	; 0x2e76 <free+0x100>
    2e6c:	10 92 4a 04 	sts	0x044A, r1	; 0x80044a <__flp+0x1>
    2e70:	10 92 49 04 	sts	0x0449, r1	; 0x800449 <__flp>
    2e74:	02 c0       	rjmp	.+4      	; 0x2e7a <free+0x104>
    2e76:	13 82       	std	Z+3, r1	; 0x03
    2e78:	12 82       	std	Z+2, r1	; 0x02
    2e7a:	b0 93 48 04 	sts	0x0448, r27	; 0x800448 <__brkval+0x1>
    2e7e:	a0 93 47 04 	sts	0x0447, r26	; 0x800447 <__brkval>
    2e82:	df 91       	pop	r29
    2e84:	cf 91       	pop	r28
    2e86:	08 95       	ret

00002e88 <_exit>:
    2e88:	f8 94       	cli

00002e8a <__stop_program>:
    2e8a:	ff cf       	rjmp	.-2      	; 0x2e8a <__stop_program>
