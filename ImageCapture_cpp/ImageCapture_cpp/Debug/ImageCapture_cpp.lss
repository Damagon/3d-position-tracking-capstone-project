
ImageCapture_cpp.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000246  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000001f2  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000246  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000278  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000100  00000000  00000000  000002b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00008211  00000000  00000000  000003b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000b2e  00000000  00000000  000085c9  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00001f96  00000000  00000000  000090f7  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000294  00000000  00000000  0000b090  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000a18  00000000  00000000  0000b324  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000dd8  00000000  00000000  0000bd3c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000108  00000000  00000000  0000cb14  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e2 ef       	ldi	r30, 0xF2	; 242
  a0:	f1 e0       	ldi	r31, 0x01	; 1
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a0 30       	cpi	r26, 0x00	; 0
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a0 e0       	ldi	r26, 0x00	; 0
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a0 30       	cpi	r26, 0x00	; 0
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	7e d0       	rcall	.+252    	; 0x1c0 <main>
  c4:	94 c0       	rjmp	.+296    	; 0x1ee <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <_Z15spi_master_inithh>:
	 }
	 
	 f_close(fp); // Close the file
	 
	 writeSPI(0x84,0x01,SS); //clear fifo flag
}
  c8:	84 b1       	in	r24, 0x04	; 4
  ca:	84 60       	ori	r24, 0x04	; 4
  cc:	84 b9       	out	0x04, r24	; 4
  ce:	85 b1       	in	r24, 0x05	; 5
  d0:	84 60       	ori	r24, 0x04	; 4
  d2:	85 b9       	out	0x05, r24	; 5
  d4:	84 b1       	in	r24, 0x04	; 4
  d6:	88 60       	ori	r24, 0x08	; 8
  d8:	84 b9       	out	0x04, r24	; 4
  da:	85 b1       	in	r24, 0x05	; 5
  dc:	88 60       	ori	r24, 0x08	; 8
  de:	85 b9       	out	0x05, r24	; 5
  e0:	84 b1       	in	r24, 0x04	; 4
  e2:	80 6a       	ori	r24, 0xA0	; 160
  e4:	84 b9       	out	0x04, r24	; 4
  e6:	08 95       	ret

000000e8 <_Z8i2c_initv>:
  e8:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
  ec:	8c e0       	ldi	r24, 0x0C	; 12
  ee:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7e00b8>
  f2:	81 b1       	in	r24, 0x01	; 1
  f4:	80 6c       	ori	r24, 0xC0	; 192
  f6:	81 b9       	out	0x01, r24	; 1
  f8:	82 b1       	in	r24, 0x02	; 2
  fa:	8f 7b       	andi	r24, 0xBF	; 191
  fc:	82 b9       	out	0x02, r24	; 2
  fe:	82 b1       	in	r24, 0x02	; 2
 100:	8f 77       	andi	r24, 0x7F	; 127
 102:	82 b9       	out	0x02, r24	; 2
 104:	08 95       	ret

00000106 <_Z5startv>:
 106:	82 b1       	in	r24, 0x02	; 2
 108:	80 64       	ori	r24, 0x40	; 64
 10a:	82 b9       	out	0x02, r24	; 2
 10c:	00 00       	nop
 10e:	82 b1       	in	r24, 0x02	; 2
 110:	80 68       	ori	r24, 0x80	; 128
 112:	82 b9       	out	0x02, r24	; 2
 114:	00 00       	nop
 116:	82 b1       	in	r24, 0x02	; 2
 118:	8f 7b       	andi	r24, 0xBF	; 191
 11a:	82 b9       	out	0x02, r24	; 2
 11c:	00 00       	nop
 11e:	82 b1       	in	r24, 0x02	; 2
 120:	8f 77       	andi	r24, 0x7F	; 127
 122:	82 b9       	out	0x02, r24	; 2
 124:	00 00       	nop
 126:	08 95       	ret

00000128 <_Z4stopv>:
 128:	82 b1       	in	r24, 0x02	; 2
 12a:	8f 7b       	andi	r24, 0xBF	; 191
 12c:	82 b9       	out	0x02, r24	; 2
 12e:	00 00       	nop
 130:	82 b1       	in	r24, 0x02	; 2
 132:	80 68       	ori	r24, 0x80	; 128
 134:	82 b9       	out	0x02, r24	; 2
 136:	00 00       	nop
 138:	82 b1       	in	r24, 0x02	; 2
 13a:	80 64       	ori	r24, 0x40	; 64
 13c:	82 b9       	out	0x02, r24	; 2
 13e:	00 00       	nop
 140:	08 95       	ret

00000142 <_Z2Txh>:
 142:	28 e0       	ldi	r18, 0x08	; 8
 144:	22 23       	and	r18, r18
 146:	a9 f0       	breq	.+42     	; 0x172 <_Z2Txh+0x30>
 148:	88 23       	and	r24, r24
 14a:	24 f4       	brge	.+8      	; 0x154 <_Z2Txh+0x12>
 14c:	92 b1       	in	r25, 0x02	; 2
 14e:	90 64       	ori	r25, 0x40	; 64
 150:	92 b9       	out	0x02, r25	; 2
 152:	03 c0       	rjmp	.+6      	; 0x15a <_Z2Txh+0x18>
 154:	92 b1       	in	r25, 0x02	; 2
 156:	9f 7b       	andi	r25, 0xBF	; 191
 158:	92 b9       	out	0x02, r25	; 2
 15a:	88 0f       	add	r24, r24
 15c:	00 00       	nop
 15e:	92 b1       	in	r25, 0x02	; 2
 160:	90 68       	ori	r25, 0x80	; 128
 162:	92 b9       	out	0x02, r25	; 2
 164:	00 00       	nop
 166:	92 b1       	in	r25, 0x02	; 2
 168:	9f 77       	andi	r25, 0x7F	; 127
 16a:	92 b9       	out	0x02, r25	; 2
 16c:	00 00       	nop
 16e:	21 50       	subi	r18, 0x01	; 1
 170:	e9 cf       	rjmp	.-46     	; 0x144 <_Z2Txh+0x2>
 172:	82 b1       	in	r24, 0x02	; 2
 174:	80 64       	ori	r24, 0x40	; 64
 176:	82 b9       	out	0x02, r24	; 2
 178:	82 b1       	in	r24, 0x02	; 2
 17a:	80 68       	ori	r24, 0x80	; 128
 17c:	82 b9       	out	0x02, r24	; 2
 17e:	00 00       	nop
 180:	80 b1       	in	r24, 0x00	; 0
 182:	82 95       	swap	r24
 184:	86 95       	lsr	r24
 186:	86 95       	lsr	r24
 188:	83 70       	andi	r24, 0x03	; 3
 18a:	91 e0       	ldi	r25, 0x01	; 1
 18c:	89 27       	eor	r24, r25
 18e:	92 b1       	in	r25, 0x02	; 2
 190:	9f 77       	andi	r25, 0x7F	; 127
 192:	92 b9       	out	0x02, r25	; 2
 194:	81 70       	andi	r24, 0x01	; 1
 196:	08 95       	ret

00000198 <_Z17i2c_bitbang_writehhh>:
 198:	1f 93       	push	r17
 19a:	cf 93       	push	r28
 19c:	df 93       	push	r29
 19e:	18 2f       	mov	r17, r24
 1a0:	d6 2f       	mov	r29, r22
 1a2:	c4 2f       	mov	r28, r20
 1a4:	b0 df       	rcall	.-160    	; 0x106 <_Z5startv>
 1a6:	88 e7       	ldi	r24, 0x78	; 120
 1a8:	cc df       	rcall	.-104    	; 0x142 <_Z2Txh>
 1aa:	81 2f       	mov	r24, r17
 1ac:	ca df       	rcall	.-108    	; 0x142 <_Z2Txh>
 1ae:	8d 2f       	mov	r24, r29
 1b0:	c8 df       	rcall	.-112    	; 0x142 <_Z2Txh>
 1b2:	8c 2f       	mov	r24, r28
 1b4:	c6 df       	rcall	.-116    	; 0x142 <_Z2Txh>
 1b6:	b8 df       	rcall	.-144    	; 0x128 <_Z4stopv>
 1b8:	df 91       	pop	r29
 1ba:	cf 91       	pop	r28
 1bc:	1f 91       	pop	r17
 1be:	08 95       	ret

000001c0 <main>:
	uint8_t data = i2c_readNak(); 
	//THIS CODE READS REGISTER - PUT INTO FCN LATER*/
	
	
	
	DDRD |= (1 << PD0); DDRD |= (1 << PD1);
 1c0:	8a b1       	in	r24, 0x0a	; 10
 1c2:	81 60       	ori	r24, 0x01	; 1
 1c4:	8a b9       	out	0x0a, r24	; 10
 1c6:	8a b1       	in	r24, 0x0a	; 10
 1c8:	82 60       	ori	r24, 0x02	; 2
 1ca:	8a b9       	out	0x0a, r24	; 10
	
	PORTD &= ~(1 << PD0);
 1cc:	8b b1       	in	r24, 0x0b	; 11
 1ce:	8e 7f       	andi	r24, 0xFE	; 254
 1d0:	8b b9       	out	0x0b, r24	; 11
	PORTD &= ~(1 << PD1);
 1d2:	8b b1       	in	r24, 0x0b	; 11
 1d4:	8d 7f       	andi	r24, 0xFD	; 253
 1d6:	8b b9       	out	0x0b, r24	; 11
	
	spi_master_init(0,SPI_CLOCK_DIV2);
 1d8:	64 e0       	ldi	r22, 0x04	; 4
 1da:	80 e0       	ldi	r24, 0x00	; 0
 1dc:	75 df       	rcall	.-278    	; 0xc8 <_Z15spi_master_inithh>
	i2c_init();
 1de:	84 df       	rcall	.-248    	; 0xe8 <_Z8i2c_initv>
 1e0:	40 e8       	ldi	r20, 0x80	; 128
	i2c_bitbang_write(0x30,0x08,0x80);
 1e2:	68 e0       	ldi	r22, 0x08	; 8
 1e4:	80 e3       	ldi	r24, 0x30	; 48
 1e6:	d8 df       	rcall	.-80     	; 0x198 <_Z17i2c_bitbang_writehhh>
 1e8:	80 e0       	ldi	r24, 0x00	; 0
	////sd_write(CS_CAM_2);
	//
	//PORTD|= (1 << PD0);
	//PORTD|= (1 << PD1);
	
}
 1ea:	90 e0       	ldi	r25, 0x00	; 0
 1ec:	08 95       	ret

000001ee <_exit>:
 1ee:	f8 94       	cli

000001f0 <__stop_program>:
 1f0:	ff cf       	rjmp	.-2      	; 0x1f0 <__stop_program>
