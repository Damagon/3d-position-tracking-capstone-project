
ImageCapture_cpp.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000b2  00800100  00004852  000048e6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00004852  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000023d  008001b2  008001b2  00004998  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00004998  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000049c8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000278  00000000  00000000  00004a08  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000a726  00000000  00000000  00004c80  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000ea3  00000000  00000000  0000f3a6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00003bd9  00000000  00000000  00010249  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000b84  00000000  00000000  00013e24  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000c45  00000000  00000000  000149a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00004b46  00000000  00000000  000155ed  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000278  00000000  00000000  0001a133  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
       2:	00 00       	nop
       4:	62 c0       	rjmp	.+196    	; 0xca <__bad_interrupt>
       6:	00 00       	nop
       8:	60 c0       	rjmp	.+192    	; 0xca <__bad_interrupt>
       a:	00 00       	nop
       c:	5e c0       	rjmp	.+188    	; 0xca <__bad_interrupt>
       e:	00 00       	nop
      10:	5c c0       	rjmp	.+184    	; 0xca <__bad_interrupt>
      12:	00 00       	nop
      14:	5a c0       	rjmp	.+180    	; 0xca <__bad_interrupt>
      16:	00 00       	nop
      18:	58 c0       	rjmp	.+176    	; 0xca <__bad_interrupt>
      1a:	00 00       	nop
      1c:	56 c0       	rjmp	.+172    	; 0xca <__bad_interrupt>
      1e:	00 00       	nop
      20:	54 c0       	rjmp	.+168    	; 0xca <__bad_interrupt>
      22:	00 00       	nop
      24:	52 c0       	rjmp	.+164    	; 0xca <__bad_interrupt>
      26:	00 00       	nop
      28:	50 c0       	rjmp	.+160    	; 0xca <__bad_interrupt>
      2a:	00 00       	nop
      2c:	4e c0       	rjmp	.+156    	; 0xca <__bad_interrupt>
      2e:	00 00       	nop
      30:	4c c0       	rjmp	.+152    	; 0xca <__bad_interrupt>
      32:	00 00       	nop
      34:	4a c0       	rjmp	.+148    	; 0xca <__bad_interrupt>
      36:	00 00       	nop
      38:	48 c0       	rjmp	.+144    	; 0xca <__bad_interrupt>
      3a:	00 00       	nop
      3c:	46 c0       	rjmp	.+140    	; 0xca <__bad_interrupt>
      3e:	00 00       	nop
      40:	44 c0       	rjmp	.+136    	; 0xca <__bad_interrupt>
      42:	00 00       	nop
      44:	42 c0       	rjmp	.+132    	; 0xca <__bad_interrupt>
      46:	00 00       	nop
      48:	40 c0       	rjmp	.+128    	; 0xca <__bad_interrupt>
      4a:	00 00       	nop
      4c:	3e c0       	rjmp	.+124    	; 0xca <__bad_interrupt>
      4e:	00 00       	nop
      50:	3c c0       	rjmp	.+120    	; 0xca <__bad_interrupt>
      52:	00 00       	nop
      54:	3a c0       	rjmp	.+116    	; 0xca <__bad_interrupt>
      56:	00 00       	nop
      58:	38 c0       	rjmp	.+112    	; 0xca <__bad_interrupt>
      5a:	00 00       	nop
      5c:	36 c0       	rjmp	.+108    	; 0xca <__bad_interrupt>
      5e:	00 00       	nop
      60:	34 c0       	rjmp	.+104    	; 0xca <__bad_interrupt>
      62:	00 00       	nop
      64:	32 c0       	rjmp	.+100    	; 0xca <__bad_interrupt>
      66:	00 00       	nop
      68:	30 c0       	rjmp	.+96     	; 0xca <__bad_interrupt>
      6a:	00 00       	nop
      6c:	2e c0       	rjmp	.+92     	; 0xca <__bad_interrupt>
      6e:	00 00       	nop
      70:	2c c0       	rjmp	.+88     	; 0xca <__bad_interrupt>
      72:	00 00       	nop
      74:	2a c0       	rjmp	.+84     	; 0xca <__bad_interrupt>
      76:	00 00       	nop
      78:	28 c0       	rjmp	.+80     	; 0xca <__bad_interrupt>
      7a:	00 00       	nop
      7c:	26 c0       	rjmp	.+76     	; 0xca <__bad_interrupt>
      7e:	00 00       	nop
      80:	24 c0       	rjmp	.+72     	; 0xca <__bad_interrupt>
      82:	00 00       	nop
      84:	22 c0       	rjmp	.+68     	; 0xca <__bad_interrupt>
      86:	00 00       	nop
      88:	20 c0       	rjmp	.+64     	; 0xca <__bad_interrupt>
	...

0000008c <__ctors_end>:
      8c:	11 24       	eor	r1, r1
      8e:	1f be       	out	0x3f, r1	; 63
      90:	cf ef       	ldi	r28, 0xFF	; 255
      92:	d0 e4       	ldi	r29, 0x40	; 64
      94:	de bf       	out	0x3e, r29	; 62
      96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
      98:	11 e0       	ldi	r17, 0x01	; 1
      9a:	a0 e0       	ldi	r26, 0x00	; 0
      9c:	b1 e0       	ldi	r27, 0x01	; 1
      9e:	e2 e5       	ldi	r30, 0x52	; 82
      a0:	f8 e4       	ldi	r31, 0x48	; 72
      a2:	00 e0       	ldi	r16, 0x00	; 0
      a4:	0b bf       	out	0x3b, r16	; 59
      a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
      a8:	07 90       	elpm	r0, Z+
      aa:	0d 92       	st	X+, r0
      ac:	a2 3b       	cpi	r26, 0xB2	; 178
      ae:	b1 07       	cpc	r27, r17
      b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
      b2:	23 e0       	ldi	r18, 0x03	; 3
      b4:	a2 eb       	ldi	r26, 0xB2	; 178
      b6:	b1 e0       	ldi	r27, 0x01	; 1
      b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
      ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
      bc:	af 3e       	cpi	r26, 0xEF	; 239
      be:	b2 07       	cpc	r27, r18
      c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
      c2:	0e 94 a2 0d 	call	0x1b44	; 0x1b44 <main>
      c6:	0c 94 27 24 	jmp	0x484e	; 0x484e <_exit>

000000ca <__bad_interrupt>:
      ca:	9a cf       	rjmp	.-204    	; 0x0 <__vectors>

000000cc <get_fattime>:
	sensor_set(0x56, 0x84 ,0x0 );
	sensor_set(0x56, 0x85 ,0x0 );
	sensor_set(0x56, 0x86 ,0x7 );
	sensor_set(0x56, 0x87 ,0x98);
	//sensor_set(0x30, 0x11 ,0x0f);  //bit[5:0] div
	sensor_set(0xff, 0xff, 0xff);
      cc:	60 ec       	ldi	r22, 0xC0	; 192
      ce:	73 ea       	ldi	r23, 0xA3	; 163
      d0:	82 e0       	ldi	r24, 0x02	; 2
      d2:	93 e4       	ldi	r25, 0x43	; 67
      d4:	08 95       	ret

000000d6 <_Z15spi_master_inithh>:
      d6:	94 b1       	in	r25, 0x04	; 4
      d8:	90 61       	ori	r25, 0x10	; 16
      da:	94 b9       	out	0x04, r25	; 4
      dc:	95 b1       	in	r25, 0x05	; 5
      de:	90 61       	ori	r25, 0x10	; 16
      e0:	95 b9       	out	0x05, r25	; 5
      e2:	94 b1       	in	r25, 0x04	; 4
      e4:	94 60       	ori	r25, 0x04	; 4
      e6:	94 b9       	out	0x04, r25	; 4
      e8:	95 b1       	in	r25, 0x05	; 5
      ea:	94 60       	ori	r25, 0x04	; 4
      ec:	95 b9       	out	0x05, r25	; 5
      ee:	94 b1       	in	r25, 0x04	; 4
      f0:	90 6a       	ori	r25, 0xA0	; 160
      f2:	94 b9       	out	0x04, r25	; 4
      f4:	90 e0       	ldi	r25, 0x00	; 0
      f6:	88 0f       	add	r24, r24
      f8:	99 1f       	adc	r25, r25
      fa:	88 0f       	add	r24, r24
      fc:	99 1f       	adc	r25, r25
      fe:	86 2b       	or	r24, r22
     100:	80 6d       	ori	r24, 0xD0	; 208
     102:	8c bd       	out	0x2c, r24	; 44
     104:	08 95       	ret

00000106 <_Z7readSPIh>:
     106:	95 b1       	in	r25, 0x05	; 5
     108:	9b 7f       	andi	r25, 0xFB	; 251
     10a:	95 b9       	out	0x05, r25	; 5
     10c:	8e bd       	out	0x2e, r24	; 46
     10e:	0d b4       	in	r0, 0x2d	; 45
     110:	07 fe       	sbrs	r0, 7
     112:	fd cf       	rjmp	.-6      	; 0x10e <_Z7readSPIh+0x8>
     114:	1e bc       	out	0x2e, r1	; 46
     116:	0d b4       	in	r0, 0x2d	; 45
     118:	07 fe       	sbrs	r0, 7
     11a:	fd cf       	rjmp	.-6      	; 0x116 <_Z7readSPIh+0x10>
     11c:	8e b5       	in	r24, 0x2e	; 46
     11e:	95 b1       	in	r25, 0x05	; 5
     120:	94 60       	ori	r25, 0x04	; 4
     122:	95 b9       	out	0x05, r25	; 5
     124:	08 95       	ret

00000126 <_Z8writeSPIhh>:
     126:	95 b1       	in	r25, 0x05	; 5
     128:	9b 7f       	andi	r25, 0xFB	; 251
     12a:	95 b9       	out	0x05, r25	; 5
     12c:	8e bd       	out	0x2e, r24	; 46
     12e:	0d b4       	in	r0, 0x2d	; 45
     130:	07 fe       	sbrs	r0, 7
     132:	fd cf       	rjmp	.-6      	; 0x12e <_Z8writeSPIhh+0x8>
     134:	6e bd       	out	0x2e, r22	; 46
     136:	0d b4       	in	r0, 0x2d	; 45
     138:	07 fe       	sbrs	r0, 7
     13a:	fd cf       	rjmp	.-6      	; 0x136 <_Z8writeSPIhh+0x10>
     13c:	85 b1       	in	r24, 0x05	; 5
     13e:	84 60       	ori	r24, 0x04	; 4
     140:	85 b9       	out	0x05, r24	; 5
     142:	08 95       	ret

00000144 <_Z12startCapturev>:
     144:	61 e0       	ldi	r22, 0x01	; 1
     146:	84 e8       	ldi	r24, 0x84	; 132
     148:	ee df       	rcall	.-36     	; 0x126 <_Z8writeSPIhh>
     14a:	61 e0       	ldi	r22, 0x01	; 1
     14c:	84 e8       	ldi	r24, 0x84	; 132
     14e:	eb df       	rcall	.-42     	; 0x126 <_Z8writeSPIhh>
     150:	60 e1       	ldi	r22, 0x10	; 16
     152:	84 e8       	ldi	r24, 0x84	; 132
     154:	e8 df       	rcall	.-48     	; 0x126 <_Z8writeSPIhh>
     156:	60 e2       	ldi	r22, 0x20	; 32
     158:	84 e8       	ldi	r24, 0x84	; 132
     15a:	e5 df       	rcall	.-54     	; 0x126 <_Z8writeSPIhh>
     15c:	2f e3       	ldi	r18, 0x3F	; 63
     15e:	8d e0       	ldi	r24, 0x0D	; 13
     160:	93 e0       	ldi	r25, 0x03	; 3
     162:	21 50       	subi	r18, 0x01	; 1
     164:	80 40       	sbci	r24, 0x00	; 0
     166:	90 40       	sbci	r25, 0x00	; 0
     168:	e1 f7       	brne	.-8      	; 0x162 <_Z12startCapturev+0x1e>
     16a:	00 c0       	rjmp	.+0      	; 0x16c <_Z12startCapturev+0x28>
     16c:	00 00       	nop
     16e:	62 e0       	ldi	r22, 0x02	; 2
     170:	84 e8       	ldi	r24, 0x84	; 132
     172:	d9 df       	rcall	.-78     	; 0x126 <_Z8writeSPIhh>
     174:	81 e4       	ldi	r24, 0x41	; 65
     176:	c7 df       	rcall	.-114    	; 0x106 <_Z7readSPIh>
     178:	83 ff       	sbrs	r24, 3
     17a:	fc cf       	rjmp	.-8      	; 0x174 <_Z12startCapturev+0x30>
     17c:	83 ec       	ldi	r24, 0xC3	; 195
     17e:	99 e0       	ldi	r25, 0x09	; 9
     180:	01 97       	sbiw	r24, 0x01	; 1
     182:	f1 f7       	brne	.-4      	; 0x180 <_Z12startCapturev+0x3c>
     184:	00 c0       	rjmp	.+0      	; 0x186 <_Z12startCapturev+0x42>
     186:	00 00       	nop
     188:	08 95       	ret

0000018a <_Z8i2c_initv>:
     18a:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
     18e:	8c e0       	ldi	r24, 0x0C	; 12
     190:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7e00b8>
     194:	08 95       	ret

00000196 <_Z9i2c_starth>:
     196:	94 ea       	ldi	r25, 0xA4	; 164
     198:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     19c:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     1a0:	99 23       	and	r25, r25
     1a2:	e4 f7       	brge	.-8      	; 0x19c <_Z9i2c_starth+0x6>
     1a4:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
     1a8:	98 7f       	andi	r25, 0xF8	; 248
     1aa:	98 30       	cpi	r25, 0x08	; 8
     1ac:	11 f0       	breq	.+4      	; 0x1b2 <_Z9i2c_starth+0x1c>
     1ae:	90 31       	cpi	r25, 0x10	; 16
     1b0:	91 f4       	brne	.+36     	; 0x1d6 <_Z9i2c_starth+0x40>
     1b2:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
     1b6:	84 e8       	ldi	r24, 0x84	; 132
     1b8:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     1bc:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     1c0:	88 23       	and	r24, r24
     1c2:	e4 f7       	brge	.-8      	; 0x1bc <_Z9i2c_starth+0x26>
     1c4:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
     1c8:	88 7f       	andi	r24, 0xF8	; 248
     1ca:	88 31       	cpi	r24, 0x18	; 24
     1cc:	31 f0       	breq	.+12     	; 0x1da <_Z9i2c_starth+0x44>
     1ce:	80 34       	cpi	r24, 0x40	; 64
     1d0:	31 f4       	brne	.+12     	; 0x1de <_Z9i2c_starth+0x48>
     1d2:	80 e0       	ldi	r24, 0x00	; 0
     1d4:	08 95       	ret
     1d6:	81 e0       	ldi	r24, 0x01	; 1
     1d8:	08 95       	ret
     1da:	80 e0       	ldi	r24, 0x00	; 0
     1dc:	08 95       	ret
     1de:	81 e0       	ldi	r24, 0x01	; 1
     1e0:	08 95       	ret

000001e2 <_Z9i2c_writeh>:
     1e2:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
     1e6:	84 e8       	ldi	r24, 0x84	; 132
     1e8:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     1ec:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     1f0:	88 23       	and	r24, r24
     1f2:	e4 f7       	brge	.-8      	; 0x1ec <_Z9i2c_writeh+0xa>
     1f4:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
     1f8:	88 7f       	andi	r24, 0xF8	; 248
     1fa:	88 32       	cpi	r24, 0x28	; 40
     1fc:	11 f0       	breq	.+4      	; 0x202 <_Z9i2c_writeh+0x20>
     1fe:	81 e0       	ldi	r24, 0x01	; 1
     200:	08 95       	ret
     202:	80 e0       	ldi	r24, 0x00	; 0
     204:	08 95       	ret

00000206 <_Z10sensor_sethhh>:
     206:	1f 93       	push	r17
     208:	cf 93       	push	r28
     20a:	df 93       	push	r29
     20c:	18 2f       	mov	r17, r24
     20e:	d6 2f       	mov	r29, r22
     210:	c4 2f       	mov	r28, r20
     212:	88 e7       	ldi	r24, 0x78	; 120
     214:	c0 df       	rcall	.-128    	; 0x196 <_Z9i2c_starth>
     216:	81 2f       	mov	r24, r17
     218:	e4 df       	rcall	.-56     	; 0x1e2 <_Z9i2c_writeh>
     21a:	8d 2f       	mov	r24, r29
     21c:	e2 df       	rcall	.-60     	; 0x1e2 <_Z9i2c_writeh>
     21e:	8c 2f       	mov	r24, r28
     220:	e0 df       	rcall	.-64     	; 0x1e2 <_Z9i2c_writeh>
     222:	df 91       	pop	r29
     224:	cf 91       	pop	r28
     226:	1f 91       	pop	r17
     228:	08 95       	ret

0000022a <_Z7set_bithh>:
     22a:	cf 93       	push	r28
     22c:	df 93       	push	r29
     22e:	d8 2f       	mov	r29, r24
     230:	c6 2f       	mov	r28, r22
     232:	69 df       	rcall	.-302    	; 0x106 <_Z7readSPIh>
     234:	68 2f       	mov	r22, r24
     236:	6c 2b       	or	r22, r28
     238:	8d 2f       	mov	r24, r29
     23a:	80 68       	ori	r24, 0x80	; 128
     23c:	74 df       	rcall	.-280    	; 0x126 <_Z8writeSPIhh>
     23e:	df 91       	pop	r29
     240:	cf 91       	pop	r28
     242:	08 95       	ret

00000244 <_Z12reg_set_jpegv>:
     244:	43 e9       	ldi	r20, 0x93	; 147
     246:	63 e0       	ldi	r22, 0x03	; 3
     248:	81 e3       	ldi	r24, 0x31	; 49
     24a:	dd df       	rcall	.-70     	; 0x206 <_Z10sensor_sethhh>
     24c:	42 e8       	ldi	r20, 0x82	; 130
     24e:	68 e0       	ldi	r22, 0x08	; 8
     250:	80 e3       	ldi	r24, 0x30	; 48
     252:	d9 df       	rcall	.-78     	; 0x206 <_Z10sensor_sethhh>
     254:	4f e7       	ldi	r20, 0x7F	; 127
     256:	67 e1       	ldi	r22, 0x17	; 23
     258:	80 e3       	ldi	r24, 0x30	; 48
     25a:	d5 df       	rcall	.-86     	; 0x206 <_Z10sensor_sethhh>
     25c:	4c ef       	ldi	r20, 0xFC	; 252
     25e:	68 e1       	ldi	r22, 0x18	; 24
     260:	80 e3       	ldi	r24, 0x30	; 48
     262:	d1 df       	rcall	.-94     	; 0x206 <_Z10sensor_sethhh>
     264:	42 ec       	ldi	r20, 0xC2	; 194
     266:	60 e1       	ldi	r22, 0x10	; 16
     268:	88 e3       	ldi	r24, 0x38	; 56
     26a:	cd df       	rcall	.-102    	; 0x206 <_Z10sensor_sethhh>
     26c:	40 ef       	ldi	r20, 0xF0	; 240
     26e:	65 e1       	ldi	r22, 0x15	; 21
     270:	86 e3       	ldi	r24, 0x36	; 54
     272:	c9 df       	rcall	.-110    	; 0x206 <_Z10sensor_sethhh>
     274:	40 e0       	ldi	r20, 0x00	; 0
     276:	60 e0       	ldi	r22, 0x00	; 0
     278:	80 e3       	ldi	r24, 0x30	; 48
     27a:	c5 df       	rcall	.-118    	; 0x206 <_Z10sensor_sethhh>
     27c:	40 e0       	ldi	r20, 0x00	; 0
     27e:	61 e0       	ldi	r22, 0x01	; 1
     280:	80 e3       	ldi	r24, 0x30	; 48
     282:	c1 df       	rcall	.-126    	; 0x206 <_Z10sensor_sethhh>
     284:	4c e5       	ldi	r20, 0x5C	; 92
     286:	62 e0       	ldi	r22, 0x02	; 2
     288:	80 e3       	ldi	r24, 0x30	; 48
     28a:	bd df       	rcall	.-134    	; 0x206 <_Z10sensor_sethhh>
     28c:	40 e0       	ldi	r20, 0x00	; 0
     28e:	63 e0       	ldi	r22, 0x03	; 3
     290:	80 e3       	ldi	r24, 0x30	; 48
     292:	b9 df       	rcall	.-142    	; 0x206 <_Z10sensor_sethhh>
     294:	4f ef       	ldi	r20, 0xFF	; 255
     296:	64 e0       	ldi	r22, 0x04	; 4
     298:	80 e3       	ldi	r24, 0x30	; 48
     29a:	b5 df       	rcall	.-150    	; 0x206 <_Z10sensor_sethhh>
     29c:	4f ef       	ldi	r20, 0xFF	; 255
     29e:	65 e0       	ldi	r22, 0x05	; 5
     2a0:	80 e3       	ldi	r24, 0x30	; 48
     2a2:	b1 df       	rcall	.-158    	; 0x206 <_Z10sensor_sethhh>
     2a4:	43 e4       	ldi	r20, 0x43	; 67
     2a6:	66 e0       	ldi	r22, 0x06	; 6
     2a8:	80 e3       	ldi	r24, 0x30	; 48
     2aa:	ad df       	rcall	.-166    	; 0x206 <_Z10sensor_sethhh>
     2ac:	47 e3       	ldi	r20, 0x37	; 55
     2ae:	67 e0       	ldi	r22, 0x07	; 7
     2b0:	80 e3       	ldi	r24, 0x30	; 48
     2b2:	a9 df       	rcall	.-174    	; 0x206 <_Z10sensor_sethhh>
     2b4:	48 e0       	ldi	r20, 0x08	; 8
     2b6:	61 e1       	ldi	r22, 0x11	; 17
     2b8:	80 e3       	ldi	r24, 0x30	; 48
     2ba:	a5 df       	rcall	.-182    	; 0x206 <_Z10sensor_sethhh>
     2bc:	40 e1       	ldi	r20, 0x10	; 16
     2be:	60 e1       	ldi	r22, 0x10	; 16
     2c0:	80 e3       	ldi	r24, 0x30	; 48
     2c2:	a1 df       	rcall	.-190    	; 0x206 <_Z10sensor_sethhh>
     2c4:	42 e2       	ldi	r20, 0x22	; 34
     2c6:	6c e0       	ldi	r22, 0x0C	; 12
     2c8:	86 e4       	ldi	r24, 0x46	; 70
     2ca:	9d df       	rcall	.-198    	; 0x206 <_Z10sensor_sethhh>
     2cc:	44 e0       	ldi	r20, 0x04	; 4
     2ce:	65 e1       	ldi	r22, 0x15	; 21
     2d0:	88 e3       	ldi	r24, 0x38	; 56
     2d2:	99 df       	rcall	.-206    	; 0x206 <_Z10sensor_sethhh>
     2d4:	40 ea       	ldi	r20, 0xA0	; 160
     2d6:	6c e0       	ldi	r22, 0x0C	; 12
     2d8:	87 e3       	ldi	r24, 0x37	; 55
     2da:	95 df       	rcall	.-214    	; 0x206 <_Z10sensor_sethhh>
     2dc:	4c ef       	ldi	r20, 0xFC	; 252
     2de:	62 e0       	ldi	r22, 0x02	; 2
     2e0:	86 e3       	ldi	r24, 0x36	; 54
     2e2:	91 df       	rcall	.-222    	; 0x206 <_Z10sensor_sethhh>
     2e4:	4f ef       	ldi	r20, 0xFF	; 255
     2e6:	62 e1       	ldi	r22, 0x12	; 18
     2e8:	86 e3       	ldi	r24, 0x36	; 54
     2ea:	8d df       	rcall	.-230    	; 0x206 <_Z10sensor_sethhh>
     2ec:	40 ec       	ldi	r20, 0xC0	; 192
     2ee:	64 e3       	ldi	r22, 0x34	; 52
     2f0:	86 e3       	ldi	r24, 0x36	; 54
     2f2:	89 df       	rcall	.-238    	; 0x206 <_Z10sensor_sethhh>
     2f4:	40 e0       	ldi	r20, 0x00	; 0
     2f6:	63 e1       	ldi	r22, 0x13	; 19
     2f8:	86 e3       	ldi	r24, 0x36	; 54
     2fa:	85 df       	rcall	.-246    	; 0x206 <_Z10sensor_sethhh>
     2fc:	4c e7       	ldi	r20, 0x7C	; 124
     2fe:	65 e0       	ldi	r22, 0x05	; 5
     300:	86 e3       	ldi	r24, 0x36	; 54
     302:	81 df       	rcall	.-254    	; 0x206 <_Z10sensor_sethhh>
     304:	49 e0       	ldi	r20, 0x09	; 9
     306:	61 e2       	ldi	r22, 0x21	; 33
     308:	86 e3       	ldi	r24, 0x36	; 54
     30a:	7d df       	rcall	.-262    	; 0x206 <_Z10sensor_sethhh>
     30c:	40 e6       	ldi	r20, 0x60	; 96
     30e:	62 e2       	ldi	r22, 0x22	; 34
     310:	86 e3       	ldi	r24, 0x36	; 54
     312:	79 df       	rcall	.-270    	; 0x206 <_Z10sensor_sethhh>
     314:	40 e4       	ldi	r20, 0x40	; 64
     316:	64 e0       	ldi	r22, 0x04	; 4
     318:	86 e3       	ldi	r24, 0x36	; 54
     31a:	75 df       	rcall	.-278    	; 0x206 <_Z10sensor_sethhh>
     31c:	47 ea       	ldi	r20, 0xA7	; 167
     31e:	63 e0       	ldi	r22, 0x03	; 3
     320:	86 e3       	ldi	r24, 0x36	; 54
     322:	71 df       	rcall	.-286    	; 0x206 <_Z10sensor_sethhh>
     324:	47 e2       	ldi	r20, 0x27	; 39
     326:	63 e0       	ldi	r22, 0x03	; 3
     328:	86 e3       	ldi	r24, 0x36	; 54
     32a:	6d df       	rcall	.-294    	; 0x206 <_Z10sensor_sethhh>
     32c:	41 e2       	ldi	r20, 0x21	; 33
     32e:	60 e0       	ldi	r22, 0x00	; 0
     330:	80 e4       	ldi	r24, 0x40	; 64
     332:	69 df       	rcall	.-302    	; 0x206 <_Z10sensor_sethhh>
     334:	42 e2       	ldi	r20, 0x22	; 34
     336:	6d e1       	ldi	r22, 0x1D	; 29
     338:	80 e4       	ldi	r24, 0x40	; 64
     33a:	65 df       	rcall	.-310    	; 0x206 <_Z10sensor_sethhh>
     33c:	44 e5       	ldi	r20, 0x54	; 84
     33e:	60 e0       	ldi	r22, 0x00	; 0
     340:	86 e3       	ldi	r24, 0x36	; 54
     342:	61 df       	rcall	.-318    	; 0x206 <_Z10sensor_sethhh>
     344:	44 e0       	ldi	r20, 0x04	; 4
     346:	65 e0       	ldi	r22, 0x05	; 5
     348:	86 e3       	ldi	r24, 0x36	; 54
     34a:	5d df       	rcall	.-326    	; 0x206 <_Z10sensor_sethhh>
     34c:	4f e3       	ldi	r20, 0x3F	; 63
     34e:	66 e0       	ldi	r22, 0x06	; 6
     350:	86 e3       	ldi	r24, 0x36	; 54
     352:	59 df       	rcall	.-334    	; 0x206 <_Z10sensor_sethhh>
     354:	40 e8       	ldi	r20, 0x80	; 128
     356:	61 e0       	ldi	r22, 0x01	; 1
     358:	8c e3       	ldi	r24, 0x3C	; 60
     35a:	55 df       	rcall	.-342    	; 0x206 <_Z10sensor_sethhh>
     35c:	4f e4       	ldi	r20, 0x4F	; 79
     35e:	60 e0       	ldi	r22, 0x00	; 0
     360:	80 e5       	ldi	r24, 0x50	; 80
     362:	51 df       	rcall	.-350    	; 0x206 <_Z10sensor_sethhh>
     364:	44 e0       	ldi	r20, 0x04	; 4
     366:	60 e2       	ldi	r22, 0x20	; 32
     368:	80 e5       	ldi	r24, 0x50	; 80
     36a:	4d df       	rcall	.-358    	; 0x206 <_Z10sensor_sethhh>
     36c:	49 e7       	ldi	r20, 0x79	; 121
     36e:	61 e8       	ldi	r22, 0x81	; 129
     370:	81 e5       	ldi	r24, 0x51	; 81
     372:	49 df       	rcall	.-366    	; 0x206 <_Z10sensor_sethhh>
     374:	40 e0       	ldi	r20, 0x00	; 0
     376:	62 e8       	ldi	r22, 0x82	; 130
     378:	81 e5       	ldi	r24, 0x51	; 81
     37a:	45 df       	rcall	.-374    	; 0x206 <_Z10sensor_sethhh>
     37c:	42 e2       	ldi	r20, 0x22	; 34
     37e:	65 e8       	ldi	r22, 0x85	; 133
     380:	81 e5       	ldi	r24, 0x51	; 81
     382:	41 df       	rcall	.-382    	; 0x206 <_Z10sensor_sethhh>
     384:	41 e0       	ldi	r20, 0x01	; 1
     386:	67 e9       	ldi	r22, 0x97	; 151
     388:	81 e5       	ldi	r24, 0x51	; 81
     38a:	3d df       	rcall	.-390    	; 0x206 <_Z10sensor_sethhh>
     38c:	4f ef       	ldi	r20, 0xFF	; 255
     38e:	61 e0       	ldi	r22, 0x01	; 1
     390:	80 e5       	ldi	r24, 0x50	; 80
     392:	39 df       	rcall	.-398    	; 0x206 <_Z10sensor_sethhh>
     394:	4a e0       	ldi	r20, 0x0A	; 10
     396:	60 e0       	ldi	r22, 0x00	; 0
     398:	85 e5       	ldi	r24, 0x55	; 85
     39a:	35 df       	rcall	.-406    	; 0x206 <_Z10sensor_sethhh>
     39c:	40 e0       	ldi	r20, 0x00	; 0
     39e:	64 e0       	ldi	r22, 0x04	; 4
     3a0:	85 e5       	ldi	r24, 0x55	; 85
     3a2:	31 df       	rcall	.-414    	; 0x206 <_Z10sensor_sethhh>
     3a4:	4f e7       	ldi	r20, 0x7F	; 127
     3a6:	65 e0       	ldi	r22, 0x05	; 5
     3a8:	85 e5       	ldi	r24, 0x55	; 85
     3aa:	2d df       	rcall	.-422    	; 0x206 <_Z10sensor_sethhh>
     3ac:	48 e0       	ldi	r20, 0x08	; 8
     3ae:	60 e8       	ldi	r22, 0x80	; 128
     3b0:	80 e5       	ldi	r24, 0x50	; 80
     3b2:	29 df       	rcall	.-430    	; 0x206 <_Z10sensor_sethhh>
     3b4:	48 e1       	ldi	r20, 0x18	; 24
     3b6:	6e e0       	ldi	r22, 0x0E	; 14
     3b8:	80 e3       	ldi	r24, 0x30	; 48
     3ba:	25 df       	rcall	.-438    	; 0x206 <_Z10sensor_sethhh>
     3bc:	40 e0       	ldi	r20, 0x00	; 0
     3be:	60 e1       	ldi	r22, 0x10	; 16
     3c0:	86 e4       	ldi	r24, 0x46	; 70
     3c2:	21 df       	rcall	.-446    	; 0x206 <_Z10sensor_sethhh>
     3c4:	45 e0       	ldi	r20, 0x05	; 5
     3c6:	6d e1       	ldi	r22, 0x1D	; 29
     3c8:	87 e4       	ldi	r24, 0x47	; 71
     3ca:	1d df       	rcall	.-454    	; 0x206 <_Z10sensor_sethhh>
     3cc:	46 e0       	ldi	r20, 0x06	; 6
     3ce:	68 e0       	ldi	r22, 0x08	; 8
     3d0:	87 e4       	ldi	r24, 0x47	; 71
     3d2:	19 df       	rcall	.-462    	; 0x206 <_Z10sensor_sethhh>
     3d4:	42 e0       	ldi	r20, 0x02	; 2
     3d6:	68 e0       	ldi	r22, 0x08	; 8
     3d8:	88 e3       	ldi	r24, 0x38	; 56
     3da:	15 df       	rcall	.-470    	; 0x206 <_Z10sensor_sethhh>
     3dc:	40 e8       	ldi	r20, 0x80	; 128
     3de:	69 e0       	ldi	r22, 0x09	; 9
     3e0:	88 e3       	ldi	r24, 0x38	; 56
     3e2:	11 df       	rcall	.-478    	; 0x206 <_Z10sensor_sethhh>
     3e4:	41 e0       	ldi	r20, 0x01	; 1
     3e6:	6a e0       	ldi	r22, 0x0A	; 10
     3e8:	88 e3       	ldi	r24, 0x38	; 56
     3ea:	0d df       	rcall	.-486    	; 0x206 <_Z10sensor_sethhh>
     3ec:	40 ee       	ldi	r20, 0xE0	; 224
     3ee:	6b e0       	ldi	r22, 0x0B	; 11
     3f0:	88 e3       	ldi	r24, 0x38	; 56
     3f2:	09 df       	rcall	.-494    	; 0x206 <_Z10sensor_sethhh>
     3f4:	47 e0       	ldi	r20, 0x07	; 7
     3f6:	6e e0       	ldi	r22, 0x0E	; 14
     3f8:	88 e3       	ldi	r24, 0x38	; 56
     3fa:	05 df       	rcall	.-502    	; 0x206 <_Z10sensor_sethhh>
     3fc:	40 ed       	ldi	r20, 0xD0	; 208
     3fe:	6f e0       	ldi	r22, 0x0F	; 15
     400:	88 e3       	ldi	r24, 0x38	; 56
     402:	01 df       	rcall	.-510    	; 0x206 <_Z10sensor_sethhh>
     404:	40 e0       	ldi	r20, 0x00	; 0
     406:	6f e1       	ldi	r22, 0x1F	; 31
     408:	80 e5       	ldi	r24, 0x50	; 80
     40a:	fd de       	rcall	.-518    	; 0x206 <_Z10sensor_sethhh>
     40c:	4f e4       	ldi	r20, 0x4F	; 79
     40e:	60 e0       	ldi	r22, 0x00	; 0
     410:	80 e5       	ldi	r24, 0x50	; 80
     412:	f9 de       	rcall	.-526    	; 0x206 <_Z10sensor_sethhh>
     414:	40 e3       	ldi	r20, 0x30	; 48
     416:	60 e0       	ldi	r22, 0x00	; 0
     418:	83 e4       	ldi	r24, 0x43	; 67
     41a:	f5 de       	rcall	.-534    	; 0x206 <_Z10sensor_sethhh>
     41c:	47 e0       	ldi	r20, 0x07	; 7
     41e:	63 e0       	ldi	r22, 0x03	; 3
     420:	85 e3       	ldi	r24, 0x35	; 53
     422:	f1 de       	rcall	.-542    	; 0x206 <_Z10sensor_sethhh>
     424:	43 e7       	ldi	r20, 0x73	; 115
     426:	61 e0       	ldi	r22, 0x01	; 1
     428:	85 e3       	ldi	r24, 0x35	; 53
     42a:	ed de       	rcall	.-550    	; 0x206 <_Z10sensor_sethhh>
     42c:	40 e8       	ldi	r20, 0x80	; 128
     42e:	62 e0       	ldi	r22, 0x02	; 2
     430:	85 e3       	ldi	r24, 0x35	; 53
     432:	e9 de       	rcall	.-558    	; 0x206 <_Z10sensor_sethhh>
     434:	40 e0       	ldi	r20, 0x00	; 0
     436:	6b e0       	ldi	r22, 0x0B	; 11
     438:	85 e3       	ldi	r24, 0x35	; 53
     43a:	e5 de       	rcall	.-566    	; 0x206 <_Z10sensor_sethhh>
     43c:	47 e0       	ldi	r20, 0x07	; 7
     43e:	63 e0       	ldi	r22, 0x03	; 3
     440:	85 e3       	ldi	r24, 0x35	; 53
     442:	e1 de       	rcall	.-574    	; 0x206 <_Z10sensor_sethhh>
     444:	41 e1       	ldi	r20, 0x11	; 17
     446:	64 e2       	ldi	r22, 0x24	; 36
     448:	88 e3       	ldi	r24, 0x38	; 56
     44a:	dd de       	rcall	.-582    	; 0x206 <_Z10sensor_sethhh>
     44c:	4e e1       	ldi	r20, 0x1E	; 30
     44e:	61 e0       	ldi	r22, 0x01	; 1
     450:	85 e3       	ldi	r24, 0x35	; 53
     452:	d9 de       	rcall	.-590    	; 0x206 <_Z10sensor_sethhh>
     454:	40 e8       	ldi	r20, 0x80	; 128
     456:	62 e0       	ldi	r22, 0x02	; 2
     458:	85 e3       	ldi	r24, 0x35	; 53
     45a:	d5 de       	rcall	.-598    	; 0x206 <_Z10sensor_sethhh>
     45c:	4f e7       	ldi	r20, 0x7F	; 127
     45e:	6b e0       	ldi	r22, 0x0B	; 11
     460:	85 e3       	ldi	r24, 0x35	; 53
     462:	d1 de       	rcall	.-606    	; 0x206 <_Z10sensor_sethhh>
     464:	4c e0       	ldi	r20, 0x0C	; 12
     466:	6c e0       	ldi	r22, 0x0C	; 12
     468:	88 e3       	ldi	r24, 0x38	; 56
     46a:	cd de       	rcall	.-614    	; 0x206 <_Z10sensor_sethhh>
     46c:	40 e8       	ldi	r20, 0x80	; 128
     46e:	6d e0       	ldi	r22, 0x0D	; 13
     470:	88 e3       	ldi	r24, 0x38	; 56
     472:	c9 de       	rcall	.-622    	; 0x206 <_Z10sensor_sethhh>
     474:	43 e0       	ldi	r20, 0x03	; 3
     476:	6e e0       	ldi	r22, 0x0E	; 14
     478:	88 e3       	ldi	r24, 0x38	; 56
     47a:	c5 de       	rcall	.-630    	; 0x206 <_Z10sensor_sethhh>
     47c:	48 ee       	ldi	r20, 0xE8	; 232
     47e:	6f e0       	ldi	r22, 0x0F	; 15
     480:	88 e3       	ldi	r24, 0x38	; 56
     482:	c1 de       	rcall	.-638    	; 0x206 <_Z10sensor_sethhh>
     484:	44 e0       	ldi	r20, 0x04	; 4
     486:	6d e0       	ldi	r22, 0x0D	; 13
     488:	8a e3       	ldi	r24, 0x3A	; 58
     48a:	bd de       	rcall	.-646    	; 0x206 <_Z10sensor_sethhh>
     48c:	43 e0       	ldi	r20, 0x03	; 3
     48e:	6e e0       	ldi	r22, 0x0E	; 14
     490:	8a e3       	ldi	r24, 0x3A	; 58
     492:	b9 de       	rcall	.-654    	; 0x206 <_Z10sensor_sethhh>
     494:	41 ec       	ldi	r20, 0xC1	; 193
     496:	68 e1       	ldi	r22, 0x18	; 24
     498:	88 e3       	ldi	r24, 0x38	; 56
     49a:	b5 de       	rcall	.-662    	; 0x206 <_Z10sensor_sethhh>
     49c:	4b ed       	ldi	r20, 0xDB	; 219
     49e:	65 e0       	ldi	r22, 0x05	; 5
     4a0:	87 e3       	ldi	r24, 0x37	; 55
     4a2:	b1 de       	rcall	.-670    	; 0x206 <_Z10sensor_sethhh>
     4a4:	41 e8       	ldi	r20, 0x81	; 129
     4a6:	6a e0       	ldi	r22, 0x0A	; 10
     4a8:	87 e3       	ldi	r24, 0x37	; 55
     4aa:	ad de       	rcall	.-678    	; 0x206 <_Z10sensor_sethhh>
     4ac:	40 e8       	ldi	r20, 0x80	; 128
     4ae:	61 e0       	ldi	r22, 0x01	; 1
     4b0:	88 e3       	ldi	r24, 0x38	; 56
     4b2:	a9 de       	rcall	.-686    	; 0x206 <_Z10sensor_sethhh>
     4b4:	47 e8       	ldi	r20, 0x87	; 135
     4b6:	61 e2       	ldi	r22, 0x21	; 33
     4b8:	86 e3       	ldi	r24, 0x36	; 54
     4ba:	a5 de       	rcall	.-694    	; 0x206 <_Z10sensor_sethhh>
     4bc:	40 e5       	ldi	r20, 0x50	; 80
     4be:	61 e0       	ldi	r22, 0x01	; 1
     4c0:	88 e3       	ldi	r24, 0x38	; 56
     4c2:	a1 de       	rcall	.-702    	; 0x206 <_Z10sensor_sethhh>
     4c4:	48 e0       	ldi	r20, 0x08	; 8
     4c6:	63 e0       	ldi	r22, 0x03	; 3
     4c8:	88 e3       	ldi	r24, 0x38	; 56
     4ca:	9d de       	rcall	.-710    	; 0x206 <_Z10sensor_sethhh>
     4cc:	48 e0       	ldi	r20, 0x08	; 8
     4ce:	67 e2       	ldi	r22, 0x27	; 39
     4d0:	88 e3       	ldi	r24, 0x38	; 56
     4d2:	99 de       	rcall	.-718    	; 0x206 <_Z10sensor_sethhh>
     4d4:	40 e4       	ldi	r20, 0x40	; 64
     4d6:	60 e1       	ldi	r22, 0x10	; 16
     4d8:	88 e3       	ldi	r24, 0x38	; 56
     4da:	95 de       	rcall	.-726    	; 0x206 <_Z10sensor_sethhh>
     4dc:	45 e0       	ldi	r20, 0x05	; 5
     4de:	64 e0       	ldi	r22, 0x04	; 4
     4e0:	88 e3       	ldi	r24, 0x38	; 56
     4e2:	91 de       	rcall	.-734    	; 0x206 <_Z10sensor_sethhh>
     4e4:	40 e0       	ldi	r20, 0x00	; 0
     4e6:	65 e0       	ldi	r22, 0x05	; 5
     4e8:	88 e3       	ldi	r24, 0x38	; 56
     4ea:	8d de       	rcall	.-742    	; 0x206 <_Z10sensor_sethhh>
     4ec:	45 e0       	ldi	r20, 0x05	; 5
     4ee:	62 e8       	ldi	r22, 0x82	; 130
     4f0:	86 e5       	ldi	r24, 0x56	; 86
     4f2:	89 de       	rcall	.-750    	; 0x206 <_Z10sensor_sethhh>
     4f4:	40 e0       	ldi	r20, 0x00	; 0
     4f6:	63 e8       	ldi	r22, 0x83	; 131
     4f8:	86 e5       	ldi	r24, 0x56	; 86
     4fa:	85 de       	rcall	.-758    	; 0x206 <_Z10sensor_sethhh>
     4fc:	43 e0       	ldi	r20, 0x03	; 3
     4fe:	66 e0       	ldi	r22, 0x06	; 6
     500:	88 e3       	ldi	r24, 0x38	; 56
     502:	81 de       	rcall	.-766    	; 0x206 <_Z10sensor_sethhh>
     504:	40 ec       	ldi	r20, 0xC0	; 192
     506:	67 e0       	ldi	r22, 0x07	; 7
     508:	88 e3       	ldi	r24, 0x38	; 56
     50a:	7d de       	rcall	.-774    	; 0x206 <_Z10sensor_sethhh>
     50c:	43 e0       	ldi	r20, 0x03	; 3
     50e:	66 e8       	ldi	r22, 0x86	; 134
     510:	86 e5       	ldi	r24, 0x56	; 86
     512:	79 de       	rcall	.-782    	; 0x206 <_Z10sensor_sethhh>
     514:	4c eb       	ldi	r20, 0xBC	; 188
     516:	67 e8       	ldi	r22, 0x87	; 135
     518:	86 e5       	ldi	r24, 0x56	; 86
     51a:	75 de       	rcall	.-790    	; 0x206 <_Z10sensor_sethhh>
     51c:	48 e7       	ldi	r20, 0x78	; 120
     51e:	60 e0       	ldi	r22, 0x00	; 0
     520:	8a e3       	ldi	r24, 0x3A	; 58
     522:	71 de       	rcall	.-798    	; 0x206 <_Z10sensor_sethhh>
     524:	45 e0       	ldi	r20, 0x05	; 5
     526:	6a e1       	ldi	r22, 0x1A	; 26
     528:	8a e3       	ldi	r24, 0x3A	; 58
     52a:	6d de       	rcall	.-806    	; 0x206 <_Z10sensor_sethhh>
     52c:	40 e3       	ldi	r20, 0x30	; 48
     52e:	63 e1       	ldi	r22, 0x13	; 19
     530:	8a e3       	ldi	r24, 0x3A	; 58
     532:	69 de       	rcall	.-814    	; 0x206 <_Z10sensor_sethhh>
     534:	40 e0       	ldi	r20, 0x00	; 0
     536:	68 e1       	ldi	r22, 0x18	; 24
     538:	8a e3       	ldi	r24, 0x3A	; 58
     53a:	65 de       	rcall	.-822    	; 0x206 <_Z10sensor_sethhh>
     53c:	4c e7       	ldi	r20, 0x7C	; 124
     53e:	69 e1       	ldi	r22, 0x19	; 25
     540:	8a e3       	ldi	r24, 0x3A	; 58
     542:	61 de       	rcall	.-830    	; 0x206 <_Z10sensor_sethhh>
     544:	42 e1       	ldi	r20, 0x12	; 18
     546:	68 e0       	ldi	r22, 0x08	; 8
     548:	8a e3       	ldi	r24, 0x3A	; 58
     54a:	5d de       	rcall	.-838    	; 0x206 <_Z10sensor_sethhh>
     54c:	40 ec       	ldi	r20, 0xC0	; 192
     54e:	69 e0       	ldi	r22, 0x09	; 9
     550:	8a e3       	ldi	r24, 0x3A	; 58
     552:	59 de       	rcall	.-846    	; 0x206 <_Z10sensor_sethhh>
     554:	4f e0       	ldi	r20, 0x0F	; 15
     556:	6a e0       	ldi	r22, 0x0A	; 10
     558:	8a e3       	ldi	r24, 0x3A	; 58
     55a:	55 de       	rcall	.-854    	; 0x206 <_Z10sensor_sethhh>
     55c:	40 ea       	ldi	r20, 0xA0	; 160
     55e:	6b e0       	ldi	r22, 0x0B	; 11
     560:	8a e3       	ldi	r24, 0x3A	; 58
     562:	51 de       	rcall	.-862    	; 0x206 <_Z10sensor_sethhh>
     564:	47 e0       	ldi	r20, 0x07	; 7
     566:	6c e0       	ldi	r22, 0x0C	; 12
     568:	85 e3       	ldi	r24, 0x35	; 53
     56a:	4d de       	rcall	.-870    	; 0x206 <_Z10sensor_sethhh>
     56c:	40 ed       	ldi	r20, 0xD0	; 208
     56e:	6d e0       	ldi	r22, 0x0D	; 13
     570:	85 e3       	ldi	r24, 0x35	; 53
     572:	49 de       	rcall	.-878    	; 0x206 <_Z10sensor_sethhh>
     574:	40 e0       	ldi	r20, 0x00	; 0
     576:	60 e0       	ldi	r22, 0x00	; 0
     578:	85 e3       	ldi	r24, 0x35	; 53
     57a:	45 de       	rcall	.-886    	; 0x206 <_Z10sensor_sethhh>
     57c:	40 e0       	ldi	r20, 0x00	; 0
     57e:	61 e0       	ldi	r22, 0x01	; 1
     580:	85 e3       	ldi	r24, 0x35	; 53
     582:	41 de       	rcall	.-894    	; 0x206 <_Z10sensor_sethhh>
     584:	40 e0       	ldi	r20, 0x00	; 0
     586:	62 e0       	ldi	r22, 0x02	; 2
     588:	85 e3       	ldi	r24, 0x35	; 53
     58a:	3d de       	rcall	.-902    	; 0x206 <_Z10sensor_sethhh>
     58c:	40 e0       	ldi	r20, 0x00	; 0
     58e:	6a e0       	ldi	r22, 0x0A	; 10
     590:	85 e3       	ldi	r24, 0x35	; 53
     592:	39 de       	rcall	.-910    	; 0x206 <_Z10sensor_sethhh>
     594:	40 e0       	ldi	r20, 0x00	; 0
     596:	6b e0       	ldi	r22, 0x0B	; 11
     598:	85 e3       	ldi	r24, 0x35	; 53
     59a:	35 de       	rcall	.-918    	; 0x206 <_Z10sensor_sethhh>
     59c:	40 e0       	ldi	r20, 0x00	; 0
     59e:	63 e0       	ldi	r22, 0x03	; 3
     5a0:	85 e3       	ldi	r24, 0x35	; 53
     5a2:	31 de       	rcall	.-926    	; 0x206 <_Z10sensor_sethhh>
     5a4:	42 e0       	ldi	r20, 0x02	; 2
     5a6:	6a e8       	ldi	r22, 0x8A	; 138
     5a8:	82 e5       	ldi	r24, 0x52	; 82
     5aa:	2d de       	rcall	.-934    	; 0x206 <_Z10sensor_sethhh>
     5ac:	44 e0       	ldi	r20, 0x04	; 4
     5ae:	6b e8       	ldi	r22, 0x8B	; 139
     5b0:	82 e5       	ldi	r24, 0x52	; 82
     5b2:	29 de       	rcall	.-942    	; 0x206 <_Z10sensor_sethhh>
     5b4:	48 e0       	ldi	r20, 0x08	; 8
     5b6:	6c e8       	ldi	r22, 0x8C	; 140
     5b8:	82 e5       	ldi	r24, 0x52	; 82
     5ba:	25 de       	rcall	.-950    	; 0x206 <_Z10sensor_sethhh>
     5bc:	48 e0       	ldi	r20, 0x08	; 8
     5be:	6d e8       	ldi	r22, 0x8D	; 141
     5c0:	82 e5       	ldi	r24, 0x52	; 82
     5c2:	21 de       	rcall	.-958    	; 0x206 <_Z10sensor_sethhh>
     5c4:	48 e0       	ldi	r20, 0x08	; 8
     5c6:	6e e8       	ldi	r22, 0x8E	; 142
     5c8:	82 e5       	ldi	r24, 0x52	; 82
     5ca:	1d de       	rcall	.-966    	; 0x206 <_Z10sensor_sethhh>
     5cc:	40 e1       	ldi	r20, 0x10	; 16
     5ce:	6f e8       	ldi	r22, 0x8F	; 143
     5d0:	82 e5       	ldi	r24, 0x52	; 82
     5d2:	19 de       	rcall	.-974    	; 0x206 <_Z10sensor_sethhh>
     5d4:	40 e1       	ldi	r20, 0x10	; 16
     5d6:	60 e9       	ldi	r22, 0x90	; 144
     5d8:	82 e5       	ldi	r24, 0x52	; 82
     5da:	15 de       	rcall	.-982    	; 0x206 <_Z10sensor_sethhh>
     5dc:	40 e0       	ldi	r20, 0x00	; 0
     5de:	62 e9       	ldi	r22, 0x92	; 146
     5e0:	82 e5       	ldi	r24, 0x52	; 82
     5e2:	11 de       	rcall	.-990    	; 0x206 <_Z10sensor_sethhh>
     5e4:	42 e0       	ldi	r20, 0x02	; 2
     5e6:	63 e9       	ldi	r22, 0x93	; 147
     5e8:	82 e5       	ldi	r24, 0x52	; 82
     5ea:	0d de       	rcall	.-998    	; 0x206 <_Z10sensor_sethhh>
     5ec:	40 e0       	ldi	r20, 0x00	; 0
     5ee:	64 e9       	ldi	r22, 0x94	; 148
     5f0:	82 e5       	ldi	r24, 0x52	; 82
     5f2:	09 de       	rcall	.-1006   	; 0x206 <_Z10sensor_sethhh>
     5f4:	42 e0       	ldi	r20, 0x02	; 2
     5f6:	65 e9       	ldi	r22, 0x95	; 149
     5f8:	82 e5       	ldi	r24, 0x52	; 82
     5fa:	05 de       	rcall	.-1014   	; 0x206 <_Z10sensor_sethhh>
     5fc:	40 e0       	ldi	r20, 0x00	; 0
     5fe:	66 e9       	ldi	r22, 0x96	; 150
     600:	82 e5       	ldi	r24, 0x52	; 82
     602:	01 de       	rcall	.-1022   	; 0x206 <_Z10sensor_sethhh>
     604:	42 e0       	ldi	r20, 0x02	; 2
     606:	67 e9       	ldi	r22, 0x97	; 151
     608:	82 e5       	ldi	r24, 0x52	; 82
     60a:	fd dd       	rcall	.-1030   	; 0x206 <_Z10sensor_sethhh>
     60c:	40 e0       	ldi	r20, 0x00	; 0
     60e:	68 e9       	ldi	r22, 0x98	; 152
     610:	82 e5       	ldi	r24, 0x52	; 82
     612:	f9 dd       	rcall	.-1038   	; 0x206 <_Z10sensor_sethhh>
     614:	42 e0       	ldi	r20, 0x02	; 2
     616:	69 e9       	ldi	r22, 0x99	; 153
     618:	82 e5       	ldi	r24, 0x52	; 82
     61a:	f5 dd       	rcall	.-1046   	; 0x206 <_Z10sensor_sethhh>
     61c:	40 e0       	ldi	r20, 0x00	; 0
     61e:	6a e9       	ldi	r22, 0x9A	; 154
     620:	82 e5       	ldi	r24, 0x52	; 82
     622:	f1 dd       	rcall	.-1054   	; 0x206 <_Z10sensor_sethhh>
     624:	42 e0       	ldi	r20, 0x02	; 2
     626:	6b e9       	ldi	r22, 0x9B	; 155
     628:	82 e5       	ldi	r24, 0x52	; 82
     62a:	ed dd       	rcall	.-1062   	; 0x206 <_Z10sensor_sethhh>
     62c:	40 e0       	ldi	r20, 0x00	; 0
     62e:	6c e9       	ldi	r22, 0x9C	; 156
     630:	82 e5       	ldi	r24, 0x52	; 82
     632:	e9 dd       	rcall	.-1070   	; 0x206 <_Z10sensor_sethhh>
     634:	42 e0       	ldi	r20, 0x02	; 2
     636:	6d e9       	ldi	r22, 0x9D	; 157
     638:	82 e5       	ldi	r24, 0x52	; 82
     63a:	e5 dd       	rcall	.-1078   	; 0x206 <_Z10sensor_sethhh>
     63c:	40 e0       	ldi	r20, 0x00	; 0
     63e:	6e e9       	ldi	r22, 0x9E	; 158
     640:	82 e5       	ldi	r24, 0x52	; 82
     642:	e1 dd       	rcall	.-1086   	; 0x206 <_Z10sensor_sethhh>
     644:	42 e0       	ldi	r20, 0x02	; 2
     646:	6f e9       	ldi	r22, 0x9F	; 159
     648:	82 e5       	ldi	r24, 0x52	; 82
     64a:	dd dd       	rcall	.-1094   	; 0x206 <_Z10sensor_sethhh>
     64c:	4b e0       	ldi	r20, 0x0B	; 11
     64e:	60 e3       	ldi	r22, 0x30	; 48
     650:	80 e3       	ldi	r24, 0x30	; 48
     652:	d9 dd       	rcall	.-1102   	; 0x206 <_Z10sensor_sethhh>
     654:	40 e0       	ldi	r20, 0x00	; 0
     656:	62 e0       	ldi	r22, 0x02	; 2
     658:	8a e3       	ldi	r24, 0x3A	; 58
     65a:	d5 dd       	rcall	.-1110   	; 0x206 <_Z10sensor_sethhh>
     65c:	4d e7       	ldi	r20, 0x7D	; 125
     65e:	63 e0       	ldi	r22, 0x03	; 3
     660:	8a e3       	ldi	r24, 0x3A	; 58
     662:	d1 dd       	rcall	.-1118   	; 0x206 <_Z10sensor_sethhh>
     664:	40 e0       	ldi	r20, 0x00	; 0
     666:	64 e0       	ldi	r22, 0x04	; 4
     668:	8a e3       	ldi	r24, 0x3A	; 58
     66a:	cd dd       	rcall	.-1126   	; 0x206 <_Z10sensor_sethhh>
     66c:	40 e0       	ldi	r20, 0x00	; 0
     66e:	64 e1       	ldi	r22, 0x14	; 20
     670:	8a e3       	ldi	r24, 0x3A	; 58
     672:	c9 dd       	rcall	.-1134   	; 0x206 <_Z10sensor_sethhh>
     674:	4d e7       	ldi	r20, 0x7D	; 125
     676:	65 e1       	ldi	r22, 0x15	; 21
     678:	8a e3       	ldi	r24, 0x3A	; 58
     67a:	c5 dd       	rcall	.-1142   	; 0x206 <_Z10sensor_sethhh>
     67c:	40 e0       	ldi	r20, 0x00	; 0
     67e:	66 e1       	ldi	r22, 0x16	; 22
     680:	8a e3       	ldi	r24, 0x3A	; 58
     682:	c1 dd       	rcall	.-1150   	; 0x206 <_Z10sensor_sethhh>
     684:	48 e7       	ldi	r20, 0x78	; 120
     686:	60 e0       	ldi	r22, 0x00	; 0
     688:	8a e3       	ldi	r24, 0x3A	; 58
     68a:	bd dd       	rcall	.-1158   	; 0x206 <_Z10sensor_sethhh>
     68c:	49 e0       	ldi	r20, 0x09	; 9
     68e:	68 e0       	ldi	r22, 0x08	; 8
     690:	8a e3       	ldi	r24, 0x3A	; 58
     692:	b9 dd       	rcall	.-1166   	; 0x206 <_Z10sensor_sethhh>
     694:	40 e6       	ldi	r20, 0x60	; 96
     696:	69 e0       	ldi	r22, 0x09	; 9
     698:	8a e3       	ldi	r24, 0x3A	; 58
     69a:	b5 dd       	rcall	.-1174   	; 0x206 <_Z10sensor_sethhh>
     69c:	47 e0       	ldi	r20, 0x07	; 7
     69e:	6a e0       	ldi	r22, 0x0A	; 10
     6a0:	8a e3       	ldi	r24, 0x3A	; 58
     6a2:	b1 dd       	rcall	.-1182   	; 0x206 <_Z10sensor_sethhh>
     6a4:	40 ed       	ldi	r20, 0xD0	; 208
     6a6:	6b e0       	ldi	r22, 0x0B	; 11
     6a8:	8a e3       	ldi	r24, 0x3A	; 58
     6aa:	ad dd       	rcall	.-1190   	; 0x206 <_Z10sensor_sethhh>
     6ac:	48 e0       	ldi	r20, 0x08	; 8
     6ae:	6d e0       	ldi	r22, 0x0D	; 13
     6b0:	8a e3       	ldi	r24, 0x3A	; 58
     6b2:	a9 dd       	rcall	.-1198   	; 0x206 <_Z10sensor_sethhh>
     6b4:	46 e0       	ldi	r20, 0x06	; 6
     6b6:	6e e0       	ldi	r22, 0x0E	; 14
     6b8:	8a e3       	ldi	r24, 0x3A	; 58
     6ba:	a5 dd       	rcall	.-1206   	; 0x206 <_Z10sensor_sethhh>
     6bc:	40 e7       	ldi	r20, 0x70	; 112
     6be:	63 e9       	ldi	r22, 0x93	; 147
     6c0:	81 e5       	ldi	r24, 0x51	; 81
     6c2:	a1 dd       	rcall	.-1214   	; 0x206 <_Z10sensor_sethhh>
     6c4:	44 e0       	ldi	r20, 0x04	; 4
     6c6:	6b e9       	ldi	r22, 0x9B	; 155
     6c8:	88 e5       	ldi	r24, 0x58	; 88
     6ca:	9d dd       	rcall	.-1222   	; 0x206 <_Z10sensor_sethhh>
     6cc:	45 ec       	ldi	r20, 0xC5	; 197
     6ce:	6a e9       	ldi	r22, 0x9A	; 154
     6d0:	88 e5       	ldi	r24, 0x58	; 88
     6d2:	99 dd       	rcall	.-1230   	; 0x206 <_Z10sensor_sethhh>
     6d4:	40 e2       	ldi	r20, 0x20	; 32
     6d6:	6e e1       	ldi	r22, 0x1E	; 30
     6d8:	80 e4       	ldi	r24, 0x40	; 64
     6da:	95 dd       	rcall	.-1238   	; 0x206 <_Z10sensor_sethhh>
     6dc:	42 e4       	ldi	r20, 0x42	; 66
     6de:	61 e0       	ldi	r22, 0x01	; 1
     6e0:	80 e4       	ldi	r24, 0x40	; 64
     6e2:	91 dd       	rcall	.-1246   	; 0x206 <_Z10sensor_sethhh>
     6e4:	44 e0       	ldi	r20, 0x04	; 4
     6e6:	6c e1       	ldi	r22, 0x1C	; 28
     6e8:	80 e4       	ldi	r24, 0x40	; 64
     6ea:	8d dd       	rcall	.-1254   	; 0x206 <_Z10sensor_sethhh>
     6ec:	41 e0       	ldi	r20, 0x01	; 1
     6ee:	6a e8       	ldi	r22, 0x8A	; 138
     6f0:	82 e5       	ldi	r24, 0x52	; 82
     6f2:	89 dd       	rcall	.-1262   	; 0x206 <_Z10sensor_sethhh>
     6f4:	44 e0       	ldi	r20, 0x04	; 4
     6f6:	6b e8       	ldi	r22, 0x8B	; 139
     6f8:	82 e5       	ldi	r24, 0x52	; 82
     6fa:	85 dd       	rcall	.-1270   	; 0x206 <_Z10sensor_sethhh>
     6fc:	48 e0       	ldi	r20, 0x08	; 8
     6fe:	6c e8       	ldi	r22, 0x8C	; 140
     700:	82 e5       	ldi	r24, 0x52	; 82
     702:	81 dd       	rcall	.-1278   	; 0x206 <_Z10sensor_sethhh>
     704:	40 e1       	ldi	r20, 0x10	; 16
     706:	6d e8       	ldi	r22, 0x8D	; 141
     708:	82 e5       	ldi	r24, 0x52	; 82
     70a:	7d dd       	rcall	.-1286   	; 0x206 <_Z10sensor_sethhh>
     70c:	40 e2       	ldi	r20, 0x20	; 32
     70e:	6e e8       	ldi	r22, 0x8E	; 142
     710:	82 e5       	ldi	r24, 0x52	; 82
     712:	79 dd       	rcall	.-1294   	; 0x206 <_Z10sensor_sethhh>
     714:	48 e2       	ldi	r20, 0x28	; 40
     716:	6f e8       	ldi	r22, 0x8F	; 143
     718:	82 e5       	ldi	r24, 0x52	; 82
     71a:	75 dd       	rcall	.-1302   	; 0x206 <_Z10sensor_sethhh>
     71c:	40 e3       	ldi	r20, 0x30	; 48
     71e:	60 e9       	ldi	r22, 0x90	; 144
     720:	82 e5       	ldi	r24, 0x52	; 82
     722:	71 dd       	rcall	.-1310   	; 0x206 <_Z10sensor_sethhh>
     724:	40 e0       	ldi	r20, 0x00	; 0
     726:	62 e9       	ldi	r22, 0x92	; 146
     728:	82 e5       	ldi	r24, 0x52	; 82
     72a:	6d dd       	rcall	.-1318   	; 0x206 <_Z10sensor_sethhh>
     72c:	41 e0       	ldi	r20, 0x01	; 1
     72e:	63 e9       	ldi	r22, 0x93	; 147
     730:	82 e5       	ldi	r24, 0x52	; 82
     732:	69 dd       	rcall	.-1326   	; 0x206 <_Z10sensor_sethhh>
     734:	40 e0       	ldi	r20, 0x00	; 0
     736:	64 e9       	ldi	r22, 0x94	; 148
     738:	82 e5       	ldi	r24, 0x52	; 82
     73a:	65 dd       	rcall	.-1334   	; 0x206 <_Z10sensor_sethhh>
     73c:	44 e0       	ldi	r20, 0x04	; 4
     73e:	65 e9       	ldi	r22, 0x95	; 149
     740:	82 e5       	ldi	r24, 0x52	; 82
     742:	61 dd       	rcall	.-1342   	; 0x206 <_Z10sensor_sethhh>
     744:	40 e0       	ldi	r20, 0x00	; 0
     746:	66 e9       	ldi	r22, 0x96	; 150
     748:	82 e5       	ldi	r24, 0x52	; 82
     74a:	5d dd       	rcall	.-1350   	; 0x206 <_Z10sensor_sethhh>
     74c:	48 e0       	ldi	r20, 0x08	; 8
     74e:	67 e9       	ldi	r22, 0x97	; 151
     750:	82 e5       	ldi	r24, 0x52	; 82
     752:	59 dd       	rcall	.-1358   	; 0x206 <_Z10sensor_sethhh>
     754:	40 e0       	ldi	r20, 0x00	; 0
     756:	68 e9       	ldi	r22, 0x98	; 152
     758:	82 e5       	ldi	r24, 0x52	; 82
     75a:	55 dd       	rcall	.-1366   	; 0x206 <_Z10sensor_sethhh>
     75c:	40 e1       	ldi	r20, 0x10	; 16
     75e:	69 e9       	ldi	r22, 0x99	; 153
     760:	82 e5       	ldi	r24, 0x52	; 82
     762:	51 dd       	rcall	.-1374   	; 0x206 <_Z10sensor_sethhh>
     764:	40 e0       	ldi	r20, 0x00	; 0
     766:	6a e9       	ldi	r22, 0x9A	; 154
     768:	82 e5       	ldi	r24, 0x52	; 82
     76a:	4d dd       	rcall	.-1382   	; 0x206 <_Z10sensor_sethhh>
     76c:	40 e2       	ldi	r20, 0x20	; 32
     76e:	6b e9       	ldi	r22, 0x9B	; 155
     770:	82 e5       	ldi	r24, 0x52	; 82
     772:	49 dd       	rcall	.-1390   	; 0x206 <_Z10sensor_sethhh>
     774:	40 e0       	ldi	r20, 0x00	; 0
     776:	6c e9       	ldi	r22, 0x9C	; 156
     778:	82 e5       	ldi	r24, 0x52	; 82
     77a:	45 dd       	rcall	.-1398   	; 0x206 <_Z10sensor_sethhh>
     77c:	48 e2       	ldi	r20, 0x28	; 40
     77e:	6d e9       	ldi	r22, 0x9D	; 157
     780:	82 e5       	ldi	r24, 0x52	; 82
     782:	41 dd       	rcall	.-1406   	; 0x206 <_Z10sensor_sethhh>
     784:	40 e0       	ldi	r20, 0x00	; 0
     786:	6e e9       	ldi	r22, 0x9E	; 158
     788:	82 e5       	ldi	r24, 0x52	; 82
     78a:	3d dd       	rcall	.-1414   	; 0x206 <_Z10sensor_sethhh>
     78c:	40 e3       	ldi	r20, 0x30	; 48
     78e:	6f e9       	ldi	r22, 0x9F	; 159
     790:	82 e5       	ldi	r24, 0x52	; 82
     792:	39 dd       	rcall	.-1422   	; 0x206 <_Z10sensor_sethhh>
     794:	40 e0       	ldi	r20, 0x00	; 0
     796:	62 e8       	ldi	r22, 0x82	; 130
     798:	82 e5       	ldi	r24, 0x52	; 82
     79a:	35 dd       	rcall	.-1430   	; 0x206 <_Z10sensor_sethhh>
     79c:	40 e0       	ldi	r20, 0x00	; 0
     79e:	60 e0       	ldi	r22, 0x00	; 0
     7a0:	83 e5       	ldi	r24, 0x53	; 83
     7a2:	31 dd       	rcall	.-1438   	; 0x206 <_Z10sensor_sethhh>
     7a4:	40 e2       	ldi	r20, 0x20	; 32
     7a6:	61 e0       	ldi	r22, 0x01	; 1
     7a8:	83 e5       	ldi	r24, 0x53	; 83
     7aa:	2d dd       	rcall	.-1446   	; 0x206 <_Z10sensor_sethhh>
     7ac:	40 e0       	ldi	r20, 0x00	; 0
     7ae:	62 e0       	ldi	r22, 0x02	; 2
     7b0:	83 e5       	ldi	r24, 0x53	; 83
     7b2:	29 dd       	rcall	.-1454   	; 0x206 <_Z10sensor_sethhh>
     7b4:	4c e7       	ldi	r20, 0x7C	; 124
     7b6:	63 e0       	ldi	r22, 0x03	; 3
     7b8:	83 e5       	ldi	r24, 0x53	; 83
     7ba:	25 dd       	rcall	.-1462   	; 0x206 <_Z10sensor_sethhh>
     7bc:	40 e0       	ldi	r20, 0x00	; 0
     7be:	6c e0       	ldi	r22, 0x0C	; 12
     7c0:	83 e5       	ldi	r24, 0x53	; 83
     7c2:	21 dd       	rcall	.-1470   	; 0x206 <_Z10sensor_sethhh>
     7c4:	4c e0       	ldi	r20, 0x0C	; 12
     7c6:	6d e0       	ldi	r22, 0x0D	; 13
     7c8:	83 e5       	ldi	r24, 0x53	; 83
     7ca:	1d dd       	rcall	.-1478   	; 0x206 <_Z10sensor_sethhh>
     7cc:	40 e2       	ldi	r20, 0x20	; 32
     7ce:	6e e0       	ldi	r22, 0x0E	; 14
     7d0:	83 e5       	ldi	r24, 0x53	; 83
     7d2:	19 dd       	rcall	.-1486   	; 0x206 <_Z10sensor_sethhh>
     7d4:	40 e8       	ldi	r20, 0x80	; 128
     7d6:	6f e0       	ldi	r22, 0x0F	; 15
     7d8:	83 e5       	ldi	r24, 0x53	; 83
     7da:	15 dd       	rcall	.-1494   	; 0x206 <_Z10sensor_sethhh>
     7dc:	40 e2       	ldi	r20, 0x20	; 32
     7de:	60 e1       	ldi	r22, 0x10	; 16
     7e0:	83 e5       	ldi	r24, 0x53	; 83
     7e2:	11 dd       	rcall	.-1502   	; 0x206 <_Z10sensor_sethhh>
     7e4:	40 e8       	ldi	r20, 0x80	; 128
     7e6:	61 e1       	ldi	r22, 0x11	; 17
     7e8:	83 e5       	ldi	r24, 0x53	; 83
     7ea:	0d dd       	rcall	.-1510   	; 0x206 <_Z10sensor_sethhh>
     7ec:	40 e2       	ldi	r20, 0x20	; 32
     7ee:	68 e0       	ldi	r22, 0x08	; 8
     7f0:	83 e5       	ldi	r24, 0x53	; 83
     7f2:	09 dd       	rcall	.-1518   	; 0x206 <_Z10sensor_sethhh>
     7f4:	40 e4       	ldi	r20, 0x40	; 64
     7f6:	69 e0       	ldi	r22, 0x09	; 9
     7f8:	83 e5       	ldi	r24, 0x53	; 83
     7fa:	05 dd       	rcall	.-1526   	; 0x206 <_Z10sensor_sethhh>
     7fc:	40 e0       	ldi	r20, 0x00	; 0
     7fe:	64 e0       	ldi	r22, 0x04	; 4
     800:	83 e5       	ldi	r24, 0x53	; 83
     802:	01 dd       	rcall	.-1534   	; 0x206 <_Z10sensor_sethhh>
     804:	40 e3       	ldi	r20, 0x30	; 48
     806:	65 e0       	ldi	r22, 0x05	; 5
     808:	83 e5       	ldi	r24, 0x53	; 83
     80a:	fd dc       	rcall	.-1542   	; 0x206 <_Z10sensor_sethhh>
     80c:	40 e0       	ldi	r20, 0x00	; 0
     80e:	66 e0       	ldi	r22, 0x06	; 6
     810:	83 e5       	ldi	r24, 0x53	; 83
     812:	f9 dc       	rcall	.-1550   	; 0x206 <_Z10sensor_sethhh>
     814:	40 e8       	ldi	r20, 0x80	; 128
     816:	67 e0       	ldi	r22, 0x07	; 7
     818:	83 e5       	ldi	r24, 0x53	; 83
     81a:	f5 dc       	rcall	.-1558   	; 0x206 <_Z10sensor_sethhh>
     81c:	48 e0       	ldi	r20, 0x08	; 8
     81e:	64 e1       	ldi	r22, 0x14	; 20
     820:	83 e5       	ldi	r24, 0x53	; 83
     822:	f1 dc       	rcall	.-1566   	; 0x206 <_Z10sensor_sethhh>
     824:	40 e2       	ldi	r20, 0x20	; 32
     826:	65 e1       	ldi	r22, 0x15	; 21
     828:	83 e5       	ldi	r24, 0x53	; 83
     82a:	ed dc       	rcall	.-1574   	; 0x206 <_Z10sensor_sethhh>
     82c:	40 e3       	ldi	r20, 0x30	; 48
     82e:	69 e1       	ldi	r22, 0x19	; 25
     830:	83 e5       	ldi	r24, 0x53	; 83
     832:	e9 dc       	rcall	.-1582   	; 0x206 <_Z10sensor_sethhh>
     834:	40 e1       	ldi	r20, 0x10	; 16
     836:	66 e1       	ldi	r22, 0x16	; 22
     838:	83 e5       	ldi	r24, 0x53	; 83
     83a:	e5 dc       	rcall	.-1590   	; 0x206 <_Z10sensor_sethhh>
     83c:	40 e0       	ldi	r20, 0x00	; 0
     83e:	67 e1       	ldi	r22, 0x17	; 23
     840:	83 e5       	ldi	r24, 0x53	; 83
     842:	e1 dc       	rcall	.-1598   	; 0x206 <_Z10sensor_sethhh>
     844:	42 e0       	ldi	r20, 0x02	; 2
     846:	68 e1       	ldi	r22, 0x18	; 24
     848:	83 e5       	ldi	r24, 0x53	; 83
     84a:	dd dc       	rcall	.-1606   	; 0x206 <_Z10sensor_sethhh>
     84c:	4f e3       	ldi	r20, 0x3F	; 63
     84e:	62 e0       	ldi	r22, 0x02	; 2
     850:	84 e5       	ldi	r24, 0x54	; 84
     852:	d9 dc       	rcall	.-1614   	; 0x206 <_Z10sensor_sethhh>
     854:	40 e0       	ldi	r20, 0x00	; 0
     856:	63 e0       	ldi	r22, 0x03	; 3
     858:	84 e5       	ldi	r24, 0x54	; 84
     85a:	d5 dc       	rcall	.-1622   	; 0x206 <_Z10sensor_sethhh>
     85c:	40 e0       	ldi	r20, 0x00	; 0
     85e:	66 e0       	ldi	r22, 0x06	; 6
     860:	84 e3       	ldi	r24, 0x34	; 52
     862:	d1 dc       	rcall	.-1630   	; 0x206 <_Z10sensor_sethhh>
     864:	4f ef       	ldi	r20, 0xFF	; 255
     866:	60 e8       	ldi	r22, 0x80	; 128
     868:	81 e5       	ldi	r24, 0x51	; 81
     86a:	cd dc       	rcall	.-1638   	; 0x206 <_Z10sensor_sethhh>
     86c:	42 e5       	ldi	r20, 0x52	; 82
     86e:	61 e8       	ldi	r22, 0x81	; 129
     870:	81 e5       	ldi	r24, 0x51	; 81
     872:	c9 dc       	rcall	.-1646   	; 0x206 <_Z10sensor_sethhh>
     874:	41 e1       	ldi	r20, 0x11	; 17
     876:	62 e8       	ldi	r22, 0x82	; 130
     878:	81 e5       	ldi	r24, 0x51	; 81
     87a:	c5 dc       	rcall	.-1654   	; 0x206 <_Z10sensor_sethhh>
     87c:	44 e1       	ldi	r20, 0x14	; 20
     87e:	63 e8       	ldi	r22, 0x83	; 131
     880:	81 e5       	ldi	r24, 0x51	; 81
     882:	c1 dc       	rcall	.-1662   	; 0x206 <_Z10sensor_sethhh>
     884:	45 e2       	ldi	r20, 0x25	; 37
     886:	64 e8       	ldi	r22, 0x84	; 132
     888:	81 e5       	ldi	r24, 0x51	; 81
     88a:	bd dc       	rcall	.-1670   	; 0x206 <_Z10sensor_sethhh>
     88c:	44 e2       	ldi	r20, 0x24	; 36
     88e:	65 e8       	ldi	r22, 0x85	; 133
     890:	81 e5       	ldi	r24, 0x51	; 81
     892:	b9 dc       	rcall	.-1678   	; 0x206 <_Z10sensor_sethhh>
     894:	46 e0       	ldi	r20, 0x06	; 6
     896:	66 e8       	ldi	r22, 0x86	; 134
     898:	81 e5       	ldi	r24, 0x51	; 81
     89a:	b5 dc       	rcall	.-1686   	; 0x206 <_Z10sensor_sethhh>
     89c:	48 e0       	ldi	r20, 0x08	; 8
     89e:	67 e8       	ldi	r22, 0x87	; 135
     8a0:	81 e5       	ldi	r24, 0x51	; 81
     8a2:	b1 dc       	rcall	.-1694   	; 0x206 <_Z10sensor_sethhh>
     8a4:	48 e0       	ldi	r20, 0x08	; 8
     8a6:	68 e8       	ldi	r22, 0x88	; 136
     8a8:	81 e5       	ldi	r24, 0x51	; 81
     8aa:	ad dc       	rcall	.-1702   	; 0x206 <_Z10sensor_sethhh>
     8ac:	4c e7       	ldi	r20, 0x7C	; 124
     8ae:	69 e8       	ldi	r22, 0x89	; 137
     8b0:	81 e5       	ldi	r24, 0x51	; 81
     8b2:	a9 dc       	rcall	.-1710   	; 0x206 <_Z10sensor_sethhh>
     8b4:	40 e6       	ldi	r20, 0x60	; 96
     8b6:	6a e8       	ldi	r22, 0x8A	; 138
     8b8:	81 e5       	ldi	r24, 0x51	; 81
     8ba:	a5 dc       	rcall	.-1718   	; 0x206 <_Z10sensor_sethhh>
     8bc:	42 eb       	ldi	r20, 0xB2	; 178
     8be:	6b e8       	ldi	r22, 0x8B	; 139
     8c0:	81 e5       	ldi	r24, 0x51	; 81
     8c2:	a1 dc       	rcall	.-1726   	; 0x206 <_Z10sensor_sethhh>
     8c4:	42 eb       	ldi	r20, 0xB2	; 178
     8c6:	6c e8       	ldi	r22, 0x8C	; 140
     8c8:	81 e5       	ldi	r24, 0x51	; 81
     8ca:	9d dc       	rcall	.-1734   	; 0x206 <_Z10sensor_sethhh>
     8cc:	44 e4       	ldi	r20, 0x44	; 68
     8ce:	6d e8       	ldi	r22, 0x8D	; 141
     8d0:	81 e5       	ldi	r24, 0x51	; 81
     8d2:	99 dc       	rcall	.-1742   	; 0x206 <_Z10sensor_sethhh>
     8d4:	4d e3       	ldi	r20, 0x3D	; 61
     8d6:	6e e8       	ldi	r22, 0x8E	; 142
     8d8:	81 e5       	ldi	r24, 0x51	; 81
     8da:	95 dc       	rcall	.-1750   	; 0x206 <_Z10sensor_sethhh>
     8dc:	48 e5       	ldi	r20, 0x58	; 88
     8de:	6f e8       	ldi	r22, 0x8F	; 143
     8e0:	81 e5       	ldi	r24, 0x51	; 81
     8e2:	91 dc       	rcall	.-1758   	; 0x206 <_Z10sensor_sethhh>
     8e4:	46 e4       	ldi	r20, 0x46	; 70
     8e6:	60 e9       	ldi	r22, 0x90	; 144
     8e8:	81 e5       	ldi	r24, 0x51	; 81
     8ea:	8d dc       	rcall	.-1766   	; 0x206 <_Z10sensor_sethhh>
     8ec:	48 ef       	ldi	r20, 0xF8	; 248
     8ee:	61 e9       	ldi	r22, 0x91	; 145
     8f0:	81 e5       	ldi	r24, 0x51	; 81
     8f2:	89 dc       	rcall	.-1774   	; 0x206 <_Z10sensor_sethhh>
     8f4:	44 e0       	ldi	r20, 0x04	; 4
     8f6:	62 e9       	ldi	r22, 0x92	; 146
     8f8:	81 e5       	ldi	r24, 0x51	; 81
     8fa:	85 dc       	rcall	.-1782   	; 0x206 <_Z10sensor_sethhh>
     8fc:	40 e7       	ldi	r20, 0x70	; 112
     8fe:	63 e9       	ldi	r22, 0x93	; 147
     900:	81 e5       	ldi	r24, 0x51	; 81
     902:	81 dc       	rcall	.-1790   	; 0x206 <_Z10sensor_sethhh>
     904:	40 ef       	ldi	r20, 0xF0	; 240
     906:	64 e9       	ldi	r22, 0x94	; 148
     908:	81 e5       	ldi	r24, 0x51	; 81
     90a:	7d dc       	rcall	.-1798   	; 0x206 <_Z10sensor_sethhh>
     90c:	40 ef       	ldi	r20, 0xF0	; 240
     90e:	65 e9       	ldi	r22, 0x95	; 149
     910:	81 e5       	ldi	r24, 0x51	; 81
     912:	79 dc       	rcall	.-1806   	; 0x206 <_Z10sensor_sethhh>
     914:	43 e0       	ldi	r20, 0x03	; 3
     916:	66 e9       	ldi	r22, 0x96	; 150
     918:	81 e5       	ldi	r24, 0x51	; 81
     91a:	75 dc       	rcall	.-1814   	; 0x206 <_Z10sensor_sethhh>
     91c:	41 e0       	ldi	r20, 0x01	; 1
     91e:	67 e9       	ldi	r22, 0x97	; 151
     920:	81 e5       	ldi	r24, 0x51	; 81
     922:	71 dc       	rcall	.-1822   	; 0x206 <_Z10sensor_sethhh>
     924:	44 e0       	ldi	r20, 0x04	; 4
     926:	68 e9       	ldi	r22, 0x98	; 152
     928:	81 e5       	ldi	r24, 0x51	; 81
     92a:	6d dc       	rcall	.-1830   	; 0x206 <_Z10sensor_sethhh>
     92c:	42 e1       	ldi	r20, 0x12	; 18
     92e:	69 e9       	ldi	r22, 0x99	; 153
     930:	81 e5       	ldi	r24, 0x51	; 81
     932:	69 dc       	rcall	.-1838   	; 0x206 <_Z10sensor_sethhh>
     934:	44 e0       	ldi	r20, 0x04	; 4
     936:	6a e9       	ldi	r22, 0x9A	; 154
     938:	81 e5       	ldi	r24, 0x51	; 81
     93a:	65 dc       	rcall	.-1846   	; 0x206 <_Z10sensor_sethhh>
     93c:	40 e0       	ldi	r20, 0x00	; 0
     93e:	6b e9       	ldi	r22, 0x9B	; 155
     940:	81 e5       	ldi	r24, 0x51	; 81
     942:	61 dc       	rcall	.-1854   	; 0x206 <_Z10sensor_sethhh>
     944:	46 e0       	ldi	r20, 0x06	; 6
     946:	6c e9       	ldi	r22, 0x9C	; 156
     948:	81 e5       	ldi	r24, 0x51	; 81
     94a:	5d dc       	rcall	.-1862   	; 0x206 <_Z10sensor_sethhh>
     94c:	42 e8       	ldi	r20, 0x82	; 130
     94e:	6d e9       	ldi	r22, 0x9D	; 157
     950:	81 e5       	ldi	r24, 0x51	; 81
     952:	59 dc       	rcall	.-1870   	; 0x206 <_Z10sensor_sethhh>
     954:	40 e0       	ldi	r20, 0x00	; 0
     956:	6e e9       	ldi	r22, 0x9E	; 158
     958:	81 e5       	ldi	r24, 0x51	; 81
     95a:	55 dc       	rcall	.-1878   	; 0x206 <_Z10sensor_sethhh>
     95c:	40 e8       	ldi	r20, 0x80	; 128
     95e:	65 e2       	ldi	r22, 0x25	; 37
     960:	80 e5       	ldi	r24, 0x50	; 80
     962:	51 dc       	rcall	.-1886   	; 0x206 <_Z10sensor_sethhh>
     964:	40 e4       	ldi	r20, 0x40	; 64
     966:	63 e8       	ldi	r22, 0x83	; 131
     968:	85 e5       	ldi	r24, 0x55	; 85
     96a:	4d dc       	rcall	.-1894   	; 0x206 <_Z10sensor_sethhh>
     96c:	40 e4       	ldi	r20, 0x40	; 64
     96e:	64 e8       	ldi	r22, 0x84	; 132
     970:	85 e5       	ldi	r24, 0x55	; 85
     972:	49 dc       	rcall	.-1902   	; 0x206 <_Z10sensor_sethhh>
     974:	42 e0       	ldi	r20, 0x02	; 2
     976:	60 e8       	ldi	r22, 0x80	; 128
     978:	85 e5       	ldi	r24, 0x55	; 85
     97a:	45 dc       	rcall	.-1910   	; 0x206 <_Z10sensor_sethhh>
     97c:	4f ec       	ldi	r20, 0xCF	; 207
     97e:	60 e0       	ldi	r22, 0x00	; 0
     980:	80 e5       	ldi	r24, 0x50	; 80
     982:	41 dc       	rcall	.-1918   	; 0x206 <_Z10sensor_sethhh>
     984:	40 e1       	ldi	r20, 0x10	; 16
     986:	60 e1       	ldi	r22, 0x10	; 16
     988:	87 e3       	ldi	r24, 0x37	; 55
     98a:	3d dc       	rcall	.-1926   	; 0x206 <_Z10sensor_sethhh>
     98c:	41 e5       	ldi	r20, 0x51	; 81
     98e:	62 e3       	ldi	r22, 0x32	; 50
     990:	86 e3       	ldi	r24, 0x36	; 54
     992:	39 dc       	rcall	.-1934   	; 0x206 <_Z10sensor_sethhh>
     994:	40 e1       	ldi	r20, 0x10	; 16
     996:	62 e0       	ldi	r22, 0x02	; 2
     998:	87 e3       	ldi	r24, 0x37	; 55
     99a:	35 dc       	rcall	.-1942   	; 0x206 <_Z10sensor_sethhh>
     99c:	42 eb       	ldi	r20, 0xB2	; 178
     99e:	63 e0       	ldi	r22, 0x03	; 3
     9a0:	87 e3       	ldi	r24, 0x37	; 55
     9a2:	31 dc       	rcall	.-1950   	; 0x206 <_Z10sensor_sethhh>
     9a4:	48 e1       	ldi	r20, 0x18	; 24
     9a6:	64 e0       	ldi	r22, 0x04	; 4
     9a8:	87 e3       	ldi	r24, 0x37	; 55
     9aa:	2d dc       	rcall	.-1958   	; 0x206 <_Z10sensor_sethhh>
     9ac:	40 e4       	ldi	r20, 0x40	; 64
     9ae:	6b e0       	ldi	r22, 0x0B	; 11
     9b0:	87 e3       	ldi	r24, 0x37	; 55
     9b2:	29 dc       	rcall	.-1966   	; 0x206 <_Z10sensor_sethhh>
     9b4:	43 e0       	ldi	r20, 0x03	; 3
     9b6:	6d e0       	ldi	r22, 0x0D	; 13
     9b8:	87 e3       	ldi	r24, 0x37	; 55
     9ba:	25 dc       	rcall	.-1974   	; 0x206 <_Z10sensor_sethhh>
     9bc:	41 e0       	ldi	r20, 0x01	; 1
     9be:	61 e3       	ldi	r22, 0x31	; 49
     9c0:	86 e3       	ldi	r24, 0x36	; 54
     9c2:	21 dc       	rcall	.-1982   	; 0x206 <_Z10sensor_sethhh>
     9c4:	42 e5       	ldi	r20, 0x52	; 82
     9c6:	62 e3       	ldi	r22, 0x32	; 50
     9c8:	86 e3       	ldi	r24, 0x36	; 54
     9ca:	1d dc       	rcall	.-1990   	; 0x206 <_Z10sensor_sethhh>
     9cc:	44 e2       	ldi	r20, 0x24	; 36
     9ce:	66 e0       	ldi	r22, 0x06	; 6
     9d0:	86 e3       	ldi	r24, 0x36	; 54
     9d2:	19 dc       	rcall	.-1998   	; 0x206 <_Z10sensor_sethhh>
     9d4:	46 e9       	ldi	r20, 0x96	; 150
     9d6:	60 e2       	ldi	r22, 0x20	; 32
     9d8:	86 e3       	ldi	r24, 0x36	; 54
     9da:	15 dc       	rcall	.-2006   	; 0x206 <_Z10sensor_sethhh>
     9dc:	47 e0       	ldi	r20, 0x07	; 7
     9de:	65 e8       	ldi	r22, 0x85	; 133
     9e0:	87 e5       	ldi	r24, 0x57	; 87
     9e2:	11 dc       	rcall	.-2014   	; 0x206 <_Z10sensor_sethhh>
     9e4:	40 e3       	ldi	r20, 0x30	; 48
     9e6:	63 e1       	ldi	r22, 0x13	; 19
     9e8:	8a e3       	ldi	r24, 0x3A	; 58
     9ea:	0d dc       	rcall	.-2022   	; 0x206 <_Z10sensor_sethhh>
     9ec:	42 e5       	ldi	r20, 0x52	; 82
     9ee:	60 e0       	ldi	r22, 0x00	; 0
     9f0:	86 e3       	ldi	r24, 0x36	; 54
     9f2:	09 dc       	rcall	.-2030   	; 0x206 <_Z10sensor_sethhh>
     9f4:	48 e4       	ldi	r20, 0x48	; 72
     9f6:	64 e0       	ldi	r22, 0x04	; 4
     9f8:	86 e3       	ldi	r24, 0x36	; 54
     9fa:	05 dc       	rcall	.-2038   	; 0x206 <_Z10sensor_sethhh>
     9fc:	4b e1       	ldi	r20, 0x1B	; 27
     9fe:	66 e0       	ldi	r22, 0x06	; 6
     a00:	86 e3       	ldi	r24, 0x36	; 54
     a02:	01 dc       	rcall	.-2046   	; 0x206 <_Z10sensor_sethhh>
     a04:	4b e0       	ldi	r20, 0x0B	; 11
     a06:	6d e0       	ldi	r22, 0x0D	; 13
     a08:	87 e3       	ldi	r24, 0x37	; 55
     a0a:	fd db       	rcall	.-2054   	; 0x206 <_Z10sensor_sethhh>
     a0c:	40 ec       	ldi	r20, 0xC0	; 192
     a0e:	6f e0       	ldi	r22, 0x0F	; 15
     a10:	87 e3       	ldi	r24, 0x37	; 55
     a12:	f9 db       	rcall	.-2062   	; 0x206 <_Z10sensor_sethhh>
     a14:	41 e0       	ldi	r20, 0x01	; 1
     a16:	69 e0       	ldi	r22, 0x09	; 9
     a18:	87 e3       	ldi	r24, 0x37	; 55
     a1a:	f5 db       	rcall	.-2070   	; 0x206 <_Z10sensor_sethhh>
     a1c:	40 e0       	ldi	r20, 0x00	; 0
     a1e:	63 e2       	ldi	r22, 0x23	; 35
     a20:	88 e3       	ldi	r24, 0x38	; 56
     a22:	f1 db       	rcall	.-2078   	; 0x206 <_Z10sensor_sethhh>
     a24:	40 e0       	ldi	r20, 0x00	; 0
     a26:	67 e0       	ldi	r22, 0x07	; 7
     a28:	80 e5       	ldi	r24, 0x50	; 80
     a2a:	ed db       	rcall	.-2086   	; 0x206 <_Z10sensor_sethhh>
     a2c:	40 e0       	ldi	r20, 0x00	; 0
     a2e:	69 e0       	ldi	r22, 0x09	; 9
     a30:	80 e5       	ldi	r24, 0x50	; 80
     a32:	e9 db       	rcall	.-2094   	; 0x206 <_Z10sensor_sethhh>
     a34:	40 e0       	ldi	r20, 0x00	; 0
     a36:	61 e1       	ldi	r22, 0x11	; 17
     a38:	80 e5       	ldi	r24, 0x50	; 80
     a3a:	e5 db       	rcall	.-2102   	; 0x206 <_Z10sensor_sethhh>
     a3c:	40 e0       	ldi	r20, 0x00	; 0
     a3e:	63 e1       	ldi	r22, 0x13	; 19
     a40:	80 e5       	ldi	r24, 0x50	; 80
     a42:	e1 db       	rcall	.-2110   	; 0x206 <_Z10sensor_sethhh>
     a44:	40 e0       	ldi	r20, 0x00	; 0
     a46:	6e e9       	ldi	r22, 0x9E	; 158
     a48:	81 e5       	ldi	r24, 0x51	; 81
     a4a:	dd db       	rcall	.-2118   	; 0x206 <_Z10sensor_sethhh>
     a4c:	40 e0       	ldi	r20, 0x00	; 0
     a4e:	66 e8       	ldi	r22, 0x86	; 134
     a50:	80 e5       	ldi	r24, 0x50	; 80
     a52:	d9 db       	rcall	.-2126   	; 0x206 <_Z10sensor_sethhh>
     a54:	40 e0       	ldi	r20, 0x00	; 0
     a56:	67 e8       	ldi	r22, 0x87	; 135
     a58:	80 e5       	ldi	r24, 0x50	; 80
     a5a:	d5 db       	rcall	.-2134   	; 0x206 <_Z10sensor_sethhh>
     a5c:	40 e0       	ldi	r20, 0x00	; 0
     a5e:	68 e8       	ldi	r22, 0x88	; 136
     a60:	80 e5       	ldi	r24, 0x50	; 80
     a62:	d1 db       	rcall	.-2142   	; 0x206 <_Z10sensor_sethhh>
     a64:	40 e0       	ldi	r20, 0x00	; 0
     a66:	69 e8       	ldi	r22, 0x89	; 137
     a68:	80 e5       	ldi	r24, 0x50	; 80
     a6a:	cd db       	rcall	.-2150   	; 0x206 <_Z10sensor_sethhh>
     a6c:	40 e0       	ldi	r20, 0x00	; 0
     a6e:	6b e2       	ldi	r22, 0x2B	; 43
     a70:	80 e3       	ldi	r24, 0x30	; 48
     a72:	c9 db       	rcall	.-2158   	; 0x206 <_Z10sensor_sethhh>
     a74:	41 e0       	ldi	r20, 0x01	; 1
     a76:	68 e0       	ldi	r22, 0x08	; 8
     a78:	88 e3       	ldi	r24, 0x38	; 56
     a7a:	c5 db       	rcall	.-2166   	; 0x206 <_Z10sensor_sethhh>
     a7c:	40 e4       	ldi	r20, 0x40	; 64
     a7e:	69 e0       	ldi	r22, 0x09	; 9
     a80:	88 e3       	ldi	r24, 0x38	; 56
     a82:	c1 db       	rcall	.-2174   	; 0x206 <_Z10sensor_sethhh>
     a84:	40 e0       	ldi	r20, 0x00	; 0
     a86:	6a e0       	ldi	r22, 0x0A	; 10
     a88:	88 e3       	ldi	r24, 0x38	; 56
     a8a:	bd db       	rcall	.-2182   	; 0x206 <_Z10sensor_sethhh>
     a8c:	40 ef       	ldi	r20, 0xF0	; 240
     a8e:	6b e0       	ldi	r22, 0x0B	; 11
     a90:	88 e3       	ldi	r24, 0x38	; 56
     a92:	b9 db       	rcall	.-2190   	; 0x206 <_Z10sensor_sethhh>
     a94:	48 e7       	ldi	r20, 0x78	; 120
     a96:	60 e0       	ldi	r22, 0x00	; 0
     a98:	8a e3       	ldi	r24, 0x3A	; 58
     a9a:	b5 db       	rcall	.-2198   	; 0x206 <_Z10sensor_sethhh>
     a9c:	4f ef       	ldi	r20, 0xFF	; 255
     a9e:	61 e0       	ldi	r22, 0x01	; 1
     aa0:	80 e5       	ldi	r24, 0x50	; 80
     aa2:	b1 db       	rcall	.-2206   	; 0x206 <_Z10sensor_sethhh>
     aa4:	40 e5       	ldi	r20, 0x50	; 80
     aa6:	63 e8       	ldi	r22, 0x83	; 131
     aa8:	85 e5       	ldi	r24, 0x55	; 85
     aaa:	ad db       	rcall	.-2214   	; 0x206 <_Z10sensor_sethhh>
     aac:	40 e5       	ldi	r20, 0x50	; 80
     aae:	64 e8       	ldi	r22, 0x84	; 132
     ab0:	85 e5       	ldi	r24, 0x55	; 85
     ab2:	a9 db       	rcall	.-2222   	; 0x206 <_Z10sensor_sethhh>
     ab4:	42 e0       	ldi	r20, 0x02	; 2
     ab6:	60 e8       	ldi	r22, 0x80	; 128
     ab8:	85 e5       	ldi	r24, 0x55	; 85
     aba:	a5 db       	rcall	.-2230   	; 0x206 <_Z10sensor_sethhh>
     abc:	40 e8       	ldi	r20, 0x80	; 128
     abe:	61 e0       	ldi	r22, 0x01	; 1
     ac0:	8c e3       	ldi	r24, 0x3C	; 60
     ac2:	a1 db       	rcall	.-2238   	; 0x206 <_Z10sensor_sethhh>
     ac4:	44 e0       	ldi	r20, 0x04	; 4
     ac6:	60 e0       	ldi	r22, 0x00	; 0
     ac8:	8c e3       	ldi	r24, 0x3C	; 60
     aca:	9d db       	rcall	.-2246   	; 0x206 <_Z10sensor_sethhh>
     acc:	48 e4       	ldi	r20, 0x48	; 72
     ace:	60 e0       	ldi	r22, 0x00	; 0
     ad0:	88 e5       	ldi	r24, 0x58	; 88
     ad2:	99 db       	rcall	.-2254   	; 0x206 <_Z10sensor_sethhh>
     ad4:	41 e3       	ldi	r20, 0x31	; 49
     ad6:	61 e0       	ldi	r22, 0x01	; 1
     ad8:	88 e5       	ldi	r24, 0x58	; 88
     ada:	95 db       	rcall	.-2262   	; 0x206 <_Z10sensor_sethhh>
     adc:	41 e2       	ldi	r20, 0x21	; 33
     ade:	62 e0       	ldi	r22, 0x02	; 2
     ae0:	88 e5       	ldi	r24, 0x58	; 88
     ae2:	91 db       	rcall	.-2270   	; 0x206 <_Z10sensor_sethhh>
     ae4:	4b e1       	ldi	r20, 0x1B	; 27
     ae6:	63 e0       	ldi	r22, 0x03	; 3
     ae8:	88 e5       	ldi	r24, 0x58	; 88
     aea:	8d db       	rcall	.-2278   	; 0x206 <_Z10sensor_sethhh>
     aec:	4a e1       	ldi	r20, 0x1A	; 26
     aee:	64 e0       	ldi	r22, 0x04	; 4
     af0:	88 e5       	ldi	r24, 0x58	; 88
     af2:	89 db       	rcall	.-2286   	; 0x206 <_Z10sensor_sethhh>
     af4:	4e e1       	ldi	r20, 0x1E	; 30
     af6:	65 e0       	ldi	r22, 0x05	; 5
     af8:	88 e5       	ldi	r24, 0x58	; 88
     afa:	85 db       	rcall	.-2294   	; 0x206 <_Z10sensor_sethhh>
     afc:	49 e2       	ldi	r20, 0x29	; 41
     afe:	66 e0       	ldi	r22, 0x06	; 6
     b00:	88 e5       	ldi	r24, 0x58	; 88
     b02:	81 db       	rcall	.-2302   	; 0x206 <_Z10sensor_sethhh>
     b04:	48 e3       	ldi	r20, 0x38	; 56
     b06:	67 e0       	ldi	r22, 0x07	; 7
     b08:	88 e5       	ldi	r24, 0x58	; 88
     b0a:	7d db       	rcall	.-2310   	; 0x206 <_Z10sensor_sethhh>
     b0c:	46 e2       	ldi	r20, 0x26	; 38
     b0e:	68 e0       	ldi	r22, 0x08	; 8
     b10:	88 e5       	ldi	r24, 0x58	; 88
     b12:	79 db       	rcall	.-2318   	; 0x206 <_Z10sensor_sethhh>
     b14:	47 e1       	ldi	r20, 0x17	; 23
     b16:	69 e0       	ldi	r22, 0x09	; 9
     b18:	88 e5       	ldi	r24, 0x58	; 88
     b1a:	75 db       	rcall	.-2326   	; 0x206 <_Z10sensor_sethhh>
     b1c:	41 e1       	ldi	r20, 0x11	; 17
     b1e:	6a e0       	ldi	r22, 0x0A	; 10
     b20:	88 e5       	ldi	r24, 0x58	; 88
     b22:	71 db       	rcall	.-2334   	; 0x206 <_Z10sensor_sethhh>
     b24:	4e e0       	ldi	r20, 0x0E	; 14
     b26:	6b e0       	ldi	r22, 0x0B	; 11
     b28:	88 e5       	ldi	r24, 0x58	; 88
     b2a:	6d db       	rcall	.-2342   	; 0x206 <_Z10sensor_sethhh>
     b2c:	4d e0       	ldi	r20, 0x0D	; 13
     b2e:	6c e0       	ldi	r22, 0x0C	; 12
     b30:	88 e5       	ldi	r24, 0x58	; 88
     b32:	69 db       	rcall	.-2350   	; 0x206 <_Z10sensor_sethhh>
     b34:	4e e0       	ldi	r20, 0x0E	; 14
     b36:	6d e0       	ldi	r22, 0x0D	; 13
     b38:	88 e5       	ldi	r24, 0x58	; 88
     b3a:	65 db       	rcall	.-2358   	; 0x206 <_Z10sensor_sethhh>
     b3c:	43 e1       	ldi	r20, 0x13	; 19
     b3e:	6e e0       	ldi	r22, 0x0E	; 14
     b40:	88 e5       	ldi	r24, 0x58	; 88
     b42:	61 db       	rcall	.-2366   	; 0x206 <_Z10sensor_sethhh>
     b44:	4a e1       	ldi	r20, 0x1A	; 26
     b46:	6f e0       	ldi	r22, 0x0F	; 15
     b48:	88 e5       	ldi	r24, 0x58	; 88
     b4a:	5d db       	rcall	.-2374   	; 0x206 <_Z10sensor_sethhh>
     b4c:	45 e1       	ldi	r20, 0x15	; 21
     b4e:	60 e1       	ldi	r22, 0x10	; 16
     b50:	88 e5       	ldi	r24, 0x58	; 88
     b52:	59 db       	rcall	.-2382   	; 0x206 <_Z10sensor_sethhh>
     b54:	4d e0       	ldi	r20, 0x0D	; 13
     b56:	61 e1       	ldi	r22, 0x11	; 17
     b58:	88 e5       	ldi	r24, 0x58	; 88
     b5a:	55 db       	rcall	.-2390   	; 0x206 <_Z10sensor_sethhh>
     b5c:	48 e0       	ldi	r20, 0x08	; 8
     b5e:	62 e1       	ldi	r22, 0x12	; 18
     b60:	88 e5       	ldi	r24, 0x58	; 88
     b62:	51 db       	rcall	.-2398   	; 0x206 <_Z10sensor_sethhh>
     b64:	45 e0       	ldi	r20, 0x05	; 5
     b66:	63 e1       	ldi	r22, 0x13	; 19
     b68:	88 e5       	ldi	r24, 0x58	; 88
     b6a:	4d db       	rcall	.-2406   	; 0x206 <_Z10sensor_sethhh>
     b6c:	44 e0       	ldi	r20, 0x04	; 4
     b6e:	64 e1       	ldi	r22, 0x14	; 20
     b70:	88 e5       	ldi	r24, 0x58	; 88
     b72:	49 db       	rcall	.-2414   	; 0x206 <_Z10sensor_sethhh>
     b74:	45 e0       	ldi	r20, 0x05	; 5
     b76:	65 e1       	ldi	r22, 0x15	; 21
     b78:	88 e5       	ldi	r24, 0x58	; 88
     b7a:	45 db       	rcall	.-2422   	; 0x206 <_Z10sensor_sethhh>
     b7c:	49 e0       	ldi	r20, 0x09	; 9
     b7e:	66 e1       	ldi	r22, 0x16	; 22
     b80:	88 e5       	ldi	r24, 0x58	; 88
     b82:	41 db       	rcall	.-2430   	; 0x206 <_Z10sensor_sethhh>
     b84:	4d e0       	ldi	r20, 0x0D	; 13
     b86:	67 e1       	ldi	r22, 0x17	; 23
     b88:	88 e5       	ldi	r24, 0x58	; 88
     b8a:	3d db       	rcall	.-2438   	; 0x206 <_Z10sensor_sethhh>
     b8c:	41 e1       	ldi	r20, 0x11	; 17
     b8e:	68 e1       	ldi	r22, 0x18	; 24
     b90:	88 e5       	ldi	r24, 0x58	; 88
     b92:	39 db       	rcall	.-2446   	; 0x206 <_Z10sensor_sethhh>
     b94:	4a e0       	ldi	r20, 0x0A	; 10
     b96:	69 e1       	ldi	r22, 0x19	; 25
     b98:	88 e5       	ldi	r24, 0x58	; 88
     b9a:	35 db       	rcall	.-2454   	; 0x206 <_Z10sensor_sethhh>
     b9c:	44 e0       	ldi	r20, 0x04	; 4
     b9e:	6a e1       	ldi	r22, 0x1A	; 26
     ba0:	88 e5       	ldi	r24, 0x58	; 88
     ba2:	31 db       	rcall	.-2462   	; 0x206 <_Z10sensor_sethhh>
     ba4:	40 e0       	ldi	r20, 0x00	; 0
     ba6:	6b e1       	ldi	r22, 0x1B	; 27
     ba8:	88 e5       	ldi	r24, 0x58	; 88
     baa:	2d db       	rcall	.-2470   	; 0x206 <_Z10sensor_sethhh>
     bac:	40 e0       	ldi	r20, 0x00	; 0
     bae:	6c e1       	ldi	r22, 0x1C	; 28
     bb0:	88 e5       	ldi	r24, 0x58	; 88
     bb2:	29 db       	rcall	.-2478   	; 0x206 <_Z10sensor_sethhh>
     bb4:	41 e0       	ldi	r20, 0x01	; 1
     bb6:	6d e1       	ldi	r22, 0x1D	; 29
     bb8:	88 e5       	ldi	r24, 0x58	; 88
     bba:	25 db       	rcall	.-2486   	; 0x206 <_Z10sensor_sethhh>
     bbc:	46 e0       	ldi	r20, 0x06	; 6
     bbe:	6e e1       	ldi	r22, 0x1E	; 30
     bc0:	88 e5       	ldi	r24, 0x58	; 88
     bc2:	21 db       	rcall	.-2494   	; 0x206 <_Z10sensor_sethhh>
     bc4:	49 e0       	ldi	r20, 0x09	; 9
     bc6:	6f e1       	ldi	r22, 0x1F	; 31
     bc8:	88 e5       	ldi	r24, 0x58	; 88
     bca:	1d db       	rcall	.-2502   	; 0x206 <_Z10sensor_sethhh>
     bcc:	42 e1       	ldi	r20, 0x12	; 18
     bce:	60 e2       	ldi	r22, 0x20	; 32
     bd0:	88 e5       	ldi	r24, 0x58	; 88
     bd2:	19 db       	rcall	.-2510   	; 0x206 <_Z10sensor_sethhh>
     bd4:	4b e0       	ldi	r20, 0x0B	; 11
     bd6:	61 e2       	ldi	r22, 0x21	; 33
     bd8:	88 e5       	ldi	r24, 0x58	; 88
     bda:	15 db       	rcall	.-2518   	; 0x206 <_Z10sensor_sethhh>
     bdc:	44 e0       	ldi	r20, 0x04	; 4
     bde:	62 e2       	ldi	r22, 0x22	; 34
     be0:	88 e5       	ldi	r24, 0x58	; 88
     be2:	11 db       	rcall	.-2526   	; 0x206 <_Z10sensor_sethhh>
     be4:	40 e0       	ldi	r20, 0x00	; 0
     be6:	63 e2       	ldi	r22, 0x23	; 35
     be8:	88 e5       	ldi	r24, 0x58	; 88
     bea:	0d db       	rcall	.-2534   	; 0x206 <_Z10sensor_sethhh>
     bec:	40 e0       	ldi	r20, 0x00	; 0
     bee:	64 e2       	ldi	r22, 0x24	; 36
     bf0:	88 e5       	ldi	r24, 0x58	; 88
     bf2:	09 db       	rcall	.-2542   	; 0x206 <_Z10sensor_sethhh>
     bf4:	41 e0       	ldi	r20, 0x01	; 1
     bf6:	65 e2       	ldi	r22, 0x25	; 37
     bf8:	88 e5       	ldi	r24, 0x58	; 88
     bfa:	05 db       	rcall	.-2550   	; 0x206 <_Z10sensor_sethhh>
     bfc:	46 e0       	ldi	r20, 0x06	; 6
     bfe:	66 e2       	ldi	r22, 0x26	; 38
     c00:	88 e5       	ldi	r24, 0x58	; 88
     c02:	01 db       	rcall	.-2558   	; 0x206 <_Z10sensor_sethhh>
     c04:	4a e0       	ldi	r20, 0x0A	; 10
     c06:	67 e2       	ldi	r22, 0x27	; 39
     c08:	88 e5       	ldi	r24, 0x58	; 88
     c0a:	fd da       	rcall	.-2566   	; 0x206 <_Z10sensor_sethhh>
     c0c:	47 e1       	ldi	r20, 0x17	; 23
     c0e:	68 e2       	ldi	r22, 0x28	; 40
     c10:	88 e5       	ldi	r24, 0x58	; 88
     c12:	f9 da       	rcall	.-2574   	; 0x206 <_Z10sensor_sethhh>
     c14:	4f e0       	ldi	r20, 0x0F	; 15
     c16:	69 e2       	ldi	r22, 0x29	; 41
     c18:	88 e5       	ldi	r24, 0x58	; 88
     c1a:	f5 da       	rcall	.-2582   	; 0x206 <_Z10sensor_sethhh>
     c1c:	49 e0       	ldi	r20, 0x09	; 9
     c1e:	6a e2       	ldi	r22, 0x2A	; 42
     c20:	88 e5       	ldi	r24, 0x58	; 88
     c22:	f1 da       	rcall	.-2590   	; 0x206 <_Z10sensor_sethhh>
     c24:	46 e0       	ldi	r20, 0x06	; 6
     c26:	6b e2       	ldi	r22, 0x2B	; 43
     c28:	88 e5       	ldi	r24, 0x58	; 88
     c2a:	ed da       	rcall	.-2598   	; 0x206 <_Z10sensor_sethhh>
     c2c:	45 e0       	ldi	r20, 0x05	; 5
     c2e:	6c e2       	ldi	r22, 0x2C	; 44
     c30:	88 e5       	ldi	r24, 0x58	; 88
     c32:	e9 da       	rcall	.-2606   	; 0x206 <_Z10sensor_sethhh>
     c34:	46 e0       	ldi	r20, 0x06	; 6
     c36:	6d e2       	ldi	r22, 0x2D	; 45
     c38:	88 e5       	ldi	r24, 0x58	; 88
     c3a:	e5 da       	rcall	.-2614   	; 0x206 <_Z10sensor_sethhh>
     c3c:	4a e0       	ldi	r20, 0x0A	; 10
     c3e:	6e e2       	ldi	r22, 0x2E	; 46
     c40:	88 e5       	ldi	r24, 0x58	; 88
     c42:	e1 da       	rcall	.-2622   	; 0x206 <_Z10sensor_sethhh>
     c44:	4e e0       	ldi	r20, 0x0E	; 14
     c46:	6f e2       	ldi	r22, 0x2F	; 47
     c48:	88 e5       	ldi	r24, 0x58	; 88
     c4a:	dd da       	rcall	.-2630   	; 0x206 <_Z10sensor_sethhh>
     c4c:	48 e2       	ldi	r20, 0x28	; 40
     c4e:	60 e3       	ldi	r22, 0x30	; 48
     c50:	88 e5       	ldi	r24, 0x58	; 88
     c52:	d9 da       	rcall	.-2638   	; 0x206 <_Z10sensor_sethhh>
     c54:	4a e1       	ldi	r20, 0x1A	; 26
     c56:	61 e3       	ldi	r22, 0x31	; 49
     c58:	88 e5       	ldi	r24, 0x58	; 88
     c5a:	d5 da       	rcall	.-2646   	; 0x206 <_Z10sensor_sethhh>
     c5c:	41 e1       	ldi	r20, 0x11	; 17
     c5e:	62 e3       	ldi	r22, 0x32	; 50
     c60:	88 e5       	ldi	r24, 0x58	; 88
     c62:	d1 da       	rcall	.-2654   	; 0x206 <_Z10sensor_sethhh>
     c64:	4e e0       	ldi	r20, 0x0E	; 14
     c66:	63 e3       	ldi	r22, 0x33	; 51
     c68:	88 e5       	ldi	r24, 0x58	; 88
     c6a:	cd da       	rcall	.-2662   	; 0x206 <_Z10sensor_sethhh>
     c6c:	4e e0       	ldi	r20, 0x0E	; 14
     c6e:	64 e3       	ldi	r22, 0x34	; 52
     c70:	88 e5       	ldi	r24, 0x58	; 88
     c72:	c9 da       	rcall	.-2670   	; 0x206 <_Z10sensor_sethhh>
     c74:	4f e0       	ldi	r20, 0x0F	; 15
     c76:	65 e3       	ldi	r22, 0x35	; 53
     c78:	88 e5       	ldi	r24, 0x58	; 88
     c7a:	c5 da       	rcall	.-2678   	; 0x206 <_Z10sensor_sethhh>
     c7c:	45 e1       	ldi	r20, 0x15	; 21
     c7e:	66 e3       	ldi	r22, 0x36	; 54
     c80:	88 e5       	ldi	r24, 0x58	; 88
     c82:	c1 da       	rcall	.-2686   	; 0x206 <_Z10sensor_sethhh>
     c84:	4d e1       	ldi	r20, 0x1D	; 29
     c86:	67 e3       	ldi	r22, 0x37	; 55
     c88:	88 e5       	ldi	r24, 0x58	; 88
     c8a:	bd da       	rcall	.-2694   	; 0x206 <_Z10sensor_sethhh>
     c8c:	4e e6       	ldi	r20, 0x6E	; 110
     c8e:	68 e3       	ldi	r22, 0x38	; 56
     c90:	88 e5       	ldi	r24, 0x58	; 88
     c92:	b9 da       	rcall	.-2702   	; 0x206 <_Z10sensor_sethhh>
     c94:	49 e3       	ldi	r20, 0x39	; 57
     c96:	69 e3       	ldi	r22, 0x39	; 57
     c98:	88 e5       	ldi	r24, 0x58	; 88
     c9a:	b5 da       	rcall	.-2710   	; 0x206 <_Z10sensor_sethhh>
     c9c:	47 e2       	ldi	r20, 0x27	; 39
     c9e:	6a e3       	ldi	r22, 0x3A	; 58
     ca0:	88 e5       	ldi	r24, 0x58	; 88
     ca2:	b1 da       	rcall	.-2718   	; 0x206 <_Z10sensor_sethhh>
     ca4:	4f e1       	ldi	r20, 0x1F	; 31
     ca6:	6b e3       	ldi	r22, 0x3B	; 59
     ca8:	88 e5       	ldi	r24, 0x58	; 88
     caa:	ad da       	rcall	.-2726   	; 0x206 <_Z10sensor_sethhh>
     cac:	4e e1       	ldi	r20, 0x1E	; 30
     cae:	6c e3       	ldi	r22, 0x3C	; 60
     cb0:	88 e5       	ldi	r24, 0x58	; 88
     cb2:	a9 da       	rcall	.-2734   	; 0x206 <_Z10sensor_sethhh>
     cb4:	43 e2       	ldi	r20, 0x23	; 35
     cb6:	6d e3       	ldi	r22, 0x3D	; 61
     cb8:	88 e5       	ldi	r24, 0x58	; 88
     cba:	a5 da       	rcall	.-2742   	; 0x206 <_Z10sensor_sethhh>
     cbc:	4f e2       	ldi	r20, 0x2F	; 47
     cbe:	6e e3       	ldi	r22, 0x3E	; 62
     cc0:	88 e5       	ldi	r24, 0x58	; 88
     cc2:	a1 da       	rcall	.-2750   	; 0x206 <_Z10sensor_sethhh>
     cc4:	41 e4       	ldi	r20, 0x41	; 65
     cc6:	6f e3       	ldi	r22, 0x3F	; 63
     cc8:	88 e5       	ldi	r24, 0x58	; 88
     cca:	9d da       	rcall	.-2758   	; 0x206 <_Z10sensor_sethhh>
     ccc:	4e e0       	ldi	r20, 0x0E	; 14
     cce:	60 e4       	ldi	r22, 0x40	; 64
     cd0:	88 e5       	ldi	r24, 0x58	; 88
     cd2:	99 da       	rcall	.-2766   	; 0x206 <_Z10sensor_sethhh>
     cd4:	4c e0       	ldi	r20, 0x0C	; 12
     cd6:	61 e4       	ldi	r22, 0x41	; 65
     cd8:	88 e5       	ldi	r24, 0x58	; 88
     cda:	95 da       	rcall	.-2774   	; 0x206 <_Z10sensor_sethhh>
     cdc:	4d e0       	ldi	r20, 0x0D	; 13
     cde:	62 e4       	ldi	r22, 0x42	; 66
     ce0:	88 e5       	ldi	r24, 0x58	; 88
     ce2:	91 da       	rcall	.-2782   	; 0x206 <_Z10sensor_sethhh>
     ce4:	4c e0       	ldi	r20, 0x0C	; 12
     ce6:	63 e4       	ldi	r22, 0x43	; 67
     ce8:	88 e5       	ldi	r24, 0x58	; 88
     cea:	8d da       	rcall	.-2790   	; 0x206 <_Z10sensor_sethhh>
     cec:	4c e0       	ldi	r20, 0x0C	; 12
     cee:	64 e4       	ldi	r22, 0x44	; 68
     cf0:	88 e5       	ldi	r24, 0x58	; 88
     cf2:	89 da       	rcall	.-2798   	; 0x206 <_Z10sensor_sethhh>
     cf4:	4c e0       	ldi	r20, 0x0C	; 12
     cf6:	65 e4       	ldi	r22, 0x45	; 69
     cf8:	88 e5       	ldi	r24, 0x58	; 88
     cfa:	85 da       	rcall	.-2806   	; 0x206 <_Z10sensor_sethhh>
     cfc:	4c e0       	ldi	r20, 0x0C	; 12
     cfe:	66 e4       	ldi	r22, 0x46	; 70
     d00:	88 e5       	ldi	r24, 0x58	; 88
     d02:	81 da       	rcall	.-2814   	; 0x206 <_Z10sensor_sethhh>
     d04:	4c e0       	ldi	r20, 0x0C	; 12
     d06:	67 e4       	ldi	r22, 0x47	; 71
     d08:	88 e5       	ldi	r24, 0x58	; 88
     d0a:	7d da       	rcall	.-2822   	; 0x206 <_Z10sensor_sethhh>
     d0c:	4d e0       	ldi	r20, 0x0D	; 13
     d0e:	68 e4       	ldi	r22, 0x48	; 72
     d10:	88 e5       	ldi	r24, 0x58	; 88
     d12:	79 da       	rcall	.-2830   	; 0x206 <_Z10sensor_sethhh>
     d14:	4e e0       	ldi	r20, 0x0E	; 14
     d16:	69 e4       	ldi	r22, 0x49	; 73
     d18:	88 e5       	ldi	r24, 0x58	; 88
     d1a:	75 da       	rcall	.-2838   	; 0x206 <_Z10sensor_sethhh>
     d1c:	4e e0       	ldi	r20, 0x0E	; 14
     d1e:	6a e4       	ldi	r22, 0x4A	; 74
     d20:	88 e5       	ldi	r24, 0x58	; 88
     d22:	71 da       	rcall	.-2846   	; 0x206 <_Z10sensor_sethhh>
     d24:	4a e0       	ldi	r20, 0x0A	; 10
     d26:	6b e4       	ldi	r22, 0x4B	; 75
     d28:	88 e5       	ldi	r24, 0x58	; 88
     d2a:	6d da       	rcall	.-2854   	; 0x206 <_Z10sensor_sethhh>
     d2c:	4e e0       	ldi	r20, 0x0E	; 14
     d2e:	6c e4       	ldi	r22, 0x4C	; 76
     d30:	88 e5       	ldi	r24, 0x58	; 88
     d32:	69 da       	rcall	.-2862   	; 0x206 <_Z10sensor_sethhh>
     d34:	4e e0       	ldi	r20, 0x0E	; 14
     d36:	6d e4       	ldi	r22, 0x4D	; 77
     d38:	88 e5       	ldi	r24, 0x58	; 88
     d3a:	65 da       	rcall	.-2870   	; 0x206 <_Z10sensor_sethhh>
     d3c:	40 e1       	ldi	r20, 0x10	; 16
     d3e:	6e e4       	ldi	r22, 0x4E	; 78
     d40:	88 e5       	ldi	r24, 0x58	; 88
     d42:	61 da       	rcall	.-2878   	; 0x206 <_Z10sensor_sethhh>
     d44:	40 e1       	ldi	r20, 0x10	; 16
     d46:	6f e4       	ldi	r22, 0x4F	; 79
     d48:	88 e5       	ldi	r24, 0x58	; 88
     d4a:	5d da       	rcall	.-2886   	; 0x206 <_Z10sensor_sethhh>
     d4c:	41 e1       	ldi	r20, 0x11	; 17
     d4e:	60 e5       	ldi	r22, 0x50	; 80
     d50:	88 e5       	ldi	r24, 0x58	; 88
     d52:	59 da       	rcall	.-2894   	; 0x206 <_Z10sensor_sethhh>
     d54:	4a e0       	ldi	r20, 0x0A	; 10
     d56:	61 e5       	ldi	r22, 0x51	; 81
     d58:	88 e5       	ldi	r24, 0x58	; 88
     d5a:	55 da       	rcall	.-2902   	; 0x206 <_Z10sensor_sethhh>
     d5c:	4f e0       	ldi	r20, 0x0F	; 15
     d5e:	62 e5       	ldi	r22, 0x52	; 82
     d60:	88 e5       	ldi	r24, 0x58	; 88
     d62:	51 da       	rcall	.-2910   	; 0x206 <_Z10sensor_sethhh>
     d64:	4e e0       	ldi	r20, 0x0E	; 14
     d66:	63 e5       	ldi	r22, 0x53	; 83
     d68:	88 e5       	ldi	r24, 0x58	; 88
     d6a:	4d da       	rcall	.-2918   	; 0x206 <_Z10sensor_sethhh>
     d6c:	40 e1       	ldi	r20, 0x10	; 16
     d6e:	64 e5       	ldi	r22, 0x54	; 84
     d70:	88 e5       	ldi	r24, 0x58	; 88
     d72:	49 da       	rcall	.-2926   	; 0x206 <_Z10sensor_sethhh>
     d74:	40 e1       	ldi	r20, 0x10	; 16
     d76:	65 e5       	ldi	r22, 0x55	; 85
     d78:	88 e5       	ldi	r24, 0x58	; 88
     d7a:	45 da       	rcall	.-2934   	; 0x206 <_Z10sensor_sethhh>
     d7c:	40 e1       	ldi	r20, 0x10	; 16
     d7e:	66 e5       	ldi	r22, 0x56	; 86
     d80:	88 e5       	ldi	r24, 0x58	; 88
     d82:	41 da       	rcall	.-2942   	; 0x206 <_Z10sensor_sethhh>
     d84:	4a e0       	ldi	r20, 0x0A	; 10
     d86:	67 e5       	ldi	r22, 0x57	; 87
     d88:	88 e5       	ldi	r24, 0x58	; 88
     d8a:	3d da       	rcall	.-2950   	; 0x206 <_Z10sensor_sethhh>
     d8c:	4e e0       	ldi	r20, 0x0E	; 14
     d8e:	68 e5       	ldi	r22, 0x58	; 88
     d90:	88 e5       	ldi	r24, 0x58	; 88
     d92:	39 da       	rcall	.-2958   	; 0x206 <_Z10sensor_sethhh>
     d94:	4e e0       	ldi	r20, 0x0E	; 14
     d96:	69 e5       	ldi	r22, 0x59	; 89
     d98:	88 e5       	ldi	r24, 0x58	; 88
     d9a:	35 da       	rcall	.-2966   	; 0x206 <_Z10sensor_sethhh>
     d9c:	4f e0       	ldi	r20, 0x0F	; 15
     d9e:	6a e5       	ldi	r22, 0x5A	; 90
     da0:	88 e5       	ldi	r24, 0x58	; 88
     da2:	31 da       	rcall	.-2974   	; 0x206 <_Z10sensor_sethhh>
     da4:	4f e0       	ldi	r20, 0x0F	; 15
     da6:	6b e5       	ldi	r22, 0x5B	; 91
     da8:	88 e5       	ldi	r24, 0x58	; 88
     daa:	2d da       	rcall	.-2982   	; 0x206 <_Z10sensor_sethhh>
     dac:	4f e0       	ldi	r20, 0x0F	; 15
     dae:	6c e5       	ldi	r22, 0x5C	; 92
     db0:	88 e5       	ldi	r24, 0x58	; 88
     db2:	29 da       	rcall	.-2990   	; 0x206 <_Z10sensor_sethhh>
     db4:	4a e0       	ldi	r20, 0x0A	; 10
     db6:	6d e5       	ldi	r22, 0x5D	; 93
     db8:	88 e5       	ldi	r24, 0x58	; 88
     dba:	25 da       	rcall	.-2998   	; 0x206 <_Z10sensor_sethhh>
     dbc:	49 e0       	ldi	r20, 0x09	; 9
     dbe:	6e e5       	ldi	r22, 0x5E	; 94
     dc0:	88 e5       	ldi	r24, 0x58	; 88
     dc2:	21 da       	rcall	.-3006   	; 0x206 <_Z10sensor_sethhh>
     dc4:	4d e0       	ldi	r20, 0x0D	; 13
     dc6:	6f e5       	ldi	r22, 0x5F	; 95
     dc8:	88 e5       	ldi	r24, 0x58	; 88
     dca:	1d da       	rcall	.-3014   	; 0x206 <_Z10sensor_sethhh>
     dcc:	4c e0       	ldi	r20, 0x0C	; 12
     dce:	60 e6       	ldi	r22, 0x60	; 96
     dd0:	88 e5       	ldi	r24, 0x58	; 88
     dd2:	19 da       	rcall	.-3022   	; 0x206 <_Z10sensor_sethhh>
     dd4:	4b e0       	ldi	r20, 0x0B	; 11
     dd6:	61 e6       	ldi	r22, 0x61	; 97
     dd8:	88 e5       	ldi	r24, 0x58	; 88
     dda:	15 da       	rcall	.-3030   	; 0x206 <_Z10sensor_sethhh>
     ddc:	4d e0       	ldi	r20, 0x0D	; 13
     dde:	62 e6       	ldi	r22, 0x62	; 98
     de0:	88 e5       	ldi	r24, 0x58	; 88
     de2:	11 da       	rcall	.-3038   	; 0x206 <_Z10sensor_sethhh>
     de4:	47 e0       	ldi	r20, 0x07	; 7
     de6:	63 e6       	ldi	r22, 0x63	; 99
     de8:	88 e5       	ldi	r24, 0x58	; 88
     dea:	0d da       	rcall	.-3046   	; 0x206 <_Z10sensor_sethhh>
     dec:	47 e1       	ldi	r20, 0x17	; 23
     dee:	64 e6       	ldi	r22, 0x64	; 100
     df0:	88 e5       	ldi	r24, 0x58	; 88
     df2:	09 da       	rcall	.-3054   	; 0x206 <_Z10sensor_sethhh>
     df4:	44 e1       	ldi	r20, 0x14	; 20
     df6:	65 e6       	ldi	r22, 0x65	; 101
     df8:	88 e5       	ldi	r24, 0x58	; 88
     dfa:	05 da       	rcall	.-3062   	; 0x206 <_Z10sensor_sethhh>
     dfc:	48 e1       	ldi	r20, 0x18	; 24
     dfe:	66 e6       	ldi	r22, 0x66	; 102
     e00:	88 e5       	ldi	r24, 0x58	; 88
     e02:	01 da       	rcall	.-3070   	; 0x206 <_Z10sensor_sethhh>
     e04:	48 e1       	ldi	r20, 0x18	; 24
     e06:	67 e6       	ldi	r22, 0x67	; 103
     e08:	88 e5       	ldi	r24, 0x58	; 88
     e0a:	fd d9       	rcall	.-3078   	; 0x206 <_Z10sensor_sethhh>
     e0c:	46 e1       	ldi	r20, 0x16	; 22
     e0e:	68 e6       	ldi	r22, 0x68	; 104
     e10:	88 e5       	ldi	r24, 0x58	; 88
     e12:	f9 d9       	rcall	.-3086   	; 0x206 <_Z10sensor_sethhh>
     e14:	42 e1       	ldi	r20, 0x12	; 18
     e16:	69 e6       	ldi	r22, 0x69	; 105
     e18:	88 e5       	ldi	r24, 0x58	; 88
     e1a:	f5 d9       	rcall	.-3094   	; 0x206 <_Z10sensor_sethhh>
     e1c:	4b e1       	ldi	r20, 0x1B	; 27
     e1e:	6a e6       	ldi	r22, 0x6A	; 106
     e20:	88 e5       	ldi	r24, 0x58	; 88
     e22:	f1 d9       	rcall	.-3102   	; 0x206 <_Z10sensor_sethhh>
     e24:	4a e1       	ldi	r20, 0x1A	; 26
     e26:	6b e6       	ldi	r22, 0x6B	; 107
     e28:	88 e5       	ldi	r24, 0x58	; 88
     e2a:	ed d9       	rcall	.-3110   	; 0x206 <_Z10sensor_sethhh>
     e2c:	46 e1       	ldi	r20, 0x16	; 22
     e2e:	6c e6       	ldi	r22, 0x6C	; 108
     e30:	88 e5       	ldi	r24, 0x58	; 88
     e32:	e9 d9       	rcall	.-3118   	; 0x206 <_Z10sensor_sethhh>
     e34:	46 e1       	ldi	r20, 0x16	; 22
     e36:	6d e6       	ldi	r22, 0x6D	; 109
     e38:	88 e5       	ldi	r24, 0x58	; 88
     e3a:	e5 d9       	rcall	.-3126   	; 0x206 <_Z10sensor_sethhh>
     e3c:	48 e1       	ldi	r20, 0x18	; 24
     e3e:	6e e6       	ldi	r22, 0x6E	; 110
     e40:	88 e5       	ldi	r24, 0x58	; 88
     e42:	e1 d9       	rcall	.-3134   	; 0x206 <_Z10sensor_sethhh>
     e44:	4f e1       	ldi	r20, 0x1F	; 31
     e46:	6f e6       	ldi	r22, 0x6F	; 111
     e48:	88 e5       	ldi	r24, 0x58	; 88
     e4a:	dd d9       	rcall	.-3142   	; 0x206 <_Z10sensor_sethhh>
     e4c:	4c e1       	ldi	r20, 0x1C	; 28
     e4e:	60 e7       	ldi	r22, 0x70	; 112
     e50:	88 e5       	ldi	r24, 0x58	; 88
     e52:	d9 d9       	rcall	.-3150   	; 0x206 <_Z10sensor_sethhh>
     e54:	46 e1       	ldi	r20, 0x16	; 22
     e56:	61 e7       	ldi	r22, 0x71	; 113
     e58:	88 e5       	ldi	r24, 0x58	; 88
     e5a:	d5 d9       	rcall	.-3158   	; 0x206 <_Z10sensor_sethhh>
     e5c:	40 e1       	ldi	r20, 0x10	; 16
     e5e:	62 e7       	ldi	r22, 0x72	; 114
     e60:	88 e5       	ldi	r24, 0x58	; 88
     e62:	d1 d9       	rcall	.-3166   	; 0x206 <_Z10sensor_sethhh>
     e64:	4f e0       	ldi	r20, 0x0F	; 15
     e66:	63 e7       	ldi	r22, 0x73	; 115
     e68:	88 e5       	ldi	r24, 0x58	; 88
     e6a:	cd d9       	rcall	.-3174   	; 0x206 <_Z10sensor_sethhh>
     e6c:	43 e1       	ldi	r20, 0x13	; 19
     e6e:	64 e7       	ldi	r22, 0x74	; 116
     e70:	88 e5       	ldi	r24, 0x58	; 88
     e72:	c9 d9       	rcall	.-3182   	; 0x206 <_Z10sensor_sethhh>
     e74:	4c e1       	ldi	r20, 0x1C	; 28
     e76:	65 e7       	ldi	r22, 0x75	; 117
     e78:	88 e5       	ldi	r24, 0x58	; 88
     e7a:	c5 d9       	rcall	.-3190   	; 0x206 <_Z10sensor_sethhh>
     e7c:	4e e1       	ldi	r20, 0x1E	; 30
     e7e:	66 e7       	ldi	r22, 0x76	; 118
     e80:	88 e5       	ldi	r24, 0x58	; 88
     e82:	c1 d9       	rcall	.-3198   	; 0x206 <_Z10sensor_sethhh>
     e84:	47 e1       	ldi	r20, 0x17	; 23
     e86:	67 e7       	ldi	r22, 0x77	; 119
     e88:	88 e5       	ldi	r24, 0x58	; 88
     e8a:	bd d9       	rcall	.-3206   	; 0x206 <_Z10sensor_sethhh>
     e8c:	41 e1       	ldi	r20, 0x11	; 17
     e8e:	68 e7       	ldi	r22, 0x78	; 120
     e90:	88 e5       	ldi	r24, 0x58	; 88
     e92:	b9 d9       	rcall	.-3214   	; 0x206 <_Z10sensor_sethhh>
     e94:	41 e1       	ldi	r20, 0x11	; 17
     e96:	69 e7       	ldi	r22, 0x79	; 121
     e98:	88 e5       	ldi	r24, 0x58	; 88
     e9a:	b5 d9       	rcall	.-3222   	; 0x206 <_Z10sensor_sethhh>
     e9c:	44 e1       	ldi	r20, 0x14	; 20
     e9e:	6a e7       	ldi	r22, 0x7A	; 122
     ea0:	88 e5       	ldi	r24, 0x58	; 88
     ea2:	b1 d9       	rcall	.-3230   	; 0x206 <_Z10sensor_sethhh>
     ea4:	4e e1       	ldi	r20, 0x1E	; 30
     ea6:	6b e7       	ldi	r22, 0x7B	; 123
     ea8:	88 e5       	ldi	r24, 0x58	; 88
     eaa:	ad d9       	rcall	.-3238   	; 0x206 <_Z10sensor_sethhh>
     eac:	4c e1       	ldi	r20, 0x1C	; 28
     eae:	6c e7       	ldi	r22, 0x7C	; 124
     eb0:	88 e5       	ldi	r24, 0x58	; 88
     eb2:	a9 d9       	rcall	.-3246   	; 0x206 <_Z10sensor_sethhh>
     eb4:	4c e1       	ldi	r20, 0x1C	; 28
     eb6:	6d e7       	ldi	r22, 0x7D	; 125
     eb8:	88 e5       	ldi	r24, 0x58	; 88
     eba:	a5 d9       	rcall	.-3254   	; 0x206 <_Z10sensor_sethhh>
     ebc:	4a e1       	ldi	r20, 0x1A	; 26
     ebe:	6e e7       	ldi	r22, 0x7E	; 126
     ec0:	88 e5       	ldi	r24, 0x58	; 88
     ec2:	a1 d9       	rcall	.-3262   	; 0x206 <_Z10sensor_sethhh>
     ec4:	4a e1       	ldi	r20, 0x1A	; 26
     ec6:	6f e7       	ldi	r22, 0x7F	; 127
     ec8:	88 e5       	ldi	r24, 0x58	; 88
     eca:	9d d9       	rcall	.-3270   	; 0x206 <_Z10sensor_sethhh>
     ecc:	4b e1       	ldi	r20, 0x1B	; 27
     ece:	60 e8       	ldi	r22, 0x80	; 128
     ed0:	88 e5       	ldi	r24, 0x58	; 88
     ed2:	99 d9       	rcall	.-3278   	; 0x206 <_Z10sensor_sethhh>
     ed4:	4f e1       	ldi	r20, 0x1F	; 31
     ed6:	61 e8       	ldi	r22, 0x81	; 129
     ed8:	88 e5       	ldi	r24, 0x58	; 88
     eda:	95 d9       	rcall	.-3286   	; 0x206 <_Z10sensor_sethhh>
     edc:	44 e1       	ldi	r20, 0x14	; 20
     ede:	62 e8       	ldi	r22, 0x82	; 130
     ee0:	88 e5       	ldi	r24, 0x58	; 88
     ee2:	91 d9       	rcall	.-3294   	; 0x206 <_Z10sensor_sethhh>
     ee4:	4a e1       	ldi	r20, 0x1A	; 26
     ee6:	63 e8       	ldi	r22, 0x83	; 131
     ee8:	88 e5       	ldi	r24, 0x58	; 88
     eea:	8d d9       	rcall	.-3302   	; 0x206 <_Z10sensor_sethhh>
     eec:	4d e1       	ldi	r20, 0x1D	; 29
     eee:	64 e8       	ldi	r22, 0x84	; 132
     ef0:	88 e5       	ldi	r24, 0x58	; 88
     ef2:	89 d9       	rcall	.-3310   	; 0x206 <_Z10sensor_sethhh>
     ef4:	4e e1       	ldi	r20, 0x1E	; 30
     ef6:	65 e8       	ldi	r22, 0x85	; 133
     ef8:	88 e5       	ldi	r24, 0x58	; 88
     efa:	85 d9       	rcall	.-3318   	; 0x206 <_Z10sensor_sethhh>
     efc:	4a e1       	ldi	r20, 0x1A	; 26
     efe:	66 e8       	ldi	r22, 0x86	; 134
     f00:	88 e5       	ldi	r24, 0x58	; 88
     f02:	81 d9       	rcall	.-3326   	; 0x206 <_Z10sensor_sethhh>
     f04:	4a e1       	ldi	r20, 0x1A	; 26
     f06:	67 e8       	ldi	r22, 0x87	; 135
     f08:	88 e5       	ldi	r24, 0x58	; 88
     f0a:	7d d9       	rcall	.-3334   	; 0x206 <_Z10sensor_sethhh>
     f0c:	4f ef       	ldi	r20, 0xFF	; 255
     f0e:	60 e8       	ldi	r22, 0x80	; 128
     f10:	81 e5       	ldi	r24, 0x51	; 81
     f12:	79 d9       	rcall	.-3342   	; 0x206 <_Z10sensor_sethhh>
     f14:	42 e5       	ldi	r20, 0x52	; 82
     f16:	61 e8       	ldi	r22, 0x81	; 129
     f18:	81 e5       	ldi	r24, 0x51	; 81
     f1a:	75 d9       	rcall	.-3350   	; 0x206 <_Z10sensor_sethhh>
     f1c:	41 e1       	ldi	r20, 0x11	; 17
     f1e:	62 e8       	ldi	r22, 0x82	; 130
     f20:	81 e5       	ldi	r24, 0x51	; 81
     f22:	71 d9       	rcall	.-3358   	; 0x206 <_Z10sensor_sethhh>
     f24:	44 e1       	ldi	r20, 0x14	; 20
     f26:	63 e8       	ldi	r22, 0x83	; 131
     f28:	81 e5       	ldi	r24, 0x51	; 81
     f2a:	6d d9       	rcall	.-3366   	; 0x206 <_Z10sensor_sethhh>
     f2c:	45 e2       	ldi	r20, 0x25	; 37
     f2e:	64 e8       	ldi	r22, 0x84	; 132
     f30:	81 e5       	ldi	r24, 0x51	; 81
     f32:	69 d9       	rcall	.-3374   	; 0x206 <_Z10sensor_sethhh>
     f34:	44 e2       	ldi	r20, 0x24	; 36
     f36:	65 e8       	ldi	r22, 0x85	; 133
     f38:	81 e5       	ldi	r24, 0x51	; 81
     f3a:	65 d9       	rcall	.-3382   	; 0x206 <_Z10sensor_sethhh>
     f3c:	44 e1       	ldi	r20, 0x14	; 20
     f3e:	66 e8       	ldi	r22, 0x86	; 134
     f40:	81 e5       	ldi	r24, 0x51	; 81
     f42:	61 d9       	rcall	.-3390   	; 0x206 <_Z10sensor_sethhh>
     f44:	44 e1       	ldi	r20, 0x14	; 20
     f46:	67 e8       	ldi	r22, 0x87	; 135
     f48:	81 e5       	ldi	r24, 0x51	; 81
     f4a:	5d d9       	rcall	.-3398   	; 0x206 <_Z10sensor_sethhh>
     f4c:	44 e1       	ldi	r20, 0x14	; 20
     f4e:	68 e8       	ldi	r22, 0x88	; 136
     f50:	81 e5       	ldi	r24, 0x51	; 81
     f52:	59 d9       	rcall	.-3406   	; 0x206 <_Z10sensor_sethhh>
     f54:	49 e6       	ldi	r20, 0x69	; 105
     f56:	69 e8       	ldi	r22, 0x89	; 137
     f58:	81 e5       	ldi	r24, 0x51	; 81
     f5a:	55 d9       	rcall	.-3414   	; 0x206 <_Z10sensor_sethhh>
     f5c:	40 e6       	ldi	r20, 0x60	; 96
     f5e:	6a e8       	ldi	r22, 0x8A	; 138
     f60:	81 e5       	ldi	r24, 0x51	; 81
     f62:	51 d9       	rcall	.-3422   	; 0x206 <_Z10sensor_sethhh>
     f64:	42 ea       	ldi	r20, 0xA2	; 162
     f66:	6b e8       	ldi	r22, 0x8B	; 139
     f68:	81 e5       	ldi	r24, 0x51	; 81
     f6a:	4d d9       	rcall	.-3430   	; 0x206 <_Z10sensor_sethhh>
     f6c:	4c e9       	ldi	r20, 0x9C	; 156
     f6e:	6c e8       	ldi	r22, 0x8C	; 140
     f70:	81 e5       	ldi	r24, 0x51	; 81
     f72:	49 d9       	rcall	.-3438   	; 0x206 <_Z10sensor_sethhh>
     f74:	46 e3       	ldi	r20, 0x36	; 54
     f76:	6d e8       	ldi	r22, 0x8D	; 141
     f78:	81 e5       	ldi	r24, 0x51	; 81
     f7a:	45 d9       	rcall	.-3446   	; 0x206 <_Z10sensor_sethhh>
     f7c:	44 e3       	ldi	r20, 0x34	; 52
     f7e:	6e e8       	ldi	r22, 0x8E	; 142
     f80:	81 e5       	ldi	r24, 0x51	; 81
     f82:	41 d9       	rcall	.-3454   	; 0x206 <_Z10sensor_sethhh>
     f84:	44 e5       	ldi	r20, 0x54	; 84
     f86:	6f e8       	ldi	r22, 0x8F	; 143
     f88:	81 e5       	ldi	r24, 0x51	; 81
     f8a:	3d d9       	rcall	.-3462   	; 0x206 <_Z10sensor_sethhh>
     f8c:	4c e4       	ldi	r20, 0x4C	; 76
     f8e:	60 e9       	ldi	r22, 0x90	; 144
     f90:	81 e5       	ldi	r24, 0x51	; 81
     f92:	39 d9       	rcall	.-3470   	; 0x206 <_Z10sensor_sethhh>
     f94:	48 ef       	ldi	r20, 0xF8	; 248
     f96:	61 e9       	ldi	r22, 0x91	; 145
     f98:	81 e5       	ldi	r24, 0x51	; 81
     f9a:	35 d9       	rcall	.-3478   	; 0x206 <_Z10sensor_sethhh>
     f9c:	44 e0       	ldi	r20, 0x04	; 4
     f9e:	62 e9       	ldi	r22, 0x92	; 146
     fa0:	81 e5       	ldi	r24, 0x51	; 81
     fa2:	31 d9       	rcall	.-3486   	; 0x206 <_Z10sensor_sethhh>
     fa4:	40 e7       	ldi	r20, 0x70	; 112
     fa6:	63 e9       	ldi	r22, 0x93	; 147
     fa8:	81 e5       	ldi	r24, 0x51	; 81
     faa:	2d d9       	rcall	.-3494   	; 0x206 <_Z10sensor_sethhh>
     fac:	40 ef       	ldi	r20, 0xF0	; 240
     fae:	64 e9       	ldi	r22, 0x94	; 148
     fb0:	81 e5       	ldi	r24, 0x51	; 81
     fb2:	29 d9       	rcall	.-3502   	; 0x206 <_Z10sensor_sethhh>
     fb4:	40 ef       	ldi	r20, 0xF0	; 240
     fb6:	65 e9       	ldi	r22, 0x95	; 149
     fb8:	81 e5       	ldi	r24, 0x51	; 81
     fba:	25 d9       	rcall	.-3510   	; 0x206 <_Z10sensor_sethhh>
     fbc:	43 e0       	ldi	r20, 0x03	; 3
     fbe:	66 e9       	ldi	r22, 0x96	; 150
     fc0:	81 e5       	ldi	r24, 0x51	; 81
     fc2:	21 d9       	rcall	.-3518   	; 0x206 <_Z10sensor_sethhh>
     fc4:	41 e0       	ldi	r20, 0x01	; 1
     fc6:	67 e9       	ldi	r22, 0x97	; 151
     fc8:	81 e5       	ldi	r24, 0x51	; 81
     fca:	1d d9       	rcall	.-3526   	; 0x206 <_Z10sensor_sethhh>
     fcc:	45 e0       	ldi	r20, 0x05	; 5
     fce:	68 e9       	ldi	r22, 0x98	; 152
     fd0:	81 e5       	ldi	r24, 0x51	; 81
     fd2:	19 d9       	rcall	.-3534   	; 0x206 <_Z10sensor_sethhh>
     fd4:	4f e2       	ldi	r20, 0x2F	; 47
     fd6:	69 e9       	ldi	r22, 0x99	; 153
     fd8:	81 e5       	ldi	r24, 0x51	; 81
     fda:	15 d9       	rcall	.-3542   	; 0x206 <_Z10sensor_sethhh>
     fdc:	44 e0       	ldi	r20, 0x04	; 4
     fde:	6a e9       	ldi	r22, 0x9A	; 154
     fe0:	81 e5       	ldi	r24, 0x51	; 81
     fe2:	11 d9       	rcall	.-3550   	; 0x206 <_Z10sensor_sethhh>
     fe4:	40 e0       	ldi	r20, 0x00	; 0
     fe6:	6b e9       	ldi	r22, 0x9B	; 155
     fe8:	81 e5       	ldi	r24, 0x51	; 81
     fea:	0d d9       	rcall	.-3558   	; 0x206 <_Z10sensor_sethhh>
     fec:	46 e0       	ldi	r20, 0x06	; 6
     fee:	6c e9       	ldi	r22, 0x9C	; 156
     ff0:	81 e5       	ldi	r24, 0x51	; 81
     ff2:	09 d9       	rcall	.-3566   	; 0x206 <_Z10sensor_sethhh>
     ff4:	40 ea       	ldi	r20, 0xA0	; 160
     ff6:	6d e9       	ldi	r22, 0x9D	; 157
     ff8:	81 e5       	ldi	r24, 0x51	; 81
     ffa:	05 d9       	rcall	.-3574   	; 0x206 <_Z10sensor_sethhh>
     ffc:	40 ea       	ldi	r20, 0xA0	; 160
     ffe:	6e e9       	ldi	r22, 0x9E	; 158
    1000:	81 e5       	ldi	r24, 0x51	; 81
    1002:	01 d9       	rcall	.-3582   	; 0x206 <_Z10sensor_sethhh>
    1004:	40 e0       	ldi	r20, 0x00	; 0
    1006:	6a e8       	ldi	r22, 0x8A	; 138
    1008:	82 e5       	ldi	r24, 0x52	; 82
    100a:	fd d8       	rcall	.-3590   	; 0x206 <_Z10sensor_sethhh>
    100c:	41 e0       	ldi	r20, 0x01	; 1
    100e:	6b e8       	ldi	r22, 0x8B	; 139
    1010:	82 e5       	ldi	r24, 0x52	; 82
    1012:	f9 d8       	rcall	.-3598   	; 0x206 <_Z10sensor_sethhh>
    1014:	44 e0       	ldi	r20, 0x04	; 4
    1016:	6c e8       	ldi	r22, 0x8C	; 140
    1018:	82 e5       	ldi	r24, 0x52	; 82
    101a:	f5 d8       	rcall	.-3606   	; 0x206 <_Z10sensor_sethhh>
    101c:	48 e0       	ldi	r20, 0x08	; 8
    101e:	6d e8       	ldi	r22, 0x8D	; 141
    1020:	82 e5       	ldi	r24, 0x52	; 82
    1022:	f1 d8       	rcall	.-3614   	; 0x206 <_Z10sensor_sethhh>
    1024:	40 e1       	ldi	r20, 0x10	; 16
    1026:	6e e8       	ldi	r22, 0x8E	; 142
    1028:	82 e5       	ldi	r24, 0x52	; 82
    102a:	ed d8       	rcall	.-3622   	; 0x206 <_Z10sensor_sethhh>
    102c:	40 e2       	ldi	r20, 0x20	; 32
    102e:	6f e8       	ldi	r22, 0x8F	; 143
    1030:	82 e5       	ldi	r24, 0x52	; 82
    1032:	e9 d8       	rcall	.-3630   	; 0x206 <_Z10sensor_sethhh>
    1034:	40 e3       	ldi	r20, 0x30	; 48
    1036:	60 e9       	ldi	r22, 0x90	; 144
    1038:	82 e5       	ldi	r24, 0x52	; 82
    103a:	e5 d8       	rcall	.-3638   	; 0x206 <_Z10sensor_sethhh>
    103c:	40 e0       	ldi	r20, 0x00	; 0
    103e:	62 e9       	ldi	r22, 0x92	; 146
    1040:	82 e5       	ldi	r24, 0x52	; 82
    1042:	e1 d8       	rcall	.-3646   	; 0x206 <_Z10sensor_sethhh>
    1044:	40 e0       	ldi	r20, 0x00	; 0
    1046:	63 e9       	ldi	r22, 0x93	; 147
    1048:	82 e5       	ldi	r24, 0x52	; 82
    104a:	dd d8       	rcall	.-3654   	; 0x206 <_Z10sensor_sethhh>
    104c:	40 e0       	ldi	r20, 0x00	; 0
    104e:	64 e9       	ldi	r22, 0x94	; 148
    1050:	82 e5       	ldi	r24, 0x52	; 82
    1052:	d9 d8       	rcall	.-3662   	; 0x206 <_Z10sensor_sethhh>
    1054:	41 e0       	ldi	r20, 0x01	; 1
    1056:	65 e9       	ldi	r22, 0x95	; 149
    1058:	82 e5       	ldi	r24, 0x52	; 82
    105a:	d5 d8       	rcall	.-3670   	; 0x206 <_Z10sensor_sethhh>
    105c:	40 e0       	ldi	r20, 0x00	; 0
    105e:	66 e9       	ldi	r22, 0x96	; 150
    1060:	82 e5       	ldi	r24, 0x52	; 82
    1062:	d1 d8       	rcall	.-3678   	; 0x206 <_Z10sensor_sethhh>
    1064:	44 e0       	ldi	r20, 0x04	; 4
    1066:	67 e9       	ldi	r22, 0x97	; 151
    1068:	82 e5       	ldi	r24, 0x52	; 82
    106a:	cd d8       	rcall	.-3686   	; 0x206 <_Z10sensor_sethhh>
    106c:	40 e0       	ldi	r20, 0x00	; 0
    106e:	68 e9       	ldi	r22, 0x98	; 152
    1070:	82 e5       	ldi	r24, 0x52	; 82
    1072:	c9 d8       	rcall	.-3694   	; 0x206 <_Z10sensor_sethhh>
    1074:	48 e0       	ldi	r20, 0x08	; 8
    1076:	69 e9       	ldi	r22, 0x99	; 153
    1078:	82 e5       	ldi	r24, 0x52	; 82
    107a:	c5 d8       	rcall	.-3702   	; 0x206 <_Z10sensor_sethhh>
    107c:	40 e0       	ldi	r20, 0x00	; 0
    107e:	6a e9       	ldi	r22, 0x9A	; 154
    1080:	82 e5       	ldi	r24, 0x52	; 82
    1082:	c1 d8       	rcall	.-3710   	; 0x206 <_Z10sensor_sethhh>
    1084:	40 e1       	ldi	r20, 0x10	; 16
    1086:	6b e9       	ldi	r22, 0x9B	; 155
    1088:	82 e5       	ldi	r24, 0x52	; 82
    108a:	bd d8       	rcall	.-3718   	; 0x206 <_Z10sensor_sethhh>
    108c:	40 e0       	ldi	r20, 0x00	; 0
    108e:	6c e9       	ldi	r22, 0x9C	; 156
    1090:	82 e5       	ldi	r24, 0x52	; 82
    1092:	b9 d8       	rcall	.-3726   	; 0x206 <_Z10sensor_sethhh>
    1094:	40 e2       	ldi	r20, 0x20	; 32
    1096:	6d e9       	ldi	r22, 0x9D	; 157
    1098:	82 e5       	ldi	r24, 0x52	; 82
    109a:	b5 d8       	rcall	.-3734   	; 0x206 <_Z10sensor_sethhh>
    109c:	40 e0       	ldi	r20, 0x00	; 0
    109e:	6e e9       	ldi	r22, 0x9E	; 158
    10a0:	82 e5       	ldi	r24, 0x52	; 82
    10a2:	b1 d8       	rcall	.-3742   	; 0x206 <_Z10sensor_sethhh>
    10a4:	40 e3       	ldi	r20, 0x30	; 48
    10a6:	6f e9       	ldi	r22, 0x9F	; 159
    10a8:	82 e5       	ldi	r24, 0x52	; 82
    10aa:	ad d8       	rcall	.-3750   	; 0x206 <_Z10sensor_sethhh>
    10ac:	40 e0       	ldi	r20, 0x00	; 0
    10ae:	62 e8       	ldi	r22, 0x82	; 130
    10b0:	82 e5       	ldi	r24, 0x52	; 82
    10b2:	a9 d8       	rcall	.-3758   	; 0x206 <_Z10sensor_sethhh>
    10b4:	40 e0       	ldi	r20, 0x00	; 0
    10b6:	60 e0       	ldi	r22, 0x00	; 0
    10b8:	83 e5       	ldi	r24, 0x53	; 83
    10ba:	a5 d8       	rcall	.-3766   	; 0x206 <_Z10sensor_sethhh>
    10bc:	40 e2       	ldi	r20, 0x20	; 32
    10be:	61 e0       	ldi	r22, 0x01	; 1
    10c0:	83 e5       	ldi	r24, 0x53	; 83
    10c2:	a1 d8       	rcall	.-3774   	; 0x206 <_Z10sensor_sethhh>
    10c4:	40 e0       	ldi	r20, 0x00	; 0
    10c6:	62 e0       	ldi	r22, 0x02	; 2
    10c8:	83 e5       	ldi	r24, 0x53	; 83
    10ca:	9d d8       	rcall	.-3782   	; 0x206 <_Z10sensor_sethhh>
    10cc:	4c e7       	ldi	r20, 0x7C	; 124
    10ce:	63 e0       	ldi	r22, 0x03	; 3
    10d0:	83 e5       	ldi	r24, 0x53	; 83
    10d2:	99 d8       	rcall	.-3790   	; 0x206 <_Z10sensor_sethhh>
    10d4:	40 e0       	ldi	r20, 0x00	; 0
    10d6:	6c e0       	ldi	r22, 0x0C	; 12
    10d8:	83 e5       	ldi	r24, 0x53	; 83
    10da:	95 d8       	rcall	.-3798   	; 0x206 <_Z10sensor_sethhh>
    10dc:	40 e1       	ldi	r20, 0x10	; 16
    10de:	6d e0       	ldi	r22, 0x0D	; 13
    10e0:	83 e5       	ldi	r24, 0x53	; 83
    10e2:	91 d8       	rcall	.-3806   	; 0x206 <_Z10sensor_sethhh>
    10e4:	40 e2       	ldi	r20, 0x20	; 32
    10e6:	6e e0       	ldi	r22, 0x0E	; 14
    10e8:	83 e5       	ldi	r24, 0x53	; 83
    10ea:	8d d8       	rcall	.-3814   	; 0x206 <_Z10sensor_sethhh>
    10ec:	40 e8       	ldi	r20, 0x80	; 128
    10ee:	6f e0       	ldi	r22, 0x0F	; 15
    10f0:	83 e5       	ldi	r24, 0x53	; 83
    10f2:	89 d8       	rcall	.-3822   	; 0x206 <_Z10sensor_sethhh>
    10f4:	40 e2       	ldi	r20, 0x20	; 32
    10f6:	60 e1       	ldi	r22, 0x10	; 16
    10f8:	83 e5       	ldi	r24, 0x53	; 83
    10fa:	85 d8       	rcall	.-3830   	; 0x206 <_Z10sensor_sethhh>
    10fc:	40 e8       	ldi	r20, 0x80	; 128
    10fe:	61 e1       	ldi	r22, 0x11	; 17
    1100:	83 e5       	ldi	r24, 0x53	; 83
    1102:	81 d8       	rcall	.-3838   	; 0x206 <_Z10sensor_sethhh>
    1104:	40 e2       	ldi	r20, 0x20	; 32
    1106:	68 e0       	ldi	r22, 0x08	; 8
    1108:	83 e5       	ldi	r24, 0x53	; 83
    110a:	7d d8       	rcall	.-3846   	; 0x206 <_Z10sensor_sethhh>
    110c:	40 e4       	ldi	r20, 0x40	; 64
    110e:	69 e0       	ldi	r22, 0x09	; 9
    1110:	83 e5       	ldi	r24, 0x53	; 83
    1112:	79 d8       	rcall	.-3854   	; 0x206 <_Z10sensor_sethhh>
    1114:	40 e0       	ldi	r20, 0x00	; 0
    1116:	64 e0       	ldi	r22, 0x04	; 4
    1118:	83 e5       	ldi	r24, 0x53	; 83
    111a:	75 d8       	rcall	.-3862   	; 0x206 <_Z10sensor_sethhh>
    111c:	40 e3       	ldi	r20, 0x30	; 48
    111e:	65 e0       	ldi	r22, 0x05	; 5
    1120:	83 e5       	ldi	r24, 0x53	; 83
    1122:	71 d8       	rcall	.-3870   	; 0x206 <_Z10sensor_sethhh>
    1124:	40 e0       	ldi	r20, 0x00	; 0
    1126:	66 e0       	ldi	r22, 0x06	; 6
    1128:	83 e5       	ldi	r24, 0x53	; 83
    112a:	6d d8       	rcall	.-3878   	; 0x206 <_Z10sensor_sethhh>
    112c:	40 e8       	ldi	r20, 0x80	; 128
    112e:	67 e0       	ldi	r22, 0x07	; 7
    1130:	83 e5       	ldi	r24, 0x53	; 83
    1132:	69 d8       	rcall	.-3886   	; 0x206 <_Z10sensor_sethhh>
    1134:	48 e0       	ldi	r20, 0x08	; 8
    1136:	64 e1       	ldi	r22, 0x14	; 20
    1138:	83 e5       	ldi	r24, 0x53	; 83
    113a:	65 d8       	rcall	.-3894   	; 0x206 <_Z10sensor_sethhh>
    113c:	40 e2       	ldi	r20, 0x20	; 32
    113e:	65 e1       	ldi	r22, 0x15	; 21
    1140:	83 e5       	ldi	r24, 0x53	; 83
    1142:	61 d8       	rcall	.-3902   	; 0x206 <_Z10sensor_sethhh>
    1144:	40 e3       	ldi	r20, 0x30	; 48
    1146:	69 e1       	ldi	r22, 0x19	; 25
    1148:	83 e5       	ldi	r24, 0x53	; 83
    114a:	5d d8       	rcall	.-3910   	; 0x206 <_Z10sensor_sethhh>
    114c:	40 e1       	ldi	r20, 0x10	; 16
    114e:	66 e1       	ldi	r22, 0x16	; 22
    1150:	83 e5       	ldi	r24, 0x53	; 83
    1152:	59 d8       	rcall	.-3918   	; 0x206 <_Z10sensor_sethhh>
    1154:	40 e0       	ldi	r20, 0x00	; 0
    1156:	67 e1       	ldi	r22, 0x17	; 23
    1158:	83 e5       	ldi	r24, 0x53	; 83
    115a:	55 d8       	rcall	.-3926   	; 0x206 <_Z10sensor_sethhh>
    115c:	42 e0       	ldi	r20, 0x02	; 2
    115e:	68 e1       	ldi	r22, 0x18	; 24
    1160:	83 e5       	ldi	r24, 0x53	; 83
    1162:	51 d8       	rcall	.-3934   	; 0x206 <_Z10sensor_sethhh>
    1164:	41 e0       	ldi	r20, 0x01	; 1
    1166:	60 e8       	ldi	r22, 0x80	; 128
    1168:	83 e5       	ldi	r24, 0x53	; 83
    116a:	4d d8       	rcall	.-3942   	; 0x206 <_Z10sensor_sethhh>
    116c:	40 e0       	ldi	r20, 0x00	; 0
    116e:	61 e8       	ldi	r22, 0x81	; 129
    1170:	83 e5       	ldi	r24, 0x53	; 83
    1172:	49 d8       	rcall	.-3950   	; 0x206 <_Z10sensor_sethhh>
    1174:	40 e0       	ldi	r20, 0x00	; 0
    1176:	62 e8       	ldi	r22, 0x82	; 130
    1178:	83 e5       	ldi	r24, 0x53	; 83
    117a:	45 d8       	rcall	.-3958   	; 0x206 <_Z10sensor_sethhh>
    117c:	4f e1       	ldi	r20, 0x1F	; 31
    117e:	63 e8       	ldi	r22, 0x83	; 131
    1180:	83 e5       	ldi	r24, 0x53	; 83
    1182:	41 d8       	rcall	.-3966   	; 0x206 <_Z10sensor_sethhh>
    1184:	40 e0       	ldi	r20, 0x00	; 0
    1186:	64 e8       	ldi	r22, 0x84	; 132
    1188:	83 e5       	ldi	r24, 0x53	; 83
    118a:	3d d8       	rcall	.-3974   	; 0x206 <_Z10sensor_sethhh>
    118c:	46 e0       	ldi	r20, 0x06	; 6
    118e:	65 e8       	ldi	r22, 0x85	; 133
    1190:	83 e5       	ldi	r24, 0x53	; 83
    1192:	39 d8       	rcall	.-3982   	; 0x206 <_Z10sensor_sethhh>
    1194:	40 e0       	ldi	r20, 0x00	; 0
    1196:	66 e8       	ldi	r22, 0x86	; 134
    1198:	83 e5       	ldi	r24, 0x53	; 83
    119a:	35 d8       	rcall	.-3990   	; 0x206 <_Z10sensor_sethhh>
    119c:	40 e0       	ldi	r20, 0x00	; 0
    119e:	67 e8       	ldi	r22, 0x87	; 135
    11a0:	83 e5       	ldi	r24, 0x53	; 83
    11a2:	31 d8       	rcall	.-3998   	; 0x206 <_Z10sensor_sethhh>
    11a4:	40 e0       	ldi	r20, 0x00	; 0
    11a6:	68 e8       	ldi	r22, 0x88	; 136
    11a8:	83 e5       	ldi	r24, 0x53	; 83
    11aa:	2d d8       	rcall	.-4006   	; 0x206 <_Z10sensor_sethhh>
    11ac:	41 ee       	ldi	r20, 0xE1	; 225
    11ae:	69 e8       	ldi	r22, 0x89	; 137
    11b0:	83 e5       	ldi	r24, 0x53	; 83
    11b2:	29 d8       	rcall	.-4014   	; 0x206 <_Z10sensor_sethhh>
    11b4:	40 e0       	ldi	r20, 0x00	; 0
    11b6:	6a e8       	ldi	r22, 0x8A	; 138
    11b8:	83 e5       	ldi	r24, 0x53	; 83
    11ba:	25 d8       	rcall	.-4022   	; 0x206 <_Z10sensor_sethhh>
    11bc:	4b e2       	ldi	r20, 0x2B	; 43
    11be:	6b e8       	ldi	r22, 0x8B	; 139
    11c0:	83 e5       	ldi	r24, 0x53	; 83
    11c2:	21 d8       	rcall	.-4030   	; 0x206 <_Z10sensor_sethhh>
    11c4:	40 e0       	ldi	r20, 0x00	; 0
    11c6:	6c e8       	ldi	r22, 0x8C	; 140
    11c8:	83 e5       	ldi	r24, 0x53	; 83
    11ca:	1d d8       	rcall	.-4038   	; 0x206 <_Z10sensor_sethhh>
    11cc:	40 e0       	ldi	r20, 0x00	; 0
    11ce:	6d e8       	ldi	r22, 0x8D	; 141
    11d0:	83 e5       	ldi	r24, 0x53	; 83
    11d2:	19 d8       	rcall	.-4046   	; 0x206 <_Z10sensor_sethhh>
    11d4:	40 e0       	ldi	r20, 0x00	; 0
    11d6:	6e e8       	ldi	r22, 0x8E	; 142
    11d8:	83 e5       	ldi	r24, 0x53	; 83
    11da:	15 d8       	rcall	.-4054   	; 0x206 <_Z10sensor_sethhh>
    11dc:	40 e1       	ldi	r20, 0x10	; 16
    11de:	6f e8       	ldi	r22, 0x8F	; 143
    11e0:	83 e5       	ldi	r24, 0x53	; 83
    11e2:	11 d8       	rcall	.-4062   	; 0x206 <_Z10sensor_sethhh>
    11e4:	40 e0       	ldi	r20, 0x00	; 0
    11e6:	60 e9       	ldi	r22, 0x90	; 144
    11e8:	83 e5       	ldi	r24, 0x53	; 83
    11ea:	0d d8       	rcall	.-4070   	; 0x206 <_Z10sensor_sethhh>
    11ec:	43 eb       	ldi	r20, 0xB3	; 179
    11ee:	61 e9       	ldi	r22, 0x91	; 145
    11f0:	83 e5       	ldi	r24, 0x53	; 83
    11f2:	09 d8       	rcall	.-4078   	; 0x206 <_Z10sensor_sethhh>
    11f4:	40 e0       	ldi	r20, 0x00	; 0
    11f6:	62 e9       	ldi	r22, 0x92	; 146
    11f8:	83 e5       	ldi	r24, 0x53	; 83
    11fa:	05 d8       	rcall	.-4086   	; 0x206 <_Z10sensor_sethhh>
    11fc:	46 ea       	ldi	r20, 0xA6	; 166
    11fe:	63 e9       	ldi	r22, 0x93	; 147
    1200:	83 e5       	ldi	r24, 0x53	; 83
    1202:	01 d8       	rcall	.-4094   	; 0x206 <_Z10sensor_sethhh>
    1204:	48 e0       	ldi	r20, 0x08	; 8
    1206:	64 e9       	ldi	r22, 0x94	; 148
    1208:	83 e5       	ldi	r24, 0x53	; 83
    120a:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    120e:	4c e0       	ldi	r20, 0x0C	; 12
    1210:	60 e8       	ldi	r22, 0x80	; 128
    1212:	84 e5       	ldi	r24, 0x54	; 84
    1214:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    1218:	48 e1       	ldi	r20, 0x18	; 24
    121a:	61 e8       	ldi	r22, 0x81	; 129
    121c:	84 e5       	ldi	r24, 0x54	; 84
    121e:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    1222:	4f e2       	ldi	r20, 0x2F	; 47
    1224:	62 e8       	ldi	r22, 0x82	; 130
    1226:	84 e5       	ldi	r24, 0x54	; 84
    1228:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    122c:	45 e5       	ldi	r20, 0x55	; 85
    122e:	63 e8       	ldi	r22, 0x83	; 131
    1230:	84 e5       	ldi	r24, 0x54	; 84
    1232:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    1236:	44 e6       	ldi	r20, 0x64	; 100
    1238:	64 e8       	ldi	r22, 0x84	; 132
    123a:	84 e5       	ldi	r24, 0x54	; 84
    123c:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    1240:	41 e7       	ldi	r20, 0x71	; 113
    1242:	65 e8       	ldi	r22, 0x85	; 133
    1244:	84 e5       	ldi	r24, 0x54	; 84
    1246:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    124a:	4d e7       	ldi	r20, 0x7D	; 125
    124c:	66 e8       	ldi	r22, 0x86	; 134
    124e:	84 e5       	ldi	r24, 0x54	; 84
    1250:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    1254:	47 e8       	ldi	r20, 0x87	; 135
    1256:	67 e8       	ldi	r22, 0x87	; 135
    1258:	84 e5       	ldi	r24, 0x54	; 84
    125a:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    125e:	41 e9       	ldi	r20, 0x91	; 145
    1260:	68 e8       	ldi	r22, 0x88	; 136
    1262:	84 e5       	ldi	r24, 0x54	; 84
    1264:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    1268:	4a e9       	ldi	r20, 0x9A	; 154
    126a:	69 e8       	ldi	r22, 0x89	; 137
    126c:	84 e5       	ldi	r24, 0x54	; 84
    126e:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    1272:	4a ea       	ldi	r20, 0xAA	; 170
    1274:	6a e8       	ldi	r22, 0x8A	; 138
    1276:	84 e5       	ldi	r24, 0x54	; 84
    1278:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    127c:	48 eb       	ldi	r20, 0xB8	; 184
    127e:	6b e8       	ldi	r22, 0x8B	; 139
    1280:	84 e5       	ldi	r24, 0x54	; 84
    1282:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    1286:	4d ec       	ldi	r20, 0xCD	; 205
    1288:	6c e8       	ldi	r22, 0x8C	; 140
    128a:	84 e5       	ldi	r24, 0x54	; 84
    128c:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    1290:	4d ed       	ldi	r20, 0xDD	; 221
    1292:	6d e8       	ldi	r22, 0x8D	; 141
    1294:	84 e5       	ldi	r24, 0x54	; 84
    1296:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    129a:	4a ee       	ldi	r20, 0xEA	; 234
    129c:	6e e8       	ldi	r22, 0x8E	; 142
    129e:	84 e5       	ldi	r24, 0x54	; 84
    12a0:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    12a4:	4d e1       	ldi	r20, 0x1D	; 29
    12a6:	6f e8       	ldi	r22, 0x8F	; 143
    12a8:	84 e5       	ldi	r24, 0x54	; 84
    12aa:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    12ae:	45 e0       	ldi	r20, 0x05	; 5
    12b0:	60 e9       	ldi	r22, 0x90	; 144
    12b2:	84 e5       	ldi	r24, 0x54	; 84
    12b4:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    12b8:	40 e0       	ldi	r20, 0x00	; 0
    12ba:	61 e9       	ldi	r22, 0x91	; 145
    12bc:	84 e5       	ldi	r24, 0x54	; 84
    12be:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    12c2:	44 e0       	ldi	r20, 0x04	; 4
    12c4:	62 e9       	ldi	r22, 0x92	; 146
    12c6:	84 e5       	ldi	r24, 0x54	; 84
    12c8:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    12cc:	40 e2       	ldi	r20, 0x20	; 32
    12ce:	63 e9       	ldi	r22, 0x93	; 147
    12d0:	84 e5       	ldi	r24, 0x54	; 84
    12d2:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    12d6:	43 e0       	ldi	r20, 0x03	; 3
    12d8:	64 e9       	ldi	r22, 0x94	; 148
    12da:	84 e5       	ldi	r24, 0x54	; 84
    12dc:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    12e0:	40 e6       	ldi	r20, 0x60	; 96
    12e2:	65 e9       	ldi	r22, 0x95	; 149
    12e4:	84 e5       	ldi	r24, 0x54	; 84
    12e6:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    12ea:	42 e0       	ldi	r20, 0x02	; 2
    12ec:	66 e9       	ldi	r22, 0x96	; 150
    12ee:	84 e5       	ldi	r24, 0x54	; 84
    12f0:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    12f4:	48 eb       	ldi	r20, 0xB8	; 184
    12f6:	67 e9       	ldi	r22, 0x97	; 151
    12f8:	84 e5       	ldi	r24, 0x54	; 84
    12fa:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    12fe:	42 e0       	ldi	r20, 0x02	; 2
    1300:	68 e9       	ldi	r22, 0x98	; 152
    1302:	84 e5       	ldi	r24, 0x54	; 84
    1304:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    1308:	46 e8       	ldi	r20, 0x86	; 134
    130a:	69 e9       	ldi	r22, 0x99	; 153
    130c:	84 e5       	ldi	r24, 0x54	; 84
    130e:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    1312:	42 e0       	ldi	r20, 0x02	; 2
    1314:	6a e9       	ldi	r22, 0x9A	; 154
    1316:	84 e5       	ldi	r24, 0x54	; 84
    1318:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    131c:	4b e5       	ldi	r20, 0x5B	; 91
    131e:	6b e9       	ldi	r22, 0x9B	; 155
    1320:	84 e5       	ldi	r24, 0x54	; 84
    1322:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    1326:	42 e0       	ldi	r20, 0x02	; 2
    1328:	6c e9       	ldi	r22, 0x9C	; 156
    132a:	84 e5       	ldi	r24, 0x54	; 84
    132c:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    1330:	4b e3       	ldi	r20, 0x3B	; 59
    1332:	6d e9       	ldi	r22, 0x9D	; 157
    1334:	84 e5       	ldi	r24, 0x54	; 84
    1336:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    133a:	42 e0       	ldi	r20, 0x02	; 2
    133c:	6e e9       	ldi	r22, 0x9E	; 158
    133e:	84 e5       	ldi	r24, 0x54	; 84
    1340:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    1344:	4c e1       	ldi	r20, 0x1C	; 28
    1346:	6f e9       	ldi	r22, 0x9F	; 159
    1348:	84 e5       	ldi	r24, 0x54	; 84
    134a:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    134e:	42 e0       	ldi	r20, 0x02	; 2
    1350:	60 ea       	ldi	r22, 0xA0	; 160
    1352:	84 e5       	ldi	r24, 0x54	; 84
    1354:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    1358:	44 e0       	ldi	r20, 0x04	; 4
    135a:	61 ea       	ldi	r22, 0xA1	; 161
    135c:	84 e5       	ldi	r24, 0x54	; 84
    135e:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    1362:	41 e0       	ldi	r20, 0x01	; 1
    1364:	62 ea       	ldi	r22, 0xA2	; 162
    1366:	84 e5       	ldi	r24, 0x54	; 84
    1368:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    136c:	4d ee       	ldi	r20, 0xED	; 237
    136e:	63 ea       	ldi	r22, 0xA3	; 163
    1370:	84 e5       	ldi	r24, 0x54	; 84
    1372:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    1376:	41 e0       	ldi	r20, 0x01	; 1
    1378:	64 ea       	ldi	r22, 0xA4	; 164
    137a:	84 e5       	ldi	r24, 0x54	; 84
    137c:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    1380:	45 ec       	ldi	r20, 0xC5	; 197
    1382:	65 ea       	ldi	r22, 0xA5	; 165
    1384:	84 e5       	ldi	r24, 0x54	; 84
    1386:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    138a:	41 e0       	ldi	r20, 0x01	; 1
    138c:	66 ea       	ldi	r22, 0xA6	; 166
    138e:	84 e5       	ldi	r24, 0x54	; 84
    1390:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    1394:	45 ea       	ldi	r20, 0xA5	; 165
    1396:	67 ea       	ldi	r22, 0xA7	; 167
    1398:	84 e5       	ldi	r24, 0x54	; 84
    139a:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    139e:	41 e0       	ldi	r20, 0x01	; 1
    13a0:	68 ea       	ldi	r22, 0xA8	; 168
    13a2:	84 e5       	ldi	r24, 0x54	; 84
    13a4:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    13a8:	4c e6       	ldi	r20, 0x6C	; 108
    13aa:	69 ea       	ldi	r22, 0xA9	; 169
    13ac:	84 e5       	ldi	r24, 0x54	; 84
    13ae:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    13b2:	41 e0       	ldi	r20, 0x01	; 1
    13b4:	6a ea       	ldi	r22, 0xAA	; 170
    13b6:	84 e5       	ldi	r24, 0x54	; 84
    13b8:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    13bc:	41 e4       	ldi	r20, 0x41	; 65
    13be:	6b ea       	ldi	r22, 0xAB	; 171
    13c0:	84 e5       	ldi	r24, 0x54	; 84
    13c2:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    13c6:	41 e0       	ldi	r20, 0x01	; 1
    13c8:	6c ea       	ldi	r22, 0xAC	; 172
    13ca:	84 e5       	ldi	r24, 0x54	; 84
    13cc:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    13d0:	40 e2       	ldi	r20, 0x20	; 32
    13d2:	6d ea       	ldi	r22, 0xAD	; 173
    13d4:	84 e5       	ldi	r24, 0x54	; 84
    13d6:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    13da:	40 e0       	ldi	r20, 0x00	; 0
    13dc:	6e ea       	ldi	r22, 0xAE	; 174
    13de:	84 e5       	ldi	r24, 0x54	; 84
    13e0:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    13e4:	46 e1       	ldi	r20, 0x16	; 22
    13e6:	6f ea       	ldi	r22, 0xAF	; 175
    13e8:	84 e5       	ldi	r24, 0x54	; 84
    13ea:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    13ee:	41 e0       	ldi	r20, 0x01	; 1
    13f0:	60 eb       	ldi	r22, 0xB0	; 176
    13f2:	84 e5       	ldi	r24, 0x54	; 84
    13f4:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    13f8:	40 e2       	ldi	r20, 0x20	; 32
    13fa:	61 eb       	ldi	r22, 0xB1	; 177
    13fc:	84 e5       	ldi	r24, 0x54	; 84
    13fe:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    1402:	40 e0       	ldi	r20, 0x00	; 0
    1404:	62 eb       	ldi	r22, 0xB2	; 178
    1406:	84 e5       	ldi	r24, 0x54	; 84
    1408:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    140c:	40 e1       	ldi	r20, 0x10	; 16
    140e:	63 eb       	ldi	r22, 0xB3	; 179
    1410:	84 e5       	ldi	r24, 0x54	; 84
    1412:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    1416:	40 e0       	ldi	r20, 0x00	; 0
    1418:	64 eb       	ldi	r22, 0xB4	; 180
    141a:	84 e5       	ldi	r24, 0x54	; 84
    141c:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    1420:	40 ef       	ldi	r20, 0xF0	; 240
    1422:	65 eb       	ldi	r22, 0xB5	; 181
    1424:	84 e5       	ldi	r24, 0x54	; 84
    1426:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    142a:	40 e0       	ldi	r20, 0x00	; 0
    142c:	66 eb       	ldi	r22, 0xB6	; 182
    142e:	84 e5       	ldi	r24, 0x54	; 84
    1430:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    1434:	4f ed       	ldi	r20, 0xDF	; 223
    1436:	67 eb       	ldi	r22, 0xB7	; 183
    1438:	84 e5       	ldi	r24, 0x54	; 84
    143a:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    143e:	4f e3       	ldi	r20, 0x3F	; 63
    1440:	62 e0       	ldi	r22, 0x02	; 2
    1442:	84 e5       	ldi	r24, 0x54	; 84
    1444:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    1448:	40 e0       	ldi	r20, 0x00	; 0
    144a:	63 e0       	ldi	r22, 0x03	; 3
    144c:	84 e5       	ldi	r24, 0x54	; 84
    144e:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    1452:	40 e1       	ldi	r20, 0x10	; 16
    1454:	60 e0       	ldi	r22, 0x00	; 0
    1456:	85 e5       	ldi	r24, 0x55	; 85
    1458:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    145c:	40 e0       	ldi	r20, 0x00	; 0
    145e:	62 e0       	ldi	r22, 0x02	; 2
    1460:	85 e5       	ldi	r24, 0x55	; 85
    1462:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    1466:	46 e0       	ldi	r20, 0x06	; 6
    1468:	63 e0       	ldi	r22, 0x03	; 3
    146a:	85 e5       	ldi	r24, 0x55	; 85
    146c:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    1470:	40 e0       	ldi	r20, 0x00	; 0
    1472:	64 e0       	ldi	r22, 0x04	; 4
    1474:	85 e5       	ldi	r24, 0x55	; 85
    1476:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    147a:	4f e7       	ldi	r20, 0x7F	; 127
    147c:	65 e0       	ldi	r22, 0x05	; 5
    147e:	85 e5       	ldi	r24, 0x55	; 85
    1480:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    1484:	40 e8       	ldi	r20, 0x80	; 128
    1486:	65 e2       	ldi	r22, 0x25	; 37
    1488:	80 e5       	ldi	r24, 0x50	; 80
    148a:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    148e:	40 e3       	ldi	r20, 0x30	; 48
    1490:	6f e0       	ldi	r22, 0x0F	; 15
    1492:	8a e3       	ldi	r24, 0x3A	; 58
    1494:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    1498:	48 e2       	ldi	r20, 0x28	; 40
    149a:	60 e1       	ldi	r22, 0x10	; 16
    149c:	8a e3       	ldi	r24, 0x3A	; 58
    149e:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    14a2:	40 e3       	ldi	r20, 0x30	; 48
    14a4:	6b e1       	ldi	r22, 0x1B	; 27
    14a6:	8a e3       	ldi	r24, 0x3A	; 58
    14a8:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    14ac:	48 e2       	ldi	r20, 0x28	; 40
    14ae:	6e e1       	ldi	r22, 0x1E	; 30
    14b0:	8a e3       	ldi	r24, 0x3A	; 58
    14b2:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    14b6:	41 e6       	ldi	r20, 0x61	; 97
    14b8:	61 e1       	ldi	r22, 0x11	; 17
    14ba:	8a e3       	ldi	r24, 0x3A	; 58
    14bc:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    14c0:	40 e1       	ldi	r20, 0x10	; 16
    14c2:	6f e1       	ldi	r22, 0x1F	; 31
    14c4:	8a e3       	ldi	r24, 0x3A	; 58
    14c6:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    14ca:	4d ef       	ldi	r20, 0xFD	; 253
    14cc:	68 e8       	ldi	r22, 0x88	; 136
    14ce:	86 e5       	ldi	r24, 0x56	; 86
    14d0:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    14d4:	4f ed       	ldi	r20, 0xDF	; 223
    14d6:	69 e8       	ldi	r22, 0x89	; 137
    14d8:	86 e5       	ldi	r24, 0x56	; 86
    14da:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    14de:	4e ef       	ldi	r20, 0xFE	; 254
    14e0:	6a e8       	ldi	r22, 0x8A	; 138
    14e2:	86 e5       	ldi	r24, 0x56	; 86
    14e4:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    14e8:	4f ee       	ldi	r20, 0xEF	; 239
    14ea:	6b e8       	ldi	r22, 0x8B	; 139
    14ec:	86 e5       	ldi	r24, 0x56	; 86
    14ee:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    14f2:	4e ef       	ldi	r20, 0xFE	; 254
    14f4:	6c e8       	ldi	r22, 0x8C	; 140
    14f6:	86 e5       	ldi	r24, 0x56	; 86
    14f8:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    14fc:	4f ee       	ldi	r20, 0xEF	; 239
    14fe:	6d e8       	ldi	r22, 0x8D	; 141
    1500:	86 e5       	ldi	r24, 0x56	; 86
    1502:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    1506:	4a ea       	ldi	r20, 0xAA	; 170
    1508:	6e e8       	ldi	r22, 0x8E	; 142
    150a:	86 e5       	ldi	r24, 0x56	; 86
    150c:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    1510:	4a ea       	ldi	r20, 0xAA	; 170
    1512:	6f e8       	ldi	r22, 0x8F	; 143
    1514:	86 e5       	ldi	r24, 0x56	; 86
    1516:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    151a:	4f ef       	ldi	r20, 0xFF	; 255
    151c:	6f ef       	ldi	r22, 0xFF	; 255
    151e:	8f ef       	ldi	r24, 0xFF	; 255
    1520:	0c 94 03 01 	jmp	0x206	; 0x206 <_Z10sensor_sethhh>
    1524:	08 95       	ret

00001526 <_Z20reg_set_jpeg_capturev>:
    1526:	47 e0       	ldi	r20, 0x07	; 7
    1528:	63 e0       	ldi	r22, 0x03	; 3
    152a:	85 e3       	ldi	r24, 0x35	; 53
    152c:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    1530:	40 e0       	ldi	r20, 0x00	; 0
    1532:	60 e0       	ldi	r22, 0x00	; 0
    1534:	80 e3       	ldi	r24, 0x30	; 48
    1536:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    153a:	40 e0       	ldi	r20, 0x00	; 0
    153c:	61 e0       	ldi	r22, 0x01	; 1
    153e:	80 e3       	ldi	r24, 0x30	; 48
    1540:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    1544:	40 e0       	ldi	r20, 0x00	; 0
    1546:	62 e0       	ldi	r22, 0x02	; 2
    1548:	80 e3       	ldi	r24, 0x30	; 48
    154a:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    154e:	40 e0       	ldi	r20, 0x00	; 0
    1550:	63 e0       	ldi	r22, 0x03	; 3
    1552:	80 e3       	ldi	r24, 0x30	; 48
    1554:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    1558:	4f ef       	ldi	r20, 0xFF	; 255
    155a:	65 e0       	ldi	r22, 0x05	; 5
    155c:	80 e3       	ldi	r24, 0x30	; 48
    155e:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    1562:	4f ef       	ldi	r20, 0xFF	; 255
    1564:	66 e0       	ldi	r22, 0x06	; 6
    1566:	80 e3       	ldi	r24, 0x30	; 48
    1568:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    156c:	4f e3       	ldi	r20, 0x3F	; 63
    156e:	67 e0       	ldi	r22, 0x07	; 7
    1570:	80 e3       	ldi	r24, 0x30	; 48
    1572:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    1576:	47 e0       	ldi	r20, 0x07	; 7
    1578:	6c e0       	ldi	r22, 0x0C	; 12
    157a:	85 e3       	ldi	r24, 0x35	; 53
    157c:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    1580:	40 ed       	ldi	r20, 0xD0	; 208
    1582:	6d e0       	ldi	r22, 0x0D	; 13
    1584:	85 e3       	ldi	r24, 0x35	; 53
    1586:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    158a:	44 ee       	ldi	r20, 0xE4	; 228
    158c:	62 e0       	ldi	r22, 0x02	; 2
    158e:	86 e3       	ldi	r24, 0x36	; 54
    1590:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    1594:	4c ea       	ldi	r20, 0xAC	; 172
    1596:	62 e1       	ldi	r22, 0x12	; 18
    1598:	86 e3       	ldi	r24, 0x36	; 54
    159a:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    159e:	44 e4       	ldi	r20, 0x44	; 68
    15a0:	63 e1       	ldi	r22, 0x13	; 19
    15a2:	86 e3       	ldi	r24, 0x36	; 54
    15a4:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    15a8:	47 e2       	ldi	r20, 0x27	; 39
    15aa:	61 e2       	ldi	r22, 0x21	; 33
    15ac:	86 e3       	ldi	r24, 0x36	; 54
    15ae:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    15b2:	48 e0       	ldi	r20, 0x08	; 8
    15b4:	62 e2       	ldi	r22, 0x22	; 34
    15b6:	86 e3       	ldi	r24, 0x36	; 54
    15b8:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    15bc:	42 e2       	ldi	r20, 0x22	; 34
    15be:	63 e2       	ldi	r22, 0x23	; 35
    15c0:	86 e3       	ldi	r24, 0x36	; 54
    15c2:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    15c6:	40 e6       	ldi	r20, 0x60	; 96
    15c8:	64 e0       	ldi	r22, 0x04	; 4
    15ca:	86 e3       	ldi	r24, 0x36	; 54
    15cc:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    15d0:	4a ed       	ldi	r20, 0xDA	; 218
    15d2:	65 e0       	ldi	r22, 0x05	; 5
    15d4:	87 e3       	ldi	r24, 0x37	; 55
    15d6:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    15da:	40 e8       	ldi	r20, 0x80	; 128
    15dc:	6a e0       	ldi	r22, 0x0A	; 10
    15de:	87 e3       	ldi	r24, 0x37	; 55
    15e0:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    15e4:	4a e8       	ldi	r20, 0x8A	; 138
    15e6:	61 e0       	ldi	r22, 0x01	; 1
    15e8:	88 e3       	ldi	r24, 0x38	; 56
    15ea:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    15ee:	4a e0       	ldi	r20, 0x0A	; 10
    15f0:	63 e0       	ldi	r22, 0x03	; 3
    15f2:	88 e3       	ldi	r24, 0x38	; 56
    15f4:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    15f8:	4a e0       	ldi	r20, 0x0A	; 10
    15fa:	64 e0       	ldi	r22, 0x04	; 4
    15fc:	88 e3       	ldi	r24, 0x38	; 56
    15fe:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    1602:	40 e2       	ldi	r20, 0x20	; 32
    1604:	65 e0       	ldi	r22, 0x05	; 5
    1606:	88 e3       	ldi	r24, 0x38	; 56
    1608:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    160c:	47 e0       	ldi	r20, 0x07	; 7
    160e:	66 e0       	ldi	r22, 0x06	; 6
    1610:	88 e3       	ldi	r24, 0x38	; 56
    1612:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    1616:	48 e9       	ldi	r20, 0x98	; 152
    1618:	67 e0       	ldi	r22, 0x07	; 7
    161a:	88 e3       	ldi	r24, 0x38	; 56
    161c:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    1620:	4a e0       	ldi	r20, 0x0A	; 10
    1622:	68 e0       	ldi	r22, 0x08	; 8
    1624:	88 e3       	ldi	r24, 0x38	; 56
    1626:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    162a:	40 e2       	ldi	r20, 0x20	; 32
    162c:	69 e0       	ldi	r22, 0x09	; 9
    162e:	88 e3       	ldi	r24, 0x38	; 56
    1630:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    1634:	47 e0       	ldi	r20, 0x07	; 7
    1636:	6a e0       	ldi	r22, 0x0A	; 10
    1638:	88 e3       	ldi	r24, 0x38	; 56
    163a:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    163e:	48 e9       	ldi	r20, 0x98	; 152
    1640:	6b e0       	ldi	r22, 0x0B	; 11
    1642:	88 e3       	ldi	r24, 0x38	; 56
    1644:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    1648:	4c e0       	ldi	r20, 0x0C	; 12
    164a:	6c e0       	ldi	r22, 0x0C	; 12
    164c:	88 e3       	ldi	r24, 0x38	; 56
    164e:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    1652:	40 e8       	ldi	r20, 0x80	; 128
    1654:	6d e0       	ldi	r22, 0x0D	; 13
    1656:	88 e3       	ldi	r24, 0x38	; 56
    1658:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    165c:	47 e0       	ldi	r20, 0x07	; 7
    165e:	6e e0       	ldi	r22, 0x0E	; 14
    1660:	88 e3       	ldi	r24, 0x38	; 56
    1662:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    1666:	40 ed       	ldi	r20, 0xD0	; 208
    1668:	6f e0       	ldi	r22, 0x0F	; 15
    166a:	88 e3       	ldi	r24, 0x38	; 56
    166c:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    1670:	42 ec       	ldi	r20, 0xC2	; 194
    1672:	60 e1       	ldi	r22, 0x10	; 16
    1674:	88 e3       	ldi	r24, 0x38	; 56
    1676:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    167a:	44 e4       	ldi	r20, 0x44	; 68
    167c:	65 e1       	ldi	r22, 0x15	; 21
    167e:	88 e3       	ldi	r24, 0x38	; 56
    1680:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    1684:	48 ec       	ldi	r20, 0xC8	; 200
    1686:	68 e1       	ldi	r22, 0x18	; 24
    1688:	88 e3       	ldi	r24, 0x38	; 56
    168a:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    168e:	41 e0       	ldi	r20, 0x01	; 1
    1690:	64 e2       	ldi	r22, 0x24	; 36
    1692:	88 e3       	ldi	r24, 0x38	; 56
    1694:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    1698:	4a e0       	ldi	r20, 0x0A	; 10
    169a:	67 e2       	ldi	r22, 0x27	; 39
    169c:	88 e3       	ldi	r24, 0x38	; 56
    169e:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    16a2:	48 e7       	ldi	r20, 0x78	; 120
    16a4:	60 e0       	ldi	r22, 0x00	; 0
    16a6:	8a e3       	ldi	r24, 0x3A	; 58
    16a8:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    16ac:	40 e1       	ldi	r20, 0x10	; 16
    16ae:	6d e0       	ldi	r22, 0x0D	; 13
    16b0:	8a e3       	ldi	r24, 0x3A	; 58
    16b2:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    16b6:	4d e0       	ldi	r20, 0x0D	; 13
    16b8:	6e e0       	ldi	r22, 0x0E	; 14
    16ba:	8a e3       	ldi	r24, 0x3A	; 58
    16bc:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    16c0:	42 e3       	ldi	r20, 0x32	; 50
    16c2:	60 e1       	ldi	r22, 0x10	; 16
    16c4:	8a e3       	ldi	r24, 0x3A	; 58
    16c6:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    16ca:	4c e3       	ldi	r20, 0x3C	; 60
    16cc:	6b e1       	ldi	r22, 0x1B	; 27
    16ce:	8a e3       	ldi	r24, 0x3A	; 58
    16d0:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    16d4:	42 e3       	ldi	r20, 0x32	; 50
    16d6:	6e e1       	ldi	r22, 0x1E	; 30
    16d8:	8a e3       	ldi	r24, 0x3A	; 58
    16da:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    16de:	40 e8       	ldi	r20, 0x80	; 128
    16e0:	61 e1       	ldi	r22, 0x11	; 17
    16e2:	8a e3       	ldi	r24, 0x3A	; 58
    16e4:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    16e8:	40 e2       	ldi	r20, 0x20	; 32
    16ea:	6f e1       	ldi	r22, 0x1F	; 31
    16ec:	8a e3       	ldi	r24, 0x3A	; 58
    16ee:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    16f2:	48 e7       	ldi	r20, 0x78	; 120
    16f4:	60 e0       	ldi	r22, 0x00	; 0
    16f6:	8a e3       	ldi	r24, 0x3A	; 58
    16f8:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    16fc:	45 e3       	ldi	r20, 0x35	; 53
    16fe:	6b e0       	ldi	r22, 0x0B	; 11
    1700:	86 e4       	ldi	r24, 0x46	; 70
    1702:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    1706:	40 e0       	ldi	r20, 0x00	; 0
    1708:	6d e1       	ldi	r22, 0x1D	; 29
    170a:	87 e4       	ldi	r24, 0x47	; 71
    170c:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    1710:	43 e0       	ldi	r20, 0x03	; 3
    1712:	63 e1       	ldi	r22, 0x13	; 19
    1714:	87 e4       	ldi	r24, 0x47	; 71
    1716:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    171a:	40 e5       	ldi	r20, 0x50	; 80
    171c:	6c e1       	ldi	r22, 0x1C	; 28
    171e:	87 e4       	ldi	r24, 0x47	; 71
    1720:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    1724:	4a e0       	ldi	r20, 0x0A	; 10
    1726:	62 e8       	ldi	r22, 0x82	; 130
    1728:	86 e5       	ldi	r24, 0x56	; 86
    172a:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    172e:	40 e2       	ldi	r20, 0x20	; 32
    1730:	63 e8       	ldi	r22, 0x83	; 131
    1732:	86 e5       	ldi	r24, 0x56	; 86
    1734:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    1738:	47 e0       	ldi	r20, 0x07	; 7
    173a:	66 e8       	ldi	r22, 0x86	; 134
    173c:	86 e5       	ldi	r24, 0x56	; 86
    173e:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    1742:	48 e9       	ldi	r20, 0x98	; 152
    1744:	67 e8       	ldi	r22, 0x87	; 135
    1746:	86 e5       	ldi	r24, 0x56	; 86
    1748:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    174c:	4f e4       	ldi	r20, 0x4F	; 79
    174e:	61 e0       	ldi	r22, 0x01	; 1
    1750:	80 e5       	ldi	r24, 0x50	; 80
    1752:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    1756:	40 e0       	ldi	r20, 0x00	; 0
    1758:	6b e9       	ldi	r22, 0x9B	; 155
    175a:	88 e5       	ldi	r24, 0x58	; 88
    175c:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    1760:	40 ec       	ldi	r20, 0xC0	; 192
    1762:	6a e9       	ldi	r22, 0x9A	; 154
    1764:	88 e5       	ldi	r24, 0x58	; 88
    1766:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    176a:	44 e0       	ldi	r20, 0x04	; 4
    176c:	67 e0       	ldi	r22, 0x07	; 7
    176e:	84 e4       	ldi	r24, 0x44	; 68
    1770:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    1774:	40 e0       	ldi	r20, 0x00	; 0
    1776:	6b e9       	ldi	r22, 0x9B	; 155
    1778:	88 e5       	ldi	r24, 0x58	; 88
    177a:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    177e:	40 ec       	ldi	r20, 0xC0	; 192
    1780:	6a e9       	ldi	r22, 0x9A	; 154
    1782:	88 e5       	ldi	r24, 0x58	; 88
    1784:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    1788:	4c e0       	ldi	r20, 0x0C	; 12
    178a:	62 e0       	ldi	r22, 0x02	; 2
    178c:	80 e3       	ldi	r24, 0x30	; 48
    178e:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    1792:	40 e0       	ldi	r20, 0x00	; 0
    1794:	62 e0       	ldi	r22, 0x02	; 2
    1796:	80 e3       	ldi	r24, 0x30	; 48
    1798:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    179c:	40 e0       	ldi	r20, 0x00	; 0
    179e:	63 e0       	ldi	r22, 0x03	; 3
    17a0:	85 e3       	ldi	r24, 0x35	; 53
    17a2:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    17a6:	40 e1       	ldi	r20, 0x10	; 16
    17a8:	60 e1       	ldi	r22, 0x10	; 16
    17aa:	80 e3       	ldi	r24, 0x30	; 48
    17ac:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    17b0:	48 e0       	ldi	r20, 0x08	; 8
    17b2:	61 e1       	ldi	r22, 0x11	; 17
    17b4:	80 e3       	ldi	r24, 0x30	; 48
    17b6:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    17ba:	4f ef       	ldi	r20, 0xFF	; 255
    17bc:	60 e0       	ldi	r22, 0x00	; 0
    17be:	80 e5       	ldi	r24, 0x50	; 80
    17c0:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    17c4:	4f ef       	ldi	r20, 0xFF	; 255
    17c6:	6f ef       	ldi	r22, 0xFF	; 255
    17c8:	8f ef       	ldi	r24, 0xFF	; 255
    17ca:	0c 94 03 01 	jmp	0x206	; 0x206 <_Z10sensor_sethhh>
    17ce:	08 95       	ret

000017d0 <_Z15reg_set_640x800v>:
}

void reg_set_640x800(void){
	sensor_set(0x38, 0x00 ,0x1 );
    17d0:	41 e0       	ldi	r20, 0x01	; 1
    17d2:	60 e0       	ldi	r22, 0x00	; 0
    17d4:	88 e3       	ldi	r24, 0x38	; 56
    17d6:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
	sensor_set(0x38, 0x01 ,0xa8);
    17da:	48 ea       	ldi	r20, 0xA8	; 168
    17dc:	61 e0       	ldi	r22, 0x01	; 1
    17de:	88 e3       	ldi	r24, 0x38	; 56
    17e0:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
	sensor_set(0x38, 0x02 ,0x0 );
    17e4:	40 e0       	ldi	r20, 0x00	; 0
    17e6:	62 e0       	ldi	r22, 0x02	; 2
    17e8:	88 e3       	ldi	r24, 0x38	; 56
    17ea:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
	sensor_set(0x38, 0x03 ,0xA );
    17ee:	4a e0       	ldi	r20, 0x0A	; 10
    17f0:	63 e0       	ldi	r22, 0x03	; 3
    17f2:	88 e3       	ldi	r24, 0x38	; 56
    17f4:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
	sensor_set(0x38, 0x04 ,0xA );
    17f8:	4a e0       	ldi	r20, 0x0A	; 10
    17fa:	64 e0       	ldi	r22, 0x04	; 4
    17fc:	88 e3       	ldi	r24, 0x38	; 56
    17fe:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
	sensor_set(0x38, 0x05 ,0x20);
    1802:	40 e2       	ldi	r20, 0x20	; 32
    1804:	65 e0       	ldi	r22, 0x05	; 5
    1806:	88 e3       	ldi	r24, 0x38	; 56
    1808:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
	sensor_set(0x38, 0x06 ,0x7 );
    180c:	47 e0       	ldi	r20, 0x07	; 7
    180e:	66 e0       	ldi	r22, 0x06	; 6
    1810:	88 e3       	ldi	r24, 0x38	; 56
    1812:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
	sensor_set(0x38, 0x07 ,0x98);
    1816:	48 e9       	ldi	r20, 0x98	; 152
    1818:	67 e0       	ldi	r22, 0x07	; 7
    181a:	88 e3       	ldi	r24, 0x38	; 56
    181c:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
	sensor_set(0x38, 0x08 ,0x2 );
    1820:	42 e0       	ldi	r20, 0x02	; 2
    1822:	68 e0       	ldi	r22, 0x08	; 8
    1824:	88 e3       	ldi	r24, 0x38	; 56
    1826:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
	sensor_set(0x38, 0x09 ,0x80);
    182a:	40 e8       	ldi	r20, 0x80	; 128
    182c:	69 e0       	ldi	r22, 0x09	; 9
    182e:	88 e3       	ldi	r24, 0x38	; 56
    1830:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
	sensor_set(0x38, 0x0a ,0x1 );
    1834:	41 e0       	ldi	r20, 0x01	; 1
    1836:	6a e0       	ldi	r22, 0x0A	; 10
    1838:	88 e3       	ldi	r24, 0x38	; 56
    183a:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
	sensor_set(0x38, 0x0b ,0xe0);
    183e:	40 ee       	ldi	r20, 0xE0	; 224
    1840:	6b e0       	ldi	r22, 0x0B	; 11
    1842:	88 e3       	ldi	r24, 0x38	; 56
    1844:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
	sensor_set(0x38, 0x0c ,0xc );
    1848:	4c e0       	ldi	r20, 0x0C	; 12
    184a:	6c e0       	ldi	r22, 0x0C	; 12
    184c:	88 e3       	ldi	r24, 0x38	; 56
    184e:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
	sensor_set(0x38, 0x0d ,0x80);
    1852:	40 e8       	ldi	r20, 0x80	; 128
    1854:	6d e0       	ldi	r22, 0x0D	; 13
    1856:	88 e3       	ldi	r24, 0x38	; 56
    1858:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
	sensor_set(0x38, 0x0e ,0x7 );
    185c:	47 e0       	ldi	r20, 0x07	; 7
    185e:	6e e0       	ldi	r22, 0x0E	; 14
    1860:	88 e3       	ldi	r24, 0x38	; 56
    1862:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
	sensor_set(0x38, 0x0f ,0xd0);
    1866:	40 ed       	ldi	r20, 0xD0	; 208
    1868:	6f e0       	ldi	r22, 0x0F	; 15
    186a:	88 e3       	ldi	r24, 0x38	; 56
    186c:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
	sensor_set(0x50, 0x01 ,0x7f);
    1870:	4f e7       	ldi	r20, 0x7F	; 127
    1872:	61 e0       	ldi	r22, 0x01	; 1
    1874:	80 e5       	ldi	r24, 0x50	; 80
    1876:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
	sensor_set(0x56, 0x80 ,0x0 );
    187a:	40 e0       	ldi	r20, 0x00	; 0
    187c:	60 e8       	ldi	r22, 0x80	; 128
    187e:	86 e5       	ldi	r24, 0x56	; 86
    1880:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
	sensor_set(0x56, 0x81 ,0x0 );
    1884:	40 e0       	ldi	r20, 0x00	; 0
    1886:	61 e8       	ldi	r22, 0x81	; 129
    1888:	86 e5       	ldi	r24, 0x56	; 86
    188a:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
	sensor_set(0x56, 0x82 ,0xA );
    188e:	4a e0       	ldi	r20, 0x0A	; 10
    1890:	62 e8       	ldi	r22, 0x82	; 130
    1892:	86 e5       	ldi	r24, 0x56	; 86
    1894:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
	sensor_set(0x56, 0x83 ,0x20);
    1898:	40 e2       	ldi	r20, 0x20	; 32
    189a:	63 e8       	ldi	r22, 0x83	; 131
    189c:	86 e5       	ldi	r24, 0x56	; 86
    189e:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
	sensor_set(0x56, 0x84 ,0x0 );
    18a2:	40 e0       	ldi	r20, 0x00	; 0
    18a4:	64 e8       	ldi	r22, 0x84	; 132
    18a6:	86 e5       	ldi	r24, 0x56	; 86
    18a8:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
	sensor_set(0x56, 0x85 ,0x0 );
    18ac:	40 e0       	ldi	r20, 0x00	; 0
    18ae:	65 e8       	ldi	r22, 0x85	; 133
    18b0:	86 e5       	ldi	r24, 0x56	; 86
    18b2:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
	sensor_set(0x56, 0x86 ,0x7 );
    18b6:	47 e0       	ldi	r20, 0x07	; 7
    18b8:	66 e8       	ldi	r22, 0x86	; 134
    18ba:	86 e5       	ldi	r24, 0x56	; 86
    18bc:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
	sensor_set(0x56, 0x87 ,0x98);
    18c0:	48 e9       	ldi	r20, 0x98	; 152
    18c2:	67 e8       	ldi	r22, 0x87	; 135
    18c4:	86 e5       	ldi	r24, 0x56	; 86
    18c6:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
	sensor_set(0x38, 0x01, 0xb0);
    18ca:	40 eb       	ldi	r20, 0xB0	; 176
    18cc:	61 e0       	ldi	r22, 0x01	; 1
    18ce:	88 e3       	ldi	r24, 0x38	; 56
    18d0:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
	sensor_set(0xff, 0xff, 0xff);
    18d4:	4f ef       	ldi	r20, 0xFF	; 255
    18d6:	6f ef       	ldi	r22, 0xFF	; 255
    18d8:	8f ef       	ldi	r24, 0xFF	; 255
    18da:	0c 94 03 01 	jmp	0x206	; 0x206 <_Z10sensor_sethhh>
    18de:	08 95       	ret

000018e0 <_Z7camInitv>:

void camInit (void){
	

	////Reset the CPLD
	writeSPI(0x87, 0x80);
    18e0:	60 e8       	ldi	r22, 0x80	; 128
    18e2:	87 e8       	ldi	r24, 0x87	; 135
    18e4:	0e 94 93 00 	call	0x126	; 0x126 <_Z8writeSPIhh>
	//_delay_ms(100);
	writeSPI(0x87, 0x00);
    18e8:	60 e0       	ldi	r22, 0x00	; 0
    18ea:	87 e8       	ldi	r24, 0x87	; 135
    18ec:	0e 94 93 00 	call	0x126	; 0x126 <_Z8writeSPIhh>
	//_delay_ms(100);


	sensor_set(0x30,0x08, 0x80); //reset
    18f0:	40 e8       	ldi	r20, 0x80	; 128
    18f2:	68 e0       	ldi	r22, 0x08	; 8
    18f4:	80 e3       	ldi	r24, 0x30	; 48
    18f6:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
	reg_set_jpeg(); //set all i2c registers
    18fa:	0e 94 22 01 	call	0x244	; 0x244 <_Z12reg_set_jpegv>
	//_delay_ms(100);
	reg_set_jpeg_capture();
    18fe:	13 de       	rcall	.-986    	; 0x1526 <_Z20reg_set_jpeg_capturev>
	//reg_set_320x240();
	//reg_set_1280x960();
	reg_set_640x800();
    1900:	67 df       	rcall	.-306    	; 0x17d0 <_Z15reg_set_640x800v>
    1902:	87 ea       	ldi	r24, 0xA7	; 167
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1904:	91 e6       	ldi	r25, 0x61	; 97
    1906:	01 97       	sbiw	r24, 0x01	; 1
    1908:	f1 f7       	brne	.-4      	; 0x1906 <_Z7camInitv+0x26>
    190a:	00 c0       	rjmp	.+0      	; 0x190c <_Z7camInitv+0x2c>
    190c:	00 00       	nop
    190e:	48 ea       	ldi	r20, 0xA8	; 168
	_delay_ms(100);
	

	sensor_set(0x38,0x18,0xa8);
    1910:	68 e1       	ldi	r22, 0x18	; 24
    1912:	88 e3       	ldi	r24, 0x38	; 56
    1914:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    1918:	40 e1       	ldi	r20, 0x10	; 16
	sensor_set(0x36,0x21,0x10);
    191a:	61 e2       	ldi	r22, 0x21	; 33
    191c:	86 e3       	ldi	r24, 0x36	; 54
    191e:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    1922:	40 eb       	ldi	r20, 0xB0	; 176
	sensor_set(0x38,0x01,0xb0);
    1924:	61 e0       	ldi	r22, 0x01	; 1
    1926:	88 e3       	ldi	r24, 0x38	; 56
    1928:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    192c:	48 e0       	ldi	r20, 0x08	; 8
	sensor_set(0x44,0x07, 0x08);
    192e:	67 e0       	ldi	r22, 0x07	; 7
    1930:	84 e4       	ldi	r24, 0x44	; 68
    1932:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    1936:	40 e0       	ldi	r20, 0x00	; 0
	sensor_set(0x58,0x88,0x00);
    1938:	68 e8       	ldi	r22, 0x88	; 136
    193a:	88 e5       	ldi	r24, 0x58	; 88
    193c:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    1940:	4f ef       	ldi	r20, 0xFF	; 255
	sensor_set(0x50,0x00,0xFF);
    1942:	60 e0       	ldi	r22, 0x00	; 0
    1944:	80 e5       	ldi	r24, 0x50	; 80
    1946:	0e 94 03 01 	call	0x206	; 0x206 <_Z10sensor_sethhh>
    194a:	62 e0       	ldi	r22, 0x02	; 2
	
	
	
	set_bit(0x03,0x02); //vsync bit to 1
    194c:	83 e0       	ldi	r24, 0x03	; 3
    194e:	0e 94 15 01 	call	0x22a	; 0x22a <_Z7set_bithh>
    1952:	60 e0       	ldi	r22, 0x00	; 0

	//writeSPI(0x86,0x02); // Power on the sensor
	writeSPI(0x81,0x00); //Set 1 frame to be captured in CCR 0=1
    1954:	81 e8       	ldi	r24, 0x81	; 129
    1956:	0c 94 93 00 	jmp	0x126	; 0x126 <_Z8writeSPIhh>
    195a:	08 95       	ret

0000195c <_Z8sd_writev>:
    195c:	df 92       	push	r13
	sensor_set(0x38, 0x01, 0xb0);
	sensor_set(0xff, 0xff, 0xff);
	
}

void sd_write(void){
    195e:	ef 92       	push	r14
    1960:	ff 92       	push	r15
    1962:	0f 93       	push	r16
    1964:	1f 93       	push	r17
    1966:	cf 93       	push	r28
    1968:	df 93       	push	r29
    196a:	cd b7       	in	r28, 0x3d	; 61
    196c:	de b7       	in	r29, 0x3e	; 62
    196e:	c2 50       	subi	r28, 0x02	; 2
    1970:	d1 40       	sbci	r29, 0x01	; 1
    1972:	0f b6       	in	r0, 0x3f	; 63
    1974:	f8 94       	cli
    1976:	de bf       	out	0x3e, r29	; 62
    1978:	0f be       	out	0x3f, r0	; 63
    197a:	cd bf       	out	0x3d, r28	; 61
    197c:	8f e4       	ldi	r24, 0x4F	; 79
    197e:	93 ec       	ldi	r25, 0xC3	; 195
    1980:	01 97       	sbiw	r24, 0x01	; 1
    1982:	f1 f7       	brne	.-4      	; 0x1980 <_Z8sd_writev+0x24>
    1984:	00 c0       	rjmp	.+0      	; 0x1986 <_Z8sd_writev+0x2a>
    1986:	00 00       	nop
	// reboot delay
	_delay_ms(200);
	
	// init sdcard
	UINT bw;
	f_mount(0, &FatFs);		// Give a work area to the FatFs module
    1988:	64 eb       	ldi	r22, 0xB4	; 180
    198a:	71 e0       	ldi	r23, 0x01	; 1
    198c:	80 e0       	ldi	r24, 0x00	; 0
    198e:	0e 94 7e 19 	call	0x32fc	; 0x32fc <f_mount>
	// open file
	fp = (FIL *)malloc(sizeof (FIL));
    1992:	80 e2       	ldi	r24, 0x20	; 32
    1994:	90 e0       	ldi	r25, 0x00	; 0
    1996:	0e 94 06 23 	call	0x460c	; 0x460c <malloc>
    199a:	90 93 b3 01 	sts	0x01B3, r25	; 0x8001b3 <__data_end+0x1>
    199e:	80 93 b2 01 	sts	0x01B2, r24	; 0x8001b2 <__data_end>
	uint8_t first_frame = 1; 
	
	
	
	uint8_t temp=0;
	uint8_t temp_last=0;
    19a2:	90 e0       	ldi	r25, 0x00	; 0
	int m = 0;
	uint8_t first_frame = 1; 
	
	
	
	uint8_t temp=0;
    19a4:	f1 2c       	mov	r15, r1
	// open file
	fp = (FIL *)malloc(sizeof (FIL));

	uint8_t buf[256];
	int m = 0;
	uint8_t first_frame = 1; 
    19a6:	dd 24       	eor	r13, r13
    19a8:	d3 94       	inc	r13
	f_mount(0, &FatFs);		// Give a work area to the FatFs module
	// open file
	fp = (FIL *)malloc(sizeof (FIL));

	uint8_t buf[256];
	int m = 0;
    19aa:	00 e0       	ldi	r16, 0x00	; 0
    19ac:	10 e0       	ldi	r17, 0x00	; 0
    19ae:	03 c0       	rjmp	.+6      	; 0x19b6 <_Z8sd_writev+0x5a>
	char *filename = "image4.jpg";	

	while(( temp != 0xD9) | (temp_last !=0xFF)) {
		temp_last =  temp;
		temp = readSPI(0x3D);
		buf[m++] = temp;
    19b0:	8c 01       	movw	r16, r24
						f_write(fp, buf, sizeof(buf), &bw);	// Write data to the file
						f_close(fp); // Close the file
					}
				}
			}
			m = 0;
    19b2:	9f 2d       	mov	r25, r15
    19b4:	fe 2c       	mov	r15, r14
	uint8_t temp=0;
	uint8_t temp_last=0;

	char *filename = "image4.jpg";	

	while(( temp != 0xD9) | (temp_last !=0xFF)) {
    19b6:	81 e0       	ldi	r24, 0x01	; 1
    19b8:	e9 ed       	ldi	r30, 0xD9	; 217
    19ba:	fe 12       	cpse	r15, r30
    19bc:	80 e0       	ldi	r24, 0x00	; 0
    19be:	88 23       	and	r24, r24
    19c0:	31 f0       	breq	.+12     	; 0x19ce <_Z8sd_writev+0x72>
    19c2:	81 e0       	ldi	r24, 0x01	; 1
    19c4:	9f 3f       	cpi	r25, 0xFF	; 255
    19c6:	09 f0       	breq	.+2      	; 0x19ca <_Z8sd_writev+0x6e>
    19c8:	80 e0       	ldi	r24, 0x00	; 0
    19ca:	81 11       	cpse	r24, r1
    19cc:	71 c0       	rjmp	.+226    	; 0x1ab0 <_Z8sd_writev+0x154>
		temp_last =  temp;
		temp = readSPI(0x3D);
    19ce:	8d e3       	ldi	r24, 0x3D	; 61
    19d0:	0e 94 83 00 	call	0x106	; 0x106 <_Z7readSPIh>
    19d4:	e8 2e       	mov	r14, r24
		buf[m++] = temp;
    19d6:	c8 01       	movw	r24, r16
    19d8:	01 96       	adiw	r24, 0x01	; 1
    19da:	e3 e0       	ldi	r30, 0x03	; 3
    19dc:	f0 e0       	ldi	r31, 0x00	; 0
    19de:	ec 0f       	add	r30, r28
    19e0:	fd 1f       	adc	r31, r29
    19e2:	e0 0f       	add	r30, r16
    19e4:	f1 1f       	adc	r31, r17
    19e6:	e0 82       	st	Z, r14
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    19e8:	f5 e0       	ldi	r31, 0x05	; 5
    19ea:	fa 95       	dec	r31
    19ec:	f1 f7       	brne	.-4      	; 0x19ea <_Z8sd_writev+0x8e>
		_delay_us(15);
		
		if(m >= 256) {
    19ee:	8f 3f       	cpi	r24, 0xFF	; 255
    19f0:	91 05       	cpc	r25, r1
    19f2:	f1 f2       	breq	.-68     	; 0x19b0 <_Z8sd_writev+0x54>
    19f4:	ec f2       	brlt	.-70     	; 0x19b0 <_Z8sd_writev+0x54>
			SPCR &= ~(1<<SPE);
    19f6:	8c b5       	in	r24, 0x2c	; 44
    19f8:	8f 7b       	andi	r24, 0xBF	; 191
    19fa:	8c bd       	out	0x2c, r24	; 44
			if (first_frame) {
    19fc:	dd 20       	and	r13, r13
    19fe:	21 f1       	breq	.+72     	; 0x1a48 <_Z8sd_writev+0xec>
				if (f_open(fp, "image79.jpg", FA_WRITE | FA_CREATE_ALWAYS) == FR_OK) {	// Create a file
    1a00:	4a e0       	ldi	r20, 0x0A	; 10
    1a02:	67 e0       	ldi	r22, 0x07	; 7
    1a04:	71 e0       	ldi	r23, 0x01	; 1
    1a06:	80 91 b2 01 	lds	r24, 0x01B2	; 0x8001b2 <__data_end>
    1a0a:	90 91 b3 01 	lds	r25, 0x01B3	; 0x8001b3 <__data_end+0x1>
    1a0e:	0e 94 9c 19 	call	0x3338	; 0x3338 <f_open>
    1a12:	81 11       	cpse	r24, r1
    1a14:	46 c0       	rjmp	.+140    	; 0x1aa2 <_Z8sd_writev+0x146>
					PORTD|= (1 << PD0);
    1a16:	8b b1       	in	r24, 0x0b	; 11
    1a18:	81 60       	ori	r24, 0x01	; 1
    1a1a:	8b b9       	out	0x0b, r24	; 11
					f_write(fp, buf, sizeof(buf), &bw);	// Write data to the file
    1a1c:	9e 01       	movw	r18, r28
    1a1e:	2f 5f       	subi	r18, 0xFF	; 255
    1a20:	3f 4f       	sbci	r19, 0xFF	; 255
    1a22:	40 e0       	ldi	r20, 0x00	; 0
    1a24:	51 e0       	ldi	r21, 0x01	; 1
    1a26:	be 01       	movw	r22, r28
    1a28:	6d 5f       	subi	r22, 0xFD	; 253
    1a2a:	7f 4f       	sbci	r23, 0xFF	; 255
    1a2c:	80 91 b2 01 	lds	r24, 0x01B2	; 0x8001b2 <__data_end>
    1a30:	90 91 b3 01 	lds	r25, 0x01B3	; 0x8001b3 <__data_end+0x1>
    1a34:	0e 94 a8 1a 	call	0x3550	; 0x3550 <f_write>
					f_close(fp); // Close the file
    1a38:	80 91 b2 01 	lds	r24, 0x01B2	; 0x8001b2 <__data_end>
    1a3c:	90 91 b3 01 	lds	r25, 0x01B3	; 0x8001b3 <__data_end+0x1>
    1a40:	0e 94 97 1c 	call	0x392e	; 0x392e <f_close>
				}
				first_frame = 0;
    1a44:	d1 2c       	mov	r13, r1
    1a46:	2e c0       	rjmp	.+92     	; 0x1aa4 <_Z8sd_writev+0x148>
				
			} else {
				if (f_open(fp, "image79.jpg", FA_WRITE | FA_OPEN_ALWAYS) == FR_OK) {
    1a48:	42 e1       	ldi	r20, 0x12	; 18
    1a4a:	67 e0       	ldi	r22, 0x07	; 7
    1a4c:	71 e0       	ldi	r23, 0x01	; 1
    1a4e:	80 91 b2 01 	lds	r24, 0x01B2	; 0x8001b2 <__data_end>
    1a52:	90 91 b3 01 	lds	r25, 0x01B3	; 0x8001b3 <__data_end+0x1>
    1a56:	0e 94 9c 19 	call	0x3338	; 0x3338 <f_open>
    1a5a:	81 11       	cpse	r24, r1
    1a5c:	23 c0       	rjmp	.+70     	; 0x1aa4 <_Z8sd_writev+0x148>
					if (f_lseek(fp, f_size(fp)) == FR_OK) {
    1a5e:	80 91 b2 01 	lds	r24, 0x01B2	; 0x8001b2 <__data_end>
    1a62:	90 91 b3 01 	lds	r25, 0x01B3	; 0x8001b3 <__data_end+0x1>
    1a66:	fc 01       	movw	r30, r24
    1a68:	42 85       	ldd	r20, Z+10	; 0x0a
    1a6a:	53 85       	ldd	r21, Z+11	; 0x0b
    1a6c:	64 85       	ldd	r22, Z+12	; 0x0c
    1a6e:	75 85       	ldd	r23, Z+13	; 0x0d
    1a70:	0e 94 a2 1c 	call	0x3944	; 0x3944 <f_lseek>
    1a74:	81 11       	cpse	r24, r1
    1a76:	16 c0       	rjmp	.+44     	; 0x1aa4 <_Z8sd_writev+0x148>
						f_write(fp, buf, sizeof(buf), &bw);	// Write data to the file
    1a78:	9e 01       	movw	r18, r28
    1a7a:	2f 5f       	subi	r18, 0xFF	; 255
    1a7c:	3f 4f       	sbci	r19, 0xFF	; 255
    1a7e:	40 e0       	ldi	r20, 0x00	; 0
    1a80:	51 e0       	ldi	r21, 0x01	; 1
    1a82:	be 01       	movw	r22, r28
    1a84:	6d 5f       	subi	r22, 0xFD	; 253
    1a86:	7f 4f       	sbci	r23, 0xFF	; 255
    1a88:	80 91 b2 01 	lds	r24, 0x01B2	; 0x8001b2 <__data_end>
    1a8c:	90 91 b3 01 	lds	r25, 0x01B3	; 0x8001b3 <__data_end+0x1>
    1a90:	0e 94 a8 1a 	call	0x3550	; 0x3550 <f_write>
						f_close(fp); // Close the file
    1a94:	80 91 b2 01 	lds	r24, 0x01B2	; 0x8001b2 <__data_end>
    1a98:	90 91 b3 01 	lds	r25, 0x01B3	; 0x8001b3 <__data_end+0x1>
    1a9c:	0e 94 97 1c 	call	0x392e	; 0x392e <f_close>
    1aa0:	01 c0       	rjmp	.+2      	; 0x1aa4 <_Z8sd_writev+0x148>
				if (f_open(fp, "image79.jpg", FA_WRITE | FA_CREATE_ALWAYS) == FR_OK) {	// Create a file
					PORTD|= (1 << PD0);
					f_write(fp, buf, sizeof(buf), &bw);	// Write data to the file
					f_close(fp); // Close the file
				}
				first_frame = 0;
    1aa2:	d1 2c       	mov	r13, r1
						f_close(fp); // Close the file
					}
				}
			}
			m = 0;
			SPCR |= (1<<SPE);
    1aa4:	8c b5       	in	r24, 0x2c	; 44
    1aa6:	80 64       	ori	r24, 0x40	; 64
    1aa8:	8c bd       	out	0x2c, r24	; 44
						f_write(fp, buf, sizeof(buf), &bw);	// Write data to the file
						f_close(fp); // Close the file
					}
				}
			}
			m = 0;
    1aaa:	00 e0       	ldi	r16, 0x00	; 0
    1aac:	10 e0       	ldi	r17, 0x00	; 0
    1aae:	81 cf       	rjmp	.-254    	; 0x19b2 <_Z8sd_writev+0x56>
			SPCR |= (1<<SPE);
		}
	}
	
	 if(m > 0 ) {
    1ab0:	10 16       	cp	r1, r16
    1ab2:	11 06       	cpc	r1, r17
    1ab4:	94 f5       	brge	.+100    	; 0x1b1a <_Z8sd_writev+0x1be>
		SPCR &= ~(1<<SPE);
    1ab6:	8c b5       	in	r24, 0x2c	; 44
    1ab8:	8f 7b       	andi	r24, 0xBF	; 191
    1aba:	8c bd       	out	0x2c, r24	; 44
		if (f_open(fp, "image79.jpg", FA_WRITE | FA_OPEN_ALWAYS) == FR_OK) {
    1abc:	42 e1       	ldi	r20, 0x12	; 18
    1abe:	67 e0       	ldi	r22, 0x07	; 7
    1ac0:	71 e0       	ldi	r23, 0x01	; 1
    1ac2:	80 91 b2 01 	lds	r24, 0x01B2	; 0x8001b2 <__data_end>
    1ac6:	90 91 b3 01 	lds	r25, 0x01B3	; 0x8001b3 <__data_end+0x1>
    1aca:	0e 94 9c 19 	call	0x3338	; 0x3338 <f_open>
    1ace:	81 11       	cpse	r24, r1
    1ad0:	21 c0       	rjmp	.+66     	; 0x1b14 <_Z8sd_writev+0x1b8>
			if (f_lseek(fp, f_size(fp)) == FR_OK) {
    1ad2:	80 91 b2 01 	lds	r24, 0x01B2	; 0x8001b2 <__data_end>
    1ad6:	90 91 b3 01 	lds	r25, 0x01B3	; 0x8001b3 <__data_end+0x1>
    1ada:	fc 01       	movw	r30, r24
    1adc:	42 85       	ldd	r20, Z+10	; 0x0a
    1ade:	53 85       	ldd	r21, Z+11	; 0x0b
    1ae0:	64 85       	ldd	r22, Z+12	; 0x0c
    1ae2:	75 85       	ldd	r23, Z+13	; 0x0d
    1ae4:	0e 94 a2 1c 	call	0x3944	; 0x3944 <f_lseek>
    1ae8:	81 11       	cpse	r24, r1
    1aea:	14 c0       	rjmp	.+40     	; 0x1b14 <_Z8sd_writev+0x1b8>
				f_write(fp, buf, sizeof(buf), &bw);	// Write data to the file
    1aec:	9e 01       	movw	r18, r28
    1aee:	2f 5f       	subi	r18, 0xFF	; 255
    1af0:	3f 4f       	sbci	r19, 0xFF	; 255
    1af2:	40 e0       	ldi	r20, 0x00	; 0
    1af4:	51 e0       	ldi	r21, 0x01	; 1
    1af6:	be 01       	movw	r22, r28
    1af8:	6d 5f       	subi	r22, 0xFD	; 253
    1afa:	7f 4f       	sbci	r23, 0xFF	; 255
    1afc:	80 91 b2 01 	lds	r24, 0x01B2	; 0x8001b2 <__data_end>
    1b00:	90 91 b3 01 	lds	r25, 0x01B3	; 0x8001b3 <__data_end+0x1>
    1b04:	0e 94 a8 1a 	call	0x3550	; 0x3550 <f_write>
				f_close(fp); // Close the file
    1b08:	80 91 b2 01 	lds	r24, 0x01B2	; 0x8001b2 <__data_end>
    1b0c:	90 91 b3 01 	lds	r25, 0x01B3	; 0x8001b3 <__data_end+0x1>
    1b10:	0e 94 97 1c 	call	0x392e	; 0x392e <f_close>
			}
		}
		SPCR |= (1<<SPE);
    1b14:	8c b5       	in	r24, 0x2c	; 44
    1b16:	80 64       	ori	r24, 0x40	; 64
    1b18:	8c bd       	out	0x2c, r24	; 44
	 }
	 
	 f_close(fp); // Close the file
    1b1a:	80 91 b2 01 	lds	r24, 0x01B2	; 0x8001b2 <__data_end>
    1b1e:	90 91 b3 01 	lds	r25, 0x01B3	; 0x8001b3 <__data_end+0x1>
    1b22:	0e 94 97 1c 	call	0x392e	; 0x392e <f_close>
}
    1b26:	ce 5f       	subi	r28, 0xFE	; 254
    1b28:	de 4f       	sbci	r29, 0xFE	; 254
    1b2a:	0f b6       	in	r0, 0x3f	; 63
    1b2c:	f8 94       	cli
    1b2e:	de bf       	out	0x3e, r29	; 62
    1b30:	0f be       	out	0x3f, r0	; 63
    1b32:	cd bf       	out	0x3d, r28	; 61
    1b34:	df 91       	pop	r29
    1b36:	cf 91       	pop	r28
    1b38:	1f 91       	pop	r17
    1b3a:	0f 91       	pop	r16
    1b3c:	ff 90       	pop	r15
    1b3e:	ef 90       	pop	r14
    1b40:	df 90       	pop	r13
    1b42:	08 95       	ret

00001b44 <main>:
	uint8_t data = i2c_readNak(); 
	//THIS CODE READS REGISTER - PUT INTO FCN LATER*/
	
	
	
	DDRD |= (1 << PD0); DDRD |= (1 << PD1);
    1b44:	8a b1       	in	r24, 0x0a	; 10
    1b46:	81 60       	ori	r24, 0x01	; 1
    1b48:	8a b9       	out	0x0a, r24	; 10
    1b4a:	8a b1       	in	r24, 0x0a	; 10
    1b4c:	82 60       	ori	r24, 0x02	; 2
    1b4e:	8a b9       	out	0x0a, r24	; 10
	
	PORTD &= ~(1 << PD0);
    1b50:	8b b1       	in	r24, 0x0b	; 11
    1b52:	8e 7f       	andi	r24, 0xFE	; 254
    1b54:	8b b9       	out	0x0b, r24	; 11
	PORTD &= ~(1 << PD1);
    1b56:	8b b1       	in	r24, 0x0b	; 11
    1b58:	8d 7f       	andi	r24, 0xFD	; 253
    1b5a:	8b b9       	out	0x0b, r24	; 11
	
	spi_master_init(0,SPI_CLOCK_DIV2);
    1b5c:	64 e0       	ldi	r22, 0x04	; 4
    1b5e:	80 e0       	ldi	r24, 0x00	; 0
    1b60:	0e 94 6b 00 	call	0xd6	; 0xd6 <_Z15spi_master_inithh>
	i2c_init();
    1b64:	0e 94 c5 00 	call	0x18a	; 0x18a <_Z8i2c_initv>
	}*/
	
	//_delay_ms(2000);
	//PORTD &= ~(1 << PD0);
	
	camInit();
    1b68:	bb de       	rcall	.-650    	; 0x18e0 <_Z7camInitv>
	startCapture();
    1b6a:	0e 94 a2 00 	call	0x144	; 0x144 <_Z12startCapturev>
	// uint32_t size = readSize();
	sd_write();
    1b6e:	f6 de       	rcall	.-532    	; 0x195c <_Z8sd_writev>
	
	//read_test();
	
	writeSPI(0x84,0x01); //clear fifo flag
    1b70:	61 e0       	ldi	r22, 0x01	; 1
    1b72:	84 e8       	ldi	r24, 0x84	; 132
    1b74:	0e 94 93 00 	call	0x126	; 0x126 <_Z8writeSPIhh>
	
	//PORTD|= (1 << PD0);
	PORTD|= (1 << PD1);
    1b78:	8b b1       	in	r24, 0x0b	; 11
    1b7a:	82 60       	ori	r24, 0x02	; 2
    1b7c:	8b b9       	out	0x0b, r24	; 11
	
}
    1b7e:	80 e0       	ldi	r24, 0x00	; 0
    1b80:	90 e0       	ldi	r25, 0x00	; 0
    1b82:	08 95       	ret

00001b84 <_ZL7mem_cpyPvPKvj>:
		mem_cpy(rbuff, &fp->buf[fp->fptr % SS(fp->fs)], rcnt);	/* Pick partial sector */
#endif
	}

	LEAVE_FF(fp->fs, FR_OK);
}
    1b84:	dc 01       	movw	r26, r24
    1b86:	fb 01       	movw	r30, r22
    1b88:	42 30       	cpi	r20, 0x02	; 2
    1b8a:	51 05       	cpc	r21, r1
    1b8c:	38 f0       	brcs	.+14     	; 0x1b9c <_ZL7mem_cpyPvPKvj+0x18>
    1b8e:	81 91       	ld	r24, Z+
    1b90:	91 91       	ld	r25, Z+
    1b92:	8d 93       	st	X+, r24
    1b94:	9d 93       	st	X+, r25
    1b96:	42 50       	subi	r20, 0x02	; 2
    1b98:	51 09       	sbc	r21, r1
    1b9a:	f6 cf       	rjmp	.-20     	; 0x1b88 <_ZL7mem_cpyPvPKvj+0x4>
    1b9c:	ca 01       	movw	r24, r20
    1b9e:	01 97       	sbiw	r24, 0x01	; 1
    1ba0:	45 2b       	or	r20, r21
    1ba2:	31 f0       	breq	.+12     	; 0x1bb0 <_ZL7mem_cpyPvPKvj+0x2c>
    1ba4:	20 81       	ld	r18, Z
    1ba6:	2c 93       	st	X, r18
    1ba8:	ac 01       	movw	r20, r24
    1baa:	31 96       	adiw	r30, 0x01	; 1
    1bac:	11 96       	adiw	r26, 0x01	; 1
    1bae:	f6 cf       	rjmp	.-20     	; 0x1b9c <_ZL7mem_cpyPvPKvj+0x18>
    1bb0:	08 95       	ret

00001bb2 <_ZL7mem_setPvij>:
    1bb2:	fc 01       	movw	r30, r24
    1bb4:	ca 01       	movw	r24, r20
    1bb6:	01 97       	sbiw	r24, 0x01	; 1
    1bb8:	45 2b       	or	r20, r21
    1bba:	21 f0       	breq	.+8      	; 0x1bc4 <_ZL7mem_setPvij+0x12>
    1bbc:	60 83       	st	Z, r22
    1bbe:	ac 01       	movw	r20, r24
    1bc0:	31 96       	adiw	r30, 0x01	; 1
    1bc2:	f8 cf       	rjmp	.-16     	; 0x1bb4 <_ZL7mem_setPvij+0x2>
    1bc4:	08 95       	ret

00001bc6 <_ZL7mem_cmpPKvS0_j>:
    1bc6:	cf 93       	push	r28
    1bc8:	df 93       	push	r29
    1bca:	ec 01       	movw	r28, r24
    1bcc:	db 01       	movw	r26, r22
    1bce:	80 e0       	ldi	r24, 0x00	; 0
    1bd0:	90 e0       	ldi	r25, 0x00	; 0
    1bd2:	fa 01       	movw	r30, r20
    1bd4:	31 97       	sbiw	r30, 0x01	; 1
    1bd6:	45 2b       	or	r20, r21
    1bd8:	81 f0       	breq	.+32     	; 0x1bfa <_ZL7mem_cmpPKvS0_j+0x34>
    1bda:	9e 01       	movw	r18, r28
    1bdc:	2f 5f       	subi	r18, 0xFF	; 255
    1bde:	3f 4f       	sbci	r19, 0xFF	; 255
    1be0:	88 81       	ld	r24, Y
    1be2:	90 e0       	ldi	r25, 0x00	; 0
    1be4:	ad 01       	movw	r20, r26
    1be6:	4f 5f       	subi	r20, 0xFF	; 255
    1be8:	5f 4f       	sbci	r21, 0xFF	; 255
    1bea:	6c 91       	ld	r22, X
    1bec:	86 1b       	sub	r24, r22
    1bee:	91 09       	sbc	r25, r1
    1bf0:	31 f4       	brne	.+12     	; 0x1bfe <_ZL7mem_cmpPKvS0_j+0x38>
    1bf2:	da 01       	movw	r26, r20
    1bf4:	e9 01       	movw	r28, r18
    1bf6:	21 e0       	ldi	r18, 0x01	; 1
    1bf8:	05 c0       	rjmp	.+10     	; 0x1c04 <_ZL7mem_cmpPKvS0_j+0x3e>
    1bfa:	20 e0       	ldi	r18, 0x00	; 0
    1bfc:	03 c0       	rjmp	.+6      	; 0x1c04 <_ZL7mem_cmpPKvS0_j+0x3e>
    1bfe:	da 01       	movw	r26, r20
    1c00:	e9 01       	movw	r28, r18
    1c02:	20 e0       	ldi	r18, 0x00	; 0
    1c04:	af 01       	movw	r20, r30
    1c06:	21 11       	cpse	r18, r1
    1c08:	e4 cf       	rjmp	.-56     	; 0x1bd2 <_ZL7mem_cmpPKvS0_j+0xc>
    1c0a:	df 91       	pop	r29
    1c0c:	cf 91       	pop	r28
    1c0e:	08 95       	ret

00001c10 <_ZL7chk_chrPKci>:
    1c10:	fc 01       	movw	r30, r24
    1c12:	80 81       	ld	r24, Z
    1c14:	88 23       	and	r24, r24
    1c16:	39 f0       	breq	.+14     	; 0x1c26 <_ZL7chk_chrPKci+0x16>
    1c18:	28 2f       	mov	r18, r24
    1c1a:	30 e0       	ldi	r19, 0x00	; 0
    1c1c:	26 17       	cp	r18, r22
    1c1e:	37 07       	cpc	r19, r23
    1c20:	11 f0       	breq	.+4      	; 0x1c26 <_ZL7chk_chrPKci+0x16>
    1c22:	31 96       	adiw	r30, 0x01	; 1
    1c24:	f6 cf       	rjmp	.-20     	; 0x1c12 <_ZL7chk_chrPKci+0x2>
    1c26:	90 e0       	ldi	r25, 0x00	; 0
    1c28:	08 95       	ret

00001c2a <_ZL8ld_clustP5FATFSPh>:
    1c2a:	0f 93       	push	r16
    1c2c:	1f 93       	push	r17
    1c2e:	dc 01       	movw	r26, r24
    1c30:	fb 01       	movw	r30, r22
    1c32:	62 8d       	ldd	r22, Z+26	; 0x1a
    1c34:	73 8d       	ldd	r23, Z+27	; 0x1b
    1c36:	80 e0       	ldi	r24, 0x00	; 0
    1c38:	90 e0       	ldi	r25, 0x00	; 0
    1c3a:	2c 91       	ld	r18, X
    1c3c:	23 30       	cpi	r18, 0x03	; 3
    1c3e:	59 f4       	brne	.+22     	; 0x1c56 <_ZL8ld_clustP5FATFSPh+0x2c>
    1c40:	04 89       	ldd	r16, Z+20	; 0x14
    1c42:	15 89       	ldd	r17, Z+21	; 0x15
    1c44:	20 e0       	ldi	r18, 0x00	; 0
    1c46:	30 e0       	ldi	r19, 0x00	; 0
    1c48:	98 01       	movw	r18, r16
    1c4a:	11 27       	eor	r17, r17
    1c4c:	00 27       	eor	r16, r16
    1c4e:	60 2b       	or	r22, r16
    1c50:	71 2b       	or	r23, r17
    1c52:	82 2b       	or	r24, r18
    1c54:	93 2b       	or	r25, r19
    1c56:	1f 91       	pop	r17
    1c58:	0f 91       	pop	r16
    1c5a:	08 95       	ret

00001c5c <_ZL8st_clustPhm>:
    1c5c:	fc 01       	movw	r30, r24
    1c5e:	53 8f       	std	Z+27, r21	; 0x1b
    1c60:	42 8f       	std	Z+26, r20	; 0x1a
    1c62:	75 8b       	std	Z+21, r23	; 0x15
    1c64:	64 8b       	std	Z+20, r22	; 0x14
    1c66:	08 95       	ret

00001c68 <_ZL11create_nameP3DIRPPKc>:
    1c68:	4f 92       	push	r4
    1c6a:	5f 92       	push	r5
    1c6c:	6f 92       	push	r6
    1c6e:	8f 92       	push	r8
    1c70:	9f 92       	push	r9
    1c72:	af 92       	push	r10
    1c74:	bf 92       	push	r11
    1c76:	cf 92       	push	r12
    1c78:	df 92       	push	r13
    1c7a:	ef 92       	push	r14
    1c7c:	ff 92       	push	r15
    1c7e:	1f 93       	push	r17
    1c80:	cf 93       	push	r28
    1c82:	df 93       	push	r29
    1c84:	fc 01       	movw	r30, r24
    1c86:	5b 01       	movw	r10, r22
    1c88:	db 01       	movw	r26, r22
    1c8a:	cd 91       	ld	r28, X+
    1c8c:	dc 91       	ld	r29, X
    1c8e:	98 81       	ld	r25, Y
    1c90:	9f 32       	cpi	r25, 0x2F	; 47
    1c92:	11 f0       	breq	.+4      	; 0x1c98 <_ZL11create_nameP3DIRPPKc+0x30>
    1c94:	9c 35       	cpi	r25, 0x5C	; 92
    1c96:	11 f4       	brne	.+4      	; 0x1c9c <_ZL11create_nameP3DIRPPKc+0x34>
    1c98:	21 96       	adiw	r28, 0x01	; 1
    1c9a:	f9 cf       	rjmp	.-14     	; 0x1c8e <_ZL11create_nameP3DIRPPKc+0x26>
    1c9c:	c4 88       	ldd	r12, Z+20	; 0x14
    1c9e:	d5 88       	ldd	r13, Z+21	; 0x15
    1ca0:	4b e0       	ldi	r20, 0x0B	; 11
    1ca2:	50 e0       	ldi	r21, 0x00	; 0
    1ca4:	60 e2       	ldi	r22, 0x20	; 32
    1ca6:	70 e0       	ldi	r23, 0x00	; 0
    1ca8:	c6 01       	movw	r24, r12
    1caa:	83 df       	rcall	.-250    	; 0x1bb2 <_ZL7mem_setPvij>
    1cac:	41 2c       	mov	r4, r1
    1cae:	51 2c       	mov	r5, r1
    1cb0:	80 e0       	ldi	r24, 0x00	; 0
    1cb2:	90 e0       	ldi	r25, 0x00	; 0
    1cb4:	68 94       	set
    1cb6:	88 24       	eor	r8, r8
    1cb8:	83 f8       	bld	r8, 3
    1cba:	91 2c       	mov	r9, r1
    1cbc:	61 2c       	mov	r6, r1
    1cbe:	01 c0       	rjmp	.+2      	; 0x1cc2 <_ZL11create_nameP3DIRPPKc+0x5a>
    1cc0:	c7 01       	movw	r24, r14
    1cc2:	7c 01       	movw	r14, r24
    1cc4:	bf ef       	ldi	r27, 0xFF	; 255
    1cc6:	eb 1a       	sub	r14, r27
    1cc8:	fb 0a       	sbc	r15, r27
    1cca:	fe 01       	movw	r30, r28
    1ccc:	e8 0f       	add	r30, r24
    1cce:	f9 1f       	adc	r31, r25
    1cd0:	10 81       	ld	r17, Z
    1cd2:	11 32       	cpi	r17, 0x21	; 33
    1cd4:	08 f4       	brcc	.+2      	; 0x1cd8 <_ZL11create_nameP3DIRPPKc+0x70>
    1cd6:	49 c0       	rjmp	.+146    	; 0x1d6a <_ZL11create_nameP3DIRPPKc+0x102>
    1cd8:	1f 32       	cpi	r17, 0x2F	; 47
    1cda:	09 f4       	brne	.+2      	; 0x1cde <_ZL11create_nameP3DIRPPKc+0x76>
    1cdc:	46 c0       	rjmp	.+140    	; 0x1d6a <_ZL11create_nameP3DIRPPKc+0x102>
    1cde:	1c 35       	cpi	r17, 0x5C	; 92
    1ce0:	09 f4       	brne	.+2      	; 0x1ce4 <_ZL11create_nameP3DIRPPKc+0x7c>
    1ce2:	43 c0       	rjmp	.+134    	; 0x1d6a <_ZL11create_nameP3DIRPPKc+0x102>
    1ce4:	1e 32       	cpi	r17, 0x2E	; 46
    1ce6:	19 f0       	breq	.+6      	; 0x1cee <_ZL11create_nameP3DIRPPKc+0x86>
    1ce8:	48 14       	cp	r4, r8
    1cea:	59 04       	cpc	r5, r9
    1cec:	a0 f0       	brcs	.+40     	; 0x1d16 <_ZL11create_nameP3DIRPPKc+0xae>
    1cee:	e8 e0       	ldi	r30, 0x08	; 8
    1cf0:	8e 16       	cp	r8, r30
    1cf2:	91 04       	cpc	r9, r1
    1cf4:	09 f0       	breq	.+2      	; 0x1cf8 <_ZL11create_nameP3DIRPPKc+0x90>
    1cf6:	5f c0       	rjmp	.+190    	; 0x1db6 <_ZL11create_nameP3DIRPPKc+0x14e>
    1cf8:	1e 32       	cpi	r17, 0x2E	; 46
    1cfa:	09 f0       	breq	.+2      	; 0x1cfe <_ZL11create_nameP3DIRPPKc+0x96>
    1cfc:	5e c0       	rjmp	.+188    	; 0x1dba <_ZL11create_nameP3DIRPPKc+0x152>
    1cfe:	66 0c       	add	r6, r6
    1d00:	66 0c       	add	r6, r6
    1d02:	68 94       	set
    1d04:	44 24       	eor	r4, r4
    1d06:	43 f8       	bld	r4, 3
    1d08:	51 2c       	mov	r5, r1
    1d0a:	0f 2e       	mov	r0, r31
    1d0c:	fb e0       	ldi	r31, 0x0B	; 11
    1d0e:	8f 2e       	mov	r8, r31
    1d10:	91 2c       	mov	r9, r1
    1d12:	f0 2d       	mov	r31, r0
    1d14:	d5 cf       	rjmp	.-86     	; 0x1cc0 <_ZL11create_nameP3DIRPPKc+0x58>
    1d16:	11 23       	and	r17, r17
    1d18:	44 f4       	brge	.+16     	; 0x1d2a <_ZL11create_nameP3DIRPPKc+0xc2>
    1d1a:	f6 2d       	mov	r31, r6
    1d1c:	f3 60       	ori	r31, 0x03	; 3
    1d1e:	6f 2e       	mov	r6, r31
    1d20:	e1 2f       	mov	r30, r17
    1d22:	f0 e0       	ldi	r31, 0x00	; 0
    1d24:	ee 54       	subi	r30, 0x4E	; 78
    1d26:	ff 4f       	sbci	r31, 0xFF	; 255
    1d28:	10 81       	ld	r17, Z
    1d2a:	61 2f       	mov	r22, r17
    1d2c:	70 e0       	ldi	r23, 0x00	; 0
    1d2e:	83 e1       	ldi	r24, 0x13	; 19
    1d30:	91 e0       	ldi	r25, 0x01	; 1
    1d32:	6e df       	rcall	.-292    	; 0x1c10 <_ZL7chk_chrPKci>
    1d34:	89 2b       	or	r24, r25
    1d36:	09 f0       	breq	.+2      	; 0x1d3a <_ZL11create_nameP3DIRPPKc+0xd2>
    1d38:	42 c0       	rjmp	.+132    	; 0x1dbe <_ZL11create_nameP3DIRPPKc+0x156>
    1d3a:	8f eb       	ldi	r24, 0xBF	; 191
    1d3c:	81 0f       	add	r24, r17
    1d3e:	8a 31       	cpi	r24, 0x1A	; 26
    1d40:	20 f4       	brcc	.+8      	; 0x1d4a <_ZL11create_nameP3DIRPPKc+0xe2>
    1d42:	26 2d       	mov	r18, r6
    1d44:	22 60       	ori	r18, 0x02	; 2
    1d46:	62 2e       	mov	r6, r18
    1d48:	08 c0       	rjmp	.+16     	; 0x1d5a <_ZL11create_nameP3DIRPPKc+0xf2>
    1d4a:	8f e9       	ldi	r24, 0x9F	; 159
    1d4c:	81 0f       	add	r24, r17
    1d4e:	8a 31       	cpi	r24, 0x1A	; 26
    1d50:	20 f4       	brcc	.+8      	; 0x1d5a <_ZL11create_nameP3DIRPPKc+0xf2>
    1d52:	86 2d       	mov	r24, r6
    1d54:	81 60       	ori	r24, 0x01	; 1
    1d56:	68 2e       	mov	r6, r24
    1d58:	10 52       	subi	r17, 0x20	; 32
    1d5a:	f6 01       	movw	r30, r12
    1d5c:	e4 0d       	add	r30, r4
    1d5e:	f5 1d       	adc	r31, r5
    1d60:	10 83       	st	Z, r17
    1d62:	d2 01       	movw	r26, r4
    1d64:	11 96       	adiw	r26, 0x01	; 1
    1d66:	2d 01       	movw	r4, r26
    1d68:	ab cf       	rjmp	.-170    	; 0x1cc0 <_ZL11create_nameP3DIRPPKc+0x58>
    1d6a:	ce 0d       	add	r28, r14
    1d6c:	df 1d       	adc	r29, r15
    1d6e:	f5 01       	movw	r30, r10
    1d70:	d1 83       	std	Z+1, r29	; 0x01
    1d72:	c0 83       	st	Z, r28
    1d74:	11 32       	cpi	r17, 0x21	; 33
    1d76:	10 f4       	brcc	.+4      	; 0x1d7c <_ZL11create_nameP3DIRPPKc+0x114>
    1d78:	94 e0       	ldi	r25, 0x04	; 4
    1d7a:	01 c0       	rjmp	.+2      	; 0x1d7e <_ZL11create_nameP3DIRPPKc+0x116>
    1d7c:	90 e0       	ldi	r25, 0x00	; 0
    1d7e:	45 28       	or	r4, r5
    1d80:	01 f1       	breq	.+64     	; 0x1dc2 <_ZL11create_nameP3DIRPPKc+0x15a>
    1d82:	d6 01       	movw	r26, r12
    1d84:	8c 91       	ld	r24, X
    1d86:	85 3e       	cpi	r24, 0xE5	; 229
    1d88:	11 f4       	brne	.+4      	; 0x1d8e <_ZL11create_nameP3DIRPPKc+0x126>
    1d8a:	85 e0       	ldi	r24, 0x05	; 5
    1d8c:	8c 93       	st	X, r24
    1d8e:	b8 e0       	ldi	r27, 0x08	; 8
    1d90:	8b 16       	cp	r8, r27
    1d92:	91 04       	cpc	r9, r1
    1d94:	11 f4       	brne	.+4      	; 0x1d9a <_ZL11create_nameP3DIRPPKc+0x132>
    1d96:	66 0c       	add	r6, r6
    1d98:	66 0c       	add	r6, r6
    1d9a:	86 2d       	mov	r24, r6
    1d9c:	83 70       	andi	r24, 0x03	; 3
    1d9e:	81 30       	cpi	r24, 0x01	; 1
    1da0:	09 f4       	brne	.+2      	; 0x1da4 <_ZL11create_nameP3DIRPPKc+0x13c>
    1da2:	90 61       	ori	r25, 0x10	; 16
    1da4:	86 2d       	mov	r24, r6
    1da6:	8c 70       	andi	r24, 0x0C	; 12
    1da8:	84 30       	cpi	r24, 0x04	; 4
    1daa:	09 f4       	brne	.+2      	; 0x1dae <_ZL11create_nameP3DIRPPKc+0x146>
    1dac:	98 60       	ori	r25, 0x08	; 8
    1dae:	f6 01       	movw	r30, r12
    1db0:	93 87       	std	Z+11, r25	; 0x0b
    1db2:	80 e0       	ldi	r24, 0x00	; 0
    1db4:	07 c0       	rjmp	.+14     	; 0x1dc4 <_ZL11create_nameP3DIRPPKc+0x15c>
    1db6:	86 e0       	ldi	r24, 0x06	; 6
    1db8:	05 c0       	rjmp	.+10     	; 0x1dc4 <_ZL11create_nameP3DIRPPKc+0x15c>
    1dba:	86 e0       	ldi	r24, 0x06	; 6
    1dbc:	03 c0       	rjmp	.+6      	; 0x1dc4 <_ZL11create_nameP3DIRPPKc+0x15c>
    1dbe:	86 e0       	ldi	r24, 0x06	; 6
    1dc0:	01 c0       	rjmp	.+2      	; 0x1dc4 <_ZL11create_nameP3DIRPPKc+0x15c>
    1dc2:	86 e0       	ldi	r24, 0x06	; 6
    1dc4:	df 91       	pop	r29
    1dc6:	cf 91       	pop	r28
    1dc8:	1f 91       	pop	r17
    1dca:	ff 90       	pop	r15
    1dcc:	ef 90       	pop	r14
    1dce:	df 90       	pop	r13
    1dd0:	cf 90       	pop	r12
    1dd2:	bf 90       	pop	r11
    1dd4:	af 90       	pop	r10
    1dd6:	9f 90       	pop	r9
    1dd8:	8f 90       	pop	r8
    1dda:	6f 90       	pop	r6
    1ddc:	5f 90       	pop	r5
    1dde:	4f 90       	pop	r4
    1de0:	08 95       	ret

00001de2 <_ZL8check_fsP5FATFSm>:
    1de2:	0f 93       	push	r16
    1de4:	cf 93       	push	r28
    1de6:	df 93       	push	r29
    1de8:	ec 01       	movw	r28, r24
    1dea:	9a 01       	movw	r18, r20
    1dec:	ab 01       	movw	r20, r22
    1dee:	bc 01       	movw	r22, r24
    1df0:	6e 5c       	subi	r22, 0xCE	; 206
    1df2:	7f 4f       	sbci	r23, 0xFF	; 255
    1df4:	01 e0       	ldi	r16, 0x01	; 1
    1df6:	89 81       	ldd	r24, Y+1	; 0x01
    1df8:	0e 94 4e 21 	call	0x429c	; 0x429c <disk_read>
    1dfc:	81 11       	cpse	r24, r1
    1dfe:	22 c0       	rjmp	.+68     	; 0x1e44 <_ZL8check_fsP5FATFSm+0x62>
    1e00:	fe 01       	movw	r30, r28
    1e02:	e0 5d       	subi	r30, 0xD0	; 208
    1e04:	fd 4f       	sbci	r31, 0xFD	; 253
    1e06:	80 81       	ld	r24, Z
    1e08:	91 81       	ldd	r25, Z+1	; 0x01
    1e0a:	85 35       	cpi	r24, 0x55	; 85
    1e0c:	9a 4a       	sbci	r25, 0xAA	; 170
    1e0e:	e1 f4       	brne	.+56     	; 0x1e48 <_ZL8check_fsP5FATFSm+0x66>
    1e10:	e8 5c       	subi	r30, 0xC8	; 200
    1e12:	f1 40       	sbci	r31, 0x01	; 1
    1e14:	80 81       	ld	r24, Z
    1e16:	91 81       	ldd	r25, Z+1	; 0x01
    1e18:	a2 81       	ldd	r26, Z+2	; 0x02
    1e1a:	b3 81       	ldd	r27, Z+3	; 0x03
    1e1c:	bb 27       	eor	r27, r27
    1e1e:	86 34       	cpi	r24, 0x46	; 70
    1e20:	91 44       	sbci	r25, 0x41	; 65
    1e22:	a4 45       	sbci	r26, 0x54	; 84
    1e24:	b1 05       	cpc	r27, r1
    1e26:	91 f0       	breq	.+36     	; 0x1e4c <_ZL8check_fsP5FATFSm+0x6a>
    1e28:	cc 57       	subi	r28, 0x7C	; 124
    1e2a:	df 4f       	sbci	r29, 0xFF	; 255
    1e2c:	88 81       	ld	r24, Y
    1e2e:	99 81       	ldd	r25, Y+1	; 0x01
    1e30:	aa 81       	ldd	r26, Y+2	; 0x02
    1e32:	bb 81       	ldd	r27, Y+3	; 0x03
    1e34:	bb 27       	eor	r27, r27
    1e36:	86 34       	cpi	r24, 0x46	; 70
    1e38:	91 44       	sbci	r25, 0x41	; 65
    1e3a:	a4 45       	sbci	r26, 0x54	; 84
    1e3c:	b1 05       	cpc	r27, r1
    1e3e:	41 f4       	brne	.+16     	; 0x1e50 <_ZL8check_fsP5FATFSm+0x6e>
    1e40:	80 e0       	ldi	r24, 0x00	; 0
    1e42:	07 c0       	rjmp	.+14     	; 0x1e52 <_ZL8check_fsP5FATFSm+0x70>
    1e44:	83 e0       	ldi	r24, 0x03	; 3
    1e46:	05 c0       	rjmp	.+10     	; 0x1e52 <_ZL8check_fsP5FATFSm+0x70>
    1e48:	82 e0       	ldi	r24, 0x02	; 2
    1e4a:	03 c0       	rjmp	.+6      	; 0x1e52 <_ZL8check_fsP5FATFSm+0x70>
    1e4c:	80 e0       	ldi	r24, 0x00	; 0
    1e4e:	01 c0       	rjmp	.+2      	; 0x1e52 <_ZL8check_fsP5FATFSm+0x70>
    1e50:	81 e0       	ldi	r24, 0x01	; 1
    1e52:	df 91       	pop	r29
    1e54:	cf 91       	pop	r28
    1e56:	0f 91       	pop	r16
    1e58:	08 95       	ret

00001e5a <_ZL11sync_windowP5FATFS>:
    1e5a:	8f 92       	push	r8
    1e5c:	9f 92       	push	r9
    1e5e:	af 92       	push	r10
    1e60:	bf 92       	push	r11
    1e62:	cf 92       	push	r12
    1e64:	df 92       	push	r13
    1e66:	ef 92       	push	r14
    1e68:	ff 92       	push	r15
    1e6a:	0f 93       	push	r16
    1e6c:	cf 93       	push	r28
    1e6e:	df 93       	push	r29
    1e70:	fc 01       	movw	r30, r24
    1e72:	24 81       	ldd	r18, Z+4	; 0x04
    1e74:	22 23       	and	r18, r18
    1e76:	09 f4       	brne	.+2      	; 0x1e7a <_ZL11sync_windowP5FATFS+0x20>
    1e78:	42 c0       	rjmp	.+132    	; 0x1efe <_ZL11sync_windowP5FATFS+0xa4>
    1e7a:	ec 01       	movw	r28, r24
    1e7c:	c6 a4       	ldd	r12, Z+46	; 0x2e
    1e7e:	d7 a4       	ldd	r13, Z+47	; 0x2f
    1e80:	e0 a8       	ldd	r14, Z+48	; 0x30
    1e82:	f1 a8       	ldd	r15, Z+49	; 0x31
    1e84:	4c 01       	movw	r8, r24
    1e86:	f2 e3       	ldi	r31, 0x32	; 50
    1e88:	8f 0e       	add	r8, r31
    1e8a:	91 1c       	adc	r9, r1
    1e8c:	01 e0       	ldi	r16, 0x01	; 1
    1e8e:	a7 01       	movw	r20, r14
    1e90:	96 01       	movw	r18, r12
    1e92:	b4 01       	movw	r22, r8
    1e94:	89 81       	ldd	r24, Y+1	; 0x01
    1e96:	0e 94 a4 21 	call	0x4348	; 0x4348 <disk_write>
    1e9a:	81 11       	cpse	r24, r1
    1e9c:	32 c0       	rjmp	.+100    	; 0x1f02 <_ZL11sync_windowP5FATFS+0xa8>
    1e9e:	1c 82       	std	Y+4, r1	; 0x04
    1ea0:	8a a1       	ldd	r24, Y+34	; 0x22
    1ea2:	9b a1       	ldd	r25, Y+35	; 0x23
    1ea4:	ac a1       	ldd	r26, Y+36	; 0x24
    1ea6:	bd a1       	ldd	r27, Y+37	; 0x25
    1ea8:	c8 16       	cp	r12, r24
    1eaa:	d9 06       	cpc	r13, r25
    1eac:	ea 06       	cpc	r14, r26
    1eae:	fb 06       	cpc	r15, r27
    1eb0:	50 f1       	brcs	.+84     	; 0x1f06 <_ZL11sync_windowP5FATFS+0xac>
    1eb2:	4a 8d       	ldd	r20, Y+26	; 0x1a
    1eb4:	5b 8d       	ldd	r21, Y+27	; 0x1b
    1eb6:	6c 8d       	ldd	r22, Y+28	; 0x1c
    1eb8:	7d 8d       	ldd	r23, Y+29	; 0x1d
    1eba:	84 0f       	add	r24, r20
    1ebc:	95 1f       	adc	r25, r21
    1ebe:	a6 1f       	adc	r26, r22
    1ec0:	b7 1f       	adc	r27, r23
    1ec2:	c8 16       	cp	r12, r24
    1ec4:	d9 06       	cpc	r13, r25
    1ec6:	ea 06       	cpc	r14, r26
    1ec8:	fb 06       	cpc	r15, r27
    1eca:	f8 f4       	brcc	.+62     	; 0x1f0a <_ZL11sync_windowP5FATFS+0xb0>
    1ecc:	ab 80       	ldd	r10, Y+3	; 0x03
    1ece:	b1 2c       	mov	r11, r1
    1ed0:	82 e0       	ldi	r24, 0x02	; 2
    1ed2:	a8 16       	cp	r10, r24
    1ed4:	b1 04       	cpc	r11, r1
    1ed6:	d8 f0       	brcs	.+54     	; 0x1f0e <_ZL11sync_windowP5FATFS+0xb4>
    1ed8:	8a 8d       	ldd	r24, Y+26	; 0x1a
    1eda:	9b 8d       	ldd	r25, Y+27	; 0x1b
    1edc:	ac 8d       	ldd	r26, Y+28	; 0x1c
    1ede:	bd 8d       	ldd	r27, Y+29	; 0x1d
    1ee0:	c8 0e       	add	r12, r24
    1ee2:	d9 1e       	adc	r13, r25
    1ee4:	ea 1e       	adc	r14, r26
    1ee6:	fb 1e       	adc	r15, r27
    1ee8:	01 e0       	ldi	r16, 0x01	; 1
    1eea:	a7 01       	movw	r20, r14
    1eec:	96 01       	movw	r18, r12
    1eee:	b4 01       	movw	r22, r8
    1ef0:	89 81       	ldd	r24, Y+1	; 0x01
    1ef2:	0e 94 a4 21 	call	0x4348	; 0x4348 <disk_write>
    1ef6:	e1 e0       	ldi	r30, 0x01	; 1
    1ef8:	ae 1a       	sub	r10, r30
    1efa:	b1 08       	sbc	r11, r1
    1efc:	e9 cf       	rjmp	.-46     	; 0x1ed0 <_ZL11sync_windowP5FATFS+0x76>
    1efe:	80 e0       	ldi	r24, 0x00	; 0
    1f00:	07 c0       	rjmp	.+14     	; 0x1f10 <_ZL11sync_windowP5FATFS+0xb6>
    1f02:	81 e0       	ldi	r24, 0x01	; 1
    1f04:	05 c0       	rjmp	.+10     	; 0x1f10 <_ZL11sync_windowP5FATFS+0xb6>
    1f06:	80 e0       	ldi	r24, 0x00	; 0
    1f08:	03 c0       	rjmp	.+6      	; 0x1f10 <_ZL11sync_windowP5FATFS+0xb6>
    1f0a:	80 e0       	ldi	r24, 0x00	; 0
    1f0c:	01 c0       	rjmp	.+2      	; 0x1f10 <_ZL11sync_windowP5FATFS+0xb6>
    1f0e:	80 e0       	ldi	r24, 0x00	; 0
    1f10:	df 91       	pop	r29
    1f12:	cf 91       	pop	r28
    1f14:	0f 91       	pop	r16
    1f16:	ff 90       	pop	r15
    1f18:	ef 90       	pop	r14
    1f1a:	df 90       	pop	r13
    1f1c:	cf 90       	pop	r12
    1f1e:	bf 90       	pop	r11
    1f20:	af 90       	pop	r10
    1f22:	9f 90       	pop	r9
    1f24:	8f 90       	pop	r8
    1f26:	08 95       	ret

00001f28 <_ZL11move_windowP5FATFSm>:
    1f28:	cf 92       	push	r12
    1f2a:	df 92       	push	r13
    1f2c:	ef 92       	push	r14
    1f2e:	ff 92       	push	r15
    1f30:	0f 93       	push	r16
    1f32:	1f 93       	push	r17
    1f34:	cf 93       	push	r28
    1f36:	df 93       	push	r29
    1f38:	fc 01       	movw	r30, r24
    1f3a:	c6 a4       	ldd	r12, Z+46	; 0x2e
    1f3c:	d7 a4       	ldd	r13, Z+47	; 0x2f
    1f3e:	e0 a8       	ldd	r14, Z+48	; 0x30
    1f40:	f1 a8       	ldd	r15, Z+49	; 0x31
    1f42:	c4 16       	cp	r12, r20
    1f44:	d5 06       	cpc	r13, r21
    1f46:	e6 06       	cpc	r14, r22
    1f48:	f7 06       	cpc	r15, r23
    1f4a:	b9 f0       	breq	.+46     	; 0x1f7a <_ZL11move_windowP5FATFSm+0x52>
    1f4c:	6a 01       	movw	r12, r20
    1f4e:	7b 01       	movw	r14, r22
    1f50:	ec 01       	movw	r28, r24
    1f52:	83 df       	rcall	.-250    	; 0x1e5a <_ZL11sync_windowP5FATFS>
    1f54:	18 2f       	mov	r17, r24
    1f56:	81 11       	cpse	r24, r1
    1f58:	12 c0       	rjmp	.+36     	; 0x1f7e <_ZL11move_windowP5FATFSm+0x56>
    1f5a:	01 e0       	ldi	r16, 0x01	; 1
    1f5c:	a7 01       	movw	r20, r14
    1f5e:	96 01       	movw	r18, r12
    1f60:	be 01       	movw	r22, r28
    1f62:	6e 5c       	subi	r22, 0xCE	; 206
    1f64:	7f 4f       	sbci	r23, 0xFF	; 255
    1f66:	89 81       	ldd	r24, Y+1	; 0x01
    1f68:	0e 94 4e 21 	call	0x429c	; 0x429c <disk_read>
    1f6c:	81 11       	cpse	r24, r1
    1f6e:	09 c0       	rjmp	.+18     	; 0x1f82 <_ZL11move_windowP5FATFSm+0x5a>
    1f70:	ce a6       	std	Y+46, r12	; 0x2e
    1f72:	df a6       	std	Y+47, r13	; 0x2f
    1f74:	e8 aa       	std	Y+48, r14	; 0x30
    1f76:	f9 aa       	std	Y+49, r15	; 0x31
    1f78:	05 c0       	rjmp	.+10     	; 0x1f84 <_ZL11move_windowP5FATFSm+0x5c>
    1f7a:	10 e0       	ldi	r17, 0x00	; 0
    1f7c:	03 c0       	rjmp	.+6      	; 0x1f84 <_ZL11move_windowP5FATFSm+0x5c>
    1f7e:	11 e0       	ldi	r17, 0x01	; 1
    1f80:	01 c0       	rjmp	.+2      	; 0x1f84 <_ZL11move_windowP5FATFSm+0x5c>
    1f82:	11 e0       	ldi	r17, 0x01	; 1
    1f84:	81 2f       	mov	r24, r17
    1f86:	df 91       	pop	r29
    1f88:	cf 91       	pop	r28
    1f8a:	1f 91       	pop	r17
    1f8c:	0f 91       	pop	r16
    1f8e:	ff 90       	pop	r15
    1f90:	ef 90       	pop	r14
    1f92:	df 90       	pop	r13
    1f94:	cf 90       	pop	r12
    1f96:	08 95       	ret

00001f98 <_ZL8validatePv>:
    1f98:	00 97       	sbiw	r24, 0x00	; 0
    1f9a:	c9 f0       	breq	.+50     	; 0x1fce <_ZL8validatePv+0x36>
    1f9c:	dc 01       	movw	r26, r24
    1f9e:	ed 91       	ld	r30, X+
    1fa0:	fc 91       	ld	r31, X
    1fa2:	11 97       	sbiw	r26, 0x01	; 1
    1fa4:	30 97       	sbiw	r30, 0x00	; 0
    1fa6:	a9 f0       	breq	.+42     	; 0x1fd2 <_ZL8validatePv+0x3a>
    1fa8:	20 81       	ld	r18, Z
    1faa:	22 23       	and	r18, r18
    1fac:	a1 f0       	breq	.+40     	; 0x1fd6 <_ZL8validatePv+0x3e>
    1fae:	26 81       	ldd	r18, Z+6	; 0x06
    1fb0:	37 81       	ldd	r19, Z+7	; 0x07
    1fb2:	12 96       	adiw	r26, 0x02	; 2
    1fb4:	8d 91       	ld	r24, X+
    1fb6:	9c 91       	ld	r25, X
    1fb8:	13 97       	sbiw	r26, 0x03	; 3
    1fba:	28 17       	cp	r18, r24
    1fbc:	39 07       	cpc	r19, r25
    1fbe:	69 f4       	brne	.+26     	; 0x1fda <_ZL8validatePv+0x42>
    1fc0:	81 81       	ldd	r24, Z+1	; 0x01
    1fc2:	0e 94 77 20 	call	0x40ee	; 0x40ee <disk_status>
    1fc6:	80 ff       	sbrs	r24, 0
    1fc8:	0a c0       	rjmp	.+20     	; 0x1fde <_ZL8validatePv+0x46>
    1fca:	83 e0       	ldi	r24, 0x03	; 3
    1fcc:	08 95       	ret
    1fce:	89 e0       	ldi	r24, 0x09	; 9
    1fd0:	08 95       	ret
    1fd2:	89 e0       	ldi	r24, 0x09	; 9
    1fd4:	08 95       	ret
    1fd6:	89 e0       	ldi	r24, 0x09	; 9
    1fd8:	08 95       	ret
    1fda:	89 e0       	ldi	r24, 0x09	; 9
    1fdc:	08 95       	ret
    1fde:	80 e0       	ldi	r24, 0x00	; 0
    1fe0:	08 95       	ret

00001fe2 <_ZL11chk_mountedPPKcPP5FATFSh>:
    1fe2:	2f 92       	push	r2
    1fe4:	3f 92       	push	r3
    1fe6:	4f 92       	push	r4
    1fe8:	5f 92       	push	r5
    1fea:	6f 92       	push	r6
    1fec:	7f 92       	push	r7
    1fee:	8f 92       	push	r8
    1ff0:	9f 92       	push	r9
    1ff2:	af 92       	push	r10
    1ff4:	bf 92       	push	r11
    1ff6:	cf 92       	push	r12
    1ff8:	df 92       	push	r13
    1ffa:	ef 92       	push	r14
    1ffc:	ff 92       	push	r15
    1ffe:	0f 93       	push	r16
    2000:	1f 93       	push	r17
    2002:	cf 93       	push	r28
    2004:	df 93       	push	r29
    2006:	cd b7       	in	r28, 0x3d	; 61
    2008:	de b7       	in	r29, 0x3e	; 62
    200a:	2e 97       	sbiw	r28, 0x0e	; 14
    200c:	0f b6       	in	r0, 0x3f	; 63
    200e:	f8 94       	cli
    2010:	de bf       	out	0x3e, r29	; 62
    2012:	0f be       	out	0x3f, r0	; 63
    2014:	cd bf       	out	0x3d, r28	; 61
    2016:	dc 01       	movw	r26, r24
    2018:	ed 91       	ld	r30, X+
    201a:	fc 91       	ld	r31, X
    201c:	e0 80       	ld	r14, Z
    201e:	f1 2c       	mov	r15, r1
    2020:	b0 e3       	ldi	r27, 0x30	; 48
    2022:	eb 1a       	sub	r14, r27
    2024:	f1 08       	sbc	r15, r1
    2026:	2a e0       	ldi	r18, 0x0A	; 10
    2028:	e2 16       	cp	r14, r18
    202a:	f1 04       	cpc	r15, r1
    202c:	40 f4       	brcc	.+16     	; 0x203e <_ZL11chk_mountedPPKcPP5FATFSh+0x5c>
    202e:	21 81       	ldd	r18, Z+1	; 0x01
    2030:	2a 33       	cpi	r18, 0x3A	; 58
    2032:	41 f4       	brne	.+16     	; 0x2044 <_ZL11chk_mountedPPKcPP5FATFSh+0x62>
    2034:	32 96       	adiw	r30, 0x02	; 2
    2036:	dc 01       	movw	r26, r24
    2038:	ed 93       	st	X+, r30
    203a:	fc 93       	st	X, r31
    203c:	05 c0       	rjmp	.+10     	; 0x2048 <_ZL11chk_mountedPPKcPP5FATFSh+0x66>
    203e:	e1 2c       	mov	r14, r1
    2040:	f1 2c       	mov	r15, r1
    2042:	02 c0       	rjmp	.+4      	; 0x2048 <_ZL11chk_mountedPPKcPP5FATFSh+0x66>
    2044:	e1 2c       	mov	r14, r1
    2046:	f1 2c       	mov	r15, r1
    2048:	fb 01       	movw	r30, r22
    204a:	11 82       	std	Z+1, r1	; 0x01
    204c:	10 82       	st	Z, r1
    204e:	e1 14       	cp	r14, r1
    2050:	f1 04       	cpc	r15, r1
    2052:	09 f0       	breq	.+2      	; 0x2056 <_ZL11chk_mountedPPKcPP5FATFSh+0x74>
    2054:	2a c2       	rjmp	.+1108   	; 0x24aa <_ZL11chk_mountedPPKcPP5FATFSh+0x4c8>
    2056:	f7 01       	movw	r30, r14
    2058:	ee 0f       	add	r30, r30
    205a:	ff 1f       	adc	r31, r31
    205c:	e8 51       	subi	r30, 0x18	; 24
    205e:	fc 4f       	sbci	r31, 0xFC	; 252
    2060:	80 80       	ld	r8, Z
    2062:	91 80       	ldd	r9, Z+1	; 0x01
    2064:	9e 86       	std	Y+14, r9	; 0x0e
    2066:	8d 86       	std	Y+13, r8	; 0x0d
    2068:	81 14       	cp	r8, r1
    206a:	91 04       	cpc	r9, r1
    206c:	09 f4       	brne	.+2      	; 0x2070 <_ZL11chk_mountedPPKcPP5FATFSh+0x8e>
    206e:	1f c2       	rjmp	.+1086   	; 0x24ae <_ZL11chk_mountedPPKcPP5FATFSh+0x4cc>
    2070:	14 2f       	mov	r17, r20
    2072:	fb 01       	movw	r30, r22
    2074:	91 82       	std	Z+1, r9	; 0x01
    2076:	80 82       	st	Z, r8
    2078:	d4 01       	movw	r26, r8
    207a:	8c 91       	ld	r24, X
    207c:	88 23       	and	r24, r24
    207e:	69 f0       	breq	.+26     	; 0x209a <_ZL11chk_mountedPPKcPP5FATFSh+0xb8>
    2080:	11 96       	adiw	r26, 0x01	; 1
    2082:	8c 91       	ld	r24, X
    2084:	0e 94 77 20 	call	0x40ee	; 0x40ee <disk_status>
    2088:	80 fd       	sbrc	r24, 0
    208a:	07 c0       	rjmp	.+14     	; 0x209a <_ZL11chk_mountedPPKcPP5FATFSh+0xb8>
    208c:	11 23       	and	r17, r17
    208e:	09 f4       	brne	.+2      	; 0x2092 <_ZL11chk_mountedPPKcPP5FATFSh+0xb0>
    2090:	10 c2       	rjmp	.+1056   	; 0x24b2 <_ZL11chk_mountedPPKcPP5FATFSh+0x4d0>
    2092:	82 fd       	sbrc	r24, 2
    2094:	10 c2       	rjmp	.+1056   	; 0x24b6 <_ZL11chk_mountedPPKcPP5FATFSh+0x4d4>
    2096:	80 e0       	ldi	r24, 0x00	; 0
    2098:	2d c2       	rjmp	.+1114   	; 0x24f4 <_ZL11chk_mountedPPKcPP5FATFSh+0x512>
    209a:	ed 85       	ldd	r30, Y+13	; 0x0d
    209c:	fe 85       	ldd	r31, Y+14	; 0x0e
    209e:	10 82       	st	Z, r1
    20a0:	e1 82       	std	Z+1, r14	; 0x01
    20a2:	8e 2d       	mov	r24, r14
    20a4:	0e 94 7e 20 	call	0x40fc	; 0x40fc <disk_initialize>
    20a8:	80 fd       	sbrc	r24, 0
    20aa:	07 c2       	rjmp	.+1038   	; 0x24ba <_ZL11chk_mountedPPKcPP5FATFSh+0x4d8>
    20ac:	11 23       	and	r17, r17
    20ae:	11 f0       	breq	.+4      	; 0x20b4 <_ZL11chk_mountedPPKcPP5FATFSh+0xd2>
    20b0:	82 fd       	sbrc	r24, 2
    20b2:	05 c2       	rjmp	.+1034   	; 0x24be <_ZL11chk_mountedPPKcPP5FATFSh+0x4dc>
    20b4:	40 e0       	ldi	r20, 0x00	; 0
    20b6:	50 e0       	ldi	r21, 0x00	; 0
    20b8:	ba 01       	movw	r22, r20
    20ba:	8d 85       	ldd	r24, Y+13	; 0x0d
    20bc:	9e 85       	ldd	r25, Y+14	; 0x0e
    20be:	91 de       	rcall	.-734    	; 0x1de2 <_ZL8check_fsP5FATFSm>
    20c0:	81 30       	cpi	r24, 0x01	; 1
    20c2:	89 f4       	brne	.+34     	; 0x20e6 <_ZL11chk_mountedPPKcPP5FATFSh+0x104>
    20c4:	ed 85       	ldd	r30, Y+13	; 0x0d
    20c6:	fe 85       	ldd	r31, Y+14	; 0x0e
    20c8:	e0 51       	subi	r30, 0x10	; 16
    20ca:	fe 4f       	sbci	r31, 0xFE	; 254
    20cc:	94 81       	ldd	r25, Z+4	; 0x04
    20ce:	99 23       	and	r25, r25
    20d0:	71 f0       	breq	.+28     	; 0x20ee <_ZL11chk_mountedPPKcPP5FATFSh+0x10c>
    20d2:	c0 84       	ldd	r12, Z+8	; 0x08
    20d4:	d1 84       	ldd	r13, Z+9	; 0x09
    20d6:	e2 84       	ldd	r14, Z+10	; 0x0a
    20d8:	f3 84       	ldd	r15, Z+11	; 0x0b
    20da:	b7 01       	movw	r22, r14
    20dc:	a6 01       	movw	r20, r12
    20de:	8d 85       	ldd	r24, Y+13	; 0x0d
    20e0:	9e 85       	ldd	r25, Y+14	; 0x0e
    20e2:	7f de       	rcall	.-770    	; 0x1de2 <_ZL8check_fsP5FATFSm>
    20e4:	07 c0       	rjmp	.+14     	; 0x20f4 <_ZL11chk_mountedPPKcPP5FATFSh+0x112>
    20e6:	c1 2c       	mov	r12, r1
    20e8:	d1 2c       	mov	r13, r1
    20ea:	76 01       	movw	r14, r12
    20ec:	03 c0       	rjmp	.+6      	; 0x20f4 <_ZL11chk_mountedPPKcPP5FATFSh+0x112>
    20ee:	c1 2c       	mov	r12, r1
    20f0:	d1 2c       	mov	r13, r1
    20f2:	76 01       	movw	r14, r12
    20f4:	83 30       	cpi	r24, 0x03	; 3
    20f6:	09 f4       	brne	.+2      	; 0x20fa <_ZL11chk_mountedPPKcPP5FATFSh+0x118>
    20f8:	e4 c1       	rjmp	.+968    	; 0x24c2 <_ZL11chk_mountedPPKcPP5FATFSh+0x4e0>
    20fa:	81 11       	cpse	r24, r1
    20fc:	e4 c1       	rjmp	.+968    	; 0x24c6 <_ZL11chk_mountedPPKcPP5FATFSh+0x4e4>
    20fe:	ad 85       	ldd	r26, Y+13	; 0x0d
    2100:	be 85       	ldd	r27, Y+14	; 0x0e
    2102:	dd 96       	adiw	r26, 0x3d	; 61
    2104:	8d 91       	ld	r24, X+
    2106:	9c 91       	ld	r25, X
    2108:	de 97       	sbiw	r26, 0x3e	; 62
    210a:	81 15       	cp	r24, r1
    210c:	92 40       	sbci	r25, 0x02	; 2
    210e:	09 f0       	breq	.+2      	; 0x2112 <_ZL11chk_mountedPPKcPP5FATFSh+0x130>
    2110:	dc c1       	rjmp	.+952    	; 0x24ca <_ZL11chk_mountedPPKcPP5FATFSh+0x4e8>
    2112:	ed 85       	ldd	r30, Y+13	; 0x0d
    2114:	fe 85       	ldd	r31, Y+14	; 0x0e
    2116:	e8 5b       	subi	r30, 0xB8	; 184
    2118:	ff 4f       	sbci	r31, 0xFF	; 255
    211a:	80 81       	ld	r24, Z
    211c:	91 81       	ldd	r25, Z+1	; 0x01
    211e:	2c 01       	movw	r4, r24
    2120:	61 2c       	mov	r6, r1
    2122:	71 2c       	mov	r7, r1
    2124:	41 14       	cp	r4, r1
    2126:	51 04       	cpc	r5, r1
    2128:	61 04       	cpc	r6, r1
    212a:	71 04       	cpc	r7, r1
    212c:	41 f4       	brne	.+16     	; 0x213e <_ZL11chk_mountedPPKcPP5FATFSh+0x15c>
    212e:	ed 85       	ldd	r30, Y+13	; 0x0d
    2130:	fe 85       	ldd	r31, Y+14	; 0x0e
    2132:	ea 5a       	subi	r30, 0xAA	; 170
    2134:	ff 4f       	sbci	r31, 0xFF	; 255
    2136:	40 80       	ld	r4, Z
    2138:	51 80       	ldd	r5, Z+1	; 0x01
    213a:	62 80       	ldd	r6, Z+2	; 0x02
    213c:	73 80       	ldd	r7, Z+3	; 0x03
    213e:	ed 85       	ldd	r30, Y+13	; 0x0d
    2140:	fe 85       	ldd	r31, Y+14	; 0x0e
    2142:	42 8e       	std	Z+26, r4	; 0x1a
    2144:	53 8e       	std	Z+27, r5	; 0x1b
    2146:	64 8e       	std	Z+28, r6	; 0x1c
    2148:	75 8e       	std	Z+29, r7	; 0x1d
    214a:	ee 5b       	subi	r30, 0xBE	; 190
    214c:	ff 4f       	sbci	r31, 0xFF	; 255
    214e:	a0 81       	ld	r26, Z
    2150:	ed 85       	ldd	r30, Y+13	; 0x0d
    2152:	fe 85       	ldd	r31, Y+14	; 0x0e
    2154:	a3 83       	std	Z+3, r26	; 0x03
    2156:	8f ef       	ldi	r24, 0xFF	; 255
    2158:	8a 0f       	add	r24, r26
    215a:	82 30       	cpi	r24, 0x02	; 2
    215c:	08 f0       	brcs	.+2      	; 0x2160 <_ZL11chk_mountedPPKcPP5FATFSh+0x17e>
    215e:	b7 c1       	rjmp	.+878    	; 0x24ce <_ZL11chk_mountedPPKcPP5FATFSh+0x4ec>
    2160:	b0 e0       	ldi	r27, 0x00	; 0
    2162:	a3 01       	movw	r20, r6
    2164:	92 01       	movw	r18, r4
    2166:	0e 94 ed 22 	call	0x45da	; 0x45da <__muluhisi3>
    216a:	6d 83       	std	Y+5, r22	; 0x05
    216c:	7e 83       	std	Y+6, r23	; 0x06
    216e:	8f 83       	std	Y+7, r24	; 0x07
    2170:	98 87       	std	Y+8, r25	; 0x08
    2172:	27 ad       	ldd	r18, Z+63	; 0x3f
    2174:	22 83       	std	Z+2, r18	; 0x02
    2176:	22 23       	and	r18, r18
    2178:	09 f4       	brne	.+2      	; 0x217c <_ZL11chk_mountedPPKcPP5FATFSh+0x19a>
    217a:	ab c1       	rjmp	.+854    	; 0x24d2 <_ZL11chk_mountedPPKcPP5FATFSh+0x4f0>
    217c:	42 2f       	mov	r20, r18
    217e:	50 e0       	ldi	r21, 0x00	; 0
    2180:	ca 01       	movw	r24, r20
    2182:	01 97       	sbiw	r24, 0x01	; 1
    2184:	84 23       	and	r24, r20
    2186:	95 23       	and	r25, r21
    2188:	89 2b       	or	r24, r25
    218a:	09 f0       	breq	.+2      	; 0x218e <_ZL11chk_mountedPPKcPP5FATFSh+0x1ac>
    218c:	a4 c1       	rjmp	.+840    	; 0x24d6 <_ZL11chk_mountedPPKcPP5FATFSh+0x4f4>
    218e:	ed 5b       	subi	r30, 0xBD	; 189
    2190:	ff 4f       	sbci	r31, 0xFF	; 255
    2192:	20 80       	ld	r2, Z
    2194:	31 80       	ldd	r3, Z+1	; 0x01
    2196:	ad 85       	ldd	r26, Y+13	; 0x0d
    2198:	be 85       	ldd	r27, Y+14	; 0x0e
    219a:	19 96       	adiw	r26, 0x09	; 9
    219c:	3c 92       	st	X, r3
    219e:	2e 92       	st	-X, r2
    21a0:	18 97       	sbiw	r26, 0x08	; 8
    21a2:	c1 01       	movw	r24, r2
    21a4:	8f 70       	andi	r24, 0x0F	; 15
    21a6:	99 27       	eor	r25, r25
    21a8:	89 2b       	or	r24, r25
    21aa:	09 f0       	breq	.+2      	; 0x21ae <_ZL11chk_mountedPPKcPP5FATFSh+0x1cc>
    21ac:	96 c1       	rjmp	.+812    	; 0x24da <_ZL11chk_mountedPPKcPP5FATFSh+0x4f8>
    21ae:	fd 01       	movw	r30, r26
    21b0:	eb 5b       	subi	r30, 0xBB	; 187
    21b2:	ff 4f       	sbci	r31, 0xFF	; 255
    21b4:	60 81       	ld	r22, Z
    21b6:	71 81       	ldd	r23, Z+1	; 0x01
    21b8:	cb 01       	movw	r24, r22
    21ba:	a0 e0       	ldi	r26, 0x00	; 0
    21bc:	b0 e0       	ldi	r27, 0x00	; 0
    21be:	00 97       	sbiw	r24, 0x00	; 0
    21c0:	a1 05       	cpc	r26, r1
    21c2:	b1 05       	cpc	r27, r1
    21c4:	41 f4       	brne	.+16     	; 0x21d6 <_ZL11chk_mountedPPKcPP5FATFSh+0x1f4>
    21c6:	ed 85       	ldd	r30, Y+13	; 0x0d
    21c8:	fe 85       	ldd	r31, Y+14	; 0x0e
    21ca:	ee 5a       	subi	r30, 0xAE	; 174
    21cc:	ff 4f       	sbci	r31, 0xFF	; 255
    21ce:	80 81       	ld	r24, Z
    21d0:	91 81       	ldd	r25, Z+1	; 0x01
    21d2:	a2 81       	ldd	r26, Z+2	; 0x02
    21d4:	b3 81       	ldd	r27, Z+3	; 0x03
    21d6:	ed 85       	ldd	r30, Y+13	; 0x0d
    21d8:	fe 85       	ldd	r31, Y+14	; 0x0e
    21da:	e0 5c       	subi	r30, 0xC0	; 192
    21dc:	ff 4f       	sbci	r31, 0xFF	; 255
    21de:	40 81       	ld	r20, Z
    21e0:	51 81       	ldd	r21, Z+1	; 0x01
    21e2:	41 15       	cp	r20, r1
    21e4:	51 05       	cpc	r21, r1
    21e6:	09 f4       	brne	.+2      	; 0x21ea <_ZL11chk_mountedPPKcPP5FATFSh+0x208>
    21e8:	7a c1       	rjmp	.+756    	; 0x24de <_ZL11chk_mountedPPKcPP5FATFSh+0x4fc>
    21ea:	4a 01       	movw	r8, r20
    21ec:	a1 2c       	mov	r10, r1
    21ee:	b1 2c       	mov	r11, r1
    21f0:	89 86       	std	Y+9, r8	; 0x09
    21f2:	9a 86       	std	Y+10, r9	; 0x0a
    21f4:	ab 86       	std	Y+11, r10	; 0x0b
    21f6:	bc 86       	std	Y+12, r11	; 0x0c
    21f8:	8d 80       	ldd	r8, Y+5	; 0x05
    21fa:	9e 80       	ldd	r9, Y+6	; 0x06
    21fc:	af 80       	ldd	r10, Y+7	; 0x07
    21fe:	b8 84       	ldd	r11, Y+8	; 0x08
    2200:	49 85       	ldd	r20, Y+9	; 0x09
    2202:	5a 85       	ldd	r21, Y+10	; 0x0a
    2204:	6b 85       	ldd	r22, Y+11	; 0x0b
    2206:	7c 85       	ldd	r23, Y+12	; 0x0c
    2208:	84 0e       	add	r8, r20
    220a:	95 1e       	adc	r9, r21
    220c:	a6 1e       	adc	r10, r22
    220e:	b7 1e       	adc	r11, r23
    2210:	f1 01       	movw	r30, r2
    2212:	f2 95       	swap	r31
    2214:	e2 95       	swap	r30
    2216:	ef 70       	andi	r30, 0x0F	; 15
    2218:	ef 27       	eor	r30, r31
    221a:	ff 70       	andi	r31, 0x0F	; 15
    221c:	ef 27       	eor	r30, r31
    221e:	b5 01       	movw	r22, r10
    2220:	a4 01       	movw	r20, r8
    2222:	4e 0f       	add	r20, r30
    2224:	5f 1f       	adc	r21, r31
    2226:	61 1d       	adc	r22, r1
    2228:	71 1d       	adc	r23, r1
    222a:	49 83       	std	Y+1, r20	; 0x01
    222c:	5a 83       	std	Y+2, r21	; 0x02
    222e:	6b 83       	std	Y+3, r22	; 0x03
    2230:	7c 83       	std	Y+4, r23	; 0x04
    2232:	84 17       	cp	r24, r20
    2234:	95 07       	cpc	r25, r21
    2236:	a6 07       	cpc	r26, r22
    2238:	b7 07       	cpc	r27, r23
    223a:	08 f4       	brcc	.+2      	; 0x223e <_ZL11chk_mountedPPKcPP5FATFSh+0x25c>
    223c:	52 c1       	rjmp	.+676    	; 0x24e2 <_ZL11chk_mountedPPKcPP5FATFSh+0x500>
    223e:	bc 01       	movw	r22, r24
    2240:	cd 01       	movw	r24, r26
    2242:	89 80       	ldd	r8, Y+1	; 0x01
    2244:	9a 80       	ldd	r9, Y+2	; 0x02
    2246:	ab 80       	ldd	r10, Y+3	; 0x03
    2248:	bc 80       	ldd	r11, Y+4	; 0x04
    224a:	68 19       	sub	r22, r8
    224c:	79 09       	sbc	r23, r9
    224e:	8a 09       	sbc	r24, r10
    2250:	9b 09       	sbc	r25, r11
    2252:	30 e0       	ldi	r19, 0x00	; 0
    2254:	40 e0       	ldi	r20, 0x00	; 0
    2256:	50 e0       	ldi	r21, 0x00	; 0
    2258:	0e 94 cb 22 	call	0x4596	; 0x4596 <__udivmodsi4>
    225c:	da 01       	movw	r26, r20
    225e:	c9 01       	movw	r24, r18
    2260:	21 15       	cp	r18, r1
    2262:	31 05       	cpc	r19, r1
    2264:	41 05       	cpc	r20, r1
    2266:	51 05       	cpc	r21, r1
    2268:	09 f4       	brne	.+2      	; 0x226c <_ZL11chk_mountedPPKcPP5FATFSh+0x28a>
    226a:	3d c1       	rjmp	.+634    	; 0x24e6 <_ZL11chk_mountedPPKcPP5FATFSh+0x504>
    226c:	26 3f       	cpi	r18, 0xF6	; 246
    226e:	6f e0       	ldi	r22, 0x0F	; 15
    2270:	36 07       	cpc	r19, r22
    2272:	41 05       	cpc	r20, r1
    2274:	51 05       	cpc	r21, r1
    2276:	10 f4       	brcc	.+4      	; 0x227c <_ZL11chk_mountedPPKcPP5FATFSh+0x29a>
    2278:	11 e0       	ldi	r17, 0x01	; 1
    227a:	01 c0       	rjmp	.+2      	; 0x227e <_ZL11chk_mountedPPKcPP5FATFSh+0x29c>
    227c:	12 e0       	ldi	r17, 0x02	; 2
    227e:	86 3f       	cpi	r24, 0xF6	; 246
    2280:	9f 4f       	sbci	r25, 0xFF	; 255
    2282:	a1 05       	cpc	r26, r1
    2284:	b1 05       	cpc	r27, r1
    2286:	08 f0       	brcs	.+2      	; 0x228a <_ZL11chk_mountedPPKcPP5FATFSh+0x2a8>
    2288:	13 e0       	ldi	r17, 0x03	; 3
    228a:	49 01       	movw	r8, r18
    228c:	5a 01       	movw	r10, r20
    228e:	82 e0       	ldi	r24, 0x02	; 2
    2290:	88 0e       	add	r8, r24
    2292:	91 1c       	adc	r9, r1
    2294:	a1 1c       	adc	r10, r1
    2296:	b1 1c       	adc	r11, r1
    2298:	ad 85       	ldd	r26, Y+13	; 0x0d
    229a:	be 85       	ldd	r27, Y+14	; 0x0e
    229c:	56 96       	adiw	r26, 0x16	; 22
    229e:	8d 92       	st	X+, r8
    22a0:	9d 92       	st	X+, r9
    22a2:	ad 92       	st	X+, r10
    22a4:	bc 92       	st	X, r11
    22a6:	59 97       	sbiw	r26, 0x19	; 25
    22a8:	fd 01       	movw	r30, r26
    22aa:	c6 8e       	std	Z+30, r12	; 0x1e
    22ac:	d7 8e       	std	Z+31, r13	; 0x1f
    22ae:	e0 a2       	std	Z+32, r14	; 0x20
    22b0:	f1 a2       	std	Z+33, r15	; 0x21
    22b2:	89 85       	ldd	r24, Y+9	; 0x09
    22b4:	9a 85       	ldd	r25, Y+10	; 0x0a
    22b6:	ab 85       	ldd	r26, Y+11	; 0x0b
    22b8:	bc 85       	ldd	r27, Y+12	; 0x0c
    22ba:	8c 0d       	add	r24, r12
    22bc:	9d 1d       	adc	r25, r13
    22be:	ae 1d       	adc	r26, r14
    22c0:	bf 1d       	adc	r27, r15
    22c2:	82 a3       	std	Z+34, r24	; 0x22
    22c4:	93 a3       	std	Z+35, r25	; 0x23
    22c6:	a4 a3       	std	Z+36, r26	; 0x24
    22c8:	b5 a3       	std	Z+37, r27	; 0x25
    22ca:	49 81       	ldd	r20, Y+1	; 0x01
    22cc:	5a 81       	ldd	r21, Y+2	; 0x02
    22ce:	6b 81       	ldd	r22, Y+3	; 0x03
    22d0:	7c 81       	ldd	r23, Y+4	; 0x04
    22d2:	4c 0d       	add	r20, r12
    22d4:	5d 1d       	adc	r21, r13
    22d6:	6e 1d       	adc	r22, r14
    22d8:	7f 1d       	adc	r23, r15
    22da:	42 a7       	std	Z+42, r20	; 0x2a
    22dc:	53 a7       	std	Z+43, r21	; 0x2b
    22de:	64 a7       	std	Z+44, r22	; 0x2c
    22e0:	75 a7       	std	Z+45, r23	; 0x2d
    22e2:	13 30       	cpi	r17, 0x03	; 3
    22e4:	c1 f4       	brne	.+48     	; 0x2316 <_ZL11chk_mountedPPKcPP5FATFSh+0x334>
    22e6:	23 28       	or	r2, r3
    22e8:	09 f0       	breq	.+2      	; 0x22ec <_ZL11chk_mountedPPKcPP5FATFSh+0x30a>
    22ea:	ff c0       	rjmp	.+510    	; 0x24ea <_ZL11chk_mountedPPKcPP5FATFSh+0x508>
    22ec:	e2 5a       	subi	r30, 0xA2	; 162
    22ee:	ff 4f       	sbci	r31, 0xFF	; 255
    22f0:	80 81       	ld	r24, Z
    22f2:	91 81       	ldd	r25, Z+1	; 0x01
    22f4:	a2 81       	ldd	r26, Z+2	; 0x02
    22f6:	b3 81       	ldd	r27, Z+3	; 0x03
    22f8:	ed 85       	ldd	r30, Y+13	; 0x0d
    22fa:	fe 85       	ldd	r31, Y+14	; 0x0e
    22fc:	86 a3       	std	Z+38, r24	; 0x26
    22fe:	97 a3       	std	Z+39, r25	; 0x27
    2300:	a0 a7       	std	Z+40, r26	; 0x28
    2302:	b1 a7       	std	Z+41, r27	; 0x29
    2304:	88 0c       	add	r8, r8
    2306:	99 1c       	adc	r9, r9
    2308:	aa 1c       	adc	r10, r10
    230a:	bb 1c       	adc	r11, r11
    230c:	88 0c       	add	r8, r8
    230e:	99 1c       	adc	r9, r9
    2310:	aa 1c       	adc	r10, r10
    2312:	bb 1c       	adc	r11, r11
    2314:	2d c0       	rjmp	.+90     	; 0x2370 <_ZL11chk_mountedPPKcPP5FATFSh+0x38e>
    2316:	23 28       	or	r2, r3
    2318:	09 f4       	brne	.+2      	; 0x231c <_ZL11chk_mountedPPKcPP5FATFSh+0x33a>
    231a:	e9 c0       	rjmp	.+466    	; 0x24ee <_ZL11chk_mountedPPKcPP5FATFSh+0x50c>
    231c:	2d 81       	ldd	r18, Y+5	; 0x05
    231e:	3e 81       	ldd	r19, Y+6	; 0x06
    2320:	4f 81       	ldd	r20, Y+7	; 0x07
    2322:	58 85       	ldd	r21, Y+8	; 0x08
    2324:	82 0f       	add	r24, r18
    2326:	93 1f       	adc	r25, r19
    2328:	a4 1f       	adc	r26, r20
    232a:	b5 1f       	adc	r27, r21
    232c:	ed 85       	ldd	r30, Y+13	; 0x0d
    232e:	fe 85       	ldd	r31, Y+14	; 0x0e
    2330:	86 a3       	std	Z+38, r24	; 0x26
    2332:	97 a3       	std	Z+39, r25	; 0x27
    2334:	a0 a7       	std	Z+40, r26	; 0x28
    2336:	b1 a7       	std	Z+41, r27	; 0x29
    2338:	12 30       	cpi	r17, 0x02	; 2
    233a:	29 f4       	brne	.+10     	; 0x2346 <_ZL11chk_mountedPPKcPP5FATFSh+0x364>
    233c:	88 0c       	add	r8, r8
    233e:	99 1c       	adc	r9, r9
    2340:	aa 1c       	adc	r10, r10
    2342:	bb 1c       	adc	r11, r11
    2344:	15 c0       	rjmp	.+42     	; 0x2370 <_ZL11chk_mountedPPKcPP5FATFSh+0x38e>
    2346:	a3 e0       	ldi	r26, 0x03	; 3
    2348:	b0 e0       	ldi	r27, 0x00	; 0
    234a:	a5 01       	movw	r20, r10
    234c:	94 01       	movw	r18, r8
    234e:	0e 94 ed 22 	call	0x45da	; 0x45da <__muluhisi3>
    2352:	dc 01       	movw	r26, r24
    2354:	cb 01       	movw	r24, r22
    2356:	b6 95       	lsr	r27
    2358:	a7 95       	ror	r26
    235a:	97 95       	ror	r25
    235c:	87 95       	ror	r24
    235e:	f1 e0       	ldi	r31, 0x01	; 1
    2360:	8f 22       	and	r8, r31
    2362:	99 24       	eor	r9, r9
    2364:	aa 24       	eor	r10, r10
    2366:	bb 24       	eor	r11, r11
    2368:	88 0e       	add	r8, r24
    236a:	99 1e       	adc	r9, r25
    236c:	aa 1e       	adc	r10, r26
    236e:	bb 1e       	adc	r11, r27
    2370:	2f ef       	ldi	r18, 0xFF	; 255
    2372:	82 0e       	add	r8, r18
    2374:	21 e0       	ldi	r18, 0x01	; 1
    2376:	92 1e       	adc	r9, r18
    2378:	a1 1c       	adc	r10, r1
    237a:	b1 1c       	adc	r11, r1
    237c:	07 2e       	mov	r0, r23
    237e:	79 e0       	ldi	r23, 0x09	; 9
    2380:	b6 94       	lsr	r11
    2382:	a7 94       	ror	r10
    2384:	97 94       	ror	r9
    2386:	87 94       	ror	r8
    2388:	7a 95       	dec	r23
    238a:	d1 f7       	brne	.-12     	; 0x2380 <_ZL11chk_mountedPPKcPP5FATFSh+0x39e>
    238c:	70 2d       	mov	r23, r0
    238e:	48 14       	cp	r4, r8
    2390:	59 04       	cpc	r5, r9
    2392:	6a 04       	cpc	r6, r10
    2394:	7b 04       	cpc	r7, r11
    2396:	08 f4       	brcc	.+2      	; 0x239a <_ZL11chk_mountedPPKcPP5FATFSh+0x3b8>
    2398:	ac c0       	rjmp	.+344    	; 0x24f2 <_ZL11chk_mountedPPKcPP5FATFSh+0x510>
    239a:	8f ef       	ldi	r24, 0xFF	; 255
    239c:	9f ef       	ldi	r25, 0xFF	; 255
    239e:	dc 01       	movw	r26, r24
    23a0:	ed 85       	ldd	r30, Y+13	; 0x0d
    23a2:	fe 85       	ldd	r31, Y+14	; 0x0e
    23a4:	86 87       	std	Z+14, r24	; 0x0e
    23a6:	97 87       	std	Z+15, r25	; 0x0f
    23a8:	a0 8b       	std	Z+16, r26	; 0x10
    23aa:	b1 8b       	std	Z+17, r27	; 0x11
    23ac:	df 01       	movw	r26, r30
    23ae:	12 86       	std	Z+10, r1	; 0x0a
    23b0:	13 86       	std	Z+11, r1	; 0x0b
    23b2:	14 86       	std	Z+12, r1	; 0x0c
    23b4:	15 86       	std	Z+13, r1	; 0x0d
    23b6:	13 30       	cpi	r17, 0x03	; 3
    23b8:	09 f0       	breq	.+2      	; 0x23bc <_ZL11chk_mountedPPKcPP5FATFSh+0x3da>
    23ba:	5f c0       	rjmp	.+190    	; 0x247a <_ZL11chk_mountedPPKcPP5FATFSh+0x498>
    23bc:	15 82       	std	Z+5, r1	; 0x05
    23be:	ee 59       	subi	r30, 0x9E	; 158
    23c0:	ff 4f       	sbci	r31, 0xFF	; 255
    23c2:	80 81       	ld	r24, Z
    23c4:	91 81       	ldd	r25, Z+1	; 0x01
    23c6:	a7 01       	movw	r20, r14
    23c8:	96 01       	movw	r18, r12
    23ca:	28 0f       	add	r18, r24
    23cc:	39 1f       	adc	r19, r25
    23ce:	41 1d       	adc	r20, r1
    23d0:	51 1d       	adc	r21, r1
    23d2:	fd 01       	movw	r30, r26
    23d4:	22 8b       	std	Z+18, r18	; 0x12
    23d6:	33 8b       	std	Z+19, r19	; 0x13
    23d8:	44 8b       	std	Z+20, r20	; 0x14
    23da:	55 8b       	std	Z+21, r21	; 0x15
    23dc:	01 e0       	ldi	r16, 0x01	; 1
    23de:	bd 01       	movw	r22, r26
    23e0:	6e 5c       	subi	r22, 0xCE	; 206
    23e2:	7f 4f       	sbci	r23, 0xFF	; 255
    23e4:	81 81       	ldd	r24, Z+1	; 0x01
    23e6:	0e 94 4e 21 	call	0x429c	; 0x429c <disk_read>
    23ea:	81 11       	cpse	r24, r1
    23ec:	23 c0       	rjmp	.+70     	; 0x2434 <_ZL11chk_mountedPPKcPP5FATFSh+0x452>
    23ee:	ed 85       	ldd	r30, Y+13	; 0x0d
    23f0:	fe 85       	ldd	r31, Y+14	; 0x0e
    23f2:	e0 5d       	subi	r30, 0xD0	; 208
    23f4:	fd 4f       	sbci	r31, 0xFD	; 253
    23f6:	80 81       	ld	r24, Z
    23f8:	91 81       	ldd	r25, Z+1	; 0x01
    23fa:	85 35       	cpi	r24, 0x55	; 85
    23fc:	9a 4a       	sbci	r25, 0xAA	; 170
    23fe:	e1 f4       	brne	.+56     	; 0x2438 <_ZL11chk_mountedPPKcPP5FATFSh+0x456>
    2400:	ed 85       	ldd	r30, Y+13	; 0x0d
    2402:	fe 85       	ldd	r31, Y+14	; 0x0e
    2404:	82 a9       	ldd	r24, Z+50	; 0x32
    2406:	93 a9       	ldd	r25, Z+51	; 0x33
    2408:	a4 a9       	ldd	r26, Z+52	; 0x34
    240a:	b5 a9       	ldd	r27, Z+53	; 0x35
    240c:	82 35       	cpi	r24, 0x52	; 82
    240e:	92 45       	sbci	r25, 0x52	; 82
    2410:	a1 46       	sbci	r26, 0x61	; 97
    2412:	b1 44       	sbci	r27, 0x41	; 65
    2414:	99 f4       	brne	.+38     	; 0x243c <_ZL11chk_mountedPPKcPP5FATFSh+0x45a>
    2416:	ed 85       	ldd	r30, Y+13	; 0x0d
    2418:	fe 85       	ldd	r31, Y+14	; 0x0e
    241a:	ea 5e       	subi	r30, 0xEA	; 234
    241c:	fd 4f       	sbci	r31, 0xFD	; 253
    241e:	80 81       	ld	r24, Z
    2420:	91 81       	ldd	r25, Z+1	; 0x01
    2422:	a2 81       	ldd	r26, Z+2	; 0x02
    2424:	b3 81       	ldd	r27, Z+3	; 0x03
    2426:	82 37       	cpi	r24, 0x72	; 114
    2428:	92 47       	sbci	r25, 0x72	; 114
    242a:	a1 44       	sbci	r26, 0x41	; 65
    242c:	b1 46       	sbci	r27, 0x61	; 97
    242e:	41 f0       	breq	.+16     	; 0x2440 <_ZL11chk_mountedPPKcPP5FATFSh+0x45e>
    2430:	80 e0       	ldi	r24, 0x00	; 0
    2432:	07 c0       	rjmp	.+14     	; 0x2442 <_ZL11chk_mountedPPKcPP5FATFSh+0x460>
    2434:	80 e0       	ldi	r24, 0x00	; 0
    2436:	05 c0       	rjmp	.+10     	; 0x2442 <_ZL11chk_mountedPPKcPP5FATFSh+0x460>
    2438:	80 e0       	ldi	r24, 0x00	; 0
    243a:	03 c0       	rjmp	.+6      	; 0x2442 <_ZL11chk_mountedPPKcPP5FATFSh+0x460>
    243c:	80 e0       	ldi	r24, 0x00	; 0
    243e:	01 c0       	rjmp	.+2      	; 0x2442 <_ZL11chk_mountedPPKcPP5FATFSh+0x460>
    2440:	81 e0       	ldi	r24, 0x01	; 1
    2442:	88 23       	and	r24, r24
    2444:	d1 f0       	breq	.+52     	; 0x247a <_ZL11chk_mountedPPKcPP5FATFSh+0x498>
    2446:	ed 85       	ldd	r30, Y+13	; 0x0d
    2448:	fe 85       	ldd	r31, Y+14	; 0x0e
    244a:	e2 5e       	subi	r30, 0xE2	; 226
    244c:	fd 4f       	sbci	r31, 0xFD	; 253
    244e:	80 81       	ld	r24, Z
    2450:	91 81       	ldd	r25, Z+1	; 0x01
    2452:	a2 81       	ldd	r26, Z+2	; 0x02
    2454:	b3 81       	ldd	r27, Z+3	; 0x03
    2456:	ed 85       	ldd	r30, Y+13	; 0x0d
    2458:	fe 85       	ldd	r31, Y+14	; 0x0e
    245a:	82 87       	std	Z+10, r24	; 0x0a
    245c:	93 87       	std	Z+11, r25	; 0x0b
    245e:	a4 87       	std	Z+12, r26	; 0x0c
    2460:	b5 87       	std	Z+13, r27	; 0x0d
    2462:	e6 5e       	subi	r30, 0xE6	; 230
    2464:	fd 4f       	sbci	r31, 0xFD	; 253
    2466:	80 81       	ld	r24, Z
    2468:	91 81       	ldd	r25, Z+1	; 0x01
    246a:	a2 81       	ldd	r26, Z+2	; 0x02
    246c:	b3 81       	ldd	r27, Z+3	; 0x03
    246e:	ed 85       	ldd	r30, Y+13	; 0x0d
    2470:	fe 85       	ldd	r31, Y+14	; 0x0e
    2472:	86 87       	std	Z+14, r24	; 0x0e
    2474:	97 87       	std	Z+15, r25	; 0x0f
    2476:	a0 8b       	std	Z+16, r26	; 0x10
    2478:	b1 8b       	std	Z+17, r27	; 0x11
    247a:	ad 85       	ldd	r26, Y+13	; 0x0d
    247c:	be 85       	ldd	r27, Y+14	; 0x0e
    247e:	1c 93       	st	X, r17
    2480:	80 91 e6 03 	lds	r24, 0x03E6	; 0x8003e6 <_ZL4Fsid>
    2484:	90 91 e7 03 	lds	r25, 0x03E7	; 0x8003e7 <_ZL4Fsid+0x1>
    2488:	01 96       	adiw	r24, 0x01	; 1
    248a:	90 93 e7 03 	sts	0x03E7, r25	; 0x8003e7 <_ZL4Fsid+0x1>
    248e:	80 93 e6 03 	sts	0x03E6, r24	; 0x8003e6 <_ZL4Fsid>
    2492:	17 96       	adiw	r26, 0x07	; 7
    2494:	9c 93       	st	X, r25
    2496:	8e 93       	st	-X, r24
    2498:	16 97       	sbiw	r26, 0x06	; 6
    249a:	fd 01       	movw	r30, r26
    249c:	16 a6       	std	Z+46, r1	; 0x2e
    249e:	17 a6       	std	Z+47, r1	; 0x2f
    24a0:	10 aa       	std	Z+48, r1	; 0x30
    24a2:	11 aa       	std	Z+49, r1	; 0x31
    24a4:	14 82       	std	Z+4, r1	; 0x04
    24a6:	80 e0       	ldi	r24, 0x00	; 0
    24a8:	25 c0       	rjmp	.+74     	; 0x24f4 <_ZL11chk_mountedPPKcPP5FATFSh+0x512>
    24aa:	8b e0       	ldi	r24, 0x0B	; 11
    24ac:	23 c0       	rjmp	.+70     	; 0x24f4 <_ZL11chk_mountedPPKcPP5FATFSh+0x512>
    24ae:	8c e0       	ldi	r24, 0x0C	; 12
    24b0:	21 c0       	rjmp	.+66     	; 0x24f4 <_ZL11chk_mountedPPKcPP5FATFSh+0x512>
    24b2:	80 e0       	ldi	r24, 0x00	; 0
    24b4:	1f c0       	rjmp	.+62     	; 0x24f4 <_ZL11chk_mountedPPKcPP5FATFSh+0x512>
    24b6:	8a e0       	ldi	r24, 0x0A	; 10
    24b8:	1d c0       	rjmp	.+58     	; 0x24f4 <_ZL11chk_mountedPPKcPP5FATFSh+0x512>
    24ba:	83 e0       	ldi	r24, 0x03	; 3
    24bc:	1b c0       	rjmp	.+54     	; 0x24f4 <_ZL11chk_mountedPPKcPP5FATFSh+0x512>
    24be:	8a e0       	ldi	r24, 0x0A	; 10
    24c0:	19 c0       	rjmp	.+50     	; 0x24f4 <_ZL11chk_mountedPPKcPP5FATFSh+0x512>
    24c2:	81 e0       	ldi	r24, 0x01	; 1
    24c4:	17 c0       	rjmp	.+46     	; 0x24f4 <_ZL11chk_mountedPPKcPP5FATFSh+0x512>
    24c6:	8d e0       	ldi	r24, 0x0D	; 13
    24c8:	15 c0       	rjmp	.+42     	; 0x24f4 <_ZL11chk_mountedPPKcPP5FATFSh+0x512>
    24ca:	8d e0       	ldi	r24, 0x0D	; 13
    24cc:	13 c0       	rjmp	.+38     	; 0x24f4 <_ZL11chk_mountedPPKcPP5FATFSh+0x512>
    24ce:	8d e0       	ldi	r24, 0x0D	; 13
    24d0:	11 c0       	rjmp	.+34     	; 0x24f4 <_ZL11chk_mountedPPKcPP5FATFSh+0x512>
    24d2:	8d e0       	ldi	r24, 0x0D	; 13
    24d4:	0f c0       	rjmp	.+30     	; 0x24f4 <_ZL11chk_mountedPPKcPP5FATFSh+0x512>
    24d6:	8d e0       	ldi	r24, 0x0D	; 13
    24d8:	0d c0       	rjmp	.+26     	; 0x24f4 <_ZL11chk_mountedPPKcPP5FATFSh+0x512>
    24da:	8d e0       	ldi	r24, 0x0D	; 13
    24dc:	0b c0       	rjmp	.+22     	; 0x24f4 <_ZL11chk_mountedPPKcPP5FATFSh+0x512>
    24de:	8d e0       	ldi	r24, 0x0D	; 13
    24e0:	09 c0       	rjmp	.+18     	; 0x24f4 <_ZL11chk_mountedPPKcPP5FATFSh+0x512>
    24e2:	8d e0       	ldi	r24, 0x0D	; 13
    24e4:	07 c0       	rjmp	.+14     	; 0x24f4 <_ZL11chk_mountedPPKcPP5FATFSh+0x512>
    24e6:	8d e0       	ldi	r24, 0x0D	; 13
    24e8:	05 c0       	rjmp	.+10     	; 0x24f4 <_ZL11chk_mountedPPKcPP5FATFSh+0x512>
    24ea:	8d e0       	ldi	r24, 0x0D	; 13
    24ec:	03 c0       	rjmp	.+6      	; 0x24f4 <_ZL11chk_mountedPPKcPP5FATFSh+0x512>
    24ee:	8d e0       	ldi	r24, 0x0D	; 13
    24f0:	01 c0       	rjmp	.+2      	; 0x24f4 <_ZL11chk_mountedPPKcPP5FATFSh+0x512>
    24f2:	8d e0       	ldi	r24, 0x0D	; 13
    24f4:	2e 96       	adiw	r28, 0x0e	; 14
    24f6:	0f b6       	in	r0, 0x3f	; 63
    24f8:	f8 94       	cli
    24fa:	de bf       	out	0x3e, r29	; 62
    24fc:	0f be       	out	0x3f, r0	; 63
    24fe:	cd bf       	out	0x3d, r28	; 61
    2500:	df 91       	pop	r29
    2502:	cf 91       	pop	r28
    2504:	1f 91       	pop	r17
    2506:	0f 91       	pop	r16
    2508:	ff 90       	pop	r15
    250a:	ef 90       	pop	r14
    250c:	df 90       	pop	r13
    250e:	cf 90       	pop	r12
    2510:	bf 90       	pop	r11
    2512:	af 90       	pop	r10
    2514:	9f 90       	pop	r9
    2516:	8f 90       	pop	r8
    2518:	7f 90       	pop	r7
    251a:	6f 90       	pop	r6
    251c:	5f 90       	pop	r5
    251e:	4f 90       	pop	r4
    2520:	3f 90       	pop	r3
    2522:	2f 90       	pop	r2
    2524:	08 95       	ret

00002526 <_ZL7sync_fsP5FATFS>:
    2526:	ef 92       	push	r14
    2528:	ff 92       	push	r15
    252a:	0f 93       	push	r16
    252c:	1f 93       	push	r17
    252e:	cf 93       	push	r28
    2530:	df 93       	push	r29
    2532:	ec 01       	movw	r28, r24
    2534:	92 dc       	rcall	.-1756   	; 0x1e5a <_ZL11sync_windowP5FATFS>
    2536:	18 2f       	mov	r17, r24
    2538:	81 11       	cpse	r24, r1
    253a:	52 c0       	rjmp	.+164    	; 0x25e0 <_ZL7sync_fsP5FATFS+0xba>
    253c:	88 81       	ld	r24, Y
    253e:	83 30       	cpi	r24, 0x03	; 3
    2540:	09 f0       	breq	.+2      	; 0x2544 <_ZL7sync_fsP5FATFS+0x1e>
    2542:	46 c0       	rjmp	.+140    	; 0x25d0 <_ZL7sync_fsP5FATFS+0xaa>
    2544:	8d 81       	ldd	r24, Y+5	; 0x05
    2546:	88 23       	and	r24, r24
    2548:	09 f4       	brne	.+2      	; 0x254c <_ZL7sync_fsP5FATFS+0x26>
    254a:	42 c0       	rjmp	.+132    	; 0x25d0 <_ZL7sync_fsP5FATFS+0xaa>
    254c:	1e a6       	std	Y+46, r1	; 0x2e
    254e:	1f a6       	std	Y+47, r1	; 0x2f
    2550:	18 aa       	std	Y+48, r1	; 0x30
    2552:	19 aa       	std	Y+49, r1	; 0x31
    2554:	40 e0       	ldi	r20, 0x00	; 0
    2556:	52 e0       	ldi	r21, 0x02	; 2
    2558:	60 e0       	ldi	r22, 0x00	; 0
    255a:	70 e0       	ldi	r23, 0x00	; 0
    255c:	7e 01       	movw	r14, r28
    255e:	82 e3       	ldi	r24, 0x32	; 50
    2560:	e8 0e       	add	r14, r24
    2562:	f1 1c       	adc	r15, r1
    2564:	c7 01       	movw	r24, r14
    2566:	25 db       	rcall	.-2486   	; 0x1bb2 <_ZL7mem_setPvij>
    2568:	85 e5       	ldi	r24, 0x55	; 85
    256a:	9a ea       	ldi	r25, 0xAA	; 170
    256c:	fe 01       	movw	r30, r28
    256e:	e0 5d       	subi	r30, 0xD0	; 208
    2570:	fd 4f       	sbci	r31, 0xFD	; 253
    2572:	91 83       	std	Z+1, r25	; 0x01
    2574:	80 83       	st	Z, r24
    2576:	82 e5       	ldi	r24, 0x52	; 82
    2578:	92 e5       	ldi	r25, 0x52	; 82
    257a:	a1 e6       	ldi	r26, 0x61	; 97
    257c:	b1 e4       	ldi	r27, 0x41	; 65
    257e:	8a ab       	std	Y+50, r24	; 0x32
    2580:	9b ab       	std	Y+51, r25	; 0x33
    2582:	ac ab       	std	Y+52, r26	; 0x34
    2584:	bd ab       	std	Y+53, r27	; 0x35
    2586:	82 e7       	ldi	r24, 0x72	; 114
    2588:	92 e7       	ldi	r25, 0x72	; 114
    258a:	a1 e4       	ldi	r26, 0x41	; 65
    258c:	b1 e6       	ldi	r27, 0x61	; 97
    258e:	7a 97       	sbiw	r30, 0x1a	; 26
    2590:	80 83       	st	Z, r24
    2592:	91 83       	std	Z+1, r25	; 0x01
    2594:	a2 83       	std	Z+2, r26	; 0x02
    2596:	b3 83       	std	Z+3, r27	; 0x03
    2598:	8e 85       	ldd	r24, Y+14	; 0x0e
    259a:	9f 85       	ldd	r25, Y+15	; 0x0f
    259c:	a8 89       	ldd	r26, Y+16	; 0x10
    259e:	b9 89       	ldd	r27, Y+17	; 0x11
    25a0:	34 96       	adiw	r30, 0x04	; 4
    25a2:	80 83       	st	Z, r24
    25a4:	91 83       	std	Z+1, r25	; 0x01
    25a6:	a2 83       	std	Z+2, r26	; 0x02
    25a8:	b3 83       	std	Z+3, r27	; 0x03
    25aa:	8a 85       	ldd	r24, Y+10	; 0x0a
    25ac:	9b 85       	ldd	r25, Y+11	; 0x0b
    25ae:	ac 85       	ldd	r26, Y+12	; 0x0c
    25b0:	bd 85       	ldd	r27, Y+13	; 0x0d
    25b2:	34 96       	adiw	r30, 0x04	; 4
    25b4:	80 83       	st	Z, r24
    25b6:	91 83       	std	Z+1, r25	; 0x01
    25b8:	a2 83       	std	Z+2, r26	; 0x02
    25ba:	b3 83       	std	Z+3, r27	; 0x03
    25bc:	2a 89       	ldd	r18, Y+18	; 0x12
    25be:	3b 89       	ldd	r19, Y+19	; 0x13
    25c0:	4c 89       	ldd	r20, Y+20	; 0x14
    25c2:	5d 89       	ldd	r21, Y+21	; 0x15
    25c4:	01 e0       	ldi	r16, 0x01	; 1
    25c6:	b7 01       	movw	r22, r14
    25c8:	89 81       	ldd	r24, Y+1	; 0x01
    25ca:	0e 94 a4 21 	call	0x4348	; 0x4348 <disk_write>
    25ce:	1d 82       	std	Y+5, r1	; 0x05
    25d0:	40 e0       	ldi	r20, 0x00	; 0
    25d2:	50 e0       	ldi	r21, 0x00	; 0
    25d4:	60 e0       	ldi	r22, 0x00	; 0
    25d6:	89 81       	ldd	r24, Y+1	; 0x01
    25d8:	0e 94 03 22 	call	0x4406	; 0x4406 <disk_ioctl>
    25dc:	81 11       	cpse	r24, r1
    25de:	11 e0       	ldi	r17, 0x01	; 1
    25e0:	81 2f       	mov	r24, r17
    25e2:	df 91       	pop	r29
    25e4:	cf 91       	pop	r28
    25e6:	1f 91       	pop	r17
    25e8:	0f 91       	pop	r16
    25ea:	ff 90       	pop	r15
    25ec:	ef 90       	pop	r14
    25ee:	08 95       	ret

000025f0 <_Z10clust2sectP5FATFSm>:
    25f0:	0f 93       	push	r16
    25f2:	1f 93       	push	r17
    25f4:	fc 01       	movw	r30, r24
    25f6:	9a 01       	movw	r18, r20
    25f8:	ab 01       	movw	r20, r22
    25fa:	22 50       	subi	r18, 0x02	; 2
    25fc:	31 09       	sbc	r19, r1
    25fe:	41 09       	sbc	r20, r1
    2600:	51 09       	sbc	r21, r1
    2602:	86 89       	ldd	r24, Z+22	; 0x16
    2604:	97 89       	ldd	r25, Z+23	; 0x17
    2606:	a0 8d       	ldd	r26, Z+24	; 0x18
    2608:	b1 8d       	ldd	r27, Z+25	; 0x19
    260a:	02 97       	sbiw	r24, 0x02	; 2
    260c:	a1 09       	sbc	r26, r1
    260e:	b1 09       	sbc	r27, r1
    2610:	28 17       	cp	r18, r24
    2612:	39 07       	cpc	r19, r25
    2614:	4a 07       	cpc	r20, r26
    2616:	5b 07       	cpc	r21, r27
    2618:	68 f4       	brcc	.+26     	; 0x2634 <_Z10clust2sectP5FATFSm+0x44>
    261a:	a2 81       	ldd	r26, Z+2	; 0x02
    261c:	b0 e0       	ldi	r27, 0x00	; 0
    261e:	0e 94 ed 22 	call	0x45da	; 0x45da <__muluhisi3>
    2622:	02 a5       	ldd	r16, Z+42	; 0x2a
    2624:	13 a5       	ldd	r17, Z+43	; 0x2b
    2626:	24 a5       	ldd	r18, Z+44	; 0x2c
    2628:	35 a5       	ldd	r19, Z+45	; 0x2d
    262a:	60 0f       	add	r22, r16
    262c:	71 1f       	adc	r23, r17
    262e:	82 1f       	adc	r24, r18
    2630:	93 1f       	adc	r25, r19
    2632:	03 c0       	rjmp	.+6      	; 0x263a <_Z10clust2sectP5FATFSm+0x4a>
    2634:	60 e0       	ldi	r22, 0x00	; 0
    2636:	70 e0       	ldi	r23, 0x00	; 0
    2638:	cb 01       	movw	r24, r22
    263a:	1f 91       	pop	r17
    263c:	0f 91       	pop	r16
    263e:	08 95       	ret

00002640 <_Z7get_fatP5FATFSm>:
    2640:	af 92       	push	r10
    2642:	bf 92       	push	r11
    2644:	cf 92       	push	r12
    2646:	df 92       	push	r13
    2648:	ef 92       	push	r14
    264a:	ff 92       	push	r15
    264c:	0f 93       	push	r16
    264e:	1f 93       	push	r17
    2650:	cf 93       	push	r28
    2652:	df 93       	push	r29
    2654:	42 30       	cpi	r20, 0x02	; 2
    2656:	51 05       	cpc	r21, r1
    2658:	61 05       	cpc	r22, r1
    265a:	71 05       	cpc	r23, r1
    265c:	08 f4       	brcc	.+2      	; 0x2660 <_Z7get_fatP5FATFSm+0x20>
    265e:	b2 c0       	rjmp	.+356    	; 0x27c4 <_Z7get_fatP5FATFSm+0x184>
    2660:	fc 01       	movw	r30, r24
    2662:	06 89       	ldd	r16, Z+22	; 0x16
    2664:	17 89       	ldd	r17, Z+23	; 0x17
    2666:	20 8d       	ldd	r18, Z+24	; 0x18
    2668:	31 8d       	ldd	r19, Z+25	; 0x19
    266a:	40 17       	cp	r20, r16
    266c:	51 07       	cpc	r21, r17
    266e:	62 07       	cpc	r22, r18
    2670:	73 07       	cpc	r23, r19
    2672:	08 f0       	brcs	.+2      	; 0x2676 <_Z7get_fatP5FATFSm+0x36>
    2674:	ac c0       	rjmp	.+344    	; 0x27ce <_Z7get_fatP5FATFSm+0x18e>
    2676:	6a 01       	movw	r12, r20
    2678:	7b 01       	movw	r14, r22
    267a:	ec 01       	movw	r28, r24
    267c:	80 81       	ld	r24, Z
    267e:	82 30       	cpi	r24, 0x02	; 2
    2680:	09 f4       	brne	.+2      	; 0x2684 <_Z7get_fatP5FATFSm+0x44>
    2682:	4d c0       	rjmp	.+154    	; 0x271e <_Z7get_fatP5FATFSm+0xde>
    2684:	83 30       	cpi	r24, 0x03	; 3
    2686:	09 f4       	brne	.+2      	; 0x268a <_Z7get_fatP5FATFSm+0x4a>
    2688:	6d c0       	rjmp	.+218    	; 0x2764 <_Z7get_fatP5FATFSm+0x124>
    268a:	81 30       	cpi	r24, 0x01	; 1
    268c:	09 f0       	breq	.+2      	; 0x2690 <_Z7get_fatP5FATFSm+0x50>
    268e:	a4 c0       	rjmp	.+328    	; 0x27d8 <_Z7get_fatP5FATFSm+0x198>
    2690:	5a 01       	movw	r10, r20
    2692:	b6 94       	lsr	r11
    2694:	a7 94       	ror	r10
    2696:	a4 0e       	add	r10, r20
    2698:	b5 1e       	adc	r11, r21
    269a:	42 a1       	ldd	r20, Z+34	; 0x22
    269c:	53 a1       	ldd	r21, Z+35	; 0x23
    269e:	64 a1       	ldd	r22, Z+36	; 0x24
    26a0:	75 a1       	ldd	r23, Z+37	; 0x25
    26a2:	c5 01       	movw	r24, r10
    26a4:	89 2f       	mov	r24, r25
    26a6:	99 27       	eor	r25, r25
    26a8:	86 95       	lsr	r24
    26aa:	48 0f       	add	r20, r24
    26ac:	59 1f       	adc	r21, r25
    26ae:	61 1d       	adc	r22, r1
    26b0:	71 1d       	adc	r23, r1
    26b2:	cf 01       	movw	r24, r30
    26b4:	39 dc       	rcall	.-1934   	; 0x1f28 <_ZL11move_windowP5FATFSm>
    26b6:	81 11       	cpse	r24, r1
    26b8:	93 c0       	rjmp	.+294    	; 0x27e0 <_Z7get_fatP5FATFSm+0x1a0>
    26ba:	f5 01       	movw	r30, r10
    26bc:	f1 70       	andi	r31, 0x01	; 1
    26be:	ec 0f       	add	r30, r28
    26c0:	fd 1f       	adc	r31, r29
    26c2:	02 a9       	ldd	r16, Z+50	; 0x32
    26c4:	10 e0       	ldi	r17, 0x00	; 0
    26c6:	ff ef       	ldi	r31, 0xFF	; 255
    26c8:	af 1a       	sub	r10, r31
    26ca:	bf 0a       	sbc	r11, r31
    26cc:	4a a1       	ldd	r20, Y+34	; 0x22
    26ce:	5b a1       	ldd	r21, Y+35	; 0x23
    26d0:	6c a1       	ldd	r22, Y+36	; 0x24
    26d2:	7d a1       	ldd	r23, Y+37	; 0x25
    26d4:	c5 01       	movw	r24, r10
    26d6:	89 2f       	mov	r24, r25
    26d8:	99 27       	eor	r25, r25
    26da:	86 95       	lsr	r24
    26dc:	48 0f       	add	r20, r24
    26de:	59 1f       	adc	r21, r25
    26e0:	61 1d       	adc	r22, r1
    26e2:	71 1d       	adc	r23, r1
    26e4:	ce 01       	movw	r24, r28
    26e6:	20 dc       	rcall	.-1984   	; 0x1f28 <_ZL11move_windowP5FATFSm>
    26e8:	81 11       	cpse	r24, r1
    26ea:	7e c0       	rjmp	.+252    	; 0x27e8 <_Z7get_fatP5FATFSm+0x1a8>
    26ec:	81 e0       	ldi	r24, 0x01	; 1
    26ee:	b8 22       	and	r11, r24
    26f0:	ca 0d       	add	r28, r10
    26f2:	db 1d       	adc	r29, r11
    26f4:	6a a9       	ldd	r22, Y+50	; 0x32
    26f6:	70 e0       	ldi	r23, 0x00	; 0
    26f8:	76 2f       	mov	r23, r22
    26fa:	66 27       	eor	r22, r22
    26fc:	60 2b       	or	r22, r16
    26fe:	71 2b       	or	r23, r17
    2700:	c0 fe       	sbrs	r12, 0
    2702:	09 c0       	rjmp	.+18     	; 0x2716 <_Z7get_fatP5FATFSm+0xd6>
    2704:	72 95       	swap	r23
    2706:	62 95       	swap	r22
    2708:	6f 70       	andi	r22, 0x0F	; 15
    270a:	67 27       	eor	r22, r23
    270c:	7f 70       	andi	r23, 0x0F	; 15
    270e:	67 27       	eor	r22, r23
    2710:	80 e0       	ldi	r24, 0x00	; 0
    2712:	90 e0       	ldi	r25, 0x00	; 0
    2714:	74 c0       	rjmp	.+232    	; 0x27fe <_Z7get_fatP5FATFSm+0x1be>
    2716:	7f 70       	andi	r23, 0x0F	; 15
    2718:	80 e0       	ldi	r24, 0x00	; 0
    271a:	90 e0       	ldi	r25, 0x00	; 0
    271c:	70 c0       	rjmp	.+224    	; 0x27fe <_Z7get_fatP5FATFSm+0x1be>
    271e:	42 a1       	ldd	r20, Z+34	; 0x22
    2720:	53 a1       	ldd	r21, Z+35	; 0x23
    2722:	64 a1       	ldd	r22, Z+36	; 0x24
    2724:	75 a1       	ldd	r23, Z+37	; 0x25
    2726:	bb 27       	eor	r27, r27
    2728:	af 2d       	mov	r26, r15
    272a:	9e 2d       	mov	r25, r14
    272c:	8d 2d       	mov	r24, r13
    272e:	48 0f       	add	r20, r24
    2730:	59 1f       	adc	r21, r25
    2732:	6a 1f       	adc	r22, r26
    2734:	7b 1f       	adc	r23, r27
    2736:	cf 01       	movw	r24, r30
    2738:	f7 db       	rcall	.-2066   	; 0x1f28 <_ZL11move_windowP5FATFSm>
    273a:	81 11       	cpse	r24, r1
    273c:	59 c0       	rjmp	.+178    	; 0x27f0 <_Z7get_fatP5FATFSm+0x1b0>
    273e:	b7 01       	movw	r22, r14
    2740:	a6 01       	movw	r20, r12
    2742:	44 0f       	add	r20, r20
    2744:	55 1f       	adc	r21, r21
    2746:	66 1f       	adc	r22, r22
    2748:	77 1f       	adc	r23, r23
    274a:	4e 7f       	andi	r20, 0xFE	; 254
    274c:	51 70       	andi	r21, 0x01	; 1
    274e:	66 27       	eor	r22, r22
    2750:	77 27       	eor	r23, r23
    2752:	4e 5c       	subi	r20, 0xCE	; 206
    2754:	5f 4f       	sbci	r21, 0xFF	; 255
    2756:	c4 0f       	add	r28, r20
    2758:	d5 1f       	adc	r29, r21
    275a:	68 81       	ld	r22, Y
    275c:	79 81       	ldd	r23, Y+1	; 0x01
    275e:	80 e0       	ldi	r24, 0x00	; 0
    2760:	90 e0       	ldi	r25, 0x00	; 0
    2762:	4d c0       	rjmp	.+154    	; 0x27fe <_Z7get_fatP5FATFSm+0x1be>
    2764:	42 a1       	ldd	r20, Z+34	; 0x22
    2766:	53 a1       	ldd	r21, Z+35	; 0x23
    2768:	64 a1       	ldd	r22, Z+36	; 0x24
    276a:	75 a1       	ldd	r23, Z+37	; 0x25
    276c:	d7 01       	movw	r26, r14
    276e:	c6 01       	movw	r24, r12
    2770:	68 94       	set
    2772:	16 f8       	bld	r1, 6
    2774:	b6 95       	lsr	r27
    2776:	a7 95       	ror	r26
    2778:	97 95       	ror	r25
    277a:	87 95       	ror	r24
    277c:	16 94       	lsr	r1
    277e:	d1 f7       	brne	.-12     	; 0x2774 <_Z7get_fatP5FATFSm+0x134>
    2780:	48 0f       	add	r20, r24
    2782:	59 1f       	adc	r21, r25
    2784:	6a 1f       	adc	r22, r26
    2786:	7b 1f       	adc	r23, r27
    2788:	cf 01       	movw	r24, r30
    278a:	ce db       	rcall	.-2148   	; 0x1f28 <_ZL11move_windowP5FATFSm>
    278c:	81 11       	cpse	r24, r1
    278e:	34 c0       	rjmp	.+104    	; 0x27f8 <_Z7get_fatP5FATFSm+0x1b8>
    2790:	b7 01       	movw	r22, r14
    2792:	a6 01       	movw	r20, r12
    2794:	44 0f       	add	r20, r20
    2796:	55 1f       	adc	r21, r21
    2798:	66 1f       	adc	r22, r22
    279a:	77 1f       	adc	r23, r23
    279c:	44 0f       	add	r20, r20
    279e:	55 1f       	adc	r21, r21
    27a0:	66 1f       	adc	r22, r22
    27a2:	77 1f       	adc	r23, r23
    27a4:	4c 7f       	andi	r20, 0xFC	; 252
    27a6:	51 70       	andi	r21, 0x01	; 1
    27a8:	66 27       	eor	r22, r22
    27aa:	77 27       	eor	r23, r23
    27ac:	4e 5c       	subi	r20, 0xCE	; 206
    27ae:	5f 4f       	sbci	r21, 0xFF	; 255
    27b0:	c4 0f       	add	r28, r20
    27b2:	d5 1f       	adc	r29, r21
    27b4:	88 81       	ld	r24, Y
    27b6:	99 81       	ldd	r25, Y+1	; 0x01
    27b8:	aa 81       	ldd	r26, Y+2	; 0x02
    27ba:	bb 81       	ldd	r27, Y+3	; 0x03
    27bc:	bc 01       	movw	r22, r24
    27be:	cd 01       	movw	r24, r26
    27c0:	9f 70       	andi	r25, 0x0F	; 15
    27c2:	1d c0       	rjmp	.+58     	; 0x27fe <_Z7get_fatP5FATFSm+0x1be>
    27c4:	61 e0       	ldi	r22, 0x01	; 1
    27c6:	70 e0       	ldi	r23, 0x00	; 0
    27c8:	80 e0       	ldi	r24, 0x00	; 0
    27ca:	90 e0       	ldi	r25, 0x00	; 0
    27cc:	18 c0       	rjmp	.+48     	; 0x27fe <_Z7get_fatP5FATFSm+0x1be>
    27ce:	61 e0       	ldi	r22, 0x01	; 1
    27d0:	70 e0       	ldi	r23, 0x00	; 0
    27d2:	80 e0       	ldi	r24, 0x00	; 0
    27d4:	90 e0       	ldi	r25, 0x00	; 0
    27d6:	13 c0       	rjmp	.+38     	; 0x27fe <_Z7get_fatP5FATFSm+0x1be>
    27d8:	6f ef       	ldi	r22, 0xFF	; 255
    27da:	7f ef       	ldi	r23, 0xFF	; 255
    27dc:	cb 01       	movw	r24, r22
    27de:	0f c0       	rjmp	.+30     	; 0x27fe <_Z7get_fatP5FATFSm+0x1be>
    27e0:	6f ef       	ldi	r22, 0xFF	; 255
    27e2:	7f ef       	ldi	r23, 0xFF	; 255
    27e4:	cb 01       	movw	r24, r22
    27e6:	0b c0       	rjmp	.+22     	; 0x27fe <_Z7get_fatP5FATFSm+0x1be>
    27e8:	6f ef       	ldi	r22, 0xFF	; 255
    27ea:	7f ef       	ldi	r23, 0xFF	; 255
    27ec:	cb 01       	movw	r24, r22
    27ee:	07 c0       	rjmp	.+14     	; 0x27fe <_Z7get_fatP5FATFSm+0x1be>
    27f0:	6f ef       	ldi	r22, 0xFF	; 255
    27f2:	7f ef       	ldi	r23, 0xFF	; 255
    27f4:	cb 01       	movw	r24, r22
    27f6:	03 c0       	rjmp	.+6      	; 0x27fe <_Z7get_fatP5FATFSm+0x1be>
    27f8:	6f ef       	ldi	r22, 0xFF	; 255
    27fa:	7f ef       	ldi	r23, 0xFF	; 255
    27fc:	cb 01       	movw	r24, r22
    27fe:	df 91       	pop	r29
    2800:	cf 91       	pop	r28
    2802:	1f 91       	pop	r17
    2804:	0f 91       	pop	r16
    2806:	ff 90       	pop	r15
    2808:	ef 90       	pop	r14
    280a:	df 90       	pop	r13
    280c:	cf 90       	pop	r12
    280e:	bf 90       	pop	r11
    2810:	af 90       	pop	r10
    2812:	08 95       	ret

00002814 <_ZL7dir_sdiP3DIRt>:
    2814:	ef 92       	push	r14
    2816:	ff 92       	push	r15
    2818:	0f 93       	push	r16
    281a:	1f 93       	push	r17
    281c:	cf 93       	push	r28
    281e:	df 93       	push	r29
    2820:	ec 01       	movw	r28, r24
    2822:	8b 01       	movw	r16, r22
    2824:	7d 83       	std	Y+5, r23	; 0x05
    2826:	6c 83       	std	Y+4, r22	; 0x04
    2828:	4e 81       	ldd	r20, Y+6	; 0x06
    282a:	5f 81       	ldd	r21, Y+7	; 0x07
    282c:	68 85       	ldd	r22, Y+8	; 0x08
    282e:	79 85       	ldd	r23, Y+9	; 0x09
    2830:	41 30       	cpi	r20, 0x01	; 1
    2832:	51 05       	cpc	r21, r1
    2834:	61 05       	cpc	r22, r1
    2836:	71 05       	cpc	r23, r1
    2838:	09 f4       	brne	.+2      	; 0x283c <_ZL7dir_sdiP3DIRt+0x28>
    283a:	91 c0       	rjmp	.+290    	; 0x295e <_ZL7dir_sdiP3DIRt+0x14a>
    283c:	e8 81       	ld	r30, Y
    283e:	f9 81       	ldd	r31, Y+1	; 0x01
    2840:	86 89       	ldd	r24, Z+22	; 0x16
    2842:	97 89       	ldd	r25, Z+23	; 0x17
    2844:	a0 8d       	ldd	r26, Z+24	; 0x18
    2846:	b1 8d       	ldd	r27, Z+25	; 0x19
    2848:	48 17       	cp	r20, r24
    284a:	59 07       	cpc	r21, r25
    284c:	6a 07       	cpc	r22, r26
    284e:	7b 07       	cpc	r23, r27
    2850:	08 f0       	brcs	.+2      	; 0x2854 <_ZL7dir_sdiP3DIRt+0x40>
    2852:	87 c0       	rjmp	.+270    	; 0x2962 <_ZL7dir_sdiP3DIRt+0x14e>
    2854:	41 15       	cp	r20, r1
    2856:	51 05       	cpc	r21, r1
    2858:	61 05       	cpc	r22, r1
    285a:	71 05       	cpc	r23, r1
    285c:	39 f4       	brne	.+14     	; 0x286c <_ZL7dir_sdiP3DIRt+0x58>
    285e:	80 81       	ld	r24, Z
    2860:	83 30       	cpi	r24, 0x03	; 3
    2862:	21 f4       	brne	.+8      	; 0x286c <_ZL7dir_sdiP3DIRt+0x58>
    2864:	46 a1       	ldd	r20, Z+38	; 0x26
    2866:	57 a1       	ldd	r21, Z+39	; 0x27
    2868:	60 a5       	ldd	r22, Z+40	; 0x28
    286a:	71 a5       	ldd	r23, Z+41	; 0x29
    286c:	41 15       	cp	r20, r1
    286e:	51 05       	cpc	r21, r1
    2870:	61 05       	cpc	r22, r1
    2872:	71 05       	cpc	r23, r1
    2874:	f1 f4       	brne	.+60     	; 0x28b2 <_ZL7dir_sdiP3DIRt+0x9e>
    2876:	4a 87       	std	Y+10, r20	; 0x0a
    2878:	5b 87       	std	Y+11, r21	; 0x0b
    287a:	6c 87       	std	Y+12, r22	; 0x0c
    287c:	7d 87       	std	Y+13, r23	; 0x0d
    287e:	80 85       	ldd	r24, Z+8	; 0x08
    2880:	91 85       	ldd	r25, Z+9	; 0x09
    2882:	08 17       	cp	r16, r24
    2884:	19 07       	cpc	r17, r25
    2886:	08 f0       	brcs	.+2      	; 0x288a <_ZL7dir_sdiP3DIRt+0x76>
    2888:	6e c0       	rjmp	.+220    	; 0x2966 <_ZL7dir_sdiP3DIRt+0x152>
    288a:	86 a1       	ldd	r24, Z+38	; 0x26
    288c:	97 a1       	ldd	r25, Z+39	; 0x27
    288e:	a0 a5       	ldd	r26, Z+40	; 0x28
    2890:	b1 a5       	ldd	r27, Z+41	; 0x29
    2892:	98 01       	movw	r18, r16
    2894:	32 95       	swap	r19
    2896:	22 95       	swap	r18
    2898:	2f 70       	andi	r18, 0x0F	; 15
    289a:	23 27       	eor	r18, r19
    289c:	3f 70       	andi	r19, 0x0F	; 15
    289e:	23 27       	eor	r18, r19
    28a0:	82 0f       	add	r24, r18
    28a2:	93 1f       	adc	r25, r19
    28a4:	a1 1d       	adc	r26, r1
    28a6:	b1 1d       	adc	r27, r1
    28a8:	8e 87       	std	Y+14, r24	; 0x0e
    28aa:	9f 87       	std	Y+15, r25	; 0x0f
    28ac:	a8 8b       	std	Y+16, r26	; 0x10
    28ae:	b9 8b       	std	Y+17, r27	; 0x11
    28b0:	40 c0       	rjmp	.+128    	; 0x2932 <_ZL7dir_sdiP3DIRt+0x11e>
    28b2:	e2 80       	ldd	r14, Z+2	; 0x02
    28b4:	80 e1       	ldi	r24, 0x10	; 16
    28b6:	e8 9e       	mul	r14, r24
    28b8:	70 01       	movw	r14, r0
    28ba:	11 24       	eor	r1, r1
    28bc:	0e 15       	cp	r16, r14
    28be:	1f 05       	cpc	r17, r15
    28c0:	00 f1       	brcs	.+64     	; 0x2902 <_ZL7dir_sdiP3DIRt+0xee>
    28c2:	88 81       	ld	r24, Y
    28c4:	99 81       	ldd	r25, Y+1	; 0x01
    28c6:	bc de       	rcall	.-648    	; 0x2640 <_Z7get_fatP5FATFSm>
    28c8:	ab 01       	movw	r20, r22
    28ca:	bc 01       	movw	r22, r24
    28cc:	4f 3f       	cpi	r20, 0xFF	; 255
    28ce:	8f ef       	ldi	r24, 0xFF	; 255
    28d0:	58 07       	cpc	r21, r24
    28d2:	68 07       	cpc	r22, r24
    28d4:	78 07       	cpc	r23, r24
    28d6:	09 f4       	brne	.+2      	; 0x28da <_ZL7dir_sdiP3DIRt+0xc6>
    28d8:	48 c0       	rjmp	.+144    	; 0x296a <_ZL7dir_sdiP3DIRt+0x156>
    28da:	42 30       	cpi	r20, 0x02	; 2
    28dc:	51 05       	cpc	r21, r1
    28de:	61 05       	cpc	r22, r1
    28e0:	71 05       	cpc	r23, r1
    28e2:	08 f4       	brcc	.+2      	; 0x28e6 <_ZL7dir_sdiP3DIRt+0xd2>
    28e4:	44 c0       	rjmp	.+136    	; 0x296e <_ZL7dir_sdiP3DIRt+0x15a>
    28e6:	e8 81       	ld	r30, Y
    28e8:	f9 81       	ldd	r31, Y+1	; 0x01
    28ea:	86 89       	ldd	r24, Z+22	; 0x16
    28ec:	97 89       	ldd	r25, Z+23	; 0x17
    28ee:	a0 8d       	ldd	r26, Z+24	; 0x18
    28f0:	b1 8d       	ldd	r27, Z+25	; 0x19
    28f2:	48 17       	cp	r20, r24
    28f4:	59 07       	cpc	r21, r25
    28f6:	6a 07       	cpc	r22, r26
    28f8:	7b 07       	cpc	r23, r27
    28fa:	d8 f5       	brcc	.+118    	; 0x2972 <_ZL7dir_sdiP3DIRt+0x15e>
    28fc:	0e 19       	sub	r16, r14
    28fe:	1f 09       	sbc	r17, r15
    2900:	dd cf       	rjmp	.-70     	; 0x28bc <_ZL7dir_sdiP3DIRt+0xa8>
    2902:	4a 87       	std	Y+10, r20	; 0x0a
    2904:	5b 87       	std	Y+11, r21	; 0x0b
    2906:	6c 87       	std	Y+12, r22	; 0x0c
    2908:	7d 87       	std	Y+13, r23	; 0x0d
    290a:	88 81       	ld	r24, Y
    290c:	99 81       	ldd	r25, Y+1	; 0x01
    290e:	70 de       	rcall	.-800    	; 0x25f0 <_Z10clust2sectP5FATFSm>
    2910:	98 01       	movw	r18, r16
    2912:	32 95       	swap	r19
    2914:	22 95       	swap	r18
    2916:	2f 70       	andi	r18, 0x0F	; 15
    2918:	23 27       	eor	r18, r19
    291a:	3f 70       	andi	r19, 0x0F	; 15
    291c:	23 27       	eor	r18, r19
    291e:	dc 01       	movw	r26, r24
    2920:	cb 01       	movw	r24, r22
    2922:	82 0f       	add	r24, r18
    2924:	93 1f       	adc	r25, r19
    2926:	a1 1d       	adc	r26, r1
    2928:	b1 1d       	adc	r27, r1
    292a:	8e 87       	std	Y+14, r24	; 0x0e
    292c:	9f 87       	std	Y+15, r25	; 0x0f
    292e:	a8 8b       	std	Y+16, r26	; 0x10
    2930:	b9 8b       	std	Y+17, r27	; 0x11
    2932:	28 81       	ld	r18, Y
    2934:	39 81       	ldd	r19, Y+1	; 0x01
    2936:	0f 70       	andi	r16, 0x0F	; 15
    2938:	11 27       	eor	r17, r17
    293a:	c8 01       	movw	r24, r16
    293c:	88 0f       	add	r24, r24
    293e:	99 1f       	adc	r25, r25
    2940:	82 95       	swap	r24
    2942:	92 95       	swap	r25
    2944:	90 7f       	andi	r25, 0xF0	; 240
    2946:	98 27       	eor	r25, r24
    2948:	80 7f       	andi	r24, 0xF0	; 240
    294a:	98 27       	eor	r25, r24
    294c:	89 01       	movw	r16, r18
    294e:	0e 5c       	subi	r16, 0xCE	; 206
    2950:	1f 4f       	sbci	r17, 0xFF	; 255
    2952:	08 0f       	add	r16, r24
    2954:	19 1f       	adc	r17, r25
    2956:	1b 8b       	std	Y+19, r17	; 0x13
    2958:	0a 8b       	std	Y+18, r16	; 0x12
    295a:	80 e0       	ldi	r24, 0x00	; 0
    295c:	0b c0       	rjmp	.+22     	; 0x2974 <_ZL7dir_sdiP3DIRt+0x160>
    295e:	82 e0       	ldi	r24, 0x02	; 2
    2960:	09 c0       	rjmp	.+18     	; 0x2974 <_ZL7dir_sdiP3DIRt+0x160>
    2962:	82 e0       	ldi	r24, 0x02	; 2
    2964:	07 c0       	rjmp	.+14     	; 0x2974 <_ZL7dir_sdiP3DIRt+0x160>
    2966:	82 e0       	ldi	r24, 0x02	; 2
    2968:	05 c0       	rjmp	.+10     	; 0x2974 <_ZL7dir_sdiP3DIRt+0x160>
    296a:	81 e0       	ldi	r24, 0x01	; 1
    296c:	03 c0       	rjmp	.+6      	; 0x2974 <_ZL7dir_sdiP3DIRt+0x160>
    296e:	82 e0       	ldi	r24, 0x02	; 2
    2970:	01 c0       	rjmp	.+2      	; 0x2974 <_ZL7dir_sdiP3DIRt+0x160>
    2972:	82 e0       	ldi	r24, 0x02	; 2
    2974:	df 91       	pop	r29
    2976:	cf 91       	pop	r28
    2978:	1f 91       	pop	r17
    297a:	0f 91       	pop	r16
    297c:	ff 90       	pop	r15
    297e:	ef 90       	pop	r14
    2980:	08 95       	ret

00002982 <_Z7put_fatP5FATFSmm>:
    2982:	4f 92       	push	r4
    2984:	5f 92       	push	r5
    2986:	6f 92       	push	r6
    2988:	7f 92       	push	r7
    298a:	af 92       	push	r10
    298c:	bf 92       	push	r11
    298e:	cf 92       	push	r12
    2990:	df 92       	push	r13
    2992:	ef 92       	push	r14
    2994:	ff 92       	push	r15
    2996:	0f 93       	push	r16
    2998:	1f 93       	push	r17
    299a:	cf 93       	push	r28
    299c:	df 93       	push	r29
    299e:	00 d0       	rcall	.+0      	; 0x29a0 <_Z7put_fatP5FATFSmm+0x1e>
    29a0:	00 d0       	rcall	.+0      	; 0x29a2 <_Z7put_fatP5FATFSmm+0x20>
    29a2:	00 d0       	rcall	.+0      	; 0x29a4 <_Z7put_fatP5FATFSmm+0x22>
    29a4:	cd b7       	in	r28, 0x3d	; 61
    29a6:	de b7       	in	r29, 0x3e	; 62
    29a8:	42 30       	cpi	r20, 0x02	; 2
    29aa:	51 05       	cpc	r21, r1
    29ac:	61 05       	cpc	r22, r1
    29ae:	71 05       	cpc	r23, r1
    29b0:	08 f4       	brcc	.+2      	; 0x29b4 <_Z7put_fatP5FATFSmm+0x32>
    29b2:	f4 c0       	rjmp	.+488    	; 0x2b9c <_Z7put_fatP5FATFSmm+0x21a>
    29b4:	fc 01       	movw	r30, r24
    29b6:	c6 88       	ldd	r12, Z+22	; 0x16
    29b8:	d7 88       	ldd	r13, Z+23	; 0x17
    29ba:	e0 8c       	ldd	r14, Z+24	; 0x18
    29bc:	f1 8c       	ldd	r15, Z+25	; 0x19
    29be:	4c 15       	cp	r20, r12
    29c0:	5d 05       	cpc	r21, r13
    29c2:	6e 05       	cpc	r22, r14
    29c4:	7f 05       	cpc	r23, r15
    29c6:	08 f0       	brcs	.+2      	; 0x29ca <_Z7put_fatP5FATFSmm+0x48>
    29c8:	eb c0       	rjmp	.+470    	; 0x2ba0 <_Z7put_fatP5FATFSmm+0x21e>
    29ca:	28 01       	movw	r4, r16
    29cc:	39 01       	movw	r6, r18
    29ce:	6a 01       	movw	r12, r20
    29d0:	7b 01       	movw	r14, r22
    29d2:	9e 83       	std	Y+6, r25	; 0x06
    29d4:	8d 83       	std	Y+5, r24	; 0x05
    29d6:	80 81       	ld	r24, Z
    29d8:	82 30       	cpi	r24, 0x02	; 2
    29da:	09 f4       	brne	.+2      	; 0x29de <_Z7put_fatP5FATFSmm+0x5c>
    29dc:	75 c0       	rjmp	.+234    	; 0x2ac8 <_Z7put_fatP5FATFSmm+0x146>
    29de:	83 30       	cpi	r24, 0x03	; 3
    29e0:	09 f4       	brne	.+2      	; 0x29e4 <_Z7put_fatP5FATFSmm+0x62>
    29e2:	98 c0       	rjmp	.+304    	; 0x2b14 <_Z7put_fatP5FATFSmm+0x192>
    29e4:	81 30       	cpi	r24, 0x01	; 1
    29e6:	09 f0       	breq	.+2      	; 0x29ea <_Z7put_fatP5FATFSmm+0x68>
    29e8:	d3 c0       	rjmp	.+422    	; 0x2b90 <_Z7put_fatP5FATFSmm+0x20e>
    29ea:	5a 01       	movw	r10, r20
    29ec:	b6 94       	lsr	r11
    29ee:	a7 94       	ror	r10
    29f0:	a4 0e       	add	r10, r20
    29f2:	b5 1e       	adc	r11, r21
    29f4:	42 a1       	ldd	r20, Z+34	; 0x22
    29f6:	53 a1       	ldd	r21, Z+35	; 0x23
    29f8:	64 a1       	ldd	r22, Z+36	; 0x24
    29fa:	75 a1       	ldd	r23, Z+37	; 0x25
    29fc:	c5 01       	movw	r24, r10
    29fe:	89 2f       	mov	r24, r25
    2a00:	99 27       	eor	r25, r25
    2a02:	86 95       	lsr	r24
    2a04:	48 0f       	add	r20, r24
    2a06:	59 1f       	adc	r21, r25
    2a08:	61 1d       	adc	r22, r1
    2a0a:	71 1d       	adc	r23, r1
    2a0c:	cf 01       	movw	r24, r30
    2a0e:	8c da       	rcall	.-2792   	; 0x1f28 <_ZL11move_windowP5FATFSm>
    2a10:	81 11       	cpse	r24, r1
    2a12:	bf c0       	rjmp	.+382    	; 0x2b92 <_Z7put_fatP5FATFSmm+0x210>
    2a14:	c5 01       	movw	r24, r10
    2a16:	91 70       	andi	r25, 0x01	; 1
    2a18:	a7 01       	movw	r20, r14
    2a1a:	96 01       	movw	r18, r12
    2a1c:	21 70       	andi	r18, 0x01	; 1
    2a1e:	33 27       	eor	r19, r19
    2a20:	44 27       	eor	r20, r20
    2a22:	55 27       	eor	r21, r21
    2a24:	29 83       	std	Y+1, r18	; 0x01
    2a26:	3a 83       	std	Y+2, r19	; 0x02
    2a28:	4b 83       	std	Y+3, r20	; 0x03
    2a2a:	5c 83       	std	Y+4, r21	; 0x04
    2a2c:	c0 fe       	sbrs	r12, 0
    2a2e:	0c c0       	rjmp	.+24     	; 0x2a48 <_Z7put_fatP5FATFSmm+0xc6>
    2a30:	40 e1       	ldi	r20, 0x10	; 16
    2a32:	44 9e       	mul	r4, r20
    2a34:	90 01       	movw	r18, r0
    2a36:	11 24       	eor	r1, r1
    2a38:	ed 81       	ldd	r30, Y+5	; 0x05
    2a3a:	fe 81       	ldd	r31, Y+6	; 0x06
    2a3c:	e8 0f       	add	r30, r24
    2a3e:	f9 1f       	adc	r31, r25
    2a40:	42 a9       	ldd	r20, Z+50	; 0x32
    2a42:	4f 70       	andi	r20, 0x0F	; 15
    2a44:	24 2b       	or	r18, r20
    2a46:	01 c0       	rjmp	.+2      	; 0x2a4a <_Z7put_fatP5FATFSmm+0xc8>
    2a48:	24 2d       	mov	r18, r4
    2a4a:	ed 81       	ldd	r30, Y+5	; 0x05
    2a4c:	fe 81       	ldd	r31, Y+6	; 0x06
    2a4e:	e8 0f       	add	r30, r24
    2a50:	f9 1f       	adc	r31, r25
    2a52:	22 ab       	std	Z+50, r18	; 0x32
    2a54:	5f ef       	ldi	r21, 0xFF	; 255
    2a56:	a5 1a       	sub	r10, r21
    2a58:	b5 0a       	sbc	r11, r21
    2a5a:	81 e0       	ldi	r24, 0x01	; 1
    2a5c:	ed 81       	ldd	r30, Y+5	; 0x05
    2a5e:	fe 81       	ldd	r31, Y+6	; 0x06
    2a60:	84 83       	std	Z+4, r24	; 0x04
    2a62:	42 a1       	ldd	r20, Z+34	; 0x22
    2a64:	53 a1       	ldd	r21, Z+35	; 0x23
    2a66:	64 a1       	ldd	r22, Z+36	; 0x24
    2a68:	75 a1       	ldd	r23, Z+37	; 0x25
    2a6a:	c5 01       	movw	r24, r10
    2a6c:	89 2f       	mov	r24, r25
    2a6e:	99 27       	eor	r25, r25
    2a70:	86 95       	lsr	r24
    2a72:	48 0f       	add	r20, r24
    2a74:	59 1f       	adc	r21, r25
    2a76:	61 1d       	adc	r22, r1
    2a78:	71 1d       	adc	r23, r1
    2a7a:	cf 01       	movw	r24, r30
    2a7c:	55 da       	rcall	.-2902   	; 0x1f28 <_ZL11move_windowP5FATFSm>
    2a7e:	81 11       	cpse	r24, r1
    2a80:	88 c0       	rjmp	.+272    	; 0x2b92 <_Z7put_fatP5FATFSmm+0x210>
    2a82:	f1 e0       	ldi	r31, 0x01	; 1
    2a84:	bf 22       	and	r11, r31
    2a86:	29 81       	ldd	r18, Y+1	; 0x01
    2a88:	3a 81       	ldd	r19, Y+2	; 0x02
    2a8a:	4b 81       	ldd	r20, Y+3	; 0x03
    2a8c:	5c 81       	ldd	r21, Y+4	; 0x04
    2a8e:	23 2b       	or	r18, r19
    2a90:	24 2b       	or	r18, r20
    2a92:	25 2b       	or	r18, r21
    2a94:	49 f0       	breq	.+18     	; 0x2aa8 <_Z7put_fatP5FATFSmm+0x126>
    2a96:	68 94       	set
    2a98:	13 f8       	bld	r1, 3
    2a9a:	76 94       	lsr	r7
    2a9c:	67 94       	ror	r6
    2a9e:	57 94       	ror	r5
    2aa0:	47 94       	ror	r4
    2aa2:	16 94       	lsr	r1
    2aa4:	d1 f7       	brne	.-12     	; 0x2a9a <_Z7put_fatP5FATFSmm+0x118>
    2aa6:	0a c0       	rjmp	.+20     	; 0x2abc <_Z7put_fatP5FATFSmm+0x13a>
    2aa8:	ed 81       	ldd	r30, Y+5	; 0x05
    2aaa:	fe 81       	ldd	r31, Y+6	; 0x06
    2aac:	ea 0d       	add	r30, r10
    2aae:	fb 1d       	adc	r31, r11
    2ab0:	22 a9       	ldd	r18, Z+50	; 0x32
    2ab2:	20 7f       	andi	r18, 0xF0	; 240
    2ab4:	95 2d       	mov	r25, r5
    2ab6:	9f 70       	andi	r25, 0x0F	; 15
    2ab8:	42 2e       	mov	r4, r18
    2aba:	49 2a       	or	r4, r25
    2abc:	ed 81       	ldd	r30, Y+5	; 0x05
    2abe:	fe 81       	ldd	r31, Y+6	; 0x06
    2ac0:	ea 0d       	add	r30, r10
    2ac2:	fb 1d       	adc	r31, r11
    2ac4:	42 aa       	std	Z+50, r4	; 0x32
    2ac6:	65 c0       	rjmp	.+202    	; 0x2b92 <_Z7put_fatP5FATFSmm+0x210>
    2ac8:	ed 81       	ldd	r30, Y+5	; 0x05
    2aca:	fe 81       	ldd	r31, Y+6	; 0x06
    2acc:	42 a1       	ldd	r20, Z+34	; 0x22
    2ace:	53 a1       	ldd	r21, Z+35	; 0x23
    2ad0:	64 a1       	ldd	r22, Z+36	; 0x24
    2ad2:	75 a1       	ldd	r23, Z+37	; 0x25
    2ad4:	bb 27       	eor	r27, r27
    2ad6:	af 2d       	mov	r26, r15
    2ad8:	9e 2d       	mov	r25, r14
    2ada:	8d 2d       	mov	r24, r13
    2adc:	48 0f       	add	r20, r24
    2ade:	59 1f       	adc	r21, r25
    2ae0:	6a 1f       	adc	r22, r26
    2ae2:	7b 1f       	adc	r23, r27
    2ae4:	cf 01       	movw	r24, r30
    2ae6:	20 da       	rcall	.-3008   	; 0x1f28 <_ZL11move_windowP5FATFSm>
    2ae8:	81 11       	cpse	r24, r1
    2aea:	53 c0       	rjmp	.+166    	; 0x2b92 <_Z7put_fatP5FATFSmm+0x210>
    2aec:	cc 0c       	add	r12, r12
    2aee:	dd 1c       	adc	r13, r13
    2af0:	ee 1c       	adc	r14, r14
    2af2:	ff 1c       	adc	r15, r15
    2af4:	e8 94       	clt
    2af6:	c0 f8       	bld	r12, 0
    2af8:	f1 e0       	ldi	r31, 0x01	; 1
    2afa:	df 22       	and	r13, r31
    2afc:	ee 24       	eor	r14, r14
    2afe:	ff 24       	eor	r15, r15
    2b00:	22 e3       	ldi	r18, 0x32	; 50
    2b02:	c2 0e       	add	r12, r18
    2b04:	d1 1c       	adc	r13, r1
    2b06:	ed 81       	ldd	r30, Y+5	; 0x05
    2b08:	fe 81       	ldd	r31, Y+6	; 0x06
    2b0a:	ec 0d       	add	r30, r12
    2b0c:	fd 1d       	adc	r31, r13
    2b0e:	51 82       	std	Z+1, r5	; 0x01
    2b10:	40 82       	st	Z, r4
    2b12:	3f c0       	rjmp	.+126    	; 0x2b92 <_Z7put_fatP5FATFSmm+0x210>
    2b14:	ed 81       	ldd	r30, Y+5	; 0x05
    2b16:	fe 81       	ldd	r31, Y+6	; 0x06
    2b18:	42 a1       	ldd	r20, Z+34	; 0x22
    2b1a:	53 a1       	ldd	r21, Z+35	; 0x23
    2b1c:	64 a1       	ldd	r22, Z+36	; 0x24
    2b1e:	75 a1       	ldd	r23, Z+37	; 0x25
    2b20:	d7 01       	movw	r26, r14
    2b22:	c6 01       	movw	r24, r12
    2b24:	68 94       	set
    2b26:	16 f8       	bld	r1, 6
    2b28:	b6 95       	lsr	r27
    2b2a:	a7 95       	ror	r26
    2b2c:	97 95       	ror	r25
    2b2e:	87 95       	ror	r24
    2b30:	16 94       	lsr	r1
    2b32:	d1 f7       	brne	.-12     	; 0x2b28 <_Z7put_fatP5FATFSmm+0x1a6>
    2b34:	48 0f       	add	r20, r24
    2b36:	59 1f       	adc	r21, r25
    2b38:	6a 1f       	adc	r22, r26
    2b3a:	7b 1f       	adc	r23, r27
    2b3c:	cf 01       	movw	r24, r30
    2b3e:	f4 d9       	rcall	.-3096   	; 0x1f28 <_ZL11move_windowP5FATFSm>
    2b40:	81 11       	cpse	r24, r1
    2b42:	27 c0       	rjmp	.+78     	; 0x2b92 <_Z7put_fatP5FATFSmm+0x210>
    2b44:	cc 0c       	add	r12, r12
    2b46:	dd 1c       	adc	r13, r13
    2b48:	ee 1c       	adc	r14, r14
    2b4a:	ff 1c       	adc	r15, r15
    2b4c:	cc 0c       	add	r12, r12
    2b4e:	dd 1c       	adc	r13, r13
    2b50:	ee 1c       	adc	r14, r14
    2b52:	ff 1c       	adc	r15, r15
    2b54:	fc ef       	ldi	r31, 0xFC	; 252
    2b56:	cf 22       	and	r12, r31
    2b58:	f1 e0       	ldi	r31, 0x01	; 1
    2b5a:	df 22       	and	r13, r31
    2b5c:	ee 24       	eor	r14, r14
    2b5e:	ff 24       	eor	r15, r15
    2b60:	22 e3       	ldi	r18, 0x32	; 50
    2b62:	c2 0e       	add	r12, r18
    2b64:	d1 1c       	adc	r13, r1
    2b66:	ed 81       	ldd	r30, Y+5	; 0x05
    2b68:	fe 81       	ldd	r31, Y+6	; 0x06
    2b6a:	ec 0d       	add	r30, r12
    2b6c:	fd 1d       	adc	r31, r13
    2b6e:	00 81       	ld	r16, Z
    2b70:	11 81       	ldd	r17, Z+1	; 0x01
    2b72:	22 81       	ldd	r18, Z+2	; 0x02
    2b74:	33 81       	ldd	r19, Z+3	; 0x03
    2b76:	00 27       	eor	r16, r16
    2b78:	11 27       	eor	r17, r17
    2b7a:	22 27       	eor	r18, r18
    2b7c:	30 7f       	andi	r19, 0xF0	; 240
    2b7e:	40 2a       	or	r4, r16
    2b80:	51 2a       	or	r5, r17
    2b82:	62 2a       	or	r6, r18
    2b84:	73 2a       	or	r7, r19
    2b86:	40 82       	st	Z, r4
    2b88:	51 82       	std	Z+1, r5	; 0x01
    2b8a:	62 82       	std	Z+2, r6	; 0x02
    2b8c:	73 82       	std	Z+3, r7	; 0x03
    2b8e:	01 c0       	rjmp	.+2      	; 0x2b92 <_Z7put_fatP5FATFSmm+0x210>
    2b90:	82 e0       	ldi	r24, 0x02	; 2
    2b92:	91 e0       	ldi	r25, 0x01	; 1
    2b94:	ed 81       	ldd	r30, Y+5	; 0x05
    2b96:	fe 81       	ldd	r31, Y+6	; 0x06
    2b98:	94 83       	std	Z+4, r25	; 0x04
    2b9a:	03 c0       	rjmp	.+6      	; 0x2ba2 <_Z7put_fatP5FATFSmm+0x220>
    2b9c:	82 e0       	ldi	r24, 0x02	; 2
    2b9e:	01 c0       	rjmp	.+2      	; 0x2ba2 <_Z7put_fatP5FATFSmm+0x220>
    2ba0:	82 e0       	ldi	r24, 0x02	; 2
    2ba2:	26 96       	adiw	r28, 0x06	; 6
    2ba4:	0f b6       	in	r0, 0x3f	; 63
    2ba6:	f8 94       	cli
    2ba8:	de bf       	out	0x3e, r29	; 62
    2baa:	0f be       	out	0x3f, r0	; 63
    2bac:	cd bf       	out	0x3d, r28	; 61
    2bae:	df 91       	pop	r29
    2bb0:	cf 91       	pop	r28
    2bb2:	1f 91       	pop	r17
    2bb4:	0f 91       	pop	r16
    2bb6:	ff 90       	pop	r15
    2bb8:	ef 90       	pop	r14
    2bba:	df 90       	pop	r13
    2bbc:	cf 90       	pop	r12
    2bbe:	bf 90       	pop	r11
    2bc0:	af 90       	pop	r10
    2bc2:	7f 90       	pop	r7
    2bc4:	6f 90       	pop	r6
    2bc6:	5f 90       	pop	r5
    2bc8:	4f 90       	pop	r4
    2bca:	08 95       	ret

00002bcc <_ZL12create_chainP5FATFSm>:
    2bcc:	4f 92       	push	r4
    2bce:	5f 92       	push	r5
    2bd0:	6f 92       	push	r6
    2bd2:	7f 92       	push	r7
    2bd4:	8f 92       	push	r8
    2bd6:	9f 92       	push	r9
    2bd8:	af 92       	push	r10
    2bda:	bf 92       	push	r11
    2bdc:	cf 92       	push	r12
    2bde:	df 92       	push	r13
    2be0:	ef 92       	push	r14
    2be2:	ff 92       	push	r15
    2be4:	0f 93       	push	r16
    2be6:	1f 93       	push	r17
    2be8:	cf 93       	push	r28
    2bea:	df 93       	push	r29
    2bec:	ec 01       	movw	r28, r24
    2bee:	2a 01       	movw	r4, r20
    2bf0:	3b 01       	movw	r6, r22
    2bf2:	41 15       	cp	r20, r1
    2bf4:	51 05       	cpc	r21, r1
    2bf6:	61 05       	cpc	r22, r1
    2bf8:	71 05       	cpc	r23, r1
    2bfa:	99 f4       	brne	.+38     	; 0x2c22 <_ZL12create_chainP5FATFSm+0x56>
    2bfc:	8a 84       	ldd	r8, Y+10	; 0x0a
    2bfe:	9b 84       	ldd	r9, Y+11	; 0x0b
    2c00:	ac 84       	ldd	r10, Y+12	; 0x0c
    2c02:	bd 84       	ldd	r11, Y+13	; 0x0d
    2c04:	81 14       	cp	r8, r1
    2c06:	91 04       	cpc	r9, r1
    2c08:	a1 04       	cpc	r10, r1
    2c0a:	b1 04       	cpc	r11, r1
    2c0c:	f1 f0       	breq	.+60     	; 0x2c4a <_ZL12create_chainP5FATFSm+0x7e>
    2c0e:	8e 89       	ldd	r24, Y+22	; 0x16
    2c10:	9f 89       	ldd	r25, Y+23	; 0x17
    2c12:	a8 8d       	ldd	r26, Y+24	; 0x18
    2c14:	b9 8d       	ldd	r27, Y+25	; 0x19
    2c16:	88 16       	cp	r8, r24
    2c18:	99 06       	cpc	r9, r25
    2c1a:	aa 06       	cpc	r10, r26
    2c1c:	bb 06       	cpc	r11, r27
    2c1e:	d0 f4       	brcc	.+52     	; 0x2c54 <_ZL12create_chainP5FATFSm+0x88>
    2c20:	1d c0       	rjmp	.+58     	; 0x2c5c <_ZL12create_chainP5FATFSm+0x90>
    2c22:	0e dd       	rcall	.-1508   	; 0x2640 <_Z7get_fatP5FATFSm>
    2c24:	62 30       	cpi	r22, 0x02	; 2
    2c26:	71 05       	cpc	r23, r1
    2c28:	81 05       	cpc	r24, r1
    2c2a:	91 05       	cpc	r25, r1
    2c2c:	08 f4       	brcc	.+2      	; 0x2c30 <_ZL12create_chainP5FATFSm+0x64>
    2c2e:	88 c0       	rjmp	.+272    	; 0x2d40 <_ZL12create_chainP5FATFSm+0x174>
    2c30:	ce 88       	ldd	r12, Y+22	; 0x16
    2c32:	df 88       	ldd	r13, Y+23	; 0x17
    2c34:	e8 8c       	ldd	r14, Y+24	; 0x18
    2c36:	f9 8c       	ldd	r15, Y+25	; 0x19
    2c38:	6c 15       	cp	r22, r12
    2c3a:	7d 05       	cpc	r23, r13
    2c3c:	8e 05       	cpc	r24, r14
    2c3e:	9f 05       	cpc	r25, r15
    2c40:	08 f4       	brcc	.+2      	; 0x2c44 <_ZL12create_chainP5FATFSm+0x78>
    2c42:	83 c0       	rjmp	.+262    	; 0x2d4a <_ZL12create_chainP5FATFSm+0x17e>
    2c44:	53 01       	movw	r10, r6
    2c46:	42 01       	movw	r8, r4
    2c48:	09 c0       	rjmp	.+18     	; 0x2c5c <_ZL12create_chainP5FATFSm+0x90>
    2c4a:	81 2c       	mov	r8, r1
    2c4c:	91 2c       	mov	r9, r1
    2c4e:	54 01       	movw	r10, r8
    2c50:	83 94       	inc	r8
    2c52:	04 c0       	rjmp	.+8      	; 0x2c5c <_ZL12create_chainP5FATFSm+0x90>
    2c54:	81 2c       	mov	r8, r1
    2c56:	91 2c       	mov	r9, r1
    2c58:	54 01       	movw	r10, r8
    2c5a:	83 94       	inc	r8
    2c5c:	75 01       	movw	r14, r10
    2c5e:	64 01       	movw	r12, r8
    2c60:	2f ef       	ldi	r18, 0xFF	; 255
    2c62:	c2 1a       	sub	r12, r18
    2c64:	d2 0a       	sbc	r13, r18
    2c66:	e2 0a       	sbc	r14, r18
    2c68:	f2 0a       	sbc	r15, r18
    2c6a:	8e 89       	ldd	r24, Y+22	; 0x16
    2c6c:	9f 89       	ldd	r25, Y+23	; 0x17
    2c6e:	a8 8d       	ldd	r26, Y+24	; 0x18
    2c70:	b9 8d       	ldd	r27, Y+25	; 0x19
    2c72:	c8 16       	cp	r12, r24
    2c74:	d9 06       	cpc	r13, r25
    2c76:	ea 06       	cpc	r14, r26
    2c78:	fb 06       	cpc	r15, r27
    2c7a:	60 f0       	brcs	.+24     	; 0x2c94 <_ZL12create_chainP5FATFSm+0xc8>
    2c7c:	82 e0       	ldi	r24, 0x02	; 2
    2c7e:	88 16       	cp	r8, r24
    2c80:	91 04       	cpc	r9, r1
    2c82:	a1 04       	cpc	r10, r1
    2c84:	b1 04       	cpc	r11, r1
    2c86:	08 f4       	brcc	.+2      	; 0x2c8a <_ZL12create_chainP5FATFSm+0xbe>
    2c88:	64 c0       	rjmp	.+200    	; 0x2d52 <_ZL12create_chainP5FATFSm+0x186>
    2c8a:	c1 2c       	mov	r12, r1
    2c8c:	d1 2c       	mov	r13, r1
    2c8e:	76 01       	movw	r14, r12
    2c90:	68 94       	set
    2c92:	c1 f8       	bld	r12, 1
    2c94:	b7 01       	movw	r22, r14
    2c96:	a6 01       	movw	r20, r12
    2c98:	ce 01       	movw	r24, r28
    2c9a:	d2 dc       	rcall	.-1628   	; 0x2640 <_Z7get_fatP5FATFSm>
    2c9c:	61 15       	cp	r22, r1
    2c9e:	71 05       	cpc	r23, r1
    2ca0:	81 05       	cpc	r24, r1
    2ca2:	91 05       	cpc	r25, r1
    2ca4:	99 f0       	breq	.+38     	; 0x2ccc <_ZL12create_chainP5FATFSm+0x100>
    2ca6:	6f 3f       	cpi	r22, 0xFF	; 255
    2ca8:	2f ef       	ldi	r18, 0xFF	; 255
    2caa:	72 07       	cpc	r23, r18
    2cac:	82 07       	cpc	r24, r18
    2cae:	92 07       	cpc	r25, r18
    2cb0:	09 f4       	brne	.+2      	; 0x2cb4 <_ZL12create_chainP5FATFSm+0xe8>
    2cb2:	54 c0       	rjmp	.+168    	; 0x2d5c <_ZL12create_chainP5FATFSm+0x190>
    2cb4:	61 30       	cpi	r22, 0x01	; 1
    2cb6:	71 05       	cpc	r23, r1
    2cb8:	81 05       	cpc	r24, r1
    2cba:	91 05       	cpc	r25, r1
    2cbc:	09 f4       	brne	.+2      	; 0x2cc0 <_ZL12create_chainP5FATFSm+0xf4>
    2cbe:	52 c0       	rjmp	.+164    	; 0x2d64 <_ZL12create_chainP5FATFSm+0x198>
    2cc0:	c8 14       	cp	r12, r8
    2cc2:	d9 04       	cpc	r13, r9
    2cc4:	ea 04       	cpc	r14, r10
    2cc6:	fb 04       	cpc	r15, r11
    2cc8:	59 f6       	brne	.-106    	; 0x2c60 <_ZL12create_chainP5FATFSm+0x94>
    2cca:	50 c0       	rjmp	.+160    	; 0x2d6c <_ZL12create_chainP5FATFSm+0x1a0>
    2ccc:	0f ef       	ldi	r16, 0xFF	; 255
    2cce:	1f ef       	ldi	r17, 0xFF	; 255
    2cd0:	2f ef       	ldi	r18, 0xFF	; 255
    2cd2:	3f e0       	ldi	r19, 0x0F	; 15
    2cd4:	b7 01       	movw	r22, r14
    2cd6:	a6 01       	movw	r20, r12
    2cd8:	ce 01       	movw	r24, r28
    2cda:	53 de       	rcall	.-858    	; 0x2982 <_Z7put_fatP5FATFSmm>
    2cdc:	81 11       	cpse	r24, r1
    2cde:	0b c0       	rjmp	.+22     	; 0x2cf6 <_ZL12create_chainP5FATFSm+0x12a>
    2ce0:	41 14       	cp	r4, r1
    2ce2:	51 04       	cpc	r5, r1
    2ce4:	61 04       	cpc	r6, r1
    2ce6:	71 04       	cpc	r7, r1
    2ce8:	31 f0       	breq	.+12     	; 0x2cf6 <_ZL12create_chainP5FATFSm+0x12a>
    2cea:	97 01       	movw	r18, r14
    2cec:	86 01       	movw	r16, r12
    2cee:	b3 01       	movw	r22, r6
    2cf0:	a2 01       	movw	r20, r4
    2cf2:	ce 01       	movw	r24, r28
    2cf4:	46 de       	rcall	.-884    	; 0x2982 <_Z7put_fatP5FATFSmm>
    2cf6:	81 11       	cpse	r24, r1
    2cf8:	1c c0       	rjmp	.+56     	; 0x2d32 <_ZL12create_chainP5FATFSm+0x166>
    2cfa:	ca 86       	std	Y+10, r12	; 0x0a
    2cfc:	db 86       	std	Y+11, r13	; 0x0b
    2cfe:	ec 86       	std	Y+12, r14	; 0x0c
    2d00:	fd 86       	std	Y+13, r15	; 0x0d
    2d02:	8e 85       	ldd	r24, Y+14	; 0x0e
    2d04:	9f 85       	ldd	r25, Y+15	; 0x0f
    2d06:	a8 89       	ldd	r26, Y+16	; 0x10
    2d08:	b9 89       	ldd	r27, Y+17	; 0x11
    2d0a:	8f 3f       	cpi	r24, 0xFF	; 255
    2d0c:	2f ef       	ldi	r18, 0xFF	; 255
    2d0e:	92 07       	cpc	r25, r18
    2d10:	a2 07       	cpc	r26, r18
    2d12:	b2 07       	cpc	r27, r18
    2d14:	81 f1       	breq	.+96     	; 0x2d76 <_ZL12create_chainP5FATFSm+0x1aa>
    2d16:	01 97       	sbiw	r24, 0x01	; 1
    2d18:	a1 09       	sbc	r26, r1
    2d1a:	b1 09       	sbc	r27, r1
    2d1c:	8e 87       	std	Y+14, r24	; 0x0e
    2d1e:	9f 87       	std	Y+15, r25	; 0x0f
    2d20:	a8 8b       	std	Y+16, r26	; 0x10
    2d22:	b9 8b       	std	Y+17, r27	; 0x11
    2d24:	81 e0       	ldi	r24, 0x01	; 1
    2d26:	8d 83       	std	Y+5, r24	; 0x05
    2d28:	4c 2d       	mov	r20, r12
    2d2a:	3d 2d       	mov	r19, r13
    2d2c:	2e 2d       	mov	r18, r14
    2d2e:	9f 2d       	mov	r25, r15
    2d30:	2b c0       	rjmp	.+86     	; 0x2d88 <_ZL12create_chainP5FATFSm+0x1bc>
    2d32:	81 30       	cpi	r24, 0x01	; 1
    2d34:	29 f5       	brne	.+74     	; 0x2d80 <_ZL12create_chainP5FATFSm+0x1b4>
    2d36:	4f ef       	ldi	r20, 0xFF	; 255
    2d38:	3f ef       	ldi	r19, 0xFF	; 255
    2d3a:	2f ef       	ldi	r18, 0xFF	; 255
    2d3c:	9f ef       	ldi	r25, 0xFF	; 255
    2d3e:	24 c0       	rjmp	.+72     	; 0x2d88 <_ZL12create_chainP5FATFSm+0x1bc>
    2d40:	41 e0       	ldi	r20, 0x01	; 1
    2d42:	30 e0       	ldi	r19, 0x00	; 0
    2d44:	20 e0       	ldi	r18, 0x00	; 0
    2d46:	90 e0       	ldi	r25, 0x00	; 0
    2d48:	1f c0       	rjmp	.+62     	; 0x2d88 <_ZL12create_chainP5FATFSm+0x1bc>
    2d4a:	46 2f       	mov	r20, r22
    2d4c:	37 2f       	mov	r19, r23
    2d4e:	28 2f       	mov	r18, r24
    2d50:	1b c0       	rjmp	.+54     	; 0x2d88 <_ZL12create_chainP5FATFSm+0x1bc>
    2d52:	40 e0       	ldi	r20, 0x00	; 0
    2d54:	30 e0       	ldi	r19, 0x00	; 0
    2d56:	20 e0       	ldi	r18, 0x00	; 0
    2d58:	90 e0       	ldi	r25, 0x00	; 0
    2d5a:	16 c0       	rjmp	.+44     	; 0x2d88 <_ZL12create_chainP5FATFSm+0x1bc>
    2d5c:	46 2f       	mov	r20, r22
    2d5e:	37 2f       	mov	r19, r23
    2d60:	28 2f       	mov	r18, r24
    2d62:	12 c0       	rjmp	.+36     	; 0x2d88 <_ZL12create_chainP5FATFSm+0x1bc>
    2d64:	46 2f       	mov	r20, r22
    2d66:	37 2f       	mov	r19, r23
    2d68:	28 2f       	mov	r18, r24
    2d6a:	0e c0       	rjmp	.+28     	; 0x2d88 <_ZL12create_chainP5FATFSm+0x1bc>
    2d6c:	40 e0       	ldi	r20, 0x00	; 0
    2d6e:	30 e0       	ldi	r19, 0x00	; 0
    2d70:	20 e0       	ldi	r18, 0x00	; 0
    2d72:	90 e0       	ldi	r25, 0x00	; 0
    2d74:	09 c0       	rjmp	.+18     	; 0x2d88 <_ZL12create_chainP5FATFSm+0x1bc>
    2d76:	4c 2d       	mov	r20, r12
    2d78:	3d 2d       	mov	r19, r13
    2d7a:	2e 2d       	mov	r18, r14
    2d7c:	9f 2d       	mov	r25, r15
    2d7e:	04 c0       	rjmp	.+8      	; 0x2d88 <_ZL12create_chainP5FATFSm+0x1bc>
    2d80:	41 e0       	ldi	r20, 0x01	; 1
    2d82:	30 e0       	ldi	r19, 0x00	; 0
    2d84:	20 e0       	ldi	r18, 0x00	; 0
    2d86:	90 e0       	ldi	r25, 0x00	; 0
    2d88:	64 2f       	mov	r22, r20
    2d8a:	73 2f       	mov	r23, r19
    2d8c:	82 2f       	mov	r24, r18
    2d8e:	df 91       	pop	r29
    2d90:	cf 91       	pop	r28
    2d92:	1f 91       	pop	r17
    2d94:	0f 91       	pop	r16
    2d96:	ff 90       	pop	r15
    2d98:	ef 90       	pop	r14
    2d9a:	df 90       	pop	r13
    2d9c:	cf 90       	pop	r12
    2d9e:	bf 90       	pop	r11
    2da0:	af 90       	pop	r10
    2da2:	9f 90       	pop	r9
    2da4:	8f 90       	pop	r8
    2da6:	7f 90       	pop	r7
    2da8:	6f 90       	pop	r6
    2daa:	5f 90       	pop	r5
    2dac:	4f 90       	pop	r4
    2dae:	08 95       	ret

00002db0 <_ZL8dir_nextP3DIRi>:
    2db0:	8f 92       	push	r8
    2db2:	9f 92       	push	r9
    2db4:	af 92       	push	r10
    2db6:	bf 92       	push	r11
    2db8:	cf 92       	push	r12
    2dba:	df 92       	push	r13
    2dbc:	ef 92       	push	r14
    2dbe:	ff 92       	push	r15
    2dc0:	0f 93       	push	r16
    2dc2:	1f 93       	push	r17
    2dc4:	cf 93       	push	r28
    2dc6:	df 93       	push	r29
    2dc8:	dc 01       	movw	r26, r24
    2dca:	14 96       	adiw	r26, 0x04	; 4
    2dcc:	cd 91       	ld	r28, X+
    2dce:	dc 91       	ld	r29, X
    2dd0:	15 97       	sbiw	r26, 0x05	; 5
    2dd2:	21 96       	adiw	r28, 0x01	; 1
    2dd4:	09 f4       	brne	.+2      	; 0x2dd8 <_ZL8dir_nextP3DIRi+0x28>
    2dd6:	f6 c0       	rjmp	.+492    	; 0x2fc4 <_ZL8dir_nextP3DIRi+0x214>
    2dd8:	1e 96       	adiw	r26, 0x0e	; 14
    2dda:	8d 90       	ld	r8, X+
    2ddc:	9d 90       	ld	r9, X+
    2dde:	ad 90       	ld	r10, X+
    2de0:	bc 90       	ld	r11, X
    2de2:	51 97       	sbiw	r26, 0x11	; 17
    2de4:	81 14       	cp	r8, r1
    2de6:	91 04       	cpc	r9, r1
    2de8:	a1 04       	cpc	r10, r1
    2dea:	b1 04       	cpc	r11, r1
    2dec:	09 f4       	brne	.+2      	; 0x2df0 <_ZL8dir_nextP3DIRi+0x40>
    2dee:	ec c0       	rjmp	.+472    	; 0x2fc8 <_ZL8dir_nextP3DIRi+0x218>
    2df0:	7b 01       	movw	r14, r22
    2df2:	8c 01       	movw	r16, r24
    2df4:	6e 01       	movw	r12, r28
    2df6:	bf e0       	ldi	r27, 0x0F	; 15
    2df8:	cb 22       	and	r12, r27
    2dfa:	dd 24       	eor	r13, r13
    2dfc:	c1 14       	cp	r12, r1
    2dfe:	d1 04       	cpc	r13, r1
    2e00:	09 f0       	breq	.+2      	; 0x2e04 <_ZL8dir_nextP3DIRi+0x54>
    2e02:	ca c0       	rjmp	.+404    	; 0x2f98 <_ZL8dir_nextP3DIRi+0x1e8>
    2e04:	ef ef       	ldi	r30, 0xFF	; 255
    2e06:	8e 1a       	sub	r8, r30
    2e08:	9e 0a       	sbc	r9, r30
    2e0a:	ae 0a       	sbc	r10, r30
    2e0c:	be 0a       	sbc	r11, r30
    2e0e:	dc 01       	movw	r26, r24
    2e10:	1e 96       	adiw	r26, 0x0e	; 14
    2e12:	8d 92       	st	X+, r8
    2e14:	9d 92       	st	X+, r9
    2e16:	ad 92       	st	X+, r10
    2e18:	bc 92       	st	X, r11
    2e1a:	51 97       	sbiw	r26, 0x11	; 17
    2e1c:	1a 96       	adiw	r26, 0x0a	; 10
    2e1e:	4d 91       	ld	r20, X+
    2e20:	5d 91       	ld	r21, X+
    2e22:	6d 91       	ld	r22, X+
    2e24:	7c 91       	ld	r23, X
    2e26:	1d 97       	sbiw	r26, 0x0d	; 13
    2e28:	41 15       	cp	r20, r1
    2e2a:	51 05       	cpc	r21, r1
    2e2c:	61 05       	cpc	r22, r1
    2e2e:	71 05       	cpc	r23, r1
    2e30:	49 f4       	brne	.+18     	; 0x2e44 <_ZL8dir_nextP3DIRi+0x94>
    2e32:	ed 91       	ld	r30, X+
    2e34:	fc 91       	ld	r31, X
    2e36:	80 85       	ldd	r24, Z+8	; 0x08
    2e38:	91 85       	ldd	r25, Z+9	; 0x09
    2e3a:	c8 17       	cp	r28, r24
    2e3c:	d9 07       	cpc	r29, r25
    2e3e:	08 f0       	brcs	.+2      	; 0x2e42 <_ZL8dir_nextP3DIRi+0x92>
    2e40:	c5 c0       	rjmp	.+394    	; 0x2fcc <_ZL8dir_nextP3DIRi+0x21c>
    2e42:	aa c0       	rjmp	.+340    	; 0x2f98 <_ZL8dir_nextP3DIRi+0x1e8>
    2e44:	dc 01       	movw	r26, r24
    2e46:	ed 91       	ld	r30, X+
    2e48:	fc 91       	ld	r31, X
    2e4a:	22 81       	ldd	r18, Z+2	; 0x02
    2e4c:	30 e0       	ldi	r19, 0x00	; 0
    2e4e:	21 50       	subi	r18, 0x01	; 1
    2e50:	31 09       	sbc	r19, r1
    2e52:	ce 01       	movw	r24, r28
    2e54:	92 95       	swap	r25
    2e56:	82 95       	swap	r24
    2e58:	8f 70       	andi	r24, 0x0F	; 15
    2e5a:	89 27       	eor	r24, r25
    2e5c:	9f 70       	andi	r25, 0x0F	; 15
    2e5e:	89 27       	eor	r24, r25
    2e60:	28 23       	and	r18, r24
    2e62:	39 23       	and	r19, r25
    2e64:	23 2b       	or	r18, r19
    2e66:	09 f0       	breq	.+2      	; 0x2e6a <_ZL8dir_nextP3DIRi+0xba>
    2e68:	97 c0       	rjmp	.+302    	; 0x2f98 <_ZL8dir_nextP3DIRi+0x1e8>
    2e6a:	cf 01       	movw	r24, r30
    2e6c:	e9 db       	rcall	.-2094   	; 0x2640 <_Z7get_fatP5FATFSm>
    2e6e:	4b 01       	movw	r8, r22
    2e70:	5c 01       	movw	r10, r24
    2e72:	62 30       	cpi	r22, 0x02	; 2
    2e74:	71 05       	cpc	r23, r1
    2e76:	81 05       	cpc	r24, r1
    2e78:	91 05       	cpc	r25, r1
    2e7a:	08 f4       	brcc	.+2      	; 0x2e7e <_ZL8dir_nextP3DIRi+0xce>
    2e7c:	a9 c0       	rjmp	.+338    	; 0x2fd0 <_ZL8dir_nextP3DIRi+0x220>
    2e7e:	6f 3f       	cpi	r22, 0xFF	; 255
    2e80:	7f 4f       	sbci	r23, 0xFF	; 255
    2e82:	8f 4f       	sbci	r24, 0xFF	; 255
    2e84:	9f 4f       	sbci	r25, 0xFF	; 255
    2e86:	09 f4       	brne	.+2      	; 0x2e8a <_ZL8dir_nextP3DIRi+0xda>
    2e88:	a5 c0       	rjmp	.+330    	; 0x2fd4 <_ZL8dir_nextP3DIRi+0x224>
    2e8a:	d8 01       	movw	r26, r16
    2e8c:	ed 91       	ld	r30, X+
    2e8e:	fc 91       	ld	r31, X
    2e90:	86 89       	ldd	r24, Z+22	; 0x16
    2e92:	97 89       	ldd	r25, Z+23	; 0x17
    2e94:	a0 8d       	ldd	r26, Z+24	; 0x18
    2e96:	b1 8d       	ldd	r27, Z+25	; 0x19
    2e98:	88 16       	cp	r8, r24
    2e9a:	99 06       	cpc	r9, r25
    2e9c:	aa 06       	cpc	r10, r26
    2e9e:	bb 06       	cpc	r11, r27
    2ea0:	08 f4       	brcc	.+2      	; 0x2ea4 <_ZL8dir_nextP3DIRi+0xf4>
    2ea2:	69 c0       	rjmp	.+210    	; 0x2f76 <_ZL8dir_nextP3DIRi+0x1c6>
    2ea4:	ef 28       	or	r14, r15
    2ea6:	09 f4       	brne	.+2      	; 0x2eaa <_ZL8dir_nextP3DIRi+0xfa>
    2ea8:	97 c0       	rjmp	.+302    	; 0x2fd8 <_ZL8dir_nextP3DIRi+0x228>
    2eaa:	d8 01       	movw	r26, r16
    2eac:	1a 96       	adiw	r26, 0x0a	; 10
    2eae:	4d 91       	ld	r20, X+
    2eb0:	5d 91       	ld	r21, X+
    2eb2:	6d 91       	ld	r22, X+
    2eb4:	7c 91       	ld	r23, X
    2eb6:	1d 97       	sbiw	r26, 0x0d	; 13
    2eb8:	cf 01       	movw	r24, r30
    2eba:	88 de       	rcall	.-752    	; 0x2bcc <_ZL12create_chainP5FATFSm>
    2ebc:	4b 01       	movw	r8, r22
    2ebe:	5c 01       	movw	r10, r24
    2ec0:	61 15       	cp	r22, r1
    2ec2:	71 05       	cpc	r23, r1
    2ec4:	81 05       	cpc	r24, r1
    2ec6:	91 05       	cpc	r25, r1
    2ec8:	09 f4       	brne	.+2      	; 0x2ecc <_ZL8dir_nextP3DIRi+0x11c>
    2eca:	88 c0       	rjmp	.+272    	; 0x2fdc <_ZL8dir_nextP3DIRi+0x22c>
    2ecc:	61 30       	cpi	r22, 0x01	; 1
    2ece:	71 05       	cpc	r23, r1
    2ed0:	81 05       	cpc	r24, r1
    2ed2:	91 05       	cpc	r25, r1
    2ed4:	09 f4       	brne	.+2      	; 0x2ed8 <_ZL8dir_nextP3DIRi+0x128>
    2ed6:	84 c0       	rjmp	.+264    	; 0x2fe0 <_ZL8dir_nextP3DIRi+0x230>
    2ed8:	6f 3f       	cpi	r22, 0xFF	; 255
    2eda:	7f 4f       	sbci	r23, 0xFF	; 255
    2edc:	8f 4f       	sbci	r24, 0xFF	; 255
    2ede:	9f 4f       	sbci	r25, 0xFF	; 255
    2ee0:	09 f4       	brne	.+2      	; 0x2ee4 <_ZL8dir_nextP3DIRi+0x134>
    2ee2:	80 c0       	rjmp	.+256    	; 0x2fe4 <_ZL8dir_nextP3DIRi+0x234>
    2ee4:	d8 01       	movw	r26, r16
    2ee6:	8d 91       	ld	r24, X+
    2ee8:	9c 91       	ld	r25, X
    2eea:	0e 94 2d 0f 	call	0x1e5a	; 0x1e5a <_ZL11sync_windowP5FATFS>
    2eee:	81 11       	cpse	r24, r1
    2ef0:	7b c0       	rjmp	.+246    	; 0x2fe8 <_ZL8dir_nextP3DIRi+0x238>
    2ef2:	f8 01       	movw	r30, r16
    2ef4:	80 81       	ld	r24, Z
    2ef6:	91 81       	ldd	r25, Z+1	; 0x01
    2ef8:	40 e0       	ldi	r20, 0x00	; 0
    2efa:	52 e0       	ldi	r21, 0x02	; 2
    2efc:	60 e0       	ldi	r22, 0x00	; 0
    2efe:	70 e0       	ldi	r23, 0x00	; 0
    2f00:	c2 96       	adiw	r24, 0x32	; 50
    2f02:	0e 94 d9 0d 	call	0x1bb2	; 0x1bb2 <_ZL7mem_setPvij>
    2f06:	d8 01       	movw	r26, r16
    2f08:	ed 90       	ld	r14, X+
    2f0a:	fc 90       	ld	r15, X
    2f0c:	b5 01       	movw	r22, r10
    2f0e:	a4 01       	movw	r20, r8
    2f10:	c7 01       	movw	r24, r14
    2f12:	6e db       	rcall	.-2340   	; 0x25f0 <_Z10clust2sectP5FATFSm>
    2f14:	f7 01       	movw	r30, r14
    2f16:	66 a7       	std	Z+46, r22	; 0x2e
    2f18:	77 a7       	std	Z+47, r23	; 0x2f
    2f1a:	80 ab       	std	Z+48, r24	; 0x30
    2f1c:	91 ab       	std	Z+49, r25	; 0x31
    2f1e:	f1 2c       	mov	r15, r1
    2f20:	d8 01       	movw	r26, r16
    2f22:	ed 91       	ld	r30, X+
    2f24:	fc 91       	ld	r31, X
    2f26:	11 97       	sbiw	r26, 0x01	; 1
    2f28:	82 81       	ldd	r24, Z+2	; 0x02
    2f2a:	f8 16       	cp	r15, r24
    2f2c:	c0 f4       	brcc	.+48     	; 0x2f5e <_ZL8dir_nextP3DIRi+0x1ae>
    2f2e:	81 e0       	ldi	r24, 0x01	; 1
    2f30:	84 83       	std	Z+4, r24	; 0x04
    2f32:	8d 91       	ld	r24, X+
    2f34:	9c 91       	ld	r25, X
    2f36:	0e 94 2d 0f 	call	0x1e5a	; 0x1e5a <_ZL11sync_windowP5FATFS>
    2f3a:	81 11       	cpse	r24, r1
    2f3c:	57 c0       	rjmp	.+174    	; 0x2fec <_ZL8dir_nextP3DIRi+0x23c>
    2f3e:	d8 01       	movw	r26, r16
    2f40:	ed 91       	ld	r30, X+
    2f42:	fc 91       	ld	r31, X
    2f44:	86 a5       	ldd	r24, Z+46	; 0x2e
    2f46:	97 a5       	ldd	r25, Z+47	; 0x2f
    2f48:	a0 a9       	ldd	r26, Z+48	; 0x30
    2f4a:	b1 a9       	ldd	r27, Z+49	; 0x31
    2f4c:	01 96       	adiw	r24, 0x01	; 1
    2f4e:	a1 1d       	adc	r26, r1
    2f50:	b1 1d       	adc	r27, r1
    2f52:	86 a7       	std	Z+46, r24	; 0x2e
    2f54:	97 a7       	std	Z+47, r25	; 0x2f
    2f56:	a0 ab       	std	Z+48, r26	; 0x30
    2f58:	b1 ab       	std	Z+49, r27	; 0x31
    2f5a:	f3 94       	inc	r15
    2f5c:	e1 cf       	rjmp	.-62     	; 0x2f20 <_ZL8dir_nextP3DIRi+0x170>
    2f5e:	86 a5       	ldd	r24, Z+46	; 0x2e
    2f60:	97 a5       	ldd	r25, Z+47	; 0x2f
    2f62:	a0 a9       	ldd	r26, Z+48	; 0x30
    2f64:	b1 a9       	ldd	r27, Z+49	; 0x31
    2f66:	8f 19       	sub	r24, r15
    2f68:	91 09       	sbc	r25, r1
    2f6a:	a1 09       	sbc	r26, r1
    2f6c:	b1 09       	sbc	r27, r1
    2f6e:	86 a7       	std	Z+46, r24	; 0x2e
    2f70:	97 a7       	std	Z+47, r25	; 0x2f
    2f72:	a0 ab       	std	Z+48, r26	; 0x30
    2f74:	b1 ab       	std	Z+49, r27	; 0x31
    2f76:	f8 01       	movw	r30, r16
    2f78:	82 86       	std	Z+10, r8	; 0x0a
    2f7a:	93 86       	std	Z+11, r9	; 0x0b
    2f7c:	a4 86       	std	Z+12, r10	; 0x0c
    2f7e:	b5 86       	std	Z+13, r11	; 0x0d
    2f80:	b5 01       	movw	r22, r10
    2f82:	a4 01       	movw	r20, r8
    2f84:	80 81       	ld	r24, Z
    2f86:	91 81       	ldd	r25, Z+1	; 0x01
    2f88:	33 db       	rcall	.-2458   	; 0x25f0 <_Z10clust2sectP5FATFSm>
    2f8a:	d8 01       	movw	r26, r16
    2f8c:	1e 96       	adiw	r26, 0x0e	; 14
    2f8e:	6d 93       	st	X+, r22
    2f90:	7d 93       	st	X+, r23
    2f92:	8d 93       	st	X+, r24
    2f94:	9c 93       	st	X, r25
    2f96:	51 97       	sbiw	r26, 0x11	; 17
    2f98:	f8 01       	movw	r30, r16
    2f9a:	d5 83       	std	Z+5, r29	; 0x05
    2f9c:	c4 83       	std	Z+4, r28	; 0x04
    2f9e:	80 81       	ld	r24, Z
    2fa0:	91 81       	ldd	r25, Z+1	; 0x01
    2fa2:	cc 0c       	add	r12, r12
    2fa4:	dd 1c       	adc	r13, r13
    2fa6:	cc 0c       	add	r12, r12
    2fa8:	dd 1c       	adc	r13, r13
    2faa:	cc 0c       	add	r12, r12
    2fac:	dd 1c       	adc	r13, r13
    2fae:	cc 0c       	add	r12, r12
    2fb0:	dd 1c       	adc	r13, r13
    2fb2:	cc 0c       	add	r12, r12
    2fb4:	dd 1c       	adc	r13, r13
    2fb6:	c2 96       	adiw	r24, 0x32	; 50
    2fb8:	c8 0e       	add	r12, r24
    2fba:	d9 1e       	adc	r13, r25
    2fbc:	d3 8a       	std	Z+19, r13	; 0x13
    2fbe:	c2 8a       	std	Z+18, r12	; 0x12
    2fc0:	80 e0       	ldi	r24, 0x00	; 0
    2fc2:	15 c0       	rjmp	.+42     	; 0x2fee <_ZL8dir_nextP3DIRi+0x23e>
    2fc4:	84 e0       	ldi	r24, 0x04	; 4
    2fc6:	13 c0       	rjmp	.+38     	; 0x2fee <_ZL8dir_nextP3DIRi+0x23e>
    2fc8:	84 e0       	ldi	r24, 0x04	; 4
    2fca:	11 c0       	rjmp	.+34     	; 0x2fee <_ZL8dir_nextP3DIRi+0x23e>
    2fcc:	84 e0       	ldi	r24, 0x04	; 4
    2fce:	0f c0       	rjmp	.+30     	; 0x2fee <_ZL8dir_nextP3DIRi+0x23e>
    2fd0:	82 e0       	ldi	r24, 0x02	; 2
    2fd2:	0d c0       	rjmp	.+26     	; 0x2fee <_ZL8dir_nextP3DIRi+0x23e>
    2fd4:	81 e0       	ldi	r24, 0x01	; 1
    2fd6:	0b c0       	rjmp	.+22     	; 0x2fee <_ZL8dir_nextP3DIRi+0x23e>
    2fd8:	84 e0       	ldi	r24, 0x04	; 4
    2fda:	09 c0       	rjmp	.+18     	; 0x2fee <_ZL8dir_nextP3DIRi+0x23e>
    2fdc:	87 e0       	ldi	r24, 0x07	; 7
    2fde:	07 c0       	rjmp	.+14     	; 0x2fee <_ZL8dir_nextP3DIRi+0x23e>
    2fe0:	82 e0       	ldi	r24, 0x02	; 2
    2fe2:	05 c0       	rjmp	.+10     	; 0x2fee <_ZL8dir_nextP3DIRi+0x23e>
    2fe4:	81 e0       	ldi	r24, 0x01	; 1
    2fe6:	03 c0       	rjmp	.+6      	; 0x2fee <_ZL8dir_nextP3DIRi+0x23e>
    2fe8:	81 e0       	ldi	r24, 0x01	; 1
    2fea:	01 c0       	rjmp	.+2      	; 0x2fee <_ZL8dir_nextP3DIRi+0x23e>
    2fec:	81 e0       	ldi	r24, 0x01	; 1
    2fee:	df 91       	pop	r29
    2ff0:	cf 91       	pop	r28
    2ff2:	1f 91       	pop	r17
    2ff4:	0f 91       	pop	r16
    2ff6:	ff 90       	pop	r15
    2ff8:	ef 90       	pop	r14
    2ffa:	df 90       	pop	r13
    2ffc:	cf 90       	pop	r12
    2ffe:	bf 90       	pop	r11
    3000:	af 90       	pop	r10
    3002:	9f 90       	pop	r9
    3004:	8f 90       	pop	r8
    3006:	08 95       	ret

00003008 <_ZL8dir_findP3DIR>:
    3008:	1f 93       	push	r17
    300a:	cf 93       	push	r28
    300c:	df 93       	push	r29
    300e:	ec 01       	movw	r28, r24
    3010:	60 e0       	ldi	r22, 0x00	; 0
    3012:	70 e0       	ldi	r23, 0x00	; 0
    3014:	ff db       	rcall	.-2050   	; 0x2814 <_ZL7dir_sdiP3DIRt>
    3016:	81 11       	cpse	r24, r1
    3018:	2e c0       	rjmp	.+92     	; 0x3076 <_ZL8dir_findP3DIR+0x6e>
    301a:	4e 85       	ldd	r20, Y+14	; 0x0e
    301c:	5f 85       	ldd	r21, Y+15	; 0x0f
    301e:	68 89       	ldd	r22, Y+16	; 0x10
    3020:	79 89       	ldd	r23, Y+17	; 0x11
    3022:	88 81       	ld	r24, Y
    3024:	99 81       	ldd	r25, Y+1	; 0x01
    3026:	0e 94 94 0f 	call	0x1f28	; 0x1f28 <_ZL11move_windowP5FATFSm>
    302a:	18 2f       	mov	r17, r24
    302c:	81 11       	cpse	r24, r1
    302e:	1f c0       	rjmp	.+62     	; 0x306e <_ZL8dir_findP3DIR+0x66>
    3030:	ea 89       	ldd	r30, Y+18	; 0x12
    3032:	fb 89       	ldd	r31, Y+19	; 0x13
    3034:	80 81       	ld	r24, Z
    3036:	88 23       	and	r24, r24
    3038:	d9 f0       	breq	.+54     	; 0x3070 <_ZL8dir_findP3DIR+0x68>
    303a:	83 85       	ldd	r24, Z+11	; 0x0b
    303c:	83 fd       	sbrc	r24, 3
    303e:	0b c0       	rjmp	.+22     	; 0x3056 <_ZL8dir_findP3DIR+0x4e>
    3040:	6c 89       	ldd	r22, Y+20	; 0x14
    3042:	7d 89       	ldd	r23, Y+21	; 0x15
    3044:	4b e0       	ldi	r20, 0x0B	; 11
    3046:	50 e0       	ldi	r21, 0x00	; 0
    3048:	cf 01       	movw	r24, r30
    304a:	0e 94 e3 0d 	call	0x1bc6	; 0x1bc6 <_ZL7mem_cmpPKvS0_j>
    304e:	89 2b       	or	r24, r25
    3050:	21 f4       	brne	.+8      	; 0x305a <_ZL8dir_findP3DIR+0x52>
    3052:	81 e0       	ldi	r24, 0x01	; 1
    3054:	03 c0       	rjmp	.+6      	; 0x305c <_ZL8dir_findP3DIR+0x54>
    3056:	80 e0       	ldi	r24, 0x00	; 0
    3058:	01 c0       	rjmp	.+2      	; 0x305c <_ZL8dir_findP3DIR+0x54>
    305a:	80 e0       	ldi	r24, 0x00	; 0
    305c:	81 11       	cpse	r24, r1
    305e:	0a c0       	rjmp	.+20     	; 0x3074 <_ZL8dir_findP3DIR+0x6c>
    3060:	60 e0       	ldi	r22, 0x00	; 0
    3062:	70 e0       	ldi	r23, 0x00	; 0
    3064:	ce 01       	movw	r24, r28
    3066:	a4 de       	rcall	.-696    	; 0x2db0 <_ZL8dir_nextP3DIRi>
    3068:	88 23       	and	r24, r24
    306a:	b9 f2       	breq	.-82     	; 0x301a <_ZL8dir_findP3DIR+0x12>
    306c:	04 c0       	rjmp	.+8      	; 0x3076 <_ZL8dir_findP3DIR+0x6e>
    306e:	03 c0       	rjmp	.+6      	; 0x3076 <_ZL8dir_findP3DIR+0x6e>
    3070:	84 e0       	ldi	r24, 0x04	; 4
    3072:	01 c0       	rjmp	.+2      	; 0x3076 <_ZL8dir_findP3DIR+0x6e>
    3074:	81 2f       	mov	r24, r17
    3076:	df 91       	pop	r29
    3078:	cf 91       	pop	r28
    307a:	1f 91       	pop	r17
    307c:	08 95       	ret

0000307e <_ZL11follow_pathP3DIRPKc>:
    307e:	0f 93       	push	r16
    3080:	1f 93       	push	r17
    3082:	cf 93       	push	r28
    3084:	df 93       	push	r29
    3086:	00 d0       	rcall	.+0      	; 0x3088 <_ZL11follow_pathP3DIRPKc+0xa>
    3088:	cd b7       	in	r28, 0x3d	; 61
    308a:	de b7       	in	r29, 0x3e	; 62
    308c:	8c 01       	movw	r16, r24
    308e:	7a 83       	std	Y+2, r23	; 0x02
    3090:	69 83       	std	Y+1, r22	; 0x01
    3092:	e6 2f       	mov	r30, r22
    3094:	f7 2f       	mov	r31, r23
    3096:	80 81       	ld	r24, Z
    3098:	8f 32       	cpi	r24, 0x2F	; 47
    309a:	11 f0       	breq	.+4      	; 0x30a0 <_ZL11follow_pathP3DIRPKc+0x22>
    309c:	8c 35       	cpi	r24, 0x5C	; 92
    309e:	19 f4       	brne	.+6      	; 0x30a6 <_ZL11follow_pathP3DIRPKc+0x28>
    30a0:	31 96       	adiw	r30, 0x01	; 1
    30a2:	fa 83       	std	Y+2, r31	; 0x02
    30a4:	e9 83       	std	Y+1, r30	; 0x01
    30a6:	d8 01       	movw	r26, r16
    30a8:	16 96       	adiw	r26, 0x06	; 6
    30aa:	1d 92       	st	X+, r1
    30ac:	1d 92       	st	X+, r1
    30ae:	1d 92       	st	X+, r1
    30b0:	1c 92       	st	X, r1
    30b2:	19 97       	sbiw	r26, 0x09	; 9
    30b4:	e9 81       	ldd	r30, Y+1	; 0x01
    30b6:	fa 81       	ldd	r31, Y+2	; 0x02
    30b8:	80 81       	ld	r24, Z
    30ba:	80 32       	cpi	r24, 0x20	; 32
    30bc:	40 f4       	brcc	.+16     	; 0x30ce <_ZL11follow_pathP3DIRPKc+0x50>
    30be:	60 e0       	ldi	r22, 0x00	; 0
    30c0:	70 e0       	ldi	r23, 0x00	; 0
    30c2:	c8 01       	movw	r24, r16
    30c4:	a7 db       	rcall	.-2226   	; 0x2814 <_ZL7dir_sdiP3DIRt>
    30c6:	f8 01       	movw	r30, r16
    30c8:	13 8a       	std	Z+19, r1	; 0x13
    30ca:	12 8a       	std	Z+18, r1	; 0x12
    30cc:	2e c0       	rjmp	.+92     	; 0x312a <_ZL11follow_pathP3DIRPKc+0xac>
    30ce:	be 01       	movw	r22, r28
    30d0:	6f 5f       	subi	r22, 0xFF	; 255
    30d2:	7f 4f       	sbci	r23, 0xFF	; 255
    30d4:	c8 01       	movw	r24, r16
    30d6:	0e 94 34 0e 	call	0x1c68	; 0x1c68 <_ZL11create_nameP3DIRPPKc>
    30da:	81 11       	cpse	r24, r1
    30dc:	26 c0       	rjmp	.+76     	; 0x312a <_ZL11follow_pathP3DIRPKc+0xac>
    30de:	c8 01       	movw	r24, r16
    30e0:	93 df       	rcall	.-218    	; 0x3008 <_ZL8dir_findP3DIR>
    30e2:	d8 01       	movw	r26, r16
    30e4:	54 96       	adiw	r26, 0x14	; 20
    30e6:	ed 91       	ld	r30, X+
    30e8:	fc 91       	ld	r31, X
    30ea:	55 97       	sbiw	r26, 0x15	; 21
    30ec:	93 85       	ldd	r25, Z+11	; 0x0b
    30ee:	88 23       	and	r24, r24
    30f0:	29 f0       	breq	.+10     	; 0x30fc <_ZL11follow_pathP3DIRPKc+0x7e>
    30f2:	84 30       	cpi	r24, 0x04	; 4
    30f4:	d1 f4       	brne	.+52     	; 0x312a <_ZL11follow_pathP3DIRPKc+0xac>
    30f6:	92 ff       	sbrs	r25, 2
    30f8:	15 c0       	rjmp	.+42     	; 0x3124 <_ZL11follow_pathP3DIRPKc+0xa6>
    30fa:	17 c0       	rjmp	.+46     	; 0x312a <_ZL11follow_pathP3DIRPKc+0xac>
    30fc:	92 fd       	sbrc	r25, 2
    30fe:	15 c0       	rjmp	.+42     	; 0x312a <_ZL11follow_pathP3DIRPKc+0xac>
    3100:	f8 01       	movw	r30, r16
    3102:	62 89       	ldd	r22, Z+18	; 0x12
    3104:	73 89       	ldd	r23, Z+19	; 0x13
    3106:	db 01       	movw	r26, r22
    3108:	1b 96       	adiw	r26, 0x0b	; 11
    310a:	8c 91       	ld	r24, X
    310c:	84 ff       	sbrs	r24, 4
    310e:	0c c0       	rjmp	.+24     	; 0x3128 <_ZL11follow_pathP3DIRPKc+0xaa>
    3110:	80 81       	ld	r24, Z
    3112:	91 81       	ldd	r25, Z+1	; 0x01
    3114:	0e 94 15 0e 	call	0x1c2a	; 0x1c2a <_ZL8ld_clustP5FATFSPh>
    3118:	f8 01       	movw	r30, r16
    311a:	66 83       	std	Z+6, r22	; 0x06
    311c:	77 83       	std	Z+7, r23	; 0x07
    311e:	80 87       	std	Z+8, r24	; 0x08
    3120:	91 87       	std	Z+9, r25	; 0x09
    3122:	d5 cf       	rjmp	.-86     	; 0x30ce <_ZL11follow_pathP3DIRPKc+0x50>
    3124:	85 e0       	ldi	r24, 0x05	; 5
    3126:	01 c0       	rjmp	.+2      	; 0x312a <_ZL11follow_pathP3DIRPKc+0xac>
    3128:	85 e0       	ldi	r24, 0x05	; 5
    312a:	0f 90       	pop	r0
    312c:	0f 90       	pop	r0
    312e:	df 91       	pop	r29
    3130:	cf 91       	pop	r28
    3132:	1f 91       	pop	r17
    3134:	0f 91       	pop	r16
    3136:	08 95       	ret

00003138 <_ZL9dir_allocP3DIRj>:
    3138:	ef 92       	push	r14
    313a:	ff 92       	push	r15
    313c:	0f 93       	push	r16
    313e:	1f 93       	push	r17
    3140:	cf 93       	push	r28
    3142:	df 93       	push	r29
    3144:	ec 01       	movw	r28, r24
    3146:	7b 01       	movw	r14, r22
    3148:	60 e0       	ldi	r22, 0x00	; 0
    314a:	70 e0       	ldi	r23, 0x00	; 0
    314c:	63 db       	rcall	.-2362   	; 0x2814 <_ZL7dir_sdiP3DIRt>
    314e:	81 11       	cpse	r24, r1
    3150:	21 c0       	rjmp	.+66     	; 0x3194 <_ZL9dir_allocP3DIRj+0x5c>
    3152:	00 e0       	ldi	r16, 0x00	; 0
    3154:	10 e0       	ldi	r17, 0x00	; 0
    3156:	4e 85       	ldd	r20, Y+14	; 0x0e
    3158:	5f 85       	ldd	r21, Y+15	; 0x0f
    315a:	68 89       	ldd	r22, Y+16	; 0x10
    315c:	79 89       	ldd	r23, Y+17	; 0x11
    315e:	88 81       	ld	r24, Y
    3160:	99 81       	ldd	r25, Y+1	; 0x01
    3162:	0e 94 94 0f 	call	0x1f28	; 0x1f28 <_ZL11move_windowP5FATFSm>
    3166:	81 11       	cpse	r24, r1
    3168:	15 c0       	rjmp	.+42     	; 0x3194 <_ZL9dir_allocP3DIRj+0x5c>
    316a:	ea 89       	ldd	r30, Y+18	; 0x12
    316c:	fb 89       	ldd	r31, Y+19	; 0x13
    316e:	90 81       	ld	r25, Z
    3170:	95 3e       	cpi	r25, 0xE5	; 229
    3172:	11 f0       	breq	.+4      	; 0x3178 <_ZL9dir_allocP3DIRj+0x40>
    3174:	91 11       	cpse	r25, r1
    3176:	06 c0       	rjmp	.+12     	; 0x3184 <_ZL9dir_allocP3DIRj+0x4c>
    3178:	0f 5f       	subi	r16, 0xFF	; 255
    317a:	1f 4f       	sbci	r17, 0xFF	; 255
    317c:	0e 15       	cp	r16, r14
    317e:	1f 05       	cpc	r17, r15
    3180:	19 f4       	brne	.+6      	; 0x3188 <_ZL9dir_allocP3DIRj+0x50>
    3182:	08 c0       	rjmp	.+16     	; 0x3194 <_ZL9dir_allocP3DIRj+0x5c>
    3184:	00 e0       	ldi	r16, 0x00	; 0
    3186:	10 e0       	ldi	r17, 0x00	; 0
    3188:	61 e0       	ldi	r22, 0x01	; 1
    318a:	70 e0       	ldi	r23, 0x00	; 0
    318c:	ce 01       	movw	r24, r28
    318e:	10 de       	rcall	.-992    	; 0x2db0 <_ZL8dir_nextP3DIRi>
    3190:	88 23       	and	r24, r24
    3192:	09 f3       	breq	.-62     	; 0x3156 <_ZL9dir_allocP3DIRj+0x1e>
    3194:	df 91       	pop	r29
    3196:	cf 91       	pop	r28
    3198:	1f 91       	pop	r17
    319a:	0f 91       	pop	r16
    319c:	ff 90       	pop	r15
    319e:	ef 90       	pop	r14
    31a0:	08 95       	ret

000031a2 <_ZL12dir_registerP3DIR>:
    31a2:	0f 93       	push	r16
    31a4:	1f 93       	push	r17
    31a6:	cf 93       	push	r28
    31a8:	8c 01       	movw	r16, r24
    31aa:	61 e0       	ldi	r22, 0x01	; 1
    31ac:	70 e0       	ldi	r23, 0x00	; 0
    31ae:	c4 df       	rcall	.-120    	; 0x3138 <_ZL9dir_allocP3DIRj>
    31b0:	c8 2f       	mov	r28, r24
    31b2:	81 11       	cpse	r24, r1
    31b4:	29 c0       	rjmp	.+82     	; 0x3208 <_ZL12dir_registerP3DIR+0x66>
    31b6:	d8 01       	movw	r26, r16
    31b8:	1e 96       	adiw	r26, 0x0e	; 14
    31ba:	4d 91       	ld	r20, X+
    31bc:	5d 91       	ld	r21, X+
    31be:	6d 91       	ld	r22, X+
    31c0:	7c 91       	ld	r23, X
    31c2:	51 97       	sbiw	r26, 0x11	; 17
    31c4:	8d 91       	ld	r24, X+
    31c6:	9c 91       	ld	r25, X
    31c8:	0e 94 94 0f 	call	0x1f28	; 0x1f28 <_ZL11move_windowP5FATFSm>
    31cc:	c8 2f       	mov	r28, r24
    31ce:	81 11       	cpse	r24, r1
    31d0:	1b c0       	rjmp	.+54     	; 0x3208 <_ZL12dir_registerP3DIR+0x66>
    31d2:	40 e2       	ldi	r20, 0x20	; 32
    31d4:	50 e0       	ldi	r21, 0x00	; 0
    31d6:	60 e0       	ldi	r22, 0x00	; 0
    31d8:	70 e0       	ldi	r23, 0x00	; 0
    31da:	f8 01       	movw	r30, r16
    31dc:	82 89       	ldd	r24, Z+18	; 0x12
    31de:	93 89       	ldd	r25, Z+19	; 0x13
    31e0:	0e 94 d9 0d 	call	0x1bb2	; 0x1bb2 <_ZL7mem_setPvij>
    31e4:	d8 01       	movw	r26, r16
    31e6:	54 96       	adiw	r26, 0x14	; 20
    31e8:	6d 91       	ld	r22, X+
    31ea:	7c 91       	ld	r23, X
    31ec:	55 97       	sbiw	r26, 0x15	; 21
    31ee:	4b e0       	ldi	r20, 0x0B	; 11
    31f0:	50 e0       	ldi	r21, 0x00	; 0
    31f2:	52 96       	adiw	r26, 0x12	; 18
    31f4:	8d 91       	ld	r24, X+
    31f6:	9c 91       	ld	r25, X
    31f8:	53 97       	sbiw	r26, 0x13	; 19
    31fa:	0e 94 c2 0d 	call	0x1b84	; 0x1b84 <_ZL7mem_cpyPvPKvj>
    31fe:	d8 01       	movw	r26, r16
    3200:	ed 91       	ld	r30, X+
    3202:	fc 91       	ld	r31, X
    3204:	81 e0       	ldi	r24, 0x01	; 1
    3206:	84 83       	std	Z+4, r24	; 0x04
    3208:	8c 2f       	mov	r24, r28
    320a:	cf 91       	pop	r28
    320c:	1f 91       	pop	r17
    320e:	0f 91       	pop	r16
    3210:	08 95       	ret

00003212 <_ZL12remove_chainP5FATFSm>:
    3212:	8f 92       	push	r8
    3214:	9f 92       	push	r9
    3216:	af 92       	push	r10
    3218:	bf 92       	push	r11
    321a:	cf 92       	push	r12
    321c:	df 92       	push	r13
    321e:	ef 92       	push	r14
    3220:	ff 92       	push	r15
    3222:	0f 93       	push	r16
    3224:	1f 93       	push	r17
    3226:	cf 93       	push	r28
    3228:	df 93       	push	r29
    322a:	ec 01       	movw	r28, r24
    322c:	6a 01       	movw	r12, r20
    322e:	7b 01       	movw	r14, r22
    3230:	42 30       	cpi	r20, 0x02	; 2
    3232:	51 05       	cpc	r21, r1
    3234:	61 05       	cpc	r22, r1
    3236:	71 05       	cpc	r23, r1
    3238:	08 f4       	brcc	.+2      	; 0x323c <_ZL12remove_chainP5FATFSm+0x2a>
    323a:	4b c0       	rjmp	.+150    	; 0x32d2 <_ZL12remove_chainP5FATFSm+0xc0>
    323c:	8e 89       	ldd	r24, Y+22	; 0x16
    323e:	9f 89       	ldd	r25, Y+23	; 0x17
    3240:	a8 8d       	ldd	r26, Y+24	; 0x18
    3242:	b9 8d       	ldd	r27, Y+25	; 0x19
    3244:	48 17       	cp	r20, r24
    3246:	59 07       	cpc	r21, r25
    3248:	6a 07       	cpc	r22, r26
    324a:	7b 07       	cpc	r23, r27
    324c:	08 f0       	brcs	.+2      	; 0x3250 <_ZL12remove_chainP5FATFSm+0x3e>
    324e:	43 c0       	rjmp	.+134    	; 0x32d6 <_ZL12remove_chainP5FATFSm+0xc4>
    3250:	10 e0       	ldi	r17, 0x00	; 0
    3252:	02 c0       	rjmp	.+4      	; 0x3258 <_ZL12remove_chainP5FATFSm+0x46>
    3254:	75 01       	movw	r14, r10
    3256:	64 01       	movw	r12, r8
    3258:	8e 89       	ldd	r24, Y+22	; 0x16
    325a:	9f 89       	ldd	r25, Y+23	; 0x17
    325c:	a8 8d       	ldd	r26, Y+24	; 0x18
    325e:	b9 8d       	ldd	r27, Y+25	; 0x19
    3260:	c8 16       	cp	r12, r24
    3262:	d9 06       	cpc	r13, r25
    3264:	ea 06       	cpc	r14, r26
    3266:	fb 06       	cpc	r15, r27
    3268:	d8 f5       	brcc	.+118    	; 0x32e0 <_ZL12remove_chainP5FATFSm+0xce>
    326a:	b7 01       	movw	r22, r14
    326c:	a6 01       	movw	r20, r12
    326e:	ce 01       	movw	r24, r28
    3270:	e7 d9       	rcall	.-3122   	; 0x2640 <_Z7get_fatP5FATFSm>
    3272:	4b 01       	movw	r8, r22
    3274:	5c 01       	movw	r10, r24
    3276:	67 2b       	or	r22, r23
    3278:	68 2b       	or	r22, r24
    327a:	69 2b       	or	r22, r25
    327c:	89 f1       	breq	.+98     	; 0x32e0 <_ZL12remove_chainP5FATFSm+0xce>
    327e:	81 e0       	ldi	r24, 0x01	; 1
    3280:	88 16       	cp	r8, r24
    3282:	91 04       	cpc	r9, r1
    3284:	a1 04       	cpc	r10, r1
    3286:	b1 04       	cpc	r11, r1
    3288:	41 f1       	breq	.+80     	; 0x32da <_ZL12remove_chainP5FATFSm+0xc8>
    328a:	2f ef       	ldi	r18, 0xFF	; 255
    328c:	82 16       	cp	r8, r18
    328e:	92 06       	cpc	r9, r18
    3290:	a2 06       	cpc	r10, r18
    3292:	b2 06       	cpc	r11, r18
    3294:	21 f1       	breq	.+72     	; 0x32de <_ZL12remove_chainP5FATFSm+0xcc>
    3296:	00 e0       	ldi	r16, 0x00	; 0
    3298:	10 e0       	ldi	r17, 0x00	; 0
    329a:	98 01       	movw	r18, r16
    329c:	b7 01       	movw	r22, r14
    329e:	a6 01       	movw	r20, r12
    32a0:	ce 01       	movw	r24, r28
    32a2:	6f db       	rcall	.-2338   	; 0x2982 <_Z7put_fatP5FATFSmm>
    32a4:	18 2f       	mov	r17, r24
    32a6:	81 11       	cpse	r24, r1
    32a8:	1b c0       	rjmp	.+54     	; 0x32e0 <_ZL12remove_chainP5FATFSm+0xce>
    32aa:	8e 85       	ldd	r24, Y+14	; 0x0e
    32ac:	9f 85       	ldd	r25, Y+15	; 0x0f
    32ae:	a8 89       	ldd	r26, Y+16	; 0x10
    32b0:	b9 89       	ldd	r27, Y+17	; 0x11
    32b2:	8f 3f       	cpi	r24, 0xFF	; 255
    32b4:	2f ef       	ldi	r18, 0xFF	; 255
    32b6:	92 07       	cpc	r25, r18
    32b8:	a2 07       	cpc	r26, r18
    32ba:	b2 07       	cpc	r27, r18
    32bc:	59 f2       	breq	.-106    	; 0x3254 <_ZL12remove_chainP5FATFSm+0x42>
    32be:	01 96       	adiw	r24, 0x01	; 1
    32c0:	a1 1d       	adc	r26, r1
    32c2:	b1 1d       	adc	r27, r1
    32c4:	8e 87       	std	Y+14, r24	; 0x0e
    32c6:	9f 87       	std	Y+15, r25	; 0x0f
    32c8:	a8 8b       	std	Y+16, r26	; 0x10
    32ca:	b9 8b       	std	Y+17, r27	; 0x11
    32cc:	81 e0       	ldi	r24, 0x01	; 1
    32ce:	8d 83       	std	Y+5, r24	; 0x05
    32d0:	c1 cf       	rjmp	.-126    	; 0x3254 <_ZL12remove_chainP5FATFSm+0x42>
    32d2:	12 e0       	ldi	r17, 0x02	; 2
    32d4:	05 c0       	rjmp	.+10     	; 0x32e0 <_ZL12remove_chainP5FATFSm+0xce>
    32d6:	12 e0       	ldi	r17, 0x02	; 2
    32d8:	03 c0       	rjmp	.+6      	; 0x32e0 <_ZL12remove_chainP5FATFSm+0xce>
    32da:	12 e0       	ldi	r17, 0x02	; 2
    32dc:	01 c0       	rjmp	.+2      	; 0x32e0 <_ZL12remove_chainP5FATFSm+0xce>
    32de:	11 e0       	ldi	r17, 0x01	; 1
    32e0:	81 2f       	mov	r24, r17
    32e2:	df 91       	pop	r29
    32e4:	cf 91       	pop	r28
    32e6:	1f 91       	pop	r17
    32e8:	0f 91       	pop	r16
    32ea:	ff 90       	pop	r15
    32ec:	ef 90       	pop	r14
    32ee:	df 90       	pop	r13
    32f0:	cf 90       	pop	r12
    32f2:	bf 90       	pop	r11
    32f4:	af 90       	pop	r10
    32f6:	9f 90       	pop	r9
    32f8:	8f 90       	pop	r8
    32fa:	08 95       	ret

000032fc <f_mount>:
    32fc:	81 11       	cpse	r24, r1
    32fe:	1a c0       	rjmp	.+52     	; 0x3334 <f_mount+0x38>
    3300:	90 e0       	ldi	r25, 0x00	; 0
    3302:	fc 01       	movw	r30, r24
    3304:	ee 0f       	add	r30, r30
    3306:	ff 1f       	adc	r31, r31
    3308:	e8 51       	subi	r30, 0x18	; 24
    330a:	fc 4f       	sbci	r31, 0xFC	; 252
    330c:	01 90       	ld	r0, Z+
    330e:	f0 81       	ld	r31, Z
    3310:	e0 2d       	mov	r30, r0
    3312:	30 97       	sbiw	r30, 0x00	; 0
    3314:	09 f0       	breq	.+2      	; 0x3318 <f_mount+0x1c>
    3316:	10 82       	st	Z, r1
    3318:	61 15       	cp	r22, r1
    331a:	71 05       	cpc	r23, r1
    331c:	11 f0       	breq	.+4      	; 0x3322 <f_mount+0x26>
    331e:	fb 01       	movw	r30, r22
    3320:	10 82       	st	Z, r1
    3322:	88 0f       	add	r24, r24
    3324:	99 1f       	adc	r25, r25
    3326:	fc 01       	movw	r30, r24
    3328:	e8 51       	subi	r30, 0x18	; 24
    332a:	fc 4f       	sbci	r31, 0xFC	; 252
    332c:	71 83       	std	Z+1, r23	; 0x01
    332e:	60 83       	st	Z, r22
    3330:	80 e0       	ldi	r24, 0x00	; 0
    3332:	08 95       	ret
    3334:	8b e0       	ldi	r24, 0x0B	; 11
    3336:	08 95       	ret

00003338 <f_open>:
    3338:	4f 92       	push	r4
    333a:	5f 92       	push	r5
    333c:	6f 92       	push	r6
    333e:	7f 92       	push	r7
    3340:	af 92       	push	r10
    3342:	bf 92       	push	r11
    3344:	cf 92       	push	r12
    3346:	df 92       	push	r13
    3348:	ef 92       	push	r14
    334a:	ff 92       	push	r15
    334c:	0f 93       	push	r16
    334e:	1f 93       	push	r17
    3350:	cf 93       	push	r28
    3352:	df 93       	push	r29
    3354:	cd b7       	in	r28, 0x3d	; 61
    3356:	de b7       	in	r29, 0x3e	; 62
    3358:	a8 97       	sbiw	r28, 0x28	; 40
    335a:	0f b6       	in	r0, 0x3f	; 63
    335c:	f8 94       	cli
    335e:	de bf       	out	0x3e, r29	; 62
    3360:	0f be       	out	0x3f, r0	; 63
    3362:	cd bf       	out	0x3d, r28	; 61
    3364:	7c a3       	std	Y+36, r23	; 0x24
    3366:	6b a3       	std	Y+35, r22	; 0x23
    3368:	00 97       	sbiw	r24, 0x00	; 0
    336a:	09 f4       	brne	.+2      	; 0x336e <f_open+0x36>
    336c:	d9 c0       	rjmp	.+434    	; 0x3520 <f_open+0x1e8>
    336e:	04 2f       	mov	r16, r20
    3370:	7c 01       	movw	r14, r24
    3372:	dc 01       	movw	r26, r24
    3374:	1d 92       	st	X+, r1
    3376:	1c 92       	st	X, r1
    3378:	b4 2f       	mov	r27, r20
    337a:	bf 71       	andi	r27, 0x1F	; 31
    337c:	db 2e       	mov	r13, r27
    337e:	4e 71       	andi	r20, 0x1E	; 30
    3380:	be 01       	movw	r22, r28
    3382:	6f 5f       	subi	r22, 0xFF	; 255
    3384:	7f 4f       	sbci	r23, 0xFF	; 255
    3386:	ce 01       	movw	r24, r28
    3388:	83 96       	adiw	r24, 0x23	; 35
    338a:	0e 94 f1 0f 	call	0x1fe2	; 0x1fe2 <_ZL11chk_mountedPPKcPP5FATFSh>
    338e:	81 11       	cpse	r24, r1
    3390:	ca c0       	rjmp	.+404    	; 0x3526 <f_open+0x1ee>
    3392:	ce 01       	movw	r24, r28
    3394:	47 96       	adiw	r24, 0x17	; 23
    3396:	9e 8b       	std	Y+22, r25	; 0x16
    3398:	8d 8b       	std	Y+21, r24	; 0x15
    339a:	6b a1       	ldd	r22, Y+35	; 0x23
    339c:	7c a1       	ldd	r23, Y+36	; 0x24
    339e:	46 97       	sbiw	r24, 0x16	; 22
    33a0:	6e de       	rcall	.-804    	; 0x307e <_ZL11follow_pathP3DIRPKc>
    33a2:	18 2f       	mov	r17, r24
    33a4:	ab 88       	ldd	r10, Y+19	; 0x13
    33a6:	bc 88       	ldd	r11, Y+20	; 0x14
    33a8:	81 11       	cpse	r24, r1
    33aa:	04 c0       	rjmp	.+8      	; 0x33b4 <f_open+0x7c>
    33ac:	a1 14       	cp	r10, r1
    33ae:	b1 04       	cpc	r11, r1
    33b0:	09 f4       	brne	.+2      	; 0x33b4 <f_open+0x7c>
    33b2:	16 e0       	ldi	r17, 0x06	; 6
    33b4:	80 2f       	mov	r24, r16
    33b6:	8c 71       	andi	r24, 0x1C	; 28
    33b8:	09 f4       	brne	.+2      	; 0x33bc <f_open+0x84>
    33ba:	62 c0       	rjmp	.+196    	; 0x3480 <f_open+0x148>
    33bc:	11 23       	and	r17, r17
    33be:	61 f0       	breq	.+24     	; 0x33d8 <f_open+0xa0>
    33c0:	14 30       	cpi	r17, 0x04	; 4
    33c2:	21 f4       	brne	.+8      	; 0x33cc <f_open+0x94>
    33c4:	ce 01       	movw	r24, r28
    33c6:	01 96       	adiw	r24, 0x01	; 1
    33c8:	ec de       	rcall	.-552    	; 0x31a2 <_ZL12dir_registerP3DIR>
    33ca:	18 2f       	mov	r17, r24
    33cc:	ed 2d       	mov	r30, r13
    33ce:	e8 60       	ori	r30, 0x08	; 8
    33d0:	de 2e       	mov	r13, r30
    33d2:	ab 88       	ldd	r10, Y+19	; 0x13
    33d4:	bc 88       	ldd	r11, Y+20	; 0x14
    33d6:	0b c0       	rjmp	.+22     	; 0x33ee <f_open+0xb6>
    33d8:	d5 01       	movw	r26, r10
    33da:	1b 96       	adiw	r26, 0x0b	; 11
    33dc:	8c 91       	ld	r24, X
    33de:	81 71       	andi	r24, 0x11	; 17
    33e0:	19 f4       	brne	.+6      	; 0x33e8 <f_open+0xb0>
    33e2:	02 fd       	sbrc	r16, 2
    33e4:	03 c0       	rjmp	.+6      	; 0x33ec <f_open+0xb4>
    33e6:	03 c0       	rjmp	.+6      	; 0x33ee <f_open+0xb6>
    33e8:	17 e0       	ldi	r17, 0x07	; 7
    33ea:	01 c0       	rjmp	.+2      	; 0x33ee <f_open+0xb6>
    33ec:	18 e0       	ldi	r17, 0x08	; 8
    33ee:	11 11       	cpse	r17, r1
    33f0:	56 c0       	rjmp	.+172    	; 0x349e <f_open+0x166>
    33f2:	d3 fe       	sbrs	r13, 3
    33f4:	54 c0       	rjmp	.+168    	; 0x349e <f_open+0x166>
    33f6:	0e 94 66 00 	call	0xcc	; 0xcc <get_fattime>
    33fa:	f5 01       	movw	r30, r10
    33fc:	66 87       	std	Z+14, r22	; 0x0e
    33fe:	77 87       	std	Z+15, r23	; 0x0f
    3400:	80 8b       	std	Z+16, r24	; 0x10
    3402:	91 8b       	std	Z+17, r25	; 0x11
    3404:	13 86       	std	Z+11, r1	; 0x0b
    3406:	14 8e       	std	Z+28, r1	; 0x1c
    3408:	15 8e       	std	Z+29, r1	; 0x1d
    340a:	16 8e       	std	Z+30, r1	; 0x1e
    340c:	17 8e       	std	Z+31, r1	; 0x1f
    340e:	b5 01       	movw	r22, r10
    3410:	89 81       	ldd	r24, Y+1	; 0x01
    3412:	9a 81       	ldd	r25, Y+2	; 0x02
    3414:	0e 94 15 0e 	call	0x1c2a	; 0x1c2a <_ZL8ld_clustP5FATFSPh>
    3418:	2b 01       	movw	r4, r22
    341a:	3c 01       	movw	r6, r24
    341c:	40 e0       	ldi	r20, 0x00	; 0
    341e:	50 e0       	ldi	r21, 0x00	; 0
    3420:	ba 01       	movw	r22, r20
    3422:	c5 01       	movw	r24, r10
    3424:	0e 94 2e 0e 	call	0x1c5c	; 0x1c5c <_ZL8st_clustPhm>
    3428:	e9 81       	ldd	r30, Y+1	; 0x01
    342a:	fa 81       	ldd	r31, Y+2	; 0x02
    342c:	81 e0       	ldi	r24, 0x01	; 1
    342e:	84 83       	std	Z+4, r24	; 0x04
    3430:	41 14       	cp	r4, r1
    3432:	51 04       	cpc	r5, r1
    3434:	61 04       	cpc	r6, r1
    3436:	71 04       	cpc	r7, r1
    3438:	91 f1       	breq	.+100    	; 0x349e <f_open+0x166>
    343a:	86 a5       	ldd	r24, Z+46	; 0x2e
    343c:	97 a5       	ldd	r25, Z+47	; 0x2f
    343e:	a0 a9       	ldd	r26, Z+48	; 0x30
    3440:	b1 a9       	ldd	r27, Z+49	; 0x31
    3442:	8d a3       	std	Y+37, r24	; 0x25
    3444:	9e a3       	std	Y+38, r25	; 0x26
    3446:	af a3       	std	Y+39, r26	; 0x27
    3448:	b8 a7       	std	Y+40, r27	; 0x28
    344a:	b3 01       	movw	r22, r6
    344c:	a2 01       	movw	r20, r4
    344e:	cf 01       	movw	r24, r30
    3450:	e0 de       	rcall	.-576    	; 0x3212 <_ZL12remove_chainP5FATFSm>
    3452:	18 2f       	mov	r17, r24
    3454:	81 11       	cpse	r24, r1
    3456:	23 c0       	rjmp	.+70     	; 0x349e <f_open+0x166>
    3458:	89 81       	ldd	r24, Y+1	; 0x01
    345a:	9a 81       	ldd	r25, Y+2	; 0x02
    345c:	a1 e0       	ldi	r26, 0x01	; 1
    345e:	4a 1a       	sub	r4, r26
    3460:	51 08       	sbc	r5, r1
    3462:	61 08       	sbc	r6, r1
    3464:	71 08       	sbc	r7, r1
    3466:	fc 01       	movw	r30, r24
    3468:	42 86       	std	Z+10, r4	; 0x0a
    346a:	53 86       	std	Z+11, r5	; 0x0b
    346c:	64 86       	std	Z+12, r6	; 0x0c
    346e:	75 86       	std	Z+13, r7	; 0x0d
    3470:	4d a1       	ldd	r20, Y+37	; 0x25
    3472:	5e a1       	ldd	r21, Y+38	; 0x26
    3474:	6f a1       	ldd	r22, Y+39	; 0x27
    3476:	78 a5       	ldd	r23, Y+40	; 0x28
    3478:	0e 94 94 0f 	call	0x1f28	; 0x1f28 <_ZL11move_windowP5FATFSm>
    347c:	18 2f       	mov	r17, r24
    347e:	0f c0       	rjmp	.+30     	; 0x349e <f_open+0x166>
    3480:	11 11       	cpse	r17, r1
    3482:	0d c0       	rjmp	.+26     	; 0x349e <f_open+0x166>
    3484:	d5 01       	movw	r26, r10
    3486:	1b 96       	adiw	r26, 0x0b	; 11
    3488:	8c 91       	ld	r24, X
    348a:	84 fd       	sbrc	r24, 4
    348c:	05 c0       	rjmp	.+10     	; 0x3498 <f_open+0x160>
    348e:	01 ff       	sbrs	r16, 1
    3490:	06 c0       	rjmp	.+12     	; 0x349e <f_open+0x166>
    3492:	80 fd       	sbrc	r24, 0
    3494:	03 c0       	rjmp	.+6      	; 0x349c <f_open+0x164>
    3496:	03 c0       	rjmp	.+6      	; 0x349e <f_open+0x166>
    3498:	14 e0       	ldi	r17, 0x04	; 4
    349a:	01 c0       	rjmp	.+2      	; 0x349e <f_open+0x166>
    349c:	17 e0       	ldi	r17, 0x07	; 7
    349e:	11 11       	cpse	r17, r1
    34a0:	12 c0       	rjmp	.+36     	; 0x34c6 <f_open+0x18e>
    34a2:	d3 fe       	sbrs	r13, 3
    34a4:	03 c0       	rjmp	.+6      	; 0x34ac <f_open+0x174>
    34a6:	bd 2d       	mov	r27, r13
    34a8:	b0 62       	ori	r27, 0x20	; 32
    34aa:	db 2e       	mov	r13, r27
    34ac:	e9 81       	ldd	r30, Y+1	; 0x01
    34ae:	fa 81       	ldd	r31, Y+2	; 0x02
    34b0:	86 a5       	ldd	r24, Z+46	; 0x2e
    34b2:	97 a5       	ldd	r25, Z+47	; 0x2f
    34b4:	a0 a9       	ldd	r26, Z+48	; 0x30
    34b6:	b1 a9       	ldd	r27, Z+49	; 0x31
    34b8:	f7 01       	movw	r30, r14
    34ba:	82 8f       	std	Z+26, r24	; 0x1a
    34bc:	93 8f       	std	Z+27, r25	; 0x1b
    34be:	a4 8f       	std	Z+28, r26	; 0x1c
    34c0:	b5 8f       	std	Z+29, r27	; 0x1d
    34c2:	b7 8e       	std	Z+31, r11	; 0x1f
    34c4:	a6 8e       	std	Z+30, r10	; 0x1e
    34c6:	11 11       	cpse	r17, r1
    34c8:	2d c0       	rjmp	.+90     	; 0x3524 <f_open+0x1ec>
    34ca:	d7 01       	movw	r26, r14
    34cc:	14 96       	adiw	r26, 0x04	; 4
    34ce:	dc 92       	st	X, r13
    34d0:	c9 80       	ldd	r12, Y+1	; 0x01
    34d2:	da 80       	ldd	r13, Y+2	; 0x02
    34d4:	b5 01       	movw	r22, r10
    34d6:	c6 01       	movw	r24, r12
    34d8:	0e 94 15 0e 	call	0x1c2a	; 0x1c2a <_ZL8ld_clustP5FATFSPh>
    34dc:	f7 01       	movw	r30, r14
    34de:	66 87       	std	Z+14, r22	; 0x0e
    34e0:	77 87       	std	Z+15, r23	; 0x0f
    34e2:	80 8b       	std	Z+16, r24	; 0x10
    34e4:	91 8b       	std	Z+17, r25	; 0x11
    34e6:	f5 01       	movw	r30, r10
    34e8:	84 8d       	ldd	r24, Z+28	; 0x1c
    34ea:	95 8d       	ldd	r25, Z+29	; 0x1d
    34ec:	a6 8d       	ldd	r26, Z+30	; 0x1e
    34ee:	b7 8d       	ldd	r27, Z+31	; 0x1f
    34f0:	f7 01       	movw	r30, r14
    34f2:	82 87       	std	Z+10, r24	; 0x0a
    34f4:	93 87       	std	Z+11, r25	; 0x0b
    34f6:	a4 87       	std	Z+12, r26	; 0x0c
    34f8:	b5 87       	std	Z+13, r27	; 0x0d
    34fa:	16 82       	std	Z+6, r1	; 0x06
    34fc:	17 82       	std	Z+7, r1	; 0x07
    34fe:	10 86       	std	Z+8, r1	; 0x08
    3500:	11 86       	std	Z+9, r1	; 0x09
    3502:	16 8a       	std	Z+22, r1	; 0x16
    3504:	17 8a       	std	Z+23, r1	; 0x17
    3506:	10 8e       	std	Z+24, r1	; 0x18
    3508:	11 8e       	std	Z+25, r1	; 0x19
    350a:	d1 82       	std	Z+1, r13	; 0x01
    350c:	c0 82       	st	Z, r12
    350e:	d6 01       	movw	r26, r12
    3510:	16 96       	adiw	r26, 0x06	; 6
    3512:	8d 91       	ld	r24, X+
    3514:	9c 91       	ld	r25, X
    3516:	17 97       	sbiw	r26, 0x07	; 7
    3518:	93 83       	std	Z+3, r25	; 0x03
    351a:	82 83       	std	Z+2, r24	; 0x02
    351c:	81 2f       	mov	r24, r17
    351e:	03 c0       	rjmp	.+6      	; 0x3526 <f_open+0x1ee>
    3520:	89 e0       	ldi	r24, 0x09	; 9
    3522:	01 c0       	rjmp	.+2      	; 0x3526 <f_open+0x1ee>
    3524:	81 2f       	mov	r24, r17
    3526:	a8 96       	adiw	r28, 0x28	; 40
    3528:	0f b6       	in	r0, 0x3f	; 63
    352a:	f8 94       	cli
    352c:	de bf       	out	0x3e, r29	; 62
    352e:	0f be       	out	0x3f, r0	; 63
    3530:	cd bf       	out	0x3d, r28	; 61
    3532:	df 91       	pop	r29
    3534:	cf 91       	pop	r28
    3536:	1f 91       	pop	r17
    3538:	0f 91       	pop	r16
    353a:	ff 90       	pop	r15
    353c:	ef 90       	pop	r14
    353e:	df 90       	pop	r13
    3540:	cf 90       	pop	r12
    3542:	bf 90       	pop	r11
    3544:	af 90       	pop	r10
    3546:	7f 90       	pop	r7
    3548:	6f 90       	pop	r6
    354a:	5f 90       	pop	r5
    354c:	4f 90       	pop	r4
    354e:	08 95       	ret

00003550 <f_write>:
	FIL *fp,			/* Pointer to the file object */
	const void *buff,	/* Pointer to the data to be written */
	UINT btw,			/* Number of bytes to write */
	UINT *bw			/* Pointer to number of bytes written */
)
{
    3550:	2f 92       	push	r2
    3552:	3f 92       	push	r3
    3554:	4f 92       	push	r4
    3556:	5f 92       	push	r5
    3558:	6f 92       	push	r6
    355a:	7f 92       	push	r7
    355c:	8f 92       	push	r8
    355e:	9f 92       	push	r9
    3560:	af 92       	push	r10
    3562:	bf 92       	push	r11
    3564:	cf 92       	push	r12
    3566:	df 92       	push	r13
    3568:	ef 92       	push	r14
    356a:	ff 92       	push	r15
    356c:	0f 93       	push	r16
    356e:	1f 93       	push	r17
    3570:	cf 93       	push	r28
    3572:	df 93       	push	r29
    3574:	ec 01       	movw	r28, r24
    3576:	5b 01       	movw	r10, r22
    3578:	6a 01       	movw	r12, r20
    357a:	49 01       	movw	r8, r18
	UINT wcnt, cc;
	const BYTE *wbuff = (const BYTE*)buff;
	BYTE csect;


	*bw = 0;	/* Clear write byte counter */
    357c:	f9 01       	movw	r30, r18
    357e:	11 82       	std	Z+1, r1	; 0x01
    3580:	10 82       	st	Z, r1

	res = validate(fp);						/* Check validity */
    3582:	0e 94 cc 0f 	call	0x1f98	; 0x1f98 <_ZL8validatePv>
	if (res != FR_OK) LEAVE_FF(fp->fs, res);
    3586:	81 11       	cpse	r24, r1
    3588:	7b c1       	rjmp	.+758    	; 0x3880 <f_write+0x330>
	if (fp->flag & FA__ERROR)				/* Aborted file? */
    358a:	8c 81       	ldd	r24, Y+4	; 0x04
    358c:	88 23       	and	r24, r24
    358e:	0c f4       	brge	.+2      	; 0x3592 <f_write+0x42>
    3590:	74 c1       	rjmp	.+744    	; 0x387a <f_write+0x32a>
		LEAVE_FF(fp->fs, FR_INT_ERR);
	if (!(fp->flag & FA_WRITE))				/* Check access mode */
    3592:	81 ff       	sbrs	r24, 1
    3594:	74 c1       	rjmp	.+744    	; 0x387e <f_write+0x32e>
		LEAVE_FF(fp->fs, FR_DENIED);
	if ((DWORD)(fp->fsize + btw) < fp->fsize) btw = 0;	/* File size cannot reach 4GB */
    3596:	8a 85       	ldd	r24, Y+10	; 0x0a
    3598:	9b 85       	ldd	r25, Y+11	; 0x0b
    359a:	ac 85       	ldd	r26, Y+12	; 0x0c
    359c:	bd 85       	ldd	r27, Y+13	; 0x0d
    359e:	ac 01       	movw	r20, r24
    35a0:	bd 01       	movw	r22, r26
    35a2:	4c 0d       	add	r20, r12
    35a4:	5d 1d       	adc	r21, r13
    35a6:	61 1d       	adc	r22, r1
    35a8:	71 1d       	adc	r23, r1
    35aa:	48 17       	cp	r20, r24
    35ac:	59 07       	cpc	r21, r25
    35ae:	6a 07       	cpc	r22, r26
    35b0:	7b 07       	cpc	r23, r27
    35b2:	10 f4       	brcc	.+4      	; 0x35b8 <f_write+0x68>
    35b4:	c1 2c       	mov	r12, r1
    35b6:	d1 2c       	mov	r13, r1

	for ( ;  btw;							/* Repeat until all data written */
    35b8:	c1 14       	cp	r12, r1
    35ba:	d1 04       	cpc	r13, r1
    35bc:	09 f4       	brne	.+2      	; 0x35c0 <f_write+0x70>
    35be:	47 c1       	rjmp	.+654    	; 0x384e <f_write+0x2fe>
		wbuff += wcnt, fp->fptr += wcnt, *bw += wcnt, btw -= wcnt) {
		if ((fp->fptr % SS(fp->fs)) == 0) {	/* On the sector boundary? */
    35c0:	4e 81       	ldd	r20, Y+6	; 0x06
    35c2:	5f 81       	ldd	r21, Y+7	; 0x07
    35c4:	68 85       	ldd	r22, Y+8	; 0x08
    35c6:	79 85       	ldd	r23, Y+9	; 0x09
    35c8:	db 01       	movw	r26, r22
    35ca:	ca 01       	movw	r24, r20
    35cc:	91 70       	andi	r25, 0x01	; 1
    35ce:	aa 27       	eor	r26, r26
    35d0:	bb 27       	eor	r27, r27
    35d2:	89 2b       	or	r24, r25
    35d4:	8a 2b       	or	r24, r26
    35d6:	8b 2b       	or	r24, r27
    35d8:	09 f0       	breq	.+2      	; 0x35dc <f_write+0x8c>
    35da:	ef c0       	rjmp	.+478    	; 0x37ba <f_write+0x26a>
			csect = (BYTE)(fp->fptr / SS(fp->fs) & (fp->fs->csize - 1));	/* Sector offset in the cluster */
    35dc:	e8 81       	ld	r30, Y
    35de:	f9 81       	ldd	r31, Y+1	; 0x01
    35e0:	12 81       	ldd	r17, Z+2	; 0x02
    35e2:	11 50       	subi	r17, 0x01	; 1
    35e4:	db 01       	movw	r26, r22
    35e6:	ca 01       	movw	r24, r20
    35e8:	07 2e       	mov	r0, r23
    35ea:	79 e0       	ldi	r23, 0x09	; 9
    35ec:	b6 95       	lsr	r27
    35ee:	a7 95       	ror	r26
    35f0:	97 95       	ror	r25
    35f2:	87 95       	ror	r24
    35f4:	7a 95       	dec	r23
    35f6:	d1 f7       	brne	.-12     	; 0x35ec <f_write+0x9c>
    35f8:	70 2d       	mov	r23, r0
    35fa:	18 23       	and	r17, r24
			if (!csect) {					/* On the cluster boundary? */
    35fc:	e1 f5       	brne	.+120    	; 0x3676 <f_write+0x126>
				if (fp->fptr == 0) {		/* On the top of the file? */
    35fe:	45 2b       	or	r20, r21
    3600:	46 2b       	or	r20, r22
    3602:	47 2b       	or	r20, r23
    3604:	99 f4       	brne	.+38     	; 0x362c <f_write+0xdc>
					clst = fp->sclust;		/* Follow from the origin */
    3606:	6e 85       	ldd	r22, Y+14	; 0x0e
    3608:	7f 85       	ldd	r23, Y+15	; 0x0f
    360a:	88 89       	ldd	r24, Y+16	; 0x10
    360c:	99 89       	ldd	r25, Y+17	; 0x11
					if (clst == 0)			/* When no cluster is allocated, */
    360e:	61 15       	cp	r22, r1
    3610:	71 05       	cpc	r23, r1
    3612:	81 05       	cpc	r24, r1
    3614:	91 05       	cpc	r25, r1
    3616:	81 f4       	brne	.+32     	; 0x3638 <f_write+0xe8>
						fp->sclust = clst = create_chain(fp->fs, 0);	/* Create a new cluster chain */
    3618:	40 e0       	ldi	r20, 0x00	; 0
    361a:	50 e0       	ldi	r21, 0x00	; 0
    361c:	ba 01       	movw	r22, r20
    361e:	cf 01       	movw	r24, r30
    3620:	d5 da       	rcall	.-2646   	; 0x2bcc <_ZL12create_chainP5FATFSm>
    3622:	6e 87       	std	Y+14, r22	; 0x0e
    3624:	7f 87       	std	Y+15, r23	; 0x0f
    3626:	88 8b       	std	Y+16, r24	; 0x10
    3628:	99 8b       	std	Y+17, r25	; 0x11
    362a:	06 c0       	rjmp	.+12     	; 0x3638 <f_write+0xe8>
#if _USE_FASTSEEK
					if (fp->cltbl)
						clst = clmt_clust(fp, fp->fptr);	/* Get cluster# from the CLMT */
					else
#endif
						clst = create_chain(fp->fs, fp->clust);	/* Follow or stretch cluster chain on the FAT */
    362c:	4a 89       	ldd	r20, Y+18	; 0x12
    362e:	5b 89       	ldd	r21, Y+19	; 0x13
    3630:	6c 89       	ldd	r22, Y+20	; 0x14
    3632:	7d 89       	ldd	r23, Y+21	; 0x15
    3634:	cf 01       	movw	r24, r30
    3636:	ca da       	rcall	.-2668   	; 0x2bcc <_ZL12create_chainP5FATFSm>
				}
				if (clst == 0) break;		/* Could not allocate a new cluster (disk full) */
    3638:	61 15       	cp	r22, r1
    363a:	71 05       	cpc	r23, r1
    363c:	81 05       	cpc	r24, r1
    363e:	91 05       	cpc	r25, r1
    3640:	09 f4       	brne	.+2      	; 0x3644 <f_write+0xf4>
    3642:	05 c1       	rjmp	.+522    	; 0x384e <f_write+0x2fe>
				if (clst == 1) ABORT(fp->fs, FR_INT_ERR);
    3644:	61 30       	cpi	r22, 0x01	; 1
    3646:	71 05       	cpc	r23, r1
    3648:	81 05       	cpc	r24, r1
    364a:	91 05       	cpc	r25, r1
    364c:	29 f4       	brne	.+10     	; 0x3658 <f_write+0x108>
    364e:	8c 81       	ldd	r24, Y+4	; 0x04
    3650:	80 68       	ori	r24, 0x80	; 128
    3652:	8c 83       	std	Y+4, r24	; 0x04
    3654:	82 e0       	ldi	r24, 0x02	; 2
    3656:	14 c1       	rjmp	.+552    	; 0x3880 <f_write+0x330>
				if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
    3658:	6f 3f       	cpi	r22, 0xFF	; 255
    365a:	ff ef       	ldi	r31, 0xFF	; 255
    365c:	7f 07       	cpc	r23, r31
    365e:	8f 07       	cpc	r24, r31
    3660:	9f 07       	cpc	r25, r31
    3662:	29 f4       	brne	.+10     	; 0x366e <f_write+0x11e>
    3664:	8c 81       	ldd	r24, Y+4	; 0x04
    3666:	80 68       	ori	r24, 0x80	; 128
    3668:	8c 83       	std	Y+4, r24	; 0x04
    366a:	81 e0       	ldi	r24, 0x01	; 1
    366c:	09 c1       	rjmp	.+530    	; 0x3880 <f_write+0x330>
				fp->clust = clst;			/* Update current cluster */
    366e:	6a 8b       	std	Y+18, r22	; 0x12
    3670:	7b 8b       	std	Y+19, r23	; 0x13
    3672:	8c 8b       	std	Y+20, r24	; 0x14
    3674:	9d 8b       	std	Y+21, r25	; 0x15
			}
#if _FS_TINY
			if (fp->fs->winsect == fp->dsect && sync_window(fp->fs))	/* Write-back sector cache */
    3676:	e8 81       	ld	r30, Y
    3678:	f9 81       	ldd	r31, Y+1	; 0x01
    367a:	46 a5       	ldd	r20, Z+46	; 0x2e
    367c:	57 a5       	ldd	r21, Z+47	; 0x2f
    367e:	60 a9       	ldd	r22, Z+48	; 0x30
    3680:	71 a9       	ldd	r23, Z+49	; 0x31
    3682:	8e 89       	ldd	r24, Y+22	; 0x16
    3684:	9f 89       	ldd	r25, Y+23	; 0x17
    3686:	a8 8d       	ldd	r26, Y+24	; 0x18
    3688:	b9 8d       	ldd	r27, Y+25	; 0x19
    368a:	48 17       	cp	r20, r24
    368c:	59 07       	cpc	r21, r25
    368e:	6a 07       	cpc	r22, r26
    3690:	7b 07       	cpc	r23, r27
    3692:	39 f4       	brne	.+14     	; 0x36a2 <f_write+0x152>
    3694:	cf 01       	movw	r24, r30
    3696:	0e 94 2d 0f 	call	0x1e5a	; 0x1e5a <_ZL11sync_windowP5FATFS>
    369a:	88 23       	and	r24, r24
    369c:	21 f0       	breq	.+8      	; 0x36a6 <f_write+0x156>
    369e:	81 e0       	ldi	r24, 0x01	; 1
    36a0:	03 c0       	rjmp	.+6      	; 0x36a8 <f_write+0x158>
    36a2:	80 e0       	ldi	r24, 0x00	; 0
    36a4:	01 c0       	rjmp	.+2      	; 0x36a8 <f_write+0x158>
    36a6:	80 e0       	ldi	r24, 0x00	; 0
    36a8:	88 23       	and	r24, r24
    36aa:	29 f0       	breq	.+10     	; 0x36b6 <f_write+0x166>
				ABORT(fp->fs, FR_DISK_ERR);
    36ac:	8c 81       	ldd	r24, Y+4	; 0x04
    36ae:	80 68       	ori	r24, 0x80	; 128
    36b0:	8c 83       	std	Y+4, r24	; 0x04
    36b2:	81 e0       	ldi	r24, 0x01	; 1
    36b4:	e5 c0       	rjmp	.+458    	; 0x3880 <f_write+0x330>
				if (disk_write(fp->fs->drv, fp->buf, fp->dsect, 1) != RES_OK)
					ABORT(fp->fs, FR_DISK_ERR);
				fp->flag &= ~FA__DIRTY;
			}
#endif
			sect = clust2sect(fp->fs, fp->clust);	/* Get current sector */
    36b6:	4a 89       	ldd	r20, Y+18	; 0x12
    36b8:	5b 89       	ldd	r21, Y+19	; 0x13
    36ba:	6c 89       	ldd	r22, Y+20	; 0x14
    36bc:	7d 89       	ldd	r23, Y+21	; 0x15
    36be:	28 80       	ld	r2, Y
    36c0:	39 80       	ldd	r3, Y+1	; 0x01
    36c2:	c1 01       	movw	r24, r2
    36c4:	0e 94 f8 12 	call	0x25f0	; 0x25f0 <_Z10clust2sectP5FATFSm>
			if (!sect) ABORT(fp->fs, FR_INT_ERR);
    36c8:	61 15       	cp	r22, r1
    36ca:	71 05       	cpc	r23, r1
    36cc:	81 05       	cpc	r24, r1
    36ce:	91 05       	cpc	r25, r1
    36d0:	29 f4       	brne	.+10     	; 0x36dc <f_write+0x18c>
    36d2:	8c 81       	ldd	r24, Y+4	; 0x04
    36d4:	80 68       	ori	r24, 0x80	; 128
    36d6:	8c 83       	std	Y+4, r24	; 0x04
    36d8:	82 e0       	ldi	r24, 0x02	; 2
    36da:	d2 c0       	rjmp	.+420    	; 0x3880 <f_write+0x330>
			sect += csect;
    36dc:	2b 01       	movw	r4, r22
    36de:	3c 01       	movw	r6, r24
    36e0:	41 0e       	add	r4, r17
    36e2:	51 1c       	adc	r5, r1
    36e4:	61 1c       	adc	r6, r1
    36e6:	71 1c       	adc	r7, r1
			cc = btw / SS(fp->fs);			/* When remaining bytes >= sector size, */
    36e8:	76 01       	movw	r14, r12
    36ea:	ef 2c       	mov	r14, r15
    36ec:	ff 24       	eor	r15, r15
    36ee:	e6 94       	lsr	r14
			if (cc) {						/* Write maximum contiguous sectors directly */
    36f0:	e1 14       	cp	r14, r1
    36f2:	f1 04       	cpc	r15, r1
    36f4:	09 f4       	brne	.+2      	; 0x36f8 <f_write+0x1a8>
    36f6:	40 c0       	rjmp	.+128    	; 0x3778 <f_write+0x228>
				if (csect + cc > fp->fs->csize)	/* Clip at cluster boundary */
    36f8:	f1 01       	movw	r30, r2
    36fa:	42 81       	ldd	r20, Z+2	; 0x02
    36fc:	24 2f       	mov	r18, r20
    36fe:	30 e0       	ldi	r19, 0x00	; 0
    3700:	c7 01       	movw	r24, r14
    3702:	81 0f       	add	r24, r17
    3704:	91 1d       	adc	r25, r1
    3706:	28 17       	cp	r18, r24
    3708:	39 07       	cpc	r19, r25
    370a:	18 f4       	brcc	.+6      	; 0x3712 <f_write+0x1c2>
					cc = fp->fs->csize - csect;
    370c:	79 01       	movw	r14, r18
    370e:	e1 1a       	sub	r14, r17
    3710:	f1 08       	sbc	r15, r1
				if (disk_write(fp->fs->drv, wbuff, sect, (BYTE)cc) != RES_OK)
    3712:	0e 2d       	mov	r16, r14
    3714:	a3 01       	movw	r20, r6
    3716:	92 01       	movw	r18, r4
    3718:	b5 01       	movw	r22, r10
    371a:	f1 01       	movw	r30, r2
    371c:	81 81       	ldd	r24, Z+1	; 0x01
    371e:	14 d6       	rcall	.+3112   	; 0x4348 <disk_write>
    3720:	88 23       	and	r24, r24
    3722:	29 f0       	breq	.+10     	; 0x372e <f_write+0x1de>
					ABORT(fp->fs, FR_DISK_ERR);
    3724:	8c 81       	ldd	r24, Y+4	; 0x04
    3726:	80 68       	ori	r24, 0x80	; 128
    3728:	8c 83       	std	Y+4, r24	; 0x04
    372a:	81 e0       	ldi	r24, 0x01	; 1
    372c:	a9 c0       	rjmp	.+338    	; 0x3880 <f_write+0x330>
#if _FS_TINY
				if (fp->fs->winsect - sect < cc) {	/* Refill sector cache if it gets invalidated by the direct write */
    372e:	e8 81       	ld	r30, Y
    3730:	f9 81       	ldd	r31, Y+1	; 0x01
    3732:	86 a5       	ldd	r24, Z+46	; 0x2e
    3734:	97 a5       	ldd	r25, Z+47	; 0x2f
    3736:	a0 a9       	ldd	r26, Z+48	; 0x30
    3738:	b1 a9       	ldd	r27, Z+49	; 0x31
    373a:	84 19       	sub	r24, r4
    373c:	95 09       	sbc	r25, r5
    373e:	a6 09       	sbc	r26, r6
    3740:	b7 09       	sbc	r27, r7
    3742:	a7 01       	movw	r20, r14
    3744:	60 e0       	ldi	r22, 0x00	; 0
    3746:	70 e0       	ldi	r23, 0x00	; 0
    3748:	84 17       	cp	r24, r20
    374a:	95 07       	cpc	r25, r21
    374c:	a6 07       	cpc	r26, r22
    374e:	b7 07       	cpc	r27, r23
    3750:	78 f4       	brcc	.+30     	; 0x3770 <f_write+0x220>
					mem_cpy(fp->fs->win, wbuff + ((fp->fs->winsect - sect) * SS(fp->fs)), SS(fp->fs));
    3752:	98 2f       	mov	r25, r24
    3754:	88 27       	eor	r24, r24
    3756:	99 0f       	add	r25, r25
    3758:	b5 01       	movw	r22, r10
    375a:	68 0f       	add	r22, r24
    375c:	79 1f       	adc	r23, r25
    375e:	40 e0       	ldi	r20, 0x00	; 0
    3760:	52 e0       	ldi	r21, 0x02	; 2
    3762:	cf 01       	movw	r24, r30
    3764:	c2 96       	adiw	r24, 0x32	; 50
    3766:	0e 94 c2 0d 	call	0x1b84	; 0x1b84 <_ZL7mem_cpyPvPKvj>
					fp->fs->wflag = 0;
    376a:	e8 81       	ld	r30, Y
    376c:	f9 81       	ldd	r31, Y+1	; 0x01
    376e:	14 82       	std	Z+4, r1	; 0x04
				if (fp->dsect - sect < cc) { /* Refill sector cache if it gets invalidated by the direct write */
					mem_cpy(fp->buf, wbuff + ((fp->dsect - sect) * SS(fp->fs)), SS(fp->fs));
					fp->flag &= ~FA__DIRTY;
				}
#endif
				wcnt = SS(fp->fs) * cc;		/* Number of bytes transferred */
    3770:	fe 2c       	mov	r15, r14
    3772:	ee 24       	eor	r14, r14
    3774:	ff 0c       	add	r15, r15
				continue;
    3776:	53 c0       	rjmp	.+166    	; 0x381e <f_write+0x2ce>
			}
#if _FS_TINY
			if (fp->fptr >= fp->fsize) {	/* Avoid silly cache filling at growing edge */
    3778:	4e 81       	ldd	r20, Y+6	; 0x06
    377a:	5f 81       	ldd	r21, Y+7	; 0x07
    377c:	68 85       	ldd	r22, Y+8	; 0x08
    377e:	79 85       	ldd	r23, Y+9	; 0x09
    3780:	8a 85       	ldd	r24, Y+10	; 0x0a
    3782:	9b 85       	ldd	r25, Y+11	; 0x0b
    3784:	ac 85       	ldd	r26, Y+12	; 0x0c
    3786:	bd 85       	ldd	r27, Y+13	; 0x0d
    3788:	48 17       	cp	r20, r24
    378a:	59 07       	cpc	r21, r25
    378c:	6a 07       	cpc	r22, r26
    378e:	7b 07       	cpc	r23, r27
    3790:	80 f0       	brcs	.+32     	; 0x37b2 <f_write+0x262>
				if (sync_window(fp->fs)) ABORT(fp->fs, FR_DISK_ERR);
    3792:	c1 01       	movw	r24, r2
    3794:	0e 94 2d 0f 	call	0x1e5a	; 0x1e5a <_ZL11sync_windowP5FATFS>
    3798:	88 23       	and	r24, r24
    379a:	29 f0       	breq	.+10     	; 0x37a6 <f_write+0x256>
    379c:	8c 81       	ldd	r24, Y+4	; 0x04
    379e:	80 68       	ori	r24, 0x80	; 128
    37a0:	8c 83       	std	Y+4, r24	; 0x04
    37a2:	81 e0       	ldi	r24, 0x01	; 1
    37a4:	6d c0       	rjmp	.+218    	; 0x3880 <f_write+0x330>
				fp->fs->winsect = sect;
    37a6:	e8 81       	ld	r30, Y
    37a8:	f9 81       	ldd	r31, Y+1	; 0x01
    37aa:	46 a6       	std	Z+46, r4	; 0x2e
    37ac:	57 a6       	std	Z+47, r5	; 0x2f
    37ae:	60 aa       	std	Z+48, r6	; 0x30
    37b0:	71 aa       	std	Z+49, r7	; 0x31
				if (fp->fptr < fp->fsize &&
					disk_read(fp->fs->drv, fp->buf, sect, 1) != RES_OK)
						ABORT(fp->fs, FR_DISK_ERR);
			}
#endif
			fp->dsect = sect;
    37b2:	4e 8a       	std	Y+22, r4	; 0x16
    37b4:	5f 8a       	std	Y+23, r5	; 0x17
    37b6:	68 8e       	std	Y+24, r6	; 0x18
    37b8:	79 8e       	std	Y+25, r7	; 0x19
		}
		wcnt = SS(fp->fs) - ((UINT)fp->fptr % SS(fp->fs));/* Put partial sector into file I/O buffer */
    37ba:	8e 81       	ldd	r24, Y+6	; 0x06
    37bc:	9f 81       	ldd	r25, Y+7	; 0x07
    37be:	a8 85       	ldd	r26, Y+8	; 0x08
    37c0:	b9 85       	ldd	r27, Y+9	; 0x09
    37c2:	91 70       	andi	r25, 0x01	; 1
    37c4:	20 e0       	ldi	r18, 0x00	; 0
    37c6:	32 e0       	ldi	r19, 0x02	; 2
    37c8:	79 01       	movw	r14, r18
    37ca:	e8 1a       	sub	r14, r24
    37cc:	f9 0a       	sbc	r15, r25
		if (wcnt > btw) wcnt = btw;
    37ce:	ce 14       	cp	r12, r14
    37d0:	df 04       	cpc	r13, r15
    37d2:	08 f4       	brcc	.+2      	; 0x37d6 <f_write+0x286>
    37d4:	76 01       	movw	r14, r12
#if _FS_TINY
		if (move_window(fp->fs, fp->dsect))	/* Move sector window */
    37d6:	4e 89       	ldd	r20, Y+22	; 0x16
    37d8:	5f 89       	ldd	r21, Y+23	; 0x17
    37da:	68 8d       	ldd	r22, Y+24	; 0x18
    37dc:	79 8d       	ldd	r23, Y+25	; 0x19
    37de:	88 81       	ld	r24, Y
    37e0:	99 81       	ldd	r25, Y+1	; 0x01
    37e2:	0e 94 94 0f 	call	0x1f28	; 0x1f28 <_ZL11move_windowP5FATFSm>
    37e6:	88 23       	and	r24, r24
    37e8:	29 f0       	breq	.+10     	; 0x37f4 <f_write+0x2a4>
			ABORT(fp->fs, FR_DISK_ERR);
    37ea:	8c 81       	ldd	r24, Y+4	; 0x04
    37ec:	80 68       	ori	r24, 0x80	; 128
    37ee:	8c 83       	std	Y+4, r24	; 0x04
    37f0:	81 e0       	ldi	r24, 0x01	; 1
    37f2:	46 c0       	rjmp	.+140    	; 0x3880 <f_write+0x330>
		mem_cpy(&fp->fs->win[fp->fptr % SS(fp->fs)], wbuff, wcnt);	/* Fit partial sector */
    37f4:	28 81       	ld	r18, Y
    37f6:	39 81       	ldd	r19, Y+1	; 0x01
    37f8:	4e 81       	ldd	r20, Y+6	; 0x06
    37fa:	5f 81       	ldd	r21, Y+7	; 0x07
    37fc:	68 85       	ldd	r22, Y+8	; 0x08
    37fe:	79 85       	ldd	r23, Y+9	; 0x09
    3800:	51 70       	andi	r21, 0x01	; 1
    3802:	66 27       	eor	r22, r22
    3804:	77 27       	eor	r23, r23
    3806:	ca 01       	movw	r24, r20
    3808:	c2 96       	adiw	r24, 0x32	; 50
    380a:	a7 01       	movw	r20, r14
    380c:	b5 01       	movw	r22, r10
    380e:	82 0f       	add	r24, r18
    3810:	93 1f       	adc	r25, r19
    3812:	0e 94 c2 0d 	call	0x1b84	; 0x1b84 <_ZL7mem_cpyPvPKvj>
		fp->fs->wflag = 1;
    3816:	e8 81       	ld	r30, Y
    3818:	f9 81       	ldd	r31, Y+1	; 0x01
    381a:	81 e0       	ldi	r24, 0x01	; 1
    381c:	84 83       	std	Z+4, r24	; 0x04
		LEAVE_FF(fp->fs, FR_INT_ERR);
	if (!(fp->flag & FA_WRITE))				/* Check access mode */
		LEAVE_FF(fp->fs, FR_DENIED);
	if ((DWORD)(fp->fsize + btw) < fp->fsize) btw = 0;	/* File size cannot reach 4GB */

	for ( ;  btw;							/* Repeat until all data written */
    381e:	ae 0c       	add	r10, r14
    3820:	bf 1c       	adc	r11, r15
    3822:	8e 81       	ldd	r24, Y+6	; 0x06
    3824:	9f 81       	ldd	r25, Y+7	; 0x07
    3826:	a8 85       	ldd	r26, Y+8	; 0x08
    3828:	b9 85       	ldd	r27, Y+9	; 0x09
    382a:	8e 0d       	add	r24, r14
    382c:	9f 1d       	adc	r25, r15
    382e:	a1 1d       	adc	r26, r1
    3830:	b1 1d       	adc	r27, r1
    3832:	8e 83       	std	Y+6, r24	; 0x06
    3834:	9f 83       	std	Y+7, r25	; 0x07
    3836:	a8 87       	std	Y+8, r26	; 0x08
    3838:	b9 87       	std	Y+9, r27	; 0x09
    383a:	f4 01       	movw	r30, r8
    383c:	80 81       	ld	r24, Z
    383e:	91 81       	ldd	r25, Z+1	; 0x01
    3840:	8e 0d       	add	r24, r14
    3842:	9f 1d       	adc	r25, r15
    3844:	91 83       	std	Z+1, r25	; 0x01
    3846:	80 83       	st	Z, r24
    3848:	ce 18       	sub	r12, r14
    384a:	df 08       	sbc	r13, r15
    384c:	b5 ce       	rjmp	.-662    	; 0x35b8 <f_write+0x68>
		mem_cpy(&fp->buf[fp->fptr % SS(fp->fs)], wbuff, wcnt);	/* Fit partial sector */
		fp->flag |= FA__DIRTY;
#endif
	}

	if (fp->fptr > fp->fsize) fp->fsize = fp->fptr;	/* Update file size if needed */
    384e:	8e 81       	ldd	r24, Y+6	; 0x06
    3850:	9f 81       	ldd	r25, Y+7	; 0x07
    3852:	a8 85       	ldd	r26, Y+8	; 0x08
    3854:	b9 85       	ldd	r27, Y+9	; 0x09
    3856:	4a 85       	ldd	r20, Y+10	; 0x0a
    3858:	5b 85       	ldd	r21, Y+11	; 0x0b
    385a:	6c 85       	ldd	r22, Y+12	; 0x0c
    385c:	7d 85       	ldd	r23, Y+13	; 0x0d
    385e:	48 17       	cp	r20, r24
    3860:	59 07       	cpc	r21, r25
    3862:	6a 07       	cpc	r22, r26
    3864:	7b 07       	cpc	r23, r27
    3866:	20 f4       	brcc	.+8      	; 0x3870 <f_write+0x320>
    3868:	8a 87       	std	Y+10, r24	; 0x0a
    386a:	9b 87       	std	Y+11, r25	; 0x0b
    386c:	ac 87       	std	Y+12, r26	; 0x0c
    386e:	bd 87       	std	Y+13, r27	; 0x0d
	fp->flag |= FA__WRITTEN;						/* Set file change flag */
    3870:	8c 81       	ldd	r24, Y+4	; 0x04
    3872:	80 62       	ori	r24, 0x20	; 32
    3874:	8c 83       	std	Y+4, r24	; 0x04

	LEAVE_FF(fp->fs, FR_OK);
    3876:	80 e0       	ldi	r24, 0x00	; 0
    3878:	03 c0       	rjmp	.+6      	; 0x3880 <f_write+0x330>
	*bw = 0;	/* Clear write byte counter */

	res = validate(fp);						/* Check validity */
	if (res != FR_OK) LEAVE_FF(fp->fs, res);
	if (fp->flag & FA__ERROR)				/* Aborted file? */
		LEAVE_FF(fp->fs, FR_INT_ERR);
    387a:	82 e0       	ldi	r24, 0x02	; 2
    387c:	01 c0       	rjmp	.+2      	; 0x3880 <f_write+0x330>
	if (!(fp->flag & FA_WRITE))				/* Check access mode */
		LEAVE_FF(fp->fs, FR_DENIED);
    387e:	87 e0       	ldi	r24, 0x07	; 7

	if (fp->fptr > fp->fsize) fp->fsize = fp->fptr;	/* Update file size if needed */
	fp->flag |= FA__WRITTEN;						/* Set file change flag */

	LEAVE_FF(fp->fs, FR_OK);
}
    3880:	df 91       	pop	r29
    3882:	cf 91       	pop	r28
    3884:	1f 91       	pop	r17
    3886:	0f 91       	pop	r16
    3888:	ff 90       	pop	r15
    388a:	ef 90       	pop	r14
    388c:	df 90       	pop	r13
    388e:	cf 90       	pop	r12
    3890:	bf 90       	pop	r11
    3892:	af 90       	pop	r10
    3894:	9f 90       	pop	r9
    3896:	8f 90       	pop	r8
    3898:	7f 90       	pop	r7
    389a:	6f 90       	pop	r6
    389c:	5f 90       	pop	r5
    389e:	4f 90       	pop	r4
    38a0:	3f 90       	pop	r3
    38a2:	2f 90       	pop	r2
    38a4:	08 95       	ret

000038a6 <f_sync>:
/*-----------------------------------------------------------------------*/

FRESULT f_sync (
	FIL *fp		/* Pointer to the file object */
)
{
    38a6:	0f 93       	push	r16
    38a8:	1f 93       	push	r17
    38aa:	cf 93       	push	r28
    38ac:	df 93       	push	r29
    38ae:	ec 01       	movw	r28, r24
	FRESULT res;
	DWORD tm;
	BYTE *dir;


	res = validate(fp);					/* Check validity of the object */
    38b0:	0e 94 cc 0f 	call	0x1f98	; 0x1f98 <_ZL8validatePv>
	if (res == FR_OK) {
    38b4:	81 11       	cpse	r24, r1
    38b6:	36 c0       	rjmp	.+108    	; 0x3924 <f_sync+0x7e>
		if (fp->flag & FA__WRITTEN) {	/* Has the file been written? */
    38b8:	9c 81       	ldd	r25, Y+4	; 0x04
    38ba:	95 ff       	sbrs	r25, 5
    38bc:	33 c0       	rjmp	.+102    	; 0x3924 <f_sync+0x7e>
					LEAVE_FF(fp->fs, FR_DISK_ERR);
				fp->flag &= ~FA__DIRTY;
			}
#endif
			/* Update the directory entry */
			res = move_window(fp->fs, fp->dir_sect);
    38be:	4a 8d       	ldd	r20, Y+26	; 0x1a
    38c0:	5b 8d       	ldd	r21, Y+27	; 0x1b
    38c2:	6c 8d       	ldd	r22, Y+28	; 0x1c
    38c4:	7d 8d       	ldd	r23, Y+29	; 0x1d
    38c6:	88 81       	ld	r24, Y
    38c8:	99 81       	ldd	r25, Y+1	; 0x01
    38ca:	0e 94 94 0f 	call	0x1f28	; 0x1f28 <_ZL11move_windowP5FATFSm>
			if (res == FR_OK) {
    38ce:	81 11       	cpse	r24, r1
    38d0:	29 c0       	rjmp	.+82     	; 0x3924 <f_sync+0x7e>
				dir = fp->dir_ptr;
    38d2:	0e 8d       	ldd	r16, Y+30	; 0x1e
    38d4:	1f 8d       	ldd	r17, Y+31	; 0x1f
				dir[DIR_Attr] |= AM_ARC;					/* Set archive bit */
    38d6:	f8 01       	movw	r30, r16
    38d8:	83 85       	ldd	r24, Z+11	; 0x0b
    38da:	80 62       	ori	r24, 0x20	; 32
    38dc:	83 87       	std	Z+11, r24	; 0x0b
				ST_DWORD(dir+DIR_FileSize, fp->fsize);		/* Update file size */
    38de:	8a 85       	ldd	r24, Y+10	; 0x0a
    38e0:	9b 85       	ldd	r25, Y+11	; 0x0b
    38e2:	ac 85       	ldd	r26, Y+12	; 0x0c
    38e4:	bd 85       	ldd	r27, Y+13	; 0x0d
    38e6:	84 8f       	std	Z+28, r24	; 0x1c
    38e8:	95 8f       	std	Z+29, r25	; 0x1d
    38ea:	a6 8f       	std	Z+30, r26	; 0x1e
    38ec:	b7 8f       	std	Z+31, r27	; 0x1f
				st_clust(dir, fp->sclust);					/* Update start cluster */
    38ee:	4e 85       	ldd	r20, Y+14	; 0x0e
    38f0:	5f 85       	ldd	r21, Y+15	; 0x0f
    38f2:	68 89       	ldd	r22, Y+16	; 0x10
    38f4:	79 89       	ldd	r23, Y+17	; 0x11
    38f6:	c8 01       	movw	r24, r16
    38f8:	0e 94 2e 0e 	call	0x1c5c	; 0x1c5c <_ZL8st_clustPhm>
				tm = get_fattime();							/* Update updated time */
    38fc:	0e 94 66 00 	call	0xcc	; 0xcc <get_fattime>
				ST_DWORD(dir+DIR_WrtTime, tm);
    3900:	f8 01       	movw	r30, r16
    3902:	66 8b       	std	Z+22, r22	; 0x16
    3904:	77 8b       	std	Z+23, r23	; 0x17
    3906:	80 8f       	std	Z+24, r24	; 0x18
    3908:	91 8f       	std	Z+25, r25	; 0x19
				ST_WORD(dir+DIR_LstAccDate, 0);
    390a:	13 8a       	std	Z+19, r1	; 0x13
    390c:	12 8a       	std	Z+18, r1	; 0x12
				fp->flag &= ~FA__WRITTEN;
    390e:	8c 81       	ldd	r24, Y+4	; 0x04
    3910:	8f 7d       	andi	r24, 0xDF	; 223
    3912:	8c 83       	std	Y+4, r24	; 0x04
				fp->fs->wflag = 1;
    3914:	e8 81       	ld	r30, Y
    3916:	f9 81       	ldd	r31, Y+1	; 0x01
    3918:	81 e0       	ldi	r24, 0x01	; 1
    391a:	84 83       	std	Z+4, r24	; 0x04
				res = sync_fs(fp->fs);
    391c:	88 81       	ld	r24, Y
    391e:	99 81       	ldd	r25, Y+1	; 0x01
    3920:	0e 94 93 12 	call	0x2526	; 0x2526 <_ZL7sync_fsP5FATFS>
			}
		}
	}

	LEAVE_FF(fp->fs, res);
}
    3924:	df 91       	pop	r29
    3926:	cf 91       	pop	r28
    3928:	1f 91       	pop	r17
    392a:	0f 91       	pop	r16
    392c:	08 95       	ret

0000392e <f_close>:
/*-----------------------------------------------------------------------*/

FRESULT f_close (
	FIL *fp		/* Pointer to the file object to be closed */
)
{
    392e:	cf 93       	push	r28
    3930:	df 93       	push	r29
    3932:	ec 01       	movw	r28, r24
#endif
		if (res == FR_OK) fp->fs = 0;	/* Discard file object */
		LEAVE_FF(fs, res);
	}
#else
	res = f_sync(fp);		/* Flush cached data */
    3934:	b8 df       	rcall	.-144    	; 0x38a6 <f_sync>
#else
		res = dec_lock(fp->lockid);
#endif
	}
#endif
	if (res == FR_OK) fp->fs = 0;	/* Discard file object */
    3936:	81 11       	cpse	r24, r1
    3938:	02 c0       	rjmp	.+4      	; 0x393e <f_close+0x10>
    393a:	19 82       	std	Y+1, r1	; 0x01
    393c:	18 82       	st	Y, r1
	return res;
#endif
}
    393e:	df 91       	pop	r29
    3940:	cf 91       	pop	r28
    3942:	08 95       	ret

00003944 <f_lseek>:

FRESULT f_lseek (
	FIL *fp,		/* Pointer to the file object */
	DWORD ofs		/* File pointer from top of file */
)
{
    3944:	2f 92       	push	r2
    3946:	3f 92       	push	r3
    3948:	4f 92       	push	r4
    394a:	5f 92       	push	r5
    394c:	6f 92       	push	r6
    394e:	7f 92       	push	r7
    3950:	8f 92       	push	r8
    3952:	9f 92       	push	r9
    3954:	af 92       	push	r10
    3956:	bf 92       	push	r11
    3958:	cf 92       	push	r12
    395a:	df 92       	push	r13
    395c:	ef 92       	push	r14
    395e:	ff 92       	push	r15
    3960:	1f 93       	push	r17
    3962:	cf 93       	push	r28
    3964:	df 93       	push	r29
    3966:	00 d0       	rcall	.+0      	; 0x3968 <f_lseek+0x24>
    3968:	00 d0       	rcall	.+0      	; 0x396a <f_lseek+0x26>
    396a:	00 d0       	rcall	.+0      	; 0x396c <f_lseek+0x28>
    396c:	cd b7       	in	r28, 0x3d	; 61
    396e:	de b7       	in	r29, 0x3e	; 62
    3970:	9e 83       	std	Y+6, r25	; 0x06
    3972:	8d 83       	std	Y+5, r24	; 0x05
    3974:	6a 01       	movw	r12, r20
    3976:	7b 01       	movw	r14, r22
	FRESULT res;


	res = validate(fp);					/* Check validity of the object */
    3978:	0e 94 cc 0f 	call	0x1f98	; 0x1f98 <_ZL8validatePv>
    397c:	18 2f       	mov	r17, r24
	if (res != FR_OK) LEAVE_FF(fp->fs, res);
    397e:	81 11       	cpse	r24, r1
    3980:	92 c1       	rjmp	.+804    	; 0x3ca6 <f_lseek+0x362>
	if (fp->flag & FA__ERROR)			/* Check abort flag */
    3982:	ad 81       	ldd	r26, Y+5	; 0x05
    3984:	be 81       	ldd	r27, Y+6	; 0x06
    3986:	14 96       	adiw	r26, 0x04	; 4
    3988:	8c 91       	ld	r24, X
    398a:	14 97       	sbiw	r26, 0x04	; 4
    398c:	88 23       	and	r24, r24
    398e:	0c f4       	brge	.+2      	; 0x3992 <f_lseek+0x4e>
    3990:	8b c1       	rjmp	.+790    	; 0x3ca8 <f_lseek+0x364>

	/* Normal Seek */
	{
		DWORD clst, bcs, nsect, ifptr;

		if (ofs > fp->fsize					/* In read-only mode, clip offset with the file size */
    3992:	1a 96       	adiw	r26, 0x0a	; 10
    3994:	4d 91       	ld	r20, X+
    3996:	5d 91       	ld	r21, X+
    3998:	6d 91       	ld	r22, X+
    399a:	7c 91       	ld	r23, X
    399c:	1d 97       	sbiw	r26, 0x0d	; 13
    399e:	4c 15       	cp	r20, r12
    39a0:	5d 05       	cpc	r21, r13
    39a2:	6e 05       	cpc	r22, r14
    39a4:	7f 05       	cpc	r23, r15
    39a6:	20 f4       	brcc	.+8      	; 0x39b0 <f_lseek+0x6c>
#if !_FS_READONLY
			 && !(fp->flag & FA_WRITE)
    39a8:	81 fd       	sbrc	r24, 1
    39aa:	02 c0       	rjmp	.+4      	; 0x39b0 <f_lseek+0x6c>
#endif
			) ofs = fp->fsize;
    39ac:	6a 01       	movw	r12, r20
    39ae:	7b 01       	movw	r14, r22

		ifptr = fp->fptr;
    39b0:	ed 81       	ldd	r30, Y+5	; 0x05
    39b2:	fe 81       	ldd	r31, Y+6	; 0x06
    39b4:	46 80       	ldd	r4, Z+6	; 0x06
    39b6:	57 80       	ldd	r5, Z+7	; 0x07
    39b8:	60 84       	ldd	r6, Z+8	; 0x08
    39ba:	71 84       	ldd	r7, Z+9	; 0x09
		fp->fptr = nsect = 0;
    39bc:	16 82       	std	Z+6, r1	; 0x06
    39be:	17 82       	std	Z+7, r1	; 0x07
    39c0:	10 86       	std	Z+8, r1	; 0x08
    39c2:	11 86       	std	Z+9, r1	; 0x09
		if (ofs) {
    39c4:	c1 14       	cp	r12, r1
    39c6:	d1 04       	cpc	r13, r1
    39c8:	e1 04       	cpc	r14, r1
    39ca:	f1 04       	cpc	r15, r1
    39cc:	09 f4       	brne	.+2      	; 0x39d0 <f_lseek+0x8c>
    39ce:	30 c1       	rjmp	.+608    	; 0x3c30 <f_lseek+0x2ec>
			bcs = (DWORD)fp->fs->csize * SS(fp->fs);	/* Cluster size (byte) */
    39d0:	20 80       	ld	r2, Z
    39d2:	31 80       	ldd	r3, Z+1	; 0x01
    39d4:	f1 01       	movw	r30, r2
    39d6:	82 80       	ldd	r8, Z+2	; 0x02
    39d8:	91 2c       	mov	r9, r1
    39da:	a1 2c       	mov	r10, r1
    39dc:	b1 2c       	mov	r11, r1
    39de:	07 2e       	mov	r0, r23
    39e0:	79 e0       	ldi	r23, 0x09	; 9
    39e2:	88 0c       	add	r8, r8
    39e4:	99 1c       	adc	r9, r9
    39e6:	aa 1c       	adc	r10, r10
    39e8:	bb 1c       	adc	r11, r11
    39ea:	7a 95       	dec	r23
    39ec:	d1 f7       	brne	.-12     	; 0x39e2 <f_lseek+0x9e>
    39ee:	70 2d       	mov	r23, r0
			if (ifptr > 0 &&
    39f0:	41 14       	cp	r4, r1
    39f2:	51 04       	cpc	r5, r1
    39f4:	61 04       	cpc	r6, r1
    39f6:	71 04       	cpc	r7, r1
    39f8:	09 f4       	brne	.+2      	; 0x39fc <f_lseek+0xb8>
    39fa:	3e c0       	rjmp	.+124    	; 0x3a78 <f_lseek+0x134>
				(ofs - 1) / bcs >= (ifptr - 1) / bcs) {	/* When seek to same or following cluster, */
    39fc:	c7 01       	movw	r24, r14
    39fe:	b6 01       	movw	r22, r12
    3a00:	61 50       	subi	r22, 0x01	; 1
    3a02:	71 09       	sbc	r23, r1
    3a04:	81 09       	sbc	r24, r1
    3a06:	91 09       	sbc	r25, r1
    3a08:	a5 01       	movw	r20, r10
    3a0a:	94 01       	movw	r18, r8
    3a0c:	c4 d5       	rcall	.+2952   	; 0x4596 <__udivmodsi4>
    3a0e:	29 83       	std	Y+1, r18	; 0x01
    3a10:	3a 83       	std	Y+2, r19	; 0x02
    3a12:	4b 83       	std	Y+3, r20	; 0x03
    3a14:	5c 83       	std	Y+4, r21	; 0x04
    3a16:	f1 e0       	ldi	r31, 0x01	; 1
    3a18:	4f 1a       	sub	r4, r31
    3a1a:	51 08       	sbc	r5, r1
    3a1c:	61 08       	sbc	r6, r1
    3a1e:	71 08       	sbc	r7, r1
    3a20:	c3 01       	movw	r24, r6
    3a22:	b2 01       	movw	r22, r4
    3a24:	a5 01       	movw	r20, r10
    3a26:	94 01       	movw	r18, r8
    3a28:	b6 d5       	rcall	.+2924   	; 0x4596 <__udivmodsi4>

		ifptr = fp->fptr;
		fp->fptr = nsect = 0;
		if (ofs) {
			bcs = (DWORD)fp->fs->csize * SS(fp->fs);	/* Cluster size (byte) */
			if (ifptr > 0 &&
    3a2a:	89 81       	ldd	r24, Y+1	; 0x01
    3a2c:	9a 81       	ldd	r25, Y+2	; 0x02
    3a2e:	ab 81       	ldd	r26, Y+3	; 0x03
    3a30:	bc 81       	ldd	r27, Y+4	; 0x04
    3a32:	82 17       	cp	r24, r18
    3a34:	93 07       	cpc	r25, r19
    3a36:	a4 07       	cpc	r26, r20
    3a38:	b5 07       	cpc	r27, r21
    3a3a:	f0 f0       	brcs	.+60     	; 0x3a78 <f_lseek+0x134>
				(ofs - 1) / bcs >= (ifptr - 1) / bcs) {	/* When seek to same or following cluster, */
				fp->fptr = (ifptr - 1) & ~(bcs - 1);	/* start from the current cluster */
    3a3c:	88 27       	eor	r24, r24
    3a3e:	99 27       	eor	r25, r25
    3a40:	dc 01       	movw	r26, r24
    3a42:	88 19       	sub	r24, r8
    3a44:	99 09       	sbc	r25, r9
    3a46:	aa 09       	sbc	r26, r10
    3a48:	bb 09       	sbc	r27, r11
    3a4a:	48 22       	and	r4, r24
    3a4c:	59 22       	and	r5, r25
    3a4e:	6a 22       	and	r6, r26
    3a50:	7b 22       	and	r7, r27
    3a52:	ad 81       	ldd	r26, Y+5	; 0x05
    3a54:	be 81       	ldd	r27, Y+6	; 0x06
    3a56:	16 96       	adiw	r26, 0x06	; 6
    3a58:	4d 92       	st	X+, r4
    3a5a:	5d 92       	st	X+, r5
    3a5c:	6d 92       	st	X+, r6
    3a5e:	7c 92       	st	X, r7
    3a60:	19 97       	sbiw	r26, 0x09	; 9
				ofs -= fp->fptr;
    3a62:	c4 18       	sub	r12, r4
    3a64:	d5 08       	sbc	r13, r5
    3a66:	e6 08       	sbc	r14, r6
    3a68:	f7 08       	sbc	r15, r7
				clst = fp->clust;
    3a6a:	52 96       	adiw	r26, 0x12	; 18
    3a6c:	4d 91       	ld	r20, X+
    3a6e:	5d 91       	ld	r21, X+
    3a70:	6d 91       	ld	r22, X+
    3a72:	7c 91       	ld	r23, X
    3a74:	55 97       	sbiw	r26, 0x15	; 21
    3a76:	3c c0       	rjmp	.+120    	; 0x3af0 <f_lseek+0x1ac>
			} else {									/* When seek to back cluster, */
				clst = fp->sclust;						/* start from the first cluster */
    3a78:	ed 81       	ldd	r30, Y+5	; 0x05
    3a7a:	fe 81       	ldd	r31, Y+6	; 0x06
    3a7c:	46 85       	ldd	r20, Z+14	; 0x0e
    3a7e:	57 85       	ldd	r21, Z+15	; 0x0f
    3a80:	60 89       	ldd	r22, Z+16	; 0x10
    3a82:	71 89       	ldd	r23, Z+17	; 0x11
#if !_FS_READONLY
				if (clst == 0) {						/* If no cluster chain, create a new chain */
    3a84:	41 15       	cp	r20, r1
    3a86:	51 05       	cpc	r21, r1
    3a88:	61 05       	cpc	r22, r1
    3a8a:	71 05       	cpc	r23, r1
    3a8c:	59 f5       	brne	.+86     	; 0x3ae4 <f_lseek+0x1a0>
					clst = create_chain(fp->fs, 0);
    3a8e:	40 e0       	ldi	r20, 0x00	; 0
    3a90:	50 e0       	ldi	r21, 0x00	; 0
    3a92:	ba 01       	movw	r22, r20
    3a94:	c1 01       	movw	r24, r2
    3a96:	9a d8       	rcall	.-3788   	; 0x2bcc <_ZL12create_chainP5FATFSm>
    3a98:	ab 01       	movw	r20, r22
    3a9a:	bc 01       	movw	r22, r24
					if (clst == 1) ABORT(fp->fs, FR_INT_ERR);
    3a9c:	41 30       	cpi	r20, 0x01	; 1
    3a9e:	51 05       	cpc	r21, r1
    3aa0:	61 05       	cpc	r22, r1
    3aa2:	71 05       	cpc	r23, r1
    3aa4:	51 f4       	brne	.+20     	; 0x3aba <f_lseek+0x176>
    3aa6:	ad 81       	ldd	r26, Y+5	; 0x05
    3aa8:	be 81       	ldd	r27, Y+6	; 0x06
    3aaa:	14 96       	adiw	r26, 0x04	; 4
    3aac:	8c 91       	ld	r24, X
    3aae:	14 97       	sbiw	r26, 0x04	; 4
    3ab0:	80 68       	ori	r24, 0x80	; 128
    3ab2:	14 96       	adiw	r26, 0x04	; 4
    3ab4:	8c 93       	st	X, r24
    3ab6:	82 e0       	ldi	r24, 0x02	; 2
    3ab8:	fa c0       	rjmp	.+500    	; 0x3cae <f_lseek+0x36a>
					if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
    3aba:	4f 3f       	cpi	r20, 0xFF	; 255
    3abc:	bf ef       	ldi	r27, 0xFF	; 255
    3abe:	5b 07       	cpc	r21, r27
    3ac0:	6b 07       	cpc	r22, r27
    3ac2:	7b 07       	cpc	r23, r27
    3ac4:	39 f4       	brne	.+14     	; 0x3ad4 <f_lseek+0x190>
    3ac6:	ed 81       	ldd	r30, Y+5	; 0x05
    3ac8:	fe 81       	ldd	r31, Y+6	; 0x06
    3aca:	84 81       	ldd	r24, Z+4	; 0x04
    3acc:	80 68       	ori	r24, 0x80	; 128
    3ace:	84 83       	std	Z+4, r24	; 0x04
    3ad0:	81 e0       	ldi	r24, 0x01	; 1
    3ad2:	ed c0       	rjmp	.+474    	; 0x3cae <f_lseek+0x36a>
					fp->sclust = clst;
    3ad4:	ad 81       	ldd	r26, Y+5	; 0x05
    3ad6:	be 81       	ldd	r27, Y+6	; 0x06
    3ad8:	1e 96       	adiw	r26, 0x0e	; 14
    3ada:	4d 93       	st	X+, r20
    3adc:	5d 93       	st	X+, r21
    3ade:	6d 93       	st	X+, r22
    3ae0:	7c 93       	st	X, r23
    3ae2:	51 97       	sbiw	r26, 0x11	; 17
				}
#endif
				fp->clust = clst;
    3ae4:	ed 81       	ldd	r30, Y+5	; 0x05
    3ae6:	fe 81       	ldd	r31, Y+6	; 0x06
    3ae8:	42 8b       	std	Z+18, r20	; 0x12
    3aea:	53 8b       	std	Z+19, r21	; 0x13
    3aec:	64 8b       	std	Z+20, r22	; 0x14
    3aee:	75 8b       	std	Z+21, r23	; 0x15
			}
			if (clst != 0) {
    3af0:	41 15       	cp	r20, r1
    3af2:	51 05       	cpc	r21, r1
    3af4:	61 05       	cpc	r22, r1
    3af6:	71 05       	cpc	r23, r1
    3af8:	09 f4       	brne	.+2      	; 0x3afc <f_lseek+0x1b8>
    3afa:	9e c0       	rjmp	.+316    	; 0x3c38 <f_lseek+0x2f4>
				while (ofs > bcs) {						/* Cluster following loop */
    3afc:	8c 14       	cp	r8, r12
    3afe:	9d 04       	cpc	r9, r13
    3b00:	ae 04       	cpc	r10, r14
    3b02:	bf 04       	cpc	r11, r15
    3b04:	08 f0       	brcs	.+2      	; 0x3b08 <f_lseek+0x1c4>
    3b06:	5c c0       	rjmp	.+184    	; 0x3bc0 <f_lseek+0x27c>
#if !_FS_READONLY
					if (fp->flag & FA_WRITE) {			/* Check if in write mode or not */
    3b08:	ad 81       	ldd	r26, Y+5	; 0x05
    3b0a:	be 81       	ldd	r27, Y+6	; 0x06
    3b0c:	14 96       	adiw	r26, 0x04	; 4
    3b0e:	8c 91       	ld	r24, X
    3b10:	14 97       	sbiw	r26, 0x04	; 4
    3b12:	81 ff       	sbrs	r24, 1
						clst = create_chain(fp->fs, clst);	/* Force stretch if in write mode */
    3b14:	0d c0       	rjmp	.+26     	; 0x3b30 <f_lseek+0x1ec>
    3b16:	8d 91       	ld	r24, X+
    3b18:	9c 91       	ld	r25, X
    3b1a:	58 d8       	rcall	.-3920   	; 0x2bcc <_ZL12create_chainP5FATFSm>
    3b1c:	ab 01       	movw	r20, r22
    3b1e:	bc 01       	movw	r22, r24
						if (clst == 0) {				/* When disk gets full, clip file size */
    3b20:	41 15       	cp	r20, r1
    3b22:	51 05       	cpc	r21, r1
    3b24:	61 05       	cpc	r22, r1
    3b26:	71 05       	cpc	r23, r1
    3b28:	59 f4       	brne	.+22     	; 0x3b40 <f_lseek+0x1fc>
							ofs = bcs; break;
    3b2a:	75 01       	movw	r14, r10
    3b2c:	64 01       	movw	r12, r8
    3b2e:	48 c0       	rjmp	.+144    	; 0x3bc0 <f_lseek+0x27c>
						}
					} else
#endif
						clst = get_fat(fp->fs, clst);	/* Follow cluster chain if not in write mode */
    3b30:	ad 81       	ldd	r26, Y+5	; 0x05
    3b32:	be 81       	ldd	r27, Y+6	; 0x06
    3b34:	8d 91       	ld	r24, X+
    3b36:	9c 91       	ld	r25, X
    3b38:	0e 94 20 13 	call	0x2640	; 0x2640 <_Z7get_fatP5FATFSm>
    3b3c:	ab 01       	movw	r20, r22
    3b3e:	bc 01       	movw	r22, r24
					if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
    3b40:	4f 3f       	cpi	r20, 0xFF	; 255
    3b42:	bf ef       	ldi	r27, 0xFF	; 255
    3b44:	5b 07       	cpc	r21, r27
    3b46:	6b 07       	cpc	r22, r27
    3b48:	7b 07       	cpc	r23, r27
    3b4a:	39 f4       	brne	.+14     	; 0x3b5a <f_lseek+0x216>
    3b4c:	ed 81       	ldd	r30, Y+5	; 0x05
    3b4e:	fe 81       	ldd	r31, Y+6	; 0x06
    3b50:	84 81       	ldd	r24, Z+4	; 0x04
    3b52:	80 68       	ori	r24, 0x80	; 128
    3b54:	84 83       	std	Z+4, r24	; 0x04
    3b56:	81 e0       	ldi	r24, 0x01	; 1
    3b58:	aa c0       	rjmp	.+340    	; 0x3cae <f_lseek+0x36a>
					if (clst <= 1 || clst >= fp->fs->n_fatent) ABORT(fp->fs, FR_INT_ERR);
    3b5a:	42 30       	cpi	r20, 0x02	; 2
    3b5c:	51 05       	cpc	r21, r1
    3b5e:	61 05       	cpc	r22, r1
    3b60:	71 05       	cpc	r23, r1
    3b62:	68 f0       	brcs	.+26     	; 0x3b7e <f_lseek+0x23a>
    3b64:	ad 81       	ldd	r26, Y+5	; 0x05
    3b66:	be 81       	ldd	r27, Y+6	; 0x06
    3b68:	ed 91       	ld	r30, X+
    3b6a:	fc 91       	ld	r31, X
    3b6c:	86 89       	ldd	r24, Z+22	; 0x16
    3b6e:	97 89       	ldd	r25, Z+23	; 0x17
    3b70:	a0 8d       	ldd	r26, Z+24	; 0x18
    3b72:	b1 8d       	ldd	r27, Z+25	; 0x19
    3b74:	48 17       	cp	r20, r24
    3b76:	59 07       	cpc	r21, r25
    3b78:	6a 07       	cpc	r22, r26
    3b7a:	7b 07       	cpc	r23, r27
    3b7c:	38 f0       	brcs	.+14     	; 0x3b8c <f_lseek+0x248>
    3b7e:	ed 81       	ldd	r30, Y+5	; 0x05
    3b80:	fe 81       	ldd	r31, Y+6	; 0x06
    3b82:	84 81       	ldd	r24, Z+4	; 0x04
    3b84:	80 68       	ori	r24, 0x80	; 128
    3b86:	84 83       	std	Z+4, r24	; 0x04
    3b88:	82 e0       	ldi	r24, 0x02	; 2
    3b8a:	91 c0       	rjmp	.+290    	; 0x3cae <f_lseek+0x36a>
					fp->clust = clst;
    3b8c:	ad 81       	ldd	r26, Y+5	; 0x05
    3b8e:	be 81       	ldd	r27, Y+6	; 0x06
    3b90:	52 96       	adiw	r26, 0x12	; 18
    3b92:	4d 93       	st	X+, r20
    3b94:	5d 93       	st	X+, r21
    3b96:	6d 93       	st	X+, r22
    3b98:	7c 93       	st	X, r23
    3b9a:	55 97       	sbiw	r26, 0x15	; 21
					fp->fptr += bcs;
    3b9c:	fd 01       	movw	r30, r26
    3b9e:	86 81       	ldd	r24, Z+6	; 0x06
    3ba0:	97 81       	ldd	r25, Z+7	; 0x07
    3ba2:	a0 85       	ldd	r26, Z+8	; 0x08
    3ba4:	b1 85       	ldd	r27, Z+9	; 0x09
    3ba6:	88 0d       	add	r24, r8
    3ba8:	99 1d       	adc	r25, r9
    3baa:	aa 1d       	adc	r26, r10
    3bac:	bb 1d       	adc	r27, r11
    3bae:	86 83       	std	Z+6, r24	; 0x06
    3bb0:	97 83       	std	Z+7, r25	; 0x07
    3bb2:	a0 87       	std	Z+8, r26	; 0x08
    3bb4:	b1 87       	std	Z+9, r27	; 0x09
					ofs -= bcs;
    3bb6:	c8 18       	sub	r12, r8
    3bb8:	d9 08       	sbc	r13, r9
    3bba:	ea 08       	sbc	r14, r10
    3bbc:	fb 08       	sbc	r15, r11
				}
#endif
				fp->clust = clst;
			}
			if (clst != 0) {
				while (ofs > bcs) {						/* Cluster following loop */
    3bbe:	9e cf       	rjmp	.-196    	; 0x3afc <f_lseek+0x1b8>
					if (clst <= 1 || clst >= fp->fs->n_fatent) ABORT(fp->fs, FR_INT_ERR);
					fp->clust = clst;
					fp->fptr += bcs;
					ofs -= bcs;
				}
				fp->fptr += ofs;
    3bc0:	ed 81       	ldd	r30, Y+5	; 0x05
    3bc2:	fe 81       	ldd	r31, Y+6	; 0x06
    3bc4:	86 81       	ldd	r24, Z+6	; 0x06
    3bc6:	97 81       	ldd	r25, Z+7	; 0x07
    3bc8:	a0 85       	ldd	r26, Z+8	; 0x08
    3bca:	b1 85       	ldd	r27, Z+9	; 0x09
    3bcc:	8c 0d       	add	r24, r12
    3bce:	9d 1d       	adc	r25, r13
    3bd0:	ae 1d       	adc	r26, r14
    3bd2:	bf 1d       	adc	r27, r15
    3bd4:	86 83       	std	Z+6, r24	; 0x06
    3bd6:	97 83       	std	Z+7, r25	; 0x07
    3bd8:	a0 87       	std	Z+8, r26	; 0x08
    3bda:	b1 87       	std	Z+9, r27	; 0x09
				if (ofs % SS(fp->fs)) {
    3bdc:	d7 01       	movw	r26, r14
    3bde:	c6 01       	movw	r24, r12
    3be0:	91 70       	andi	r25, 0x01	; 1
    3be2:	aa 27       	eor	r26, r26
    3be4:	bb 27       	eor	r27, r27
    3be6:	89 2b       	or	r24, r25
    3be8:	8a 2b       	or	r24, r26
    3bea:	8b 2b       	or	r24, r27
    3bec:	49 f1       	breq	.+82     	; 0x3c40 <f_lseek+0x2fc>
					nsect = clust2sect(fp->fs, clst);	/* Current sector */
    3bee:	80 81       	ld	r24, Z
    3bf0:	91 81       	ldd	r25, Z+1	; 0x01
    3bf2:	0e 94 f8 12 	call	0x25f0	; 0x25f0 <_Z10clust2sectP5FATFSm>
					if (!nsect) ABORT(fp->fs, FR_INT_ERR);
    3bf6:	61 15       	cp	r22, r1
    3bf8:	71 05       	cpc	r23, r1
    3bfa:	81 05       	cpc	r24, r1
    3bfc:	91 05       	cpc	r25, r1
    3bfe:	51 f4       	brne	.+20     	; 0x3c14 <f_lseek+0x2d0>
    3c00:	ad 81       	ldd	r26, Y+5	; 0x05
    3c02:	be 81       	ldd	r27, Y+6	; 0x06
    3c04:	14 96       	adiw	r26, 0x04	; 4
    3c06:	8c 91       	ld	r24, X
    3c08:	14 97       	sbiw	r26, 0x04	; 4
    3c0a:	80 68       	ori	r24, 0x80	; 128
    3c0c:	14 96       	adiw	r26, 0x04	; 4
    3c0e:	8c 93       	st	X, r24
    3c10:	82 e0       	ldi	r24, 0x02	; 2
    3c12:	4d c0       	rjmp	.+154    	; 0x3cae <f_lseek+0x36a>
					nsect += ofs / SS(fp->fs);
    3c14:	0b 2e       	mov	r0, r27
    3c16:	b9 e0       	ldi	r27, 0x09	; 9
    3c18:	f6 94       	lsr	r15
    3c1a:	e7 94       	ror	r14
    3c1c:	d7 94       	ror	r13
    3c1e:	c7 94       	ror	r12
    3c20:	ba 95       	dec	r27
    3c22:	d1 f7       	brne	.-12     	; 0x3c18 <f_lseek+0x2d4>
    3c24:	b0 2d       	mov	r27, r0
    3c26:	c6 0e       	add	r12, r22
    3c28:	d7 1e       	adc	r13, r23
    3c2a:	e8 1e       	adc	r14, r24
    3c2c:	f9 1e       	adc	r15, r25
    3c2e:	0b c0       	rjmp	.+22     	; 0x3c46 <f_lseek+0x302>
			 && !(fp->flag & FA_WRITE)
#endif
			) ofs = fp->fsize;

		ifptr = fp->fptr;
		fp->fptr = nsect = 0;
    3c30:	c1 2c       	mov	r12, r1
    3c32:	d1 2c       	mov	r13, r1
    3c34:	76 01       	movw	r14, r12
    3c36:	07 c0       	rjmp	.+14     	; 0x3c46 <f_lseek+0x302>
    3c38:	c1 2c       	mov	r12, r1
    3c3a:	d1 2c       	mov	r13, r1
    3c3c:	76 01       	movw	r14, r12
    3c3e:	03 c0       	rjmp	.+6      	; 0x3c46 <f_lseek+0x302>
    3c40:	c1 2c       	mov	r12, r1
    3c42:	d1 2c       	mov	r13, r1
    3c44:	76 01       	movw	r14, r12
					if (!nsect) ABORT(fp->fs, FR_INT_ERR);
					nsect += ofs / SS(fp->fs);
				}
			}
		}
		if (fp->fptr % SS(fp->fs) && nsect != fp->dsect) {	/* Fill sector cache if needed */
    3c46:	ed 81       	ldd	r30, Y+5	; 0x05
    3c48:	fe 81       	ldd	r31, Y+6	; 0x06
    3c4a:	86 81       	ldd	r24, Z+6	; 0x06
    3c4c:	97 81       	ldd	r25, Z+7	; 0x07
    3c4e:	a0 85       	ldd	r26, Z+8	; 0x08
    3c50:	b1 85       	ldd	r27, Z+9	; 0x09
    3c52:	ac 01       	movw	r20, r24
    3c54:	bd 01       	movw	r22, r26
    3c56:	51 70       	andi	r21, 0x01	; 1
    3c58:	66 27       	eor	r22, r22
    3c5a:	77 27       	eor	r23, r23
    3c5c:	45 2b       	or	r20, r21
    3c5e:	46 2b       	or	r20, r22
    3c60:	47 2b       	or	r20, r23
    3c62:	69 f0       	breq	.+26     	; 0x3c7e <f_lseek+0x33a>
    3c64:	46 89       	ldd	r20, Z+22	; 0x16
    3c66:	57 89       	ldd	r21, Z+23	; 0x17
    3c68:	60 8d       	ldd	r22, Z+24	; 0x18
    3c6a:	71 8d       	ldd	r23, Z+25	; 0x19
    3c6c:	c4 16       	cp	r12, r20
    3c6e:	d5 06       	cpc	r13, r21
    3c70:	e6 06       	cpc	r14, r22
    3c72:	f7 06       	cpc	r15, r23
    3c74:	21 f0       	breq	.+8      	; 0x3c7e <f_lseek+0x33a>
			}
#endif
			if (disk_read(fp->fs->drv, fp->buf, nsect, 1) != RES_OK)	/* Fill sector cache */
				ABORT(fp->fs, FR_DISK_ERR);
#endif
			fp->dsect = nsect;
    3c76:	c6 8a       	std	Z+22, r12	; 0x16
    3c78:	d7 8a       	std	Z+23, r13	; 0x17
    3c7a:	e0 8e       	std	Z+24, r14	; 0x18
    3c7c:	f1 8e       	std	Z+25, r15	; 0x19
		}
#if !_FS_READONLY
		if (fp->fptr > fp->fsize) {			/* Set file change flag if the file size is extended */
    3c7e:	ed 81       	ldd	r30, Y+5	; 0x05
    3c80:	fe 81       	ldd	r31, Y+6	; 0x06
    3c82:	42 85       	ldd	r20, Z+10	; 0x0a
    3c84:	53 85       	ldd	r21, Z+11	; 0x0b
    3c86:	64 85       	ldd	r22, Z+12	; 0x0c
    3c88:	75 85       	ldd	r23, Z+13	; 0x0d
    3c8a:	48 17       	cp	r20, r24
    3c8c:	59 07       	cpc	r21, r25
    3c8e:	6a 07       	cpc	r22, r26
    3c90:	7b 07       	cpc	r23, r27
    3c92:	60 f4       	brcc	.+24     	; 0x3cac <f_lseek+0x368>
			fp->fsize = fp->fptr;
    3c94:	82 87       	std	Z+10, r24	; 0x0a
    3c96:	93 87       	std	Z+11, r25	; 0x0b
    3c98:	a4 87       	std	Z+12, r26	; 0x0c
    3c9a:	b5 87       	std	Z+13, r27	; 0x0d
			fp->flag |= FA__WRITTEN;
    3c9c:	84 81       	ldd	r24, Z+4	; 0x04
    3c9e:	80 62       	ori	r24, 0x20	; 32
    3ca0:	84 83       	std	Z+4, r24	; 0x04
		}
#endif
	}

	LEAVE_FF(fp->fs, res);
    3ca2:	81 2f       	mov	r24, r17
    3ca4:	04 c0       	rjmp	.+8      	; 0x3cae <f_lseek+0x36a>
    3ca6:	03 c0       	rjmp	.+6      	; 0x3cae <f_lseek+0x36a>


	res = validate(fp);					/* Check validity of the object */
	if (res != FR_OK) LEAVE_FF(fp->fs, res);
	if (fp->flag & FA__ERROR)			/* Check abort flag */
		LEAVE_FF(fp->fs, FR_INT_ERR);
    3ca8:	82 e0       	ldi	r24, 0x02	; 2
    3caa:	01 c0       	rjmp	.+2      	; 0x3cae <f_lseek+0x36a>
			fp->flag |= FA__WRITTEN;
		}
#endif
	}

	LEAVE_FF(fp->fs, res);
    3cac:	81 2f       	mov	r24, r17
}
    3cae:	26 96       	adiw	r28, 0x06	; 6
    3cb0:	0f b6       	in	r0, 0x3f	; 63
    3cb2:	f8 94       	cli
    3cb4:	de bf       	out	0x3e, r29	; 62
    3cb6:	0f be       	out	0x3f, r0	; 63
    3cb8:	cd bf       	out	0x3d, r28	; 61
    3cba:	df 91       	pop	r29
    3cbc:	cf 91       	pop	r28
    3cbe:	1f 91       	pop	r17
    3cc0:	ff 90       	pop	r15
    3cc2:	ef 90       	pop	r14
    3cc4:	df 90       	pop	r13
    3cc6:	cf 90       	pop	r12
    3cc8:	bf 90       	pop	r11
    3cca:	af 90       	pop	r10
    3ccc:	9f 90       	pop	r9
    3cce:	8f 90       	pop	r8
    3cd0:	7f 90       	pop	r7
    3cd2:	6f 90       	pop	r6
    3cd4:	5f 90       	pop	r5
    3cd6:	4f 90       	pop	r4
    3cd8:	3f 90       	pop	r3
    3cda:	2f 90       	pop	r2
    3cdc:	08 95       	ret

00003cde <_ZL6dly_usj>:

static
void dly_us (UINT n)	/* Delay n microseconds (avr-gcc -Os) */
{
	do {
		PINB;
    3cde:	23 b1       	in	r18, 0x03	; 3


static
void dly_us (UINT n)	/* Delay n microseconds (avr-gcc -Os) */
{
	do {
    3ce0:	01 97       	sbiw	r24, 0x01	; 1
    3ce2:	e9 f7       	brne	.-6      	; 0x3cde <_ZL6dly_usj>
#endif
#if F_CPU >= 14000000
#error Too fast clock
#endif
	} while (--n);
}
    3ce4:	08 95       	ret

00003ce6 <_ZL8xmit_mmcPKhj>:
static
void xmit_mmc (
	const BYTE* buff,	/* Data to be sent */
	UINT bc				/* Number of bytes to send */
)
{
    3ce6:	fc 01       	movw	r30, r24
	BYTE d;


	do {
		d = *buff++;	/* Get a byte to be sent */
    3ce8:	9f 01       	movw	r18, r30
    3cea:	2f 5f       	subi	r18, 0xFF	; 255
    3cec:	3f 4f       	sbci	r19, 0xFF	; 255
    3cee:	80 81       	ld	r24, Z
		if (d & 0x80) DI_H(); else DI_L();	/* bit7 */
    3cf0:	88 23       	and	r24, r24
    3cf2:	24 f4       	brge	.+8      	; 0x3cfc <_ZL8xmit_mmcPKhj+0x16>
    3cf4:	95 b1       	in	r25, 0x05	; 5
    3cf6:	90 62       	ori	r25, 0x20	; 32
    3cf8:	95 b9       	out	0x05, r25	; 5
    3cfa:	03 c0       	rjmp	.+6      	; 0x3d02 <_ZL8xmit_mmcPKhj+0x1c>
    3cfc:	95 b1       	in	r25, 0x05	; 5
    3cfe:	9f 7d       	andi	r25, 0xDF	; 223
    3d00:	95 b9       	out	0x05, r25	; 5
		CK_H(); CK_L();
    3d02:	95 b1       	in	r25, 0x05	; 5
    3d04:	90 68       	ori	r25, 0x80	; 128
    3d06:	95 b9       	out	0x05, r25	; 5
    3d08:	95 b1       	in	r25, 0x05	; 5
    3d0a:	9f 77       	andi	r25, 0x7F	; 127
    3d0c:	95 b9       	out	0x05, r25	; 5
		if (d & 0x40) DI_H(); else DI_L();	/* bit6 */
    3d0e:	86 ff       	sbrs	r24, 6
    3d10:	04 c0       	rjmp	.+8      	; 0x3d1a <_ZL8xmit_mmcPKhj+0x34>
    3d12:	95 b1       	in	r25, 0x05	; 5
    3d14:	90 62       	ori	r25, 0x20	; 32
    3d16:	95 b9       	out	0x05, r25	; 5
    3d18:	03 c0       	rjmp	.+6      	; 0x3d20 <_ZL8xmit_mmcPKhj+0x3a>
    3d1a:	95 b1       	in	r25, 0x05	; 5
    3d1c:	9f 7d       	andi	r25, 0xDF	; 223
    3d1e:	95 b9       	out	0x05, r25	; 5
		CK_H(); CK_L();
    3d20:	95 b1       	in	r25, 0x05	; 5
    3d22:	90 68       	ori	r25, 0x80	; 128
    3d24:	95 b9       	out	0x05, r25	; 5
    3d26:	95 b1       	in	r25, 0x05	; 5
    3d28:	9f 77       	andi	r25, 0x7F	; 127
    3d2a:	95 b9       	out	0x05, r25	; 5
		if (d & 0x20) DI_H(); else DI_L();	/* bit5 */
    3d2c:	85 ff       	sbrs	r24, 5
    3d2e:	04 c0       	rjmp	.+8      	; 0x3d38 <_ZL8xmit_mmcPKhj+0x52>
    3d30:	95 b1       	in	r25, 0x05	; 5
    3d32:	90 62       	ori	r25, 0x20	; 32
    3d34:	95 b9       	out	0x05, r25	; 5
    3d36:	03 c0       	rjmp	.+6      	; 0x3d3e <_ZL8xmit_mmcPKhj+0x58>
    3d38:	95 b1       	in	r25, 0x05	; 5
    3d3a:	9f 7d       	andi	r25, 0xDF	; 223
    3d3c:	95 b9       	out	0x05, r25	; 5
		CK_H(); CK_L();
    3d3e:	95 b1       	in	r25, 0x05	; 5
    3d40:	90 68       	ori	r25, 0x80	; 128
    3d42:	95 b9       	out	0x05, r25	; 5
    3d44:	95 b1       	in	r25, 0x05	; 5
    3d46:	9f 77       	andi	r25, 0x7F	; 127
    3d48:	95 b9       	out	0x05, r25	; 5
		if (d & 0x10) DI_H(); else DI_L();	/* bit4 */
    3d4a:	84 ff       	sbrs	r24, 4
    3d4c:	04 c0       	rjmp	.+8      	; 0x3d56 <_ZL8xmit_mmcPKhj+0x70>
    3d4e:	95 b1       	in	r25, 0x05	; 5
    3d50:	90 62       	ori	r25, 0x20	; 32
    3d52:	95 b9       	out	0x05, r25	; 5
    3d54:	03 c0       	rjmp	.+6      	; 0x3d5c <_ZL8xmit_mmcPKhj+0x76>
    3d56:	95 b1       	in	r25, 0x05	; 5
    3d58:	9f 7d       	andi	r25, 0xDF	; 223
    3d5a:	95 b9       	out	0x05, r25	; 5
		CK_H(); CK_L();
    3d5c:	95 b1       	in	r25, 0x05	; 5
    3d5e:	90 68       	ori	r25, 0x80	; 128
    3d60:	95 b9       	out	0x05, r25	; 5
    3d62:	95 b1       	in	r25, 0x05	; 5
    3d64:	9f 77       	andi	r25, 0x7F	; 127
    3d66:	95 b9       	out	0x05, r25	; 5
		if (d & 0x08) DI_H(); else DI_L();	/* bit3 */
    3d68:	83 ff       	sbrs	r24, 3
    3d6a:	04 c0       	rjmp	.+8      	; 0x3d74 <_ZL8xmit_mmcPKhj+0x8e>
    3d6c:	95 b1       	in	r25, 0x05	; 5
    3d6e:	90 62       	ori	r25, 0x20	; 32
    3d70:	95 b9       	out	0x05, r25	; 5
    3d72:	03 c0       	rjmp	.+6      	; 0x3d7a <_ZL8xmit_mmcPKhj+0x94>
    3d74:	95 b1       	in	r25, 0x05	; 5
    3d76:	9f 7d       	andi	r25, 0xDF	; 223
    3d78:	95 b9       	out	0x05, r25	; 5
		CK_H(); CK_L();
    3d7a:	95 b1       	in	r25, 0x05	; 5
    3d7c:	90 68       	ori	r25, 0x80	; 128
    3d7e:	95 b9       	out	0x05, r25	; 5
    3d80:	95 b1       	in	r25, 0x05	; 5
    3d82:	9f 77       	andi	r25, 0x7F	; 127
    3d84:	95 b9       	out	0x05, r25	; 5
		if (d & 0x04) DI_H(); else DI_L();	/* bit2 */
    3d86:	82 ff       	sbrs	r24, 2
    3d88:	04 c0       	rjmp	.+8      	; 0x3d92 <_ZL8xmit_mmcPKhj+0xac>
    3d8a:	95 b1       	in	r25, 0x05	; 5
    3d8c:	90 62       	ori	r25, 0x20	; 32
    3d8e:	95 b9       	out	0x05, r25	; 5
    3d90:	03 c0       	rjmp	.+6      	; 0x3d98 <_ZL8xmit_mmcPKhj+0xb2>
    3d92:	95 b1       	in	r25, 0x05	; 5
    3d94:	9f 7d       	andi	r25, 0xDF	; 223
    3d96:	95 b9       	out	0x05, r25	; 5
		CK_H(); CK_L();
    3d98:	95 b1       	in	r25, 0x05	; 5
    3d9a:	90 68       	ori	r25, 0x80	; 128
    3d9c:	95 b9       	out	0x05, r25	; 5
    3d9e:	95 b1       	in	r25, 0x05	; 5
    3da0:	9f 77       	andi	r25, 0x7F	; 127
    3da2:	95 b9       	out	0x05, r25	; 5
		if (d & 0x02) DI_H(); else DI_L();	/* bit1 */
    3da4:	81 ff       	sbrs	r24, 1
    3da6:	04 c0       	rjmp	.+8      	; 0x3db0 <_ZL8xmit_mmcPKhj+0xca>
    3da8:	95 b1       	in	r25, 0x05	; 5
    3daa:	90 62       	ori	r25, 0x20	; 32
    3dac:	95 b9       	out	0x05, r25	; 5
    3dae:	03 c0       	rjmp	.+6      	; 0x3db6 <_ZL8xmit_mmcPKhj+0xd0>
    3db0:	95 b1       	in	r25, 0x05	; 5
    3db2:	9f 7d       	andi	r25, 0xDF	; 223
    3db4:	95 b9       	out	0x05, r25	; 5
		CK_H(); CK_L();
    3db6:	95 b1       	in	r25, 0x05	; 5
    3db8:	90 68       	ori	r25, 0x80	; 128
    3dba:	95 b9       	out	0x05, r25	; 5
    3dbc:	95 b1       	in	r25, 0x05	; 5
    3dbe:	9f 77       	andi	r25, 0x7F	; 127
    3dc0:	95 b9       	out	0x05, r25	; 5
		if (d & 0x01) DI_H(); else DI_L();	/* bit0 */
    3dc2:	80 ff       	sbrs	r24, 0
    3dc4:	04 c0       	rjmp	.+8      	; 0x3dce <_ZL8xmit_mmcPKhj+0xe8>
    3dc6:	85 b1       	in	r24, 0x05	; 5
    3dc8:	80 62       	ori	r24, 0x20	; 32
    3dca:	85 b9       	out	0x05, r24	; 5
    3dcc:	03 c0       	rjmp	.+6      	; 0x3dd4 <_ZL8xmit_mmcPKhj+0xee>
    3dce:	85 b1       	in	r24, 0x05	; 5
    3dd0:	8f 7d       	andi	r24, 0xDF	; 223
    3dd2:	85 b9       	out	0x05, r24	; 5
		CK_H(); CK_L();
    3dd4:	85 b1       	in	r24, 0x05	; 5
    3dd6:	80 68       	ori	r24, 0x80	; 128
    3dd8:	85 b9       	out	0x05, r24	; 5
    3dda:	85 b1       	in	r24, 0x05	; 5
    3ddc:	8f 77       	andi	r24, 0x7F	; 127
    3dde:	85 b9       	out	0x05, r24	; 5
)
{
	BYTE d;


	do {
    3de0:	61 50       	subi	r22, 0x01	; 1
    3de2:	71 09       	sbc	r23, r1
		d = *buff++;	/* Get a byte to be sent */
    3de4:	f9 01       	movw	r30, r18
)
{
	BYTE d;


	do {
    3de6:	09 f0       	breq	.+2      	; 0x3dea <_ZL8xmit_mmcPKhj+0x104>
    3de8:	7f cf       	rjmp	.-258    	; 0x3ce8 <_ZL8xmit_mmcPKhj+0x2>
		if (d & 0x02) DI_H(); else DI_L();	/* bit1 */
		CK_H(); CK_L();
		if (d & 0x01) DI_H(); else DI_L();	/* bit0 */
		CK_H(); CK_L();
	} while (--bc);
}
    3dea:	08 95       	ret

00003dec <_ZL8rcvr_mmcPhj>:
static
void rcvr_mmc (
	BYTE *buff,	/* Pointer to read buffer */
	UINT bc		/* Number of bytes to receive */
)
{
    3dec:	fc 01       	movw	r30, r24
	BYTE r;


	DI_H();	/* Send 0xFF */
    3dee:	85 b1       	in	r24, 0x05	; 5
    3df0:	80 62       	ori	r24, 0x20	; 32
    3df2:	85 b9       	out	0x05, r24	; 5
    3df4:	01 c0       	rjmp	.+2      	; 0x3df8 <_ZL8rcvr_mmcPhj+0xc>
		CK_H(); CK_L();
		r <<= 1; if (DO) r++;	/* bit1 */
		CK_H(); CK_L();
		r <<= 1; if (DO) r++;	/* bit0 */
		CK_H(); CK_L();
		*buff++ = r;			/* Store a received byte */
    3df6:	f9 01       	movw	r30, r18


	DI_H();	/* Send 0xFF */

	do {
		r = 0;	 if (DO) r++;	/* bit7 */
    3df8:	1e 99       	sbic	0x03, 6	; 3
    3dfa:	02 c0       	rjmp	.+4      	; 0x3e00 <_ZL8rcvr_mmcPhj+0x14>
    3dfc:	90 e0       	ldi	r25, 0x00	; 0
    3dfe:	01 c0       	rjmp	.+2      	; 0x3e02 <_ZL8rcvr_mmcPhj+0x16>
    3e00:	91 e0       	ldi	r25, 0x01	; 1
		CK_H(); CK_L();
    3e02:	85 b1       	in	r24, 0x05	; 5
    3e04:	80 68       	ori	r24, 0x80	; 128
    3e06:	85 b9       	out	0x05, r24	; 5
    3e08:	85 b1       	in	r24, 0x05	; 5
    3e0a:	8f 77       	andi	r24, 0x7F	; 127
    3e0c:	85 b9       	out	0x05, r24	; 5
		r <<= 1; if (DO) r++;	/* bit6 */
    3e0e:	99 0f       	add	r25, r25
    3e10:	1e 99       	sbic	0x03, 6	; 3
    3e12:	9f 5f       	subi	r25, 0xFF	; 255
		CK_H(); CK_L();
    3e14:	85 b1       	in	r24, 0x05	; 5
    3e16:	80 68       	ori	r24, 0x80	; 128
    3e18:	85 b9       	out	0x05, r24	; 5
    3e1a:	85 b1       	in	r24, 0x05	; 5
    3e1c:	8f 77       	andi	r24, 0x7F	; 127
    3e1e:	85 b9       	out	0x05, r24	; 5
		r <<= 1; if (DO) r++;	/* bit5 */
    3e20:	99 0f       	add	r25, r25
    3e22:	1e 99       	sbic	0x03, 6	; 3
    3e24:	9f 5f       	subi	r25, 0xFF	; 255
		CK_H(); CK_L();
    3e26:	85 b1       	in	r24, 0x05	; 5
    3e28:	80 68       	ori	r24, 0x80	; 128
    3e2a:	85 b9       	out	0x05, r24	; 5
    3e2c:	85 b1       	in	r24, 0x05	; 5
    3e2e:	8f 77       	andi	r24, 0x7F	; 127
    3e30:	85 b9       	out	0x05, r24	; 5
		r <<= 1; if (DO) r++;	/* bit4 */
    3e32:	99 0f       	add	r25, r25
    3e34:	1e 99       	sbic	0x03, 6	; 3
    3e36:	9f 5f       	subi	r25, 0xFF	; 255
		CK_H(); CK_L();
    3e38:	85 b1       	in	r24, 0x05	; 5
    3e3a:	80 68       	ori	r24, 0x80	; 128
    3e3c:	85 b9       	out	0x05, r24	; 5
    3e3e:	85 b1       	in	r24, 0x05	; 5
    3e40:	8f 77       	andi	r24, 0x7F	; 127
    3e42:	85 b9       	out	0x05, r24	; 5
		r <<= 1; if (DO) r++;	/* bit3 */
    3e44:	99 0f       	add	r25, r25
    3e46:	1e 99       	sbic	0x03, 6	; 3
    3e48:	9f 5f       	subi	r25, 0xFF	; 255
		CK_H(); CK_L();
    3e4a:	85 b1       	in	r24, 0x05	; 5
    3e4c:	80 68       	ori	r24, 0x80	; 128
    3e4e:	85 b9       	out	0x05, r24	; 5
    3e50:	85 b1       	in	r24, 0x05	; 5
    3e52:	8f 77       	andi	r24, 0x7F	; 127
    3e54:	85 b9       	out	0x05, r24	; 5
		r <<= 1; if (DO) r++;	/* bit2 */
    3e56:	99 0f       	add	r25, r25
    3e58:	1e 99       	sbic	0x03, 6	; 3
    3e5a:	9f 5f       	subi	r25, 0xFF	; 255
		CK_H(); CK_L();
    3e5c:	85 b1       	in	r24, 0x05	; 5
    3e5e:	80 68       	ori	r24, 0x80	; 128
    3e60:	85 b9       	out	0x05, r24	; 5
    3e62:	85 b1       	in	r24, 0x05	; 5
    3e64:	8f 77       	andi	r24, 0x7F	; 127
    3e66:	85 b9       	out	0x05, r24	; 5
		r <<= 1; if (DO) r++;	/* bit1 */
    3e68:	99 0f       	add	r25, r25
    3e6a:	1e 99       	sbic	0x03, 6	; 3
    3e6c:	9f 5f       	subi	r25, 0xFF	; 255
		CK_H(); CK_L();
    3e6e:	85 b1       	in	r24, 0x05	; 5
    3e70:	80 68       	ori	r24, 0x80	; 128
    3e72:	85 b9       	out	0x05, r24	; 5
    3e74:	85 b1       	in	r24, 0x05	; 5
    3e76:	8f 77       	andi	r24, 0x7F	; 127
    3e78:	85 b9       	out	0x05, r24	; 5
		r <<= 1; if (DO) r++;	/* bit0 */
    3e7a:	99 0f       	add	r25, r25
    3e7c:	1e 99       	sbic	0x03, 6	; 3
    3e7e:	9f 5f       	subi	r25, 0xFF	; 255
		CK_H(); CK_L();
    3e80:	25 b1       	in	r18, 0x05	; 5
    3e82:	20 68       	ori	r18, 0x80	; 128
    3e84:	25 b9       	out	0x05, r18	; 5
    3e86:	25 b1       	in	r18, 0x05	; 5
    3e88:	2f 77       	andi	r18, 0x7F	; 127
    3e8a:	25 b9       	out	0x05, r18	; 5
		*buff++ = r;			/* Store a received byte */
    3e8c:	9f 01       	movw	r18, r30
    3e8e:	2f 5f       	subi	r18, 0xFF	; 255
    3e90:	3f 4f       	sbci	r19, 0xFF	; 255
    3e92:	90 83       	st	Z, r25
	BYTE r;


	DI_H();	/* Send 0xFF */

	do {
    3e94:	61 50       	subi	r22, 0x01	; 1
    3e96:	71 09       	sbc	r23, r1
    3e98:	09 f0       	breq	.+2      	; 0x3e9c <_ZL8rcvr_mmcPhj+0xb0>
    3e9a:	ad cf       	rjmp	.-166    	; 0x3df6 <_ZL8rcvr_mmcPhj+0xa>
		CK_H(); CK_L();
		r <<= 1; if (DO) r++;	/* bit0 */
		CK_H(); CK_L();
		*buff++ = r;			/* Store a received byte */
	} while (--bc);
}
    3e9c:	08 95       	ret

00003e9e <_ZL10wait_readyv>:
/* Wait for card ready                                                   */
/*-----------------------------------------------------------------------*/

static
int wait_ready (void)	/* 1:OK, 0:Timeout */
{
    3e9e:	0f 93       	push	r16
    3ea0:	1f 93       	push	r17
    3ea2:	cf 93       	push	r28
    3ea4:	df 93       	push	r29
    3ea6:	1f 92       	push	r1
    3ea8:	cd b7       	in	r28, 0x3d	; 61
    3eaa:	de b7       	in	r29, 0x3e	; 62
	BYTE d;
	UINT tmr;


	for (tmr = 5000; tmr; tmr--) {	/* Wait for ready in timeout of 500ms */
    3eac:	08 e8       	ldi	r16, 0x88	; 136
    3eae:	13 e1       	ldi	r17, 0x13	; 19
    3eb0:	01 15       	cp	r16, r1
    3eb2:	11 05       	cpc	r17, r1
    3eb4:	71 f0       	breq	.+28     	; 0x3ed2 <_ZL10wait_readyv+0x34>
		rcvr_mmc(&d, 1);
    3eb6:	61 e0       	ldi	r22, 0x01	; 1
    3eb8:	70 e0       	ldi	r23, 0x00	; 0
    3eba:	ce 01       	movw	r24, r28
    3ebc:	01 96       	adiw	r24, 0x01	; 1
    3ebe:	96 df       	rcall	.-212    	; 0x3dec <_ZL8rcvr_mmcPhj>
		if (d == 0xFF) break;
    3ec0:	89 81       	ldd	r24, Y+1	; 0x01
    3ec2:	8f 3f       	cpi	r24, 0xFF	; 255
    3ec4:	31 f0       	breq	.+12     	; 0x3ed2 <_ZL10wait_readyv+0x34>
		dly_us(100);
    3ec6:	84 e6       	ldi	r24, 0x64	; 100
    3ec8:	90 e0       	ldi	r25, 0x00	; 0
    3eca:	09 df       	rcall	.-494    	; 0x3cde <_ZL6dly_usj>
{
	BYTE d;
	UINT tmr;


	for (tmr = 5000; tmr; tmr--) {	/* Wait for ready in timeout of 500ms */
    3ecc:	01 50       	subi	r16, 0x01	; 1
    3ece:	11 09       	sbc	r17, r1
    3ed0:	ef cf       	rjmp	.-34     	; 0x3eb0 <_ZL10wait_readyv+0x12>
		rcvr_mmc(&d, 1);
		if (d == 0xFF) break;
		dly_us(100);
	}

	return tmr ? 1 : 0;
    3ed2:	01 2b       	or	r16, r17
    3ed4:	19 f0       	breq	.+6      	; 0x3edc <_ZL10wait_readyv+0x3e>
    3ed6:	81 e0       	ldi	r24, 0x01	; 1
    3ed8:	90 e0       	ldi	r25, 0x00	; 0
    3eda:	02 c0       	rjmp	.+4      	; 0x3ee0 <_ZL10wait_readyv+0x42>
    3edc:	80 e0       	ldi	r24, 0x00	; 0
    3ede:	90 e0       	ldi	r25, 0x00	; 0
}
    3ee0:	0f 90       	pop	r0
    3ee2:	df 91       	pop	r29
    3ee4:	cf 91       	pop	r28
    3ee6:	1f 91       	pop	r17
    3ee8:	0f 91       	pop	r16
    3eea:	08 95       	ret

00003eec <_ZL8deselectv>:
/* Deselect the card and release SPI bus                                 */
/*-----------------------------------------------------------------------*/

static
void deselect (void)
{
    3eec:	cf 93       	push	r28
    3eee:	df 93       	push	r29
    3ef0:	1f 92       	push	r1
    3ef2:	cd b7       	in	r28, 0x3d	; 61
    3ef4:	de b7       	in	r29, 0x3e	; 62
	BYTE d;

	CS_H();
    3ef6:	85 b1       	in	r24, 0x05	; 5
    3ef8:	82 60       	ori	r24, 0x02	; 2
    3efa:	85 b9       	out	0x05, r24	; 5
	rcvr_mmc(&d, 1);	/* Dummy clock (force DO hi-z for multiple slave SPI) */
    3efc:	61 e0       	ldi	r22, 0x01	; 1
    3efe:	70 e0       	ldi	r23, 0x00	; 0
    3f00:	ce 01       	movw	r24, r28
    3f02:	01 96       	adiw	r24, 0x01	; 1
    3f04:	73 df       	rcall	.-282    	; 0x3dec <_ZL8rcvr_mmcPhj>
}
    3f06:	0f 90       	pop	r0
    3f08:	df 91       	pop	r29
    3f0a:	cf 91       	pop	r28
    3f0c:	08 95       	ret

00003f0e <_ZL6selectv>:
/* Select the card and wait for ready                                    */
/*-----------------------------------------------------------------------*/

static
int select (void)	/* 1:OK, 0:Timeout */
{
    3f0e:	0f 93       	push	r16
    3f10:	1f 93       	push	r17
    3f12:	cf 93       	push	r28
    3f14:	df 93       	push	r29
    3f16:	1f 92       	push	r1
    3f18:	cd b7       	in	r28, 0x3d	; 61
    3f1a:	de b7       	in	r29, 0x3e	; 62
	BYTE d;

	CS_L();
    3f1c:	85 b1       	in	r24, 0x05	; 5
    3f1e:	8d 7f       	andi	r24, 0xFD	; 253
    3f20:	85 b9       	out	0x05, r24	; 5
	rcvr_mmc(&d, 1);	/* Dummy clock (force DO enabled) */
    3f22:	61 e0       	ldi	r22, 0x01	; 1
    3f24:	70 e0       	ldi	r23, 0x00	; 0
    3f26:	ce 01       	movw	r24, r28
    3f28:	01 96       	adiw	r24, 0x01	; 1
    3f2a:	60 df       	rcall	.-320    	; 0x3dec <_ZL8rcvr_mmcPhj>

	if (wait_ready()) return 1;	/* OK */
    3f2c:	b8 df       	rcall	.-144    	; 0x3e9e <_ZL10wait_readyv>
    3f2e:	8c 01       	movw	r16, r24
    3f30:	89 2b       	or	r24, r25
    3f32:	11 f4       	brne	.+4      	; 0x3f38 <_ZL6selectv+0x2a>
	deselect();
    3f34:	db df       	rcall	.-74     	; 0x3eec <_ZL8deselectv>
    3f36:	02 c0       	rjmp	.+4      	; 0x3f3c <_ZL6selectv+0x2e>
	return 0;			/* Failed */
    3f38:	01 e0       	ldi	r16, 0x01	; 1
	BYTE d;

	CS_L();
	rcvr_mmc(&d, 1);	/* Dummy clock (force DO enabled) */

	if (wait_ready()) return 1;	/* OK */
    3f3a:	10 e0       	ldi	r17, 0x00	; 0
    3f3c:	c8 01       	movw	r24, r16
	deselect();
	return 0;			/* Failed */
}
    3f3e:	0f 90       	pop	r0
    3f40:	df 91       	pop	r29
    3f42:	cf 91       	pop	r28
    3f44:	1f 91       	pop	r17
    3f46:	0f 91       	pop	r16
    3f48:	08 95       	ret

00003f4a <_ZL14rcvr_datablockPhj>:
    3f4a:	cf 92       	push	r12
static
int rcvr_datablock (	/* 1:OK, 0:Failed */
	BYTE *buff,			/* Data buffer to store received data */
	UINT btr			/* Byte count */
)
{
    3f4c:	df 92       	push	r13
    3f4e:	ef 92       	push	r14
    3f50:	ff 92       	push	r15
    3f52:	0f 93       	push	r16
    3f54:	1f 93       	push	r17
    3f56:	cf 93       	push	r28
    3f58:	df 93       	push	r29
    3f5a:	00 d0       	rcall	.+0      	; 0x3f5c <_ZL14rcvr_datablockPhj+0x12>
    3f5c:	cd b7       	in	r28, 0x3d	; 61
    3f5e:	de b7       	in	r29, 0x3e	; 62
    3f60:	7c 01       	movw	r14, r24
    3f62:	6b 01       	movw	r12, r22
	BYTE d[2];
	UINT tmr;


	for (tmr = 1000; tmr; tmr--) {	/* Wait for data packet in timeout of 100ms */
    3f64:	08 ee       	ldi	r16, 0xE8	; 232
    3f66:	13 e0       	ldi	r17, 0x03	; 3
    3f68:	01 15       	cp	r16, r1
    3f6a:	11 05       	cpc	r17, r1
    3f6c:	71 f0       	breq	.+28     	; 0x3f8a <_ZL14rcvr_datablockPhj+0x40>
		rcvr_mmc(d, 1);
    3f6e:	61 e0       	ldi	r22, 0x01	; 1
    3f70:	70 e0       	ldi	r23, 0x00	; 0
    3f72:	ce 01       	movw	r24, r28
    3f74:	01 96       	adiw	r24, 0x01	; 1
    3f76:	3a df       	rcall	.-396    	; 0x3dec <_ZL8rcvr_mmcPhj>
		if (d[0] != 0xFF) break;
    3f78:	89 81       	ldd	r24, Y+1	; 0x01
    3f7a:	8f 3f       	cpi	r24, 0xFF	; 255
    3f7c:	31 f4       	brne	.+12     	; 0x3f8a <_ZL14rcvr_datablockPhj+0x40>
		dly_us(100);
    3f7e:	84 e6       	ldi	r24, 0x64	; 100
    3f80:	90 e0       	ldi	r25, 0x00	; 0
    3f82:	ad de       	rcall	.-678    	; 0x3cde <_ZL6dly_usj>
{
	BYTE d[2];
	UINT tmr;


	for (tmr = 1000; tmr; tmr--) {	/* Wait for data packet in timeout of 100ms */
    3f84:	01 50       	subi	r16, 0x01	; 1
    3f86:	11 09       	sbc	r17, r1
    3f88:	ef cf       	rjmp	.-34     	; 0x3f68 <_ZL14rcvr_datablockPhj+0x1e>
		rcvr_mmc(d, 1);
		if (d[0] != 0xFF) break;
		dly_us(100);
	}
	if (d[0] != 0xFE) return 0;		/* If not valid data token, return with error */
    3f8a:	89 81       	ldd	r24, Y+1	; 0x01
    3f8c:	8e 3f       	cpi	r24, 0xFE	; 254
    3f8e:	59 f4       	brne	.+22     	; 0x3fa6 <_ZL14rcvr_datablockPhj+0x5c>

	rcvr_mmc(buff, btr);			/* Receive the data block into buffer */
    3f90:	b6 01       	movw	r22, r12
    3f92:	c7 01       	movw	r24, r14
    3f94:	2b df       	rcall	.-426    	; 0x3dec <_ZL8rcvr_mmcPhj>
	rcvr_mmc(d, 2);					/* Discard CRC */
    3f96:	62 e0       	ldi	r22, 0x02	; 2
    3f98:	70 e0       	ldi	r23, 0x00	; 0
    3f9a:	ce 01       	movw	r24, r28
    3f9c:	01 96       	adiw	r24, 0x01	; 1
    3f9e:	26 df       	rcall	.-436    	; 0x3dec <_ZL8rcvr_mmcPhj>

	return 1;						/* Return with success */
    3fa0:	81 e0       	ldi	r24, 0x01	; 1
    3fa2:	90 e0       	ldi	r25, 0x00	; 0
    3fa4:	02 c0       	rjmp	.+4      	; 0x3faa <_ZL14rcvr_datablockPhj+0x60>
	for (tmr = 1000; tmr; tmr--) {	/* Wait for data packet in timeout of 100ms */
		rcvr_mmc(d, 1);
		if (d[0] != 0xFF) break;
		dly_us(100);
	}
	if (d[0] != 0xFE) return 0;		/* If not valid data token, return with error */
    3fa6:	80 e0       	ldi	r24, 0x00	; 0
    3fa8:	90 e0       	ldi	r25, 0x00	; 0

	rcvr_mmc(buff, btr);			/* Receive the data block into buffer */
	rcvr_mmc(d, 2);					/* Discard CRC */

	return 1;						/* Return with success */
}
    3faa:	0f 90       	pop	r0
    3fac:	0f 90       	pop	r0
    3fae:	df 91       	pop	r29
    3fb0:	cf 91       	pop	r28
    3fb2:	1f 91       	pop	r17
    3fb4:	0f 91       	pop	r16
    3fb6:	ff 90       	pop	r15
    3fb8:	ef 90       	pop	r14
    3fba:	df 90       	pop	r13
    3fbc:	cf 90       	pop	r12
    3fbe:	08 95       	ret

00003fc0 <_ZL14xmit_datablockPKhh>:
static
int xmit_datablock (	/* 1:OK, 0:Failed */
	const BYTE *buff,	/* 512 byte data block to be transmitted */
	BYTE token			/* Data/Stop token */
)
{
    3fc0:	ef 92       	push	r14
    3fc2:	ff 92       	push	r15
    3fc4:	1f 93       	push	r17
    3fc6:	cf 93       	push	r28
    3fc8:	df 93       	push	r29
    3fca:	00 d0       	rcall	.+0      	; 0x3fcc <_ZL14xmit_datablockPKhh+0xc>
    3fcc:	cd b7       	in	r28, 0x3d	; 61
    3fce:	de b7       	in	r29, 0x3e	; 62
    3fd0:	7c 01       	movw	r14, r24
    3fd2:	16 2f       	mov	r17, r22
	BYTE d[2];


	if (!wait_ready()) return 0;
    3fd4:	64 df       	rcall	.-312    	; 0x3e9e <_ZL10wait_readyv>
    3fd6:	00 97       	sbiw	r24, 0x00	; 0
    3fd8:	11 f1       	breq	.+68     	; 0x401e <__DATA_REGION_LENGTH__+0x1e>

	d[0] = token;
    3fda:	19 83       	std	Y+1, r17	; 0x01
	xmit_mmc(d, 1);				/* Xmit a token */
    3fdc:	61 e0       	ldi	r22, 0x01	; 1
    3fde:	70 e0       	ldi	r23, 0x00	; 0
    3fe0:	ce 01       	movw	r24, r28
    3fe2:	01 96       	adiw	r24, 0x01	; 1
    3fe4:	80 de       	rcall	.-768    	; 0x3ce6 <_ZL8xmit_mmcPKhj>
	if (token != 0xFD) {		/* Is it data token? */
    3fe6:	1d 3f       	cpi	r17, 0xFD	; 253
    3fe8:	a9 f0       	breq	.+42     	; 0x4014 <__DATA_REGION_LENGTH__+0x14>
		xmit_mmc(buff, 512);	/* Xmit the 512 byte data block to MMC */
    3fea:	60 e0       	ldi	r22, 0x00	; 0
    3fec:	72 e0       	ldi	r23, 0x02	; 2
    3fee:	c7 01       	movw	r24, r14
    3ff0:	7a de       	rcall	.-780    	; 0x3ce6 <_ZL8xmit_mmcPKhj>
		rcvr_mmc(d, 2);			/* Xmit dummy CRC (0xFF,0xFF) */
    3ff2:	62 e0       	ldi	r22, 0x02	; 2
    3ff4:	70 e0       	ldi	r23, 0x00	; 0
    3ff6:	ce 01       	movw	r24, r28
    3ff8:	01 96       	adiw	r24, 0x01	; 1
    3ffa:	f8 de       	rcall	.-528    	; 0x3dec <_ZL8rcvr_mmcPhj>
		rcvr_mmc(d, 1);			/* Receive data response */
    3ffc:	61 e0       	ldi	r22, 0x01	; 1
    3ffe:	70 e0       	ldi	r23, 0x00	; 0
    4000:	ce 01       	movw	r24, r28
    4002:	01 96       	adiw	r24, 0x01	; 1
    4004:	f3 de       	rcall	.-538    	; 0x3dec <_ZL8rcvr_mmcPhj>
		if ((d[0] & 0x1F) != 0x05)	/* If not accepted, return with error */
    4006:	89 81       	ldd	r24, Y+1	; 0x01
    4008:	8f 71       	andi	r24, 0x1F	; 31
    400a:	85 30       	cpi	r24, 0x05	; 5
    400c:	31 f0       	breq	.+12     	; 0x401a <__DATA_REGION_LENGTH__+0x1a>
			return 0;
    400e:	80 e0       	ldi	r24, 0x00	; 0
    4010:	90 e0       	ldi	r25, 0x00	; 0
    4012:	05 c0       	rjmp	.+10     	; 0x401e <__DATA_REGION_LENGTH__+0x1e>
	}

	return 1;
    4014:	81 e0       	ldi	r24, 0x01	; 1
    4016:	90 e0       	ldi	r25, 0x00	; 0
    4018:	02 c0       	rjmp	.+4      	; 0x401e <__DATA_REGION_LENGTH__+0x1e>
    401a:	81 e0       	ldi	r24, 0x01	; 1
    401c:	90 e0       	ldi	r25, 0x00	; 0
}
    401e:	0f 90       	pop	r0
    4020:	0f 90       	pop	r0
    4022:	df 91       	pop	r29
    4024:	cf 91       	pop	r28
    4026:	1f 91       	pop	r17
    4028:	ff 90       	pop	r15
    402a:	ef 90       	pop	r14
    402c:	08 95       	ret

0000402e <_ZL8send_cmdhm>:
static
BYTE send_cmd (		/* Returns command response (bit7==1:Send failed)*/
	BYTE cmd,		/* Command byte */
	DWORD arg		/* Argument */
)
{
    402e:	df 92       	push	r13
    4030:	ef 92       	push	r14
    4032:	ff 92       	push	r15
    4034:	0f 93       	push	r16
    4036:	1f 93       	push	r17
    4038:	cf 93       	push	r28
    403a:	df 93       	push	r29
    403c:	cd b7       	in	r28, 0x3d	; 61
    403e:	de b7       	in	r29, 0x3e	; 62
    4040:	27 97       	sbiw	r28, 0x07	; 7
    4042:	0f b6       	in	r0, 0x3f	; 63
    4044:	f8 94       	cli
    4046:	de bf       	out	0x3e, r29	; 62
    4048:	0f be       	out	0x3f, r0	; 63
    404a:	cd bf       	out	0x3d, r28	; 61
    404c:	18 2f       	mov	r17, r24
    404e:	04 2f       	mov	r16, r20
    4050:	f5 2e       	mov	r15, r21
    4052:	e6 2e       	mov	r14, r22
    4054:	d7 2e       	mov	r13, r23
	BYTE n, d, buf[6];


	if (cmd & 0x80) {	/* ACMD<n> is the command sequence of CMD55-CMD<n> */
    4056:	88 23       	and	r24, r24
    4058:	44 f4       	brge	.+16     	; 0x406a <_ZL8send_cmdhm+0x3c>
		cmd &= 0x7F;
    405a:	1f 77       	andi	r17, 0x7F	; 127
		n = send_cmd(CMD55, 0);
    405c:	40 e0       	ldi	r20, 0x00	; 0
    405e:	50 e0       	ldi	r21, 0x00	; 0
    4060:	ba 01       	movw	r22, r20
    4062:	87 e3       	ldi	r24, 0x37	; 55
    4064:	e4 df       	rcall	.-56     	; 0x402e <_ZL8send_cmdhm>
		if (n > 1) return n;
    4066:	82 30       	cpi	r24, 0x02	; 2
	}

	/* Select the card and wait for ready */
	deselect();
    4068:	a0 f5       	brcc	.+104    	; 0x40d2 <_ZL8send_cmdhm+0xa4>
	if (!select()) return 0xFF;
    406a:	40 df       	rcall	.-384    	; 0x3eec <_ZL8deselectv>
    406c:	50 df       	rcall	.-352    	; 0x3f0e <_ZL6selectv>
    406e:	89 2b       	or	r24, r25
    4070:	79 f1       	breq	.+94     	; 0x40d0 <_ZL8send_cmdhm+0xa2>

	/* Send a command packet */
	buf[0] = 0x40 | cmd;			/* Start + Command index */
    4072:	81 2f       	mov	r24, r17
    4074:	80 64       	ori	r24, 0x40	; 64
    4076:	8a 83       	std	Y+2, r24	; 0x02
	buf[1] = (BYTE)(arg >> 24);		/* Argument[31..24] */
    4078:	db 82       	std	Y+3, r13	; 0x03
	buf[2] = (BYTE)(arg >> 16);		/* Argument[23..16] */
    407a:	ec 82       	std	Y+4, r14	; 0x04
	buf[3] = (BYTE)(arg >> 8);		/* Argument[15..8] */
    407c:	fd 82       	std	Y+5, r15	; 0x05
	buf[4] = (BYTE)arg;				/* Argument[7..0] */
    407e:	0e 83       	std	Y+6, r16	; 0x06
	n = 0x01;						/* Dummy CRC + Stop */
	if (cmd == CMD0) n = 0x95;		/* (valid CRC for CMD0(0)) */
    4080:	11 23       	and	r17, r17
    4082:	11 f0       	breq	.+4      	; 0x4088 <_ZL8send_cmdhm+0x5a>
	buf[0] = 0x40 | cmd;			/* Start + Command index */
	buf[1] = (BYTE)(arg >> 24);		/* Argument[31..24] */
	buf[2] = (BYTE)(arg >> 16);		/* Argument[23..16] */
	buf[3] = (BYTE)(arg >> 8);		/* Argument[15..8] */
	buf[4] = (BYTE)arg;				/* Argument[7..0] */
	n = 0x01;						/* Dummy CRC + Stop */
    4084:	81 e0       	ldi	r24, 0x01	; 1
    4086:	01 c0       	rjmp	.+2      	; 0x408a <_ZL8send_cmdhm+0x5c>
	if (cmd == CMD0) n = 0x95;		/* (valid CRC for CMD0(0)) */
    4088:	85 e9       	ldi	r24, 0x95	; 149
	if (cmd == CMD8) n = 0x87;		/* (valid CRC for CMD8(0x1AA)) */
    408a:	18 30       	cpi	r17, 0x08	; 8
    408c:	09 f4       	brne	.+2      	; 0x4090 <_ZL8send_cmdhm+0x62>
    408e:	87 e8       	ldi	r24, 0x87	; 135
	buf[5] = n;
    4090:	8f 83       	std	Y+7, r24	; 0x07
	xmit_mmc(buf, 6);
    4092:	66 e0       	ldi	r22, 0x06	; 6
    4094:	70 e0       	ldi	r23, 0x00	; 0
    4096:	ce 01       	movw	r24, r28
    4098:	02 96       	adiw	r24, 0x02	; 2
    409a:	25 de       	rcall	.-950    	; 0x3ce6 <_ZL8xmit_mmcPKhj>

	/* Receive command response */
	if (cmd == CMD12) rcvr_mmc(&d, 1);	/* Skip a stuff byte when stop reading */
    409c:	1c 30       	cpi	r17, 0x0C	; 12
    409e:	29 f4       	brne	.+10     	; 0x40aa <_ZL8send_cmdhm+0x7c>
    40a0:	61 e0       	ldi	r22, 0x01	; 1
    40a2:	70 e0       	ldi	r23, 0x00	; 0
    40a4:	ce 01       	movw	r24, r28
    40a6:	01 96       	adiw	r24, 0x01	; 1
    40a8:	a1 de       	rcall	.-702    	; 0x3dec <_ZL8rcvr_mmcPhj>
	n = 10;								/* Wait for a valid response in timeout of 10 attempts */
	do
		rcvr_mmc(&d, 1);
    40aa:	1a e0       	ldi	r17, 0x0A	; 10
    40ac:	61 e0       	ldi	r22, 0x01	; 1
    40ae:	70 e0       	ldi	r23, 0x00	; 0
    40b0:	ce 01       	movw	r24, r28
    40b2:	01 96       	adiw	r24, 0x01	; 1
    40b4:	9b de       	rcall	.-714    	; 0x3dec <_ZL8rcvr_mmcPhj>
	while ((d & 0x80) && --n);
    40b6:	89 81       	ldd	r24, Y+1	; 0x01
    40b8:	88 23       	and	r24, r24
    40ba:	24 f4       	brge	.+8      	; 0x40c4 <_ZL8send_cmdhm+0x96>
    40bc:	11 50       	subi	r17, 0x01	; 1
    40be:	21 f0       	breq	.+8      	; 0x40c8 <_ZL8send_cmdhm+0x9a>
    40c0:	91 e0       	ldi	r25, 0x01	; 1
    40c2:	03 c0       	rjmp	.+6      	; 0x40ca <_ZL8send_cmdhm+0x9c>
    40c4:	90 e0       	ldi	r25, 0x00	; 0
    40c6:	01 c0       	rjmp	.+2      	; 0x40ca <_ZL8send_cmdhm+0x9c>
    40c8:	90 e0       	ldi	r25, 0x00	; 0
	xmit_mmc(buf, 6);

	/* Receive command response */
	if (cmd == CMD12) rcvr_mmc(&d, 1);	/* Skip a stuff byte when stop reading */
	n = 10;								/* Wait for a valid response in timeout of 10 attempts */
	do
    40ca:	91 11       	cpse	r25, r1
    40cc:	ef cf       	rjmp	.-34     	; 0x40ac <_ZL8send_cmdhm+0x7e>
    40ce:	01 c0       	rjmp	.+2      	; 0x40d2 <_ZL8send_cmdhm+0xa4>
		if (n > 1) return n;
	}

	/* Select the card and wait for ready */
	deselect();
	if (!select()) return 0xFF;
    40d0:	8f ef       	ldi	r24, 0xFF	; 255
	do
		rcvr_mmc(&d, 1);
	while ((d & 0x80) && --n);

	return d;			/* Return with the response value */
}
    40d2:	27 96       	adiw	r28, 0x07	; 7
    40d4:	0f b6       	in	r0, 0x3f	; 63
    40d6:	f8 94       	cli
    40d8:	de bf       	out	0x3e, r29	; 62
    40da:	0f be       	out	0x3f, r0	; 63
    40dc:	cd bf       	out	0x3d, r28	; 61
    40de:	df 91       	pop	r29
    40e0:	cf 91       	pop	r28
    40e2:	1f 91       	pop	r17
    40e4:	0f 91       	pop	r16
    40e6:	ff 90       	pop	r15
    40e8:	ef 90       	pop	r14
    40ea:	df 90       	pop	r13
    40ec:	08 95       	ret

000040ee <disk_status>:

DSTATUS disk_status (
	BYTE drv			/* Drive number (always 0) */
)
{
	if (drv) return STA_NOINIT;
    40ee:	81 11       	cpse	r24, r1
    40f0:	03 c0       	rjmp	.+6      	; 0x40f8 <disk_status+0xa>

	return Stat;
    40f2:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <_ZL4Stat>
    40f6:	08 95       	ret

DSTATUS disk_status (
	BYTE drv			/* Drive number (always 0) */
)
{
	if (drv) return STA_NOINIT;
    40f8:	81 e0       	ldi	r24, 0x01	; 1

	return Stat;
}
    40fa:	08 95       	ret

000040fc <disk_initialize>:
/*-----------------------------------------------------------------------*/

DSTATUS disk_initialize (
	BYTE drv		/* Physical drive number (0) */
)
{
    40fc:	ef 92       	push	r14
    40fe:	ff 92       	push	r15
    4100:	0f 93       	push	r16
    4102:	1f 93       	push	r17
    4104:	cf 93       	push	r28
    4106:	df 93       	push	r29
    4108:	00 d0       	rcall	.+0      	; 0x410a <__stack+0xb>
    410a:	00 d0       	rcall	.+0      	; 0x410c <__stack+0xd>
    410c:	cd b7       	in	r28, 0x3d	; 61
    410e:	de b7       	in	r29, 0x3e	; 62
	BYTE n, ty, cmd, buf[4];
	UINT tmr;
	DSTATUS s;


	if (drv) return RES_NOTRDY;
    4110:	81 11       	cpse	r24, r1
    4112:	b8 c0       	rjmp	.+368    	; 0x4284 <__stack+0x185>

	dly_us(10000);			/* 10ms */
    4114:	80 e1       	ldi	r24, 0x10	; 16
    4116:	97 e2       	ldi	r25, 0x27	; 39
    4118:	e2 dd       	rcall	.-1084   	; 0x3cde <_ZL6dly_usj>
	CS_INIT(); CS_H();		/* Initialize port pin tied to CS */
    411a:	84 b1       	in	r24, 0x04	; 4
    411c:	82 60       	ori	r24, 0x02	; 2
    411e:	84 b9       	out	0x04, r24	; 4
    4120:	85 b1       	in	r24, 0x05	; 5
    4122:	82 60       	ori	r24, 0x02	; 2
    4124:	85 b9       	out	0x05, r24	; 5
	CK_INIT(); CK_L();		/* Initialize port pin tied to SCLK */
    4126:	84 b1       	in	r24, 0x04	; 4
    4128:	80 68       	ori	r24, 0x80	; 128
    412a:	84 b9       	out	0x04, r24	; 4
    412c:	85 b1       	in	r24, 0x05	; 5
    412e:	8f 77       	andi	r24, 0x7F	; 127
    4130:	85 b9       	out	0x05, r24	; 5
	DI_INIT();				/* Initialize port pin tied to DI */
    4132:	84 b1       	in	r24, 0x04	; 4
    4134:	80 62       	ori	r24, 0x20	; 32
    4136:	84 b9       	out	0x04, r24	; 4
	DO_INIT();				/* Initialize port pin tied to DO */

	for (n = 10; n; n--) rcvr_mmc(buf, 1);	/* Apply 80 dummy clocks and the card gets ready to receive command */
    4138:	1a e0       	ldi	r17, 0x0A	; 10
    413a:	11 23       	and	r17, r17
    413c:	39 f0       	breq	.+14     	; 0x414c <__stack+0x4d>
    413e:	61 e0       	ldi	r22, 0x01	; 1
    4140:	70 e0       	ldi	r23, 0x00	; 0
    4142:	ce 01       	movw	r24, r28
    4144:	01 96       	adiw	r24, 0x01	; 1
    4146:	52 de       	rcall	.-860    	; 0x3dec <_ZL8rcvr_mmcPhj>
    4148:	11 50       	subi	r17, 0x01	; 1
    414a:	f7 cf       	rjmp	.-18     	; 0x413a <__stack+0x3b>

	ty = 0;
	if (send_cmd(CMD0, 0) == 1) {			/* Enter Idle state */
    414c:	40 e0       	ldi	r20, 0x00	; 0
    414e:	50 e0       	ldi	r21, 0x00	; 0
    4150:	ba 01       	movw	r22, r20
    4152:	80 e0       	ldi	r24, 0x00	; 0
    4154:	6c df       	rcall	.-296    	; 0x402e <_ZL8send_cmdhm>
    4156:	81 30       	cpi	r24, 0x01	; 1
    4158:	09 f0       	breq	.+2      	; 0x415c <__stack+0x5d>
    415a:	7d c0       	rjmp	.+250    	; 0x4256 <__stack+0x157>
		if (send_cmd(CMD8, 0x1AA) == 1) {	/* SDv2? */
    415c:	4a ea       	ldi	r20, 0xAA	; 170
    415e:	51 e0       	ldi	r21, 0x01	; 1
    4160:	60 e0       	ldi	r22, 0x00	; 0
    4162:	70 e0       	ldi	r23, 0x00	; 0
    4164:	88 e0       	ldi	r24, 0x08	; 8
    4166:	63 df       	rcall	.-314    	; 0x402e <_ZL8send_cmdhm>
    4168:	81 30       	cpi	r24, 0x01	; 1
    416a:	09 f0       	breq	.+2      	; 0x416e <__stack+0x6f>
    416c:	3e c0       	rjmp	.+124    	; 0x41ea <__stack+0xeb>
			rcvr_mmc(buf, 4);							/* Get trailing return value of R7 resp */
    416e:	64 e0       	ldi	r22, 0x04	; 4
    4170:	70 e0       	ldi	r23, 0x00	; 0
    4172:	ce 01       	movw	r24, r28
    4174:	01 96       	adiw	r24, 0x01	; 1
    4176:	3a de       	rcall	.-908    	; 0x3dec <_ZL8rcvr_mmcPhj>
			if (buf[2] == 0x01 && buf[3] == 0xAA) {		/* The card can work at vdd range of 2.7-3.6V */
    4178:	8b 81       	ldd	r24, Y+3	; 0x03
    417a:	81 30       	cpi	r24, 0x01	; 1
    417c:	09 f0       	breq	.+2      	; 0x4180 <__stack+0x81>
    417e:	6d c0       	rjmp	.+218    	; 0x425a <__stack+0x15b>
    4180:	8c 81       	ldd	r24, Y+4	; 0x04
    4182:	8a 3a       	cpi	r24, 0xAA	; 170
    4184:	09 f0       	breq	.+2      	; 0x4188 <__stack+0x89>
    4186:	6b c0       	rjmp	.+214    	; 0x425e <__stack+0x15f>
    4188:	08 ee       	ldi	r16, 0xE8	; 232
    418a:	13 e0       	ldi	r17, 0x03	; 3
				for (tmr = 1000; tmr; tmr--) {			/* Wait for leaving idle state (ACMD41 with HCS bit) */
    418c:	01 15       	cp	r16, r1
    418e:	11 05       	cpc	r17, r1
    4190:	71 f0       	breq	.+28     	; 0x41ae <__stack+0xaf>
					if (send_cmd(ACMD41, 1UL << 30) == 0) break;
    4192:	40 e0       	ldi	r20, 0x00	; 0
    4194:	50 e0       	ldi	r21, 0x00	; 0
    4196:	60 e0       	ldi	r22, 0x00	; 0
    4198:	70 e4       	ldi	r23, 0x40	; 64
    419a:	89 ea       	ldi	r24, 0xA9	; 169
    419c:	48 df       	rcall	.-368    	; 0x402e <_ZL8send_cmdhm>
    419e:	88 23       	and	r24, r24
					dly_us(1000);
    41a0:	31 f0       	breq	.+12     	; 0x41ae <__stack+0xaf>
    41a2:	88 ee       	ldi	r24, 0xE8	; 232
    41a4:	93 e0       	ldi	r25, 0x03	; 3
    41a6:	9b dd       	rcall	.-1226   	; 0x3cde <_ZL6dly_usj>
	ty = 0;
	if (send_cmd(CMD0, 0) == 1) {			/* Enter Idle state */
		if (send_cmd(CMD8, 0x1AA) == 1) {	/* SDv2? */
			rcvr_mmc(buf, 4);							/* Get trailing return value of R7 resp */
			if (buf[2] == 0x01 && buf[3] == 0xAA) {		/* The card can work at vdd range of 2.7-3.6V */
				for (tmr = 1000; tmr; tmr--) {			/* Wait for leaving idle state (ACMD41 with HCS bit) */
    41a8:	01 50       	subi	r16, 0x01	; 1
    41aa:	11 09       	sbc	r17, r1
					if (send_cmd(ACMD41, 1UL << 30) == 0) break;
					dly_us(1000);
				}
				if (tmr && send_cmd(CMD58, 0) == 0) {	/* Check CCS bit in the OCR */
    41ac:	ef cf       	rjmp	.-34     	; 0x418c <__stack+0x8d>
    41ae:	01 2b       	or	r16, r17
    41b0:	49 f0       	breq	.+18     	; 0x41c4 <__stack+0xc5>
    41b2:	40 e0       	ldi	r20, 0x00	; 0
    41b4:	50 e0       	ldi	r21, 0x00	; 0
    41b6:	ba 01       	movw	r22, r20
    41b8:	8a e3       	ldi	r24, 0x3A	; 58
    41ba:	39 df       	rcall	.-398    	; 0x402e <_ZL8send_cmdhm>
    41bc:	81 11       	cpse	r24, r1
    41be:	04 c0       	rjmp	.+8      	; 0x41c8 <__stack+0xc9>
    41c0:	81 e0       	ldi	r24, 0x01	; 1
    41c2:	03 c0       	rjmp	.+6      	; 0x41ca <__stack+0xcb>
    41c4:	80 e0       	ldi	r24, 0x00	; 0
    41c6:	01 c0       	rjmp	.+2      	; 0x41ca <__stack+0xcb>
    41c8:	80 e0       	ldi	r24, 0x00	; 0
    41ca:	88 23       	and	r24, r24
    41cc:	09 f4       	brne	.+2      	; 0x41d0 <__stack+0xd1>
					rcvr_mmc(buf, 4);
    41ce:	49 c0       	rjmp	.+146    	; 0x4262 <__stack+0x163>
    41d0:	64 e0       	ldi	r22, 0x04	; 4
    41d2:	70 e0       	ldi	r23, 0x00	; 0
    41d4:	ce 01       	movw	r24, r28
    41d6:	01 96       	adiw	r24, 0x01	; 1
    41d8:	09 de       	rcall	.-1006   	; 0x3dec <_ZL8rcvr_mmcPhj>
					ty = (buf[0] & 0x40) ? CT_SD2 | CT_BLOCK : CT_SD2;	/* SDv2 */
    41da:	89 81       	ldd	r24, Y+1	; 0x01
    41dc:	86 ff       	sbrs	r24, 6
    41de:	43 c0       	rjmp	.+134    	; 0x4266 <__stack+0x167>
    41e0:	0f 2e       	mov	r0, r31
    41e2:	fc e0       	ldi	r31, 0x0C	; 12
    41e4:	ff 2e       	mov	r15, r31
    41e6:	f0 2d       	mov	r31, r0
				}
			}
		} else {							/* SDv1 or MMCv3 */
			if (send_cmd(ACMD41, 0) <= 1) 	{
    41e8:	43 c0       	rjmp	.+134    	; 0x4270 <__stack+0x171>
    41ea:	40 e0       	ldi	r20, 0x00	; 0
    41ec:	50 e0       	ldi	r21, 0x00	; 0
    41ee:	ba 01       	movw	r22, r20
    41f0:	89 ea       	ldi	r24, 0xA9	; 169
    41f2:	1d df       	rcall	.-454    	; 0x402e <_ZL8send_cmdhm>
    41f4:	82 30       	cpi	r24, 0x02	; 2
    41f6:	40 f4       	brcc	.+16     	; 0x4208 <__stack+0x109>
				ty = CT_SD1; cmd = ACMD41;	/* SDv1 */
    41f8:	0f 2e       	mov	r0, r31
    41fa:	f9 ea       	ldi	r31, 0xA9	; 169
    41fc:	ef 2e       	mov	r14, r31
    41fe:	f0 2d       	mov	r31, r0
    4200:	68 94       	set
    4202:	ff 24       	eor	r15, r15
    4204:	f1 f8       	bld	r15, 1
    4206:	04 c0       	rjmp	.+8      	; 0x4210 <__stack+0x111>
			} else {
				ty = CT_MMC; cmd = CMD1;	/* MMCv3 */
    4208:	ee 24       	eor	r14, r14
    420a:	e3 94       	inc	r14
    420c:	ff 24       	eor	r15, r15
			}
			for (tmr = 1000; tmr; tmr--) {			/* Wait for leaving idle state */
    420e:	f3 94       	inc	r15
    4210:	08 ee       	ldi	r16, 0xE8	; 232
    4212:	13 e0       	ldi	r17, 0x03	; 3
    4214:	01 15       	cp	r16, r1
				if (send_cmd(cmd, 0) == 0) break;
    4216:	11 05       	cpc	r17, r1
    4218:	69 f0       	breq	.+26     	; 0x4234 <__stack+0x135>
    421a:	40 e0       	ldi	r20, 0x00	; 0
    421c:	50 e0       	ldi	r21, 0x00	; 0
    421e:	ba 01       	movw	r22, r20
    4220:	8e 2d       	mov	r24, r14
    4222:	05 df       	rcall	.-502    	; 0x402e <_ZL8send_cmdhm>
    4224:	88 23       	and	r24, r24
				dly_us(1000);
    4226:	31 f0       	breq	.+12     	; 0x4234 <__stack+0x135>
    4228:	88 ee       	ldi	r24, 0xE8	; 232
    422a:	93 e0       	ldi	r25, 0x03	; 3
			if (send_cmd(ACMD41, 0) <= 1) 	{
				ty = CT_SD1; cmd = ACMD41;	/* SDv1 */
			} else {
				ty = CT_MMC; cmd = CMD1;	/* MMCv3 */
			}
			for (tmr = 1000; tmr; tmr--) {			/* Wait for leaving idle state */
    422c:	58 dd       	rcall	.-1360   	; 0x3cde <_ZL6dly_usj>
    422e:	01 50       	subi	r16, 0x01	; 1
    4230:	11 09       	sbc	r17, r1
				if (send_cmd(cmd, 0) == 0) break;
				dly_us(1000);
			}
			if (!tmr || send_cmd(CMD16, 512) != 0)	/* Set R/W block length to 512 */
    4232:	f0 cf       	rjmp	.-32     	; 0x4214 <__stack+0x115>
    4234:	01 2b       	or	r16, r17
    4236:	49 f0       	breq	.+18     	; 0x424a <__stack+0x14b>
    4238:	40 e0       	ldi	r20, 0x00	; 0
    423a:	52 e0       	ldi	r21, 0x02	; 2
    423c:	60 e0       	ldi	r22, 0x00	; 0
    423e:	70 e0       	ldi	r23, 0x00	; 0
    4240:	80 e1       	ldi	r24, 0x10	; 16
    4242:	f5 de       	rcall	.-534    	; 0x402e <_ZL8send_cmdhm>
    4244:	81 11       	cpse	r24, r1
    4246:	03 c0       	rjmp	.+6      	; 0x424e <__stack+0x14f>
    4248:	03 c0       	rjmp	.+6      	; 0x4250 <__stack+0x151>
    424a:	81 e0       	ldi	r24, 0x01	; 1
    424c:	01 c0       	rjmp	.+2      	; 0x4250 <__stack+0x151>
    424e:	81 e0       	ldi	r24, 0x01	; 1
    4250:	81 11       	cpse	r24, r1
    4252:	0d c0       	rjmp	.+26     	; 0x426e <__stack+0x16f>
    4254:	0d c0       	rjmp	.+26     	; 0x4270 <__stack+0x171>
	DI_INIT();				/* Initialize port pin tied to DI */
	DO_INIT();				/* Initialize port pin tied to DO */

	for (n = 10; n; n--) rcvr_mmc(buf, 1);	/* Apply 80 dummy clocks and the card gets ready to receive command */

	ty = 0;
    4256:	f1 2c       	mov	r15, r1
    4258:	0b c0       	rjmp	.+22     	; 0x4270 <__stack+0x171>
    425a:	f1 2c       	mov	r15, r1
    425c:	09 c0       	rjmp	.+18     	; 0x4270 <__stack+0x171>
    425e:	f1 2c       	mov	r15, r1
    4260:	07 c0       	rjmp	.+14     	; 0x4270 <__stack+0x171>
    4262:	f1 2c       	mov	r15, r1
					if (send_cmd(ACMD41, 1UL << 30) == 0) break;
					dly_us(1000);
				}
				if (tmr && send_cmd(CMD58, 0) == 0) {	/* Check CCS bit in the OCR */
					rcvr_mmc(buf, 4);
					ty = (buf[0] & 0x40) ? CT_SD2 | CT_BLOCK : CT_SD2;	/* SDv2 */
    4264:	05 c0       	rjmp	.+10     	; 0x4270 <__stack+0x171>
    4266:	68 94       	set
    4268:	ff 24       	eor	r15, r15
    426a:	f2 f8       	bld	r15, 2
			for (tmr = 1000; tmr; tmr--) {			/* Wait for leaving idle state */
				if (send_cmd(cmd, 0) == 0) break;
				dly_us(1000);
			}
			if (!tmr || send_cmd(CMD16, 512) != 0)	/* Set R/W block length to 512 */
				ty = 0;
    426c:	01 c0       	rjmp	.+2      	; 0x4270 <__stack+0x171>
		}
	}
	CardType = ty;
    426e:	f1 2c       	mov	r15, r1
    4270:	f0 92 ea 03 	sts	0x03EA, r15	; 0x8003ea <_ZL8CardType>
	s = ty ? 0 : STA_NOINIT;
    4274:	11 e0       	ldi	r17, 0x01	; 1
    4276:	f1 10       	cpse	r15, r1
	Stat = s;
    4278:	10 e0       	ldi	r17, 0x00	; 0
    427a:	10 93 06 01 	sts	0x0106, r17	; 0x800106 <_ZL4Stat>

	deselect();
    427e:	36 de       	rcall	.-916    	; 0x3eec <_ZL8deselectv>

	return s;
    4280:	81 2f       	mov	r24, r17
    4282:	01 c0       	rjmp	.+2      	; 0x4286 <__stack+0x187>
	BYTE n, ty, cmd, buf[4];
	UINT tmr;
	DSTATUS s;


	if (drv) return RES_NOTRDY;
    4284:	83 e0       	ldi	r24, 0x03	; 3
	Stat = s;

	deselect();

	return s;
}
    4286:	0f 90       	pop	r0
    4288:	0f 90       	pop	r0
    428a:	0f 90       	pop	r0
    428c:	0f 90       	pop	r0
    428e:	df 91       	pop	r29
    4290:	cf 91       	pop	r28
    4292:	1f 91       	pop	r17
    4294:	0f 91       	pop	r16
    4296:	ff 90       	pop	r15
    4298:	ef 90       	pop	r14
    429a:	08 95       	ret

0000429c <disk_read>:
	BYTE drv,			/* Physical drive nmuber (0) */
	BYTE *buff,			/* Pointer to the data buffer to store read data */
	DWORD sector,		/* Start sector number (LBA) */
	BYTE count			/* Sector count (1..256(0)) */
)
{
    429c:	cf 92       	push	r12
    429e:	df 92       	push	r13
    42a0:	ef 92       	push	r14
    42a2:	ff 92       	push	r15
    42a4:	0f 93       	push	r16
    42a6:	cf 93       	push	r28
    42a8:	df 93       	push	r29
    42aa:	eb 01       	movw	r28, r22
    42ac:	69 01       	movw	r12, r18
    42ae:	7a 01       	movw	r14, r20
	if (disk_status(drv) & STA_NOINIT) return RES_NOTRDY;
    42b0:	1e df       	rcall	.-452    	; 0x40ee <disk_status>
    42b2:	80 fd       	sbrc	r24, 0
    42b4:	3e c0       	rjmp	.+124    	; 0x4332 <disk_read+0x96>
	if (!(CardType & CT_BLOCK)) sector *= 512;	/* Convert LBA to byte address if needed */
    42b6:	80 91 ea 03 	lds	r24, 0x03EA	; 0x8003ea <_ZL8CardType>
    42ba:	83 fd       	sbrc	r24, 3
    42bc:	09 c0       	rjmp	.+18     	; 0x42d0 <disk_read+0x34>
    42be:	0b 2e       	mov	r0, r27
    42c0:	b9 e0       	ldi	r27, 0x09	; 9
    42c2:	cc 0c       	add	r12, r12
    42c4:	dd 1c       	adc	r13, r13
    42c6:	ee 1c       	adc	r14, r14
    42c8:	ff 1c       	adc	r15, r15
    42ca:	ba 95       	dec	r27
    42cc:	d1 f7       	brne	.-12     	; 0x42c2 <disk_read+0x26>
    42ce:	b0 2d       	mov	r27, r0

	if (count == 1) {	/* Single block read */
    42d0:	01 30       	cpi	r16, 0x01	; 1
    42d2:	a1 f4       	brne	.+40     	; 0x42fc <disk_read+0x60>
		if ((send_cmd(CMD17, sector) == 0)	/* READ_SINGLE_BLOCK */
    42d4:	b7 01       	movw	r22, r14
    42d6:	a6 01       	movw	r20, r12
    42d8:	81 e1       	ldi	r24, 0x11	; 17
    42da:	a9 de       	rcall	.-686    	; 0x402e <_ZL8send_cmdhm>
			&& rcvr_datablock(buff, 512))
    42dc:	81 11       	cpse	r24, r1
    42de:	08 c0       	rjmp	.+16     	; 0x42f0 <disk_read+0x54>
    42e0:	60 e0       	ldi	r22, 0x00	; 0
    42e2:	72 e0       	ldi	r23, 0x02	; 2
    42e4:	ce 01       	movw	r24, r28
    42e6:	31 de       	rcall	.-926    	; 0x3f4a <_ZL14rcvr_datablockPhj>
    42e8:	89 2b       	or	r24, r25
    42ea:	21 f0       	breq	.+8      	; 0x42f4 <disk_read+0x58>
    42ec:	81 e0       	ldi	r24, 0x01	; 1
    42ee:	03 c0       	rjmp	.+6      	; 0x42f6 <disk_read+0x5a>
    42f0:	80 e0       	ldi	r24, 0x00	; 0
    42f2:	01 c0       	rjmp	.+2      	; 0x42f6 <disk_read+0x5a>
    42f4:	80 e0       	ldi	r24, 0x00	; 0
{
	if (disk_status(drv) & STA_NOINIT) return RES_NOTRDY;
	if (!(CardType & CT_BLOCK)) sector *= 512;	/* Convert LBA to byte address if needed */

	if (count == 1) {	/* Single block read */
		if ((send_cmd(CMD17, sector) == 0)	/* READ_SINGLE_BLOCK */
    42f6:	81 11       	cpse	r24, r1
    42f8:	16 c0       	rjmp	.+44     	; 0x4326 <disk_read+0x8a>
    42fa:	16 c0       	rjmp	.+44     	; 0x4328 <disk_read+0x8c>
			&& rcvr_datablock(buff, 512))
			count = 0;
	}
	else {				/* Multiple block read */
		if (send_cmd(CMD18, sector) == 0) {	/* READ_MULTIPLE_BLOCK */
    42fc:	b7 01       	movw	r22, r14
    42fe:	a6 01       	movw	r20, r12
    4300:	82 e1       	ldi	r24, 0x12	; 18
    4302:	95 de       	rcall	.-726    	; 0x402e <_ZL8send_cmdhm>
    4304:	81 11       	cpse	r24, r1
    4306:	10 c0       	rjmp	.+32     	; 0x4328 <disk_read+0x8c>
			do {
				if (!rcvr_datablock(buff, 512)) break;
    4308:	60 e0       	ldi	r22, 0x00	; 0
    430a:	72 e0       	ldi	r23, 0x02	; 2
    430c:	ce 01       	movw	r24, r28
    430e:	1d de       	rcall	.-966    	; 0x3f4a <_ZL14rcvr_datablockPhj>
    4310:	89 2b       	or	r24, r25
    4312:	19 f0       	breq	.+6      	; 0x431a <disk_read+0x7e>
    4314:	de 5f       	subi	r29, 0xFE	; 254
				buff += 512;
    4316:	01 50       	subi	r16, 0x01	; 1
			&& rcvr_datablock(buff, 512))
			count = 0;
	}
	else {				/* Multiple block read */
		if (send_cmd(CMD18, sector) == 0) {	/* READ_MULTIPLE_BLOCK */
			do {
    4318:	b9 f7       	brne	.-18     	; 0x4308 <disk_read+0x6c>
				if (!rcvr_datablock(buff, 512)) break;
				buff += 512;
			} while (--count);
			send_cmd(CMD12, 0);				/* STOP_TRANSMISSION */
    431a:	40 e0       	ldi	r20, 0x00	; 0
    431c:	50 e0       	ldi	r21, 0x00	; 0
    431e:	ba 01       	movw	r22, r20
    4320:	8c e0       	ldi	r24, 0x0C	; 12
    4322:	85 de       	rcall	.-758    	; 0x402e <_ZL8send_cmdhm>
    4324:	01 c0       	rjmp	.+2      	; 0x4328 <disk_read+0x8c>
	if (!(CardType & CT_BLOCK)) sector *= 512;	/* Convert LBA to byte address if needed */

	if (count == 1) {	/* Single block read */
		if ((send_cmd(CMD17, sector) == 0)	/* READ_SINGLE_BLOCK */
			&& rcvr_datablock(buff, 512))
			count = 0;
    4326:	00 e0       	ldi	r16, 0x00	; 0
				buff += 512;
			} while (--count);
			send_cmd(CMD12, 0);				/* STOP_TRANSMISSION */
		}
	}
	deselect();
    4328:	e1 dd       	rcall	.-1086   	; 0x3eec <_ZL8deselectv>
    432a:	00 23       	and	r16, r16

	return count ? RES_ERROR : RES_OK;
    432c:	21 f0       	breq	.+8      	; 0x4336 <disk_read+0x9a>
    432e:	81 e0       	ldi	r24, 0x01	; 1
    4330:	03 c0       	rjmp	.+6      	; 0x4338 <disk_read+0x9c>
    4332:	83 e0       	ldi	r24, 0x03	; 3
	BYTE *buff,			/* Pointer to the data buffer to store read data */
	DWORD sector,		/* Start sector number (LBA) */
	BYTE count			/* Sector count (1..256(0)) */
)
{
	if (disk_status(drv) & STA_NOINIT) return RES_NOTRDY;
    4334:	01 c0       	rjmp	.+2      	; 0x4338 <disk_read+0x9c>
    4336:	80 e0       	ldi	r24, 0x00	; 0
			send_cmd(CMD12, 0);				/* STOP_TRANSMISSION */
		}
	}
	deselect();

	return count ? RES_ERROR : RES_OK;
    4338:	df 91       	pop	r29
}
    433a:	cf 91       	pop	r28
    433c:	0f 91       	pop	r16
    433e:	ff 90       	pop	r15
    4340:	ef 90       	pop	r14
    4342:	df 90       	pop	r13
    4344:	cf 90       	pop	r12
    4346:	08 95       	ret

00004348 <disk_write>:
    4348:	cf 92       	push	r12
	BYTE drv,			/* Physical drive nmuber (0) */
	const BYTE *buff,	/* Pointer to the data to be written */
	DWORD sector,		/* Start sector number (LBA) */
	BYTE count			/* Sector count (1..256(0)) */
)
{
    434a:	df 92       	push	r13
    434c:	ef 92       	push	r14
    434e:	ff 92       	push	r15
    4350:	0f 93       	push	r16
    4352:	cf 93       	push	r28
    4354:	df 93       	push	r29
    4356:	eb 01       	movw	r28, r22
    4358:	69 01       	movw	r12, r18
    435a:	7a 01       	movw	r14, r20
	if (disk_status(drv) & STA_NOINIT) return RES_NOTRDY;
    435c:	c8 de       	rcall	.-624    	; 0x40ee <disk_status>
    435e:	80 fd       	sbrc	r24, 0
    4360:	47 c0       	rjmp	.+142    	; 0x43f0 <disk_write+0xa8>
	if (!(CardType & CT_BLOCK)) sector *= 512;	/* Convert LBA to byte address if needed */
    4362:	80 91 ea 03 	lds	r24, 0x03EA	; 0x8003ea <_ZL8CardType>
    4366:	83 fd       	sbrc	r24, 3
    4368:	09 c0       	rjmp	.+18     	; 0x437c <disk_write+0x34>
    436a:	0b 2e       	mov	r0, r27
    436c:	b9 e0       	ldi	r27, 0x09	; 9
    436e:	cc 0c       	add	r12, r12
    4370:	dd 1c       	adc	r13, r13
    4372:	ee 1c       	adc	r14, r14
    4374:	ff 1c       	adc	r15, r15
    4376:	ba 95       	dec	r27
    4378:	d1 f7       	brne	.-12     	; 0x436e <disk_write+0x26>
    437a:	b0 2d       	mov	r27, r0

	if (count == 1) {	/* Single block write */
    437c:	01 30       	cpi	r16, 0x01	; 1
    437e:	99 f4       	brne	.+38     	; 0x43a6 <disk_write+0x5e>
		if ((send_cmd(CMD24, sector) == 0)	/* WRITE_BLOCK */
    4380:	b7 01       	movw	r22, r14
    4382:	a6 01       	movw	r20, r12
    4384:	88 e1       	ldi	r24, 0x18	; 24
    4386:	53 de       	rcall	.-858    	; 0x402e <_ZL8send_cmdhm>
			&& xmit_datablock(buff, 0xFE))
    4388:	81 11       	cpse	r24, r1
    438a:	07 c0       	rjmp	.+14     	; 0x439a <disk_write+0x52>
    438c:	6e ef       	ldi	r22, 0xFE	; 254
    438e:	ce 01       	movw	r24, r28
    4390:	17 de       	rcall	.-978    	; 0x3fc0 <_ZL14xmit_datablockPKhh>
    4392:	89 2b       	or	r24, r25
    4394:	21 f0       	breq	.+8      	; 0x439e <disk_write+0x56>
    4396:	81 e0       	ldi	r24, 0x01	; 1
    4398:	03 c0       	rjmp	.+6      	; 0x43a0 <disk_write+0x58>
    439a:	80 e0       	ldi	r24, 0x00	; 0
    439c:	01 c0       	rjmp	.+2      	; 0x43a0 <disk_write+0x58>
    439e:	80 e0       	ldi	r24, 0x00	; 0
{
	if (disk_status(drv) & STA_NOINIT) return RES_NOTRDY;
	if (!(CardType & CT_BLOCK)) sector *= 512;	/* Convert LBA to byte address if needed */

	if (count == 1) {	/* Single block write */
		if ((send_cmd(CMD24, sector) == 0)	/* WRITE_BLOCK */
    43a0:	81 11       	cpse	r24, r1
    43a2:	1e c0       	rjmp	.+60     	; 0x43e0 <disk_write+0x98>
    43a4:	20 c0       	rjmp	.+64     	; 0x43e6 <disk_write+0x9e>
			&& xmit_datablock(buff, 0xFE))
			count = 0;
	}
	else {				/* Multiple block write */
		if (CardType & CT_SDC) send_cmd(ACMD23, count);
    43a6:	86 70       	andi	r24, 0x06	; 6
    43a8:	31 f0       	breq	.+12     	; 0x43b6 <disk_write+0x6e>
    43aa:	40 2f       	mov	r20, r16
    43ac:	50 e0       	ldi	r21, 0x00	; 0
    43ae:	60 e0       	ldi	r22, 0x00	; 0
    43b0:	70 e0       	ldi	r23, 0x00	; 0
    43b2:	87 e9       	ldi	r24, 0x97	; 151
    43b4:	3c de       	rcall	.-904    	; 0x402e <_ZL8send_cmdhm>
		if (send_cmd(CMD25, sector) == 0) {	/* WRITE_MULTIPLE_BLOCK */
    43b6:	b7 01       	movw	r22, r14
    43b8:	a6 01       	movw	r20, r12
    43ba:	89 e1       	ldi	r24, 0x19	; 25
    43bc:	38 de       	rcall	.-912    	; 0x402e <_ZL8send_cmdhm>
    43be:	81 11       	cpse	r24, r1
    43c0:	12 c0       	rjmp	.+36     	; 0x43e6 <disk_write+0x9e>
			do {
				if (!xmit_datablock(buff, 0xFC)) break;
    43c2:	6c ef       	ldi	r22, 0xFC	; 252
    43c4:	ce 01       	movw	r24, r28
    43c6:	fc dd       	rcall	.-1032   	; 0x3fc0 <_ZL14xmit_datablockPKhh>
    43c8:	89 2b       	or	r24, r25
    43ca:	19 f0       	breq	.+6      	; 0x43d2 <disk_write+0x8a>
    43cc:	de 5f       	subi	r29, 0xFE	; 254
			count = 0;
	}
	else {				/* Multiple block write */
		if (CardType & CT_SDC) send_cmd(ACMD23, count);
		if (send_cmd(CMD25, sector) == 0) {	/* WRITE_MULTIPLE_BLOCK */
			do {
    43ce:	01 50       	subi	r16, 0x01	; 1
    43d0:	c1 f7       	brne	.-16     	; 0x43c2 <disk_write+0x7a>
				if (!xmit_datablock(buff, 0xFC)) break;
				buff += 512;
			} while (--count);
			if (!xmit_datablock(0, 0xFD))	/* STOP_TRAN token */
    43d2:	6d ef       	ldi	r22, 0xFD	; 253
    43d4:	80 e0       	ldi	r24, 0x00	; 0
    43d6:	90 e0       	ldi	r25, 0x00	; 0
    43d8:	f3 dd       	rcall	.-1050   	; 0x3fc0 <_ZL14xmit_datablockPKhh>
    43da:	89 2b       	or	r24, r25
    43dc:	19 f0       	breq	.+6      	; 0x43e4 <disk_write+0x9c>
    43de:	03 c0       	rjmp	.+6      	; 0x43e6 <disk_write+0x9e>
	if (!(CardType & CT_BLOCK)) sector *= 512;	/* Convert LBA to byte address if needed */

	if (count == 1) {	/* Single block write */
		if ((send_cmd(CMD24, sector) == 0)	/* WRITE_BLOCK */
			&& xmit_datablock(buff, 0xFE))
			count = 0;
    43e0:	00 e0       	ldi	r16, 0x00	; 0
    43e2:	01 c0       	rjmp	.+2      	; 0x43e6 <disk_write+0x9e>
			do {
				if (!xmit_datablock(buff, 0xFC)) break;
				buff += 512;
			} while (--count);
			if (!xmit_datablock(0, 0xFD))	/* STOP_TRAN token */
				count = 1;
    43e4:	01 e0       	ldi	r16, 0x01	; 1
		}
	}
	deselect();
    43e6:	82 dd       	rcall	.-1276   	; 0x3eec <_ZL8deselectv>
    43e8:	00 23       	and	r16, r16

	return count ? RES_ERROR : RES_OK;
    43ea:	21 f0       	breq	.+8      	; 0x43f4 <disk_write+0xac>
    43ec:	81 e0       	ldi	r24, 0x01	; 1
    43ee:	03 c0       	rjmp	.+6      	; 0x43f6 <disk_write+0xae>
    43f0:	83 e0       	ldi	r24, 0x03	; 3
	const BYTE *buff,	/* Pointer to the data to be written */
	DWORD sector,		/* Start sector number (LBA) */
	BYTE count			/* Sector count (1..256(0)) */
)
{
	if (disk_status(drv) & STA_NOINIT) return RES_NOTRDY;
    43f2:	01 c0       	rjmp	.+2      	; 0x43f6 <disk_write+0xae>
    43f4:	80 e0       	ldi	r24, 0x00	; 0
				count = 1;
		}
	}
	deselect();

	return count ? RES_ERROR : RES_OK;
    43f6:	df 91       	pop	r29
}
    43f8:	cf 91       	pop	r28
    43fa:	0f 91       	pop	r16
    43fc:	ff 90       	pop	r15
    43fe:	ef 90       	pop	r14
    4400:	df 90       	pop	r13
    4402:	cf 90       	pop	r12
    4404:	08 95       	ret

00004406 <disk_ioctl>:
    4406:	ef 92       	push	r14
DRESULT disk_ioctl (
	BYTE drv,		/* Physical drive nmuber (0) */
	BYTE ctrl,		/* Control code */
	void *buff		/* Buffer to send/receive control data */
)
{
    4408:	ff 92       	push	r15
    440a:	1f 93       	push	r17
    440c:	cf 93       	push	r28
    440e:	df 93       	push	r29
    4410:	cd b7       	in	r28, 0x3d	; 61
    4412:	de b7       	in	r29, 0x3e	; 62
    4414:	60 97       	sbiw	r28, 0x10	; 16
    4416:	0f b6       	in	r0, 0x3f	; 63
    4418:	f8 94       	cli
    441a:	de bf       	out	0x3e, r29	; 62
    441c:	0f be       	out	0x3f, r0	; 63
    441e:	cd bf       	out	0x3d, r28	; 61
    4420:	16 2f       	mov	r17, r22
    4422:	7a 01       	movw	r14, r20
	DRESULT res;
	BYTE n, csd[16];
	DWORD cs;


	if (disk_status(drv) & STA_NOINIT) return RES_NOTRDY;	/* Check if card is in the socket */
    4424:	64 de       	rcall	.-824    	; 0x40ee <disk_status>
    4426:	80 fd       	sbrc	r24, 0
    4428:	a9 c0       	rjmp	.+338    	; 0x457c <disk_ioctl+0x176>

	res = RES_ERROR;
	switch (ctrl) {
    442a:	11 30       	cpi	r17, 0x01	; 1
    442c:	59 f0       	breq	.+22     	; 0x4444 <disk_ioctl+0x3e>
    442e:	20 f0       	brcs	.+8      	; 0x4438 <disk_ioctl+0x32>
    4430:	13 30       	cpi	r17, 0x03	; 3
    4432:	09 f4       	brne	.+2      	; 0x4436 <disk_ioctl+0x30>
    4434:	90 c0       	rjmp	.+288    	; 0x4556 <disk_ioctl+0x150>
		case CTRL_SYNC :		/* Make sure that no pending write process */
			if (select()) res = RES_OK;
    4436:	9a c0       	rjmp	.+308    	; 0x456c <disk_ioctl+0x166>
    4438:	6a dd       	rcall	.-1324   	; 0x3f0e <_ZL6selectv>
    443a:	89 2b       	or	r24, r25
    443c:	09 f0       	breq	.+2      	; 0x4440 <disk_ioctl+0x3a>
    443e:	98 c0       	rjmp	.+304    	; 0x4570 <disk_ioctl+0x16a>
	DWORD cs;


	if (disk_status(drv) & STA_NOINIT) return RES_NOTRDY;	/* Check if card is in the socket */

	res = RES_ERROR;
    4440:	11 e0       	ldi	r17, 0x01	; 1
    4442:	99 c0       	rjmp	.+306    	; 0x4576 <disk_ioctl+0x170>
		case CTRL_SYNC :		/* Make sure that no pending write process */
			if (select()) res = RES_OK;
			break;

		case GET_SECTOR_COUNT :	/* Get number of sectors on the disk (DWORD) */
			if ((send_cmd(CMD9, 0) == 0) && rcvr_datablock(csd, 16)) {
    4444:	40 e0       	ldi	r20, 0x00	; 0
    4446:	50 e0       	ldi	r21, 0x00	; 0
    4448:	ba 01       	movw	r22, r20
    444a:	89 e0       	ldi	r24, 0x09	; 9
    444c:	f0 dd       	rcall	.-1056   	; 0x402e <_ZL8send_cmdhm>
    444e:	81 11       	cpse	r24, r1
    4450:	09 c0       	rjmp	.+18     	; 0x4464 <disk_ioctl+0x5e>
    4452:	60 e1       	ldi	r22, 0x10	; 16
    4454:	70 e0       	ldi	r23, 0x00	; 0
    4456:	ce 01       	movw	r24, r28
    4458:	01 96       	adiw	r24, 0x01	; 1
    445a:	77 dd       	rcall	.-1298   	; 0x3f4a <_ZL14rcvr_datablockPhj>
    445c:	89 2b       	or	r24, r25
    445e:	21 f0       	breq	.+8      	; 0x4468 <disk_ioctl+0x62>
    4460:	81 e0       	ldi	r24, 0x01	; 1
    4462:	03 c0       	rjmp	.+6      	; 0x446a <disk_ioctl+0x64>
    4464:	80 e0       	ldi	r24, 0x00	; 0
    4466:	01 c0       	rjmp	.+2      	; 0x446a <disk_ioctl+0x64>
    4468:	80 e0       	ldi	r24, 0x00	; 0
    446a:	88 23       	and	r24, r24
    446c:	09 f4       	brne	.+2      	; 0x4470 <disk_ioctl+0x6a>
    446e:	82 c0       	rjmp	.+260    	; 0x4574 <disk_ioctl+0x16e>
				if ((csd[0] >> 6) == 1) {	/* SDC ver 2.00 */
    4470:	89 81       	ldd	r24, Y+1	; 0x01
    4472:	90 e0       	ldi	r25, 0x00	; 0
    4474:	08 2e       	mov	r0, r24
    4476:	89 2f       	mov	r24, r25
    4478:	00 0c       	add	r0, r0
    447a:	88 1f       	adc	r24, r24
    447c:	99 0b       	sbc	r25, r25
    447e:	00 0c       	add	r0, r0
    4480:	88 1f       	adc	r24, r24
    4482:	99 1f       	adc	r25, r25
    4484:	01 97       	sbiw	r24, 0x01	; 1
    4486:	31 f5       	brne	.+76     	; 0x44d4 <disk_ioctl+0xce>
					cs = csd[9] + ((WORD)csd[8] << 8) + ((DWORD)(csd[7] & 63) << 16) + 1;
    4488:	8a 85       	ldd	r24, Y+10	; 0x0a
    448a:	29 85       	ldd	r18, Y+9	; 0x09
    448c:	30 e0       	ldi	r19, 0x00	; 0
    448e:	32 2f       	mov	r19, r18
    4490:	22 27       	eor	r18, r18
    4492:	28 0f       	add	r18, r24
    4494:	31 1d       	adc	r19, r1
    4496:	88 85       	ldd	r24, Y+8	; 0x08
    4498:	8f 73       	andi	r24, 0x3F	; 63
    449a:	90 e0       	ldi	r25, 0x00	; 0
    449c:	a0 e0       	ldi	r26, 0x00	; 0
    449e:	b0 e0       	ldi	r27, 0x00	; 0
    44a0:	dc 01       	movw	r26, r24
    44a2:	99 27       	eor	r25, r25
    44a4:	88 27       	eor	r24, r24
    44a6:	82 0f       	add	r24, r18
    44a8:	93 1f       	adc	r25, r19
    44aa:	a1 1d       	adc	r26, r1
    44ac:	b1 1d       	adc	r27, r1
    44ae:	01 96       	adiw	r24, 0x01	; 1
    44b0:	a1 1d       	adc	r26, r1
    44b2:	b1 1d       	adc	r27, r1
					*(DWORD*)buff = cs << 10;
    44b4:	07 2e       	mov	r0, r23
    44b6:	7a e0       	ldi	r23, 0x0A	; 10
    44b8:	88 0f       	add	r24, r24
    44ba:	99 1f       	adc	r25, r25
    44bc:	aa 1f       	adc	r26, r26
    44be:	bb 1f       	adc	r27, r27
    44c0:	7a 95       	dec	r23
    44c2:	d1 f7       	brne	.-12     	; 0x44b8 <disk_ioctl+0xb2>
    44c4:	70 2d       	mov	r23, r0
    44c6:	f7 01       	movw	r30, r14
    44c8:	80 83       	st	Z, r24
    44ca:	91 83       	std	Z+1, r25	; 0x01
    44cc:	a2 83       	std	Z+2, r26	; 0x02
    44ce:	b3 83       	std	Z+3, r27	; 0x03
				} else {					/* SDC ver 1.XX or MMC */
					n = (csd[5] & 15) + ((csd[10] & 128) >> 7) + ((csd[9] & 3) << 1) + 2;
					cs = (csd[8] >> 6) + ((WORD)csd[7] << 2) + ((WORD)(csd[6] & 3) << 10) + 1;
					*(DWORD*)buff = cs << (n - 9);
				}
				res = RES_OK;
    44d0:	10 e0       	ldi	r17, 0x00	; 0
    44d2:	51 c0       	rjmp	.+162    	; 0x4576 <disk_ioctl+0x170>
			if ((send_cmd(CMD9, 0) == 0) && rcvr_datablock(csd, 16)) {
				if ((csd[0] >> 6) == 1) {	/* SDC ver 2.00 */
					cs = csd[9] + ((WORD)csd[8] << 8) + ((DWORD)(csd[7] & 63) << 16) + 1;
					*(DWORD*)buff = cs << 10;
				} else {					/* SDC ver 1.XX or MMC */
					n = (csd[5] & 15) + ((csd[10] & 128) >> 7) + ((csd[9] & 3) << 1) + 2;
    44d4:	8e 81       	ldd	r24, Y+6	; 0x06
    44d6:	2b 85       	ldd	r18, Y+11	; 0x0b
    44d8:	9a 85       	ldd	r25, Y+10	; 0x0a
    44da:	38 2f       	mov	r19, r24
    44dc:	3f 70       	andi	r19, 0x0F	; 15
    44de:	82 2f       	mov	r24, r18
    44e0:	88 1f       	adc	r24, r24
    44e2:	88 27       	eor	r24, r24
    44e4:	88 1f       	adc	r24, r24
    44e6:	83 0f       	add	r24, r19
    44e8:	93 70       	andi	r25, 0x03	; 3
    44ea:	99 0f       	add	r25, r25
    44ec:	89 0f       	add	r24, r25
    44ee:	42 e0       	ldi	r20, 0x02	; 2
    44f0:	48 0f       	add	r20, r24
					cs = (csd[8] >> 6) + ((WORD)csd[7] << 2) + ((WORD)(csd[6] & 3) << 10) + 1;
    44f2:	89 85       	ldd	r24, Y+9	; 0x09
    44f4:	90 e0       	ldi	r25, 0x00	; 0
    44f6:	bc 01       	movw	r22, r24
    44f8:	06 2e       	mov	r0, r22
    44fa:	67 2f       	mov	r22, r23
    44fc:	00 0c       	add	r0, r0
    44fe:	66 1f       	adc	r22, r22
    4500:	77 0b       	sbc	r23, r23
    4502:	00 0c       	add	r0, r0
    4504:	66 1f       	adc	r22, r22
    4506:	77 1f       	adc	r23, r23
    4508:	28 85       	ldd	r18, Y+8	; 0x08
    450a:	30 e0       	ldi	r19, 0x00	; 0
    450c:	c9 01       	movw	r24, r18
    450e:	88 0f       	add	r24, r24
    4510:	99 1f       	adc	r25, r25
    4512:	88 0f       	add	r24, r24
    4514:	99 1f       	adc	r25, r25
    4516:	86 0f       	add	r24, r22
    4518:	97 1f       	adc	r25, r23
    451a:	2f 81       	ldd	r18, Y+7	; 0x07
    451c:	23 70       	andi	r18, 0x03	; 3
    451e:	30 e0       	ldi	r19, 0x00	; 0
    4520:	32 2f       	mov	r19, r18
    4522:	22 27       	eor	r18, r18
    4524:	33 0f       	add	r19, r19
    4526:	33 0f       	add	r19, r19
    4528:	82 0f       	add	r24, r18
    452a:	93 1f       	adc	r25, r19
    452c:	01 96       	adiw	r24, 0x01	; 1
    452e:	a0 e0       	ldi	r26, 0x00	; 0
    4530:	b0 e0       	ldi	r27, 0x00	; 0
					*(DWORD*)buff = cs << (n - 9);
    4532:	24 2f       	mov	r18, r20
    4534:	30 e0       	ldi	r19, 0x00	; 0
    4536:	29 50       	subi	r18, 0x09	; 9
    4538:	31 09       	sbc	r19, r1
    453a:	04 c0       	rjmp	.+8      	; 0x4544 <disk_ioctl+0x13e>
    453c:	88 0f       	add	r24, r24
    453e:	99 1f       	adc	r25, r25
    4540:	aa 1f       	adc	r26, r26
    4542:	bb 1f       	adc	r27, r27
    4544:	2a 95       	dec	r18
    4546:	d2 f7       	brpl	.-12     	; 0x453c <disk_ioctl+0x136>
    4548:	f7 01       	movw	r30, r14
    454a:	80 83       	st	Z, r24
    454c:	91 83       	std	Z+1, r25	; 0x01
    454e:	a2 83       	std	Z+2, r26	; 0x02
    4550:	b3 83       	std	Z+3, r27	; 0x03
				}
				res = RES_OK;
    4552:	10 e0       	ldi	r17, 0x00	; 0
    4554:	10 c0       	rjmp	.+32     	; 0x4576 <disk_ioctl+0x170>
			}
			break;

		case GET_BLOCK_SIZE :	/* Get erase block size in unit of sector (DWORD) */
			*(DWORD*)buff = 128;
    4556:	80 e8       	ldi	r24, 0x80	; 128
    4558:	90 e0       	ldi	r25, 0x00	; 0
    455a:	a0 e0       	ldi	r26, 0x00	; 0
    455c:	b0 e0       	ldi	r27, 0x00	; 0
    455e:	f7 01       	movw	r30, r14
    4560:	80 83       	st	Z, r24
    4562:	91 83       	std	Z+1, r25	; 0x01
    4564:	a2 83       	std	Z+2, r26	; 0x02
    4566:	b3 83       	std	Z+3, r27	; 0x03
			res = RES_OK;
    4568:	10 e0       	ldi	r17, 0x00	; 0
			break;
    456a:	05 c0       	rjmp	.+10     	; 0x4576 <disk_ioctl+0x170>

		default:
			res = RES_PARERR;
    456c:	14 e0       	ldi	r17, 0x04	; 4
	if (disk_status(drv) & STA_NOINIT) return RES_NOTRDY;	/* Check if card is in the socket */

	res = RES_ERROR;
	switch (ctrl) {
		case CTRL_SYNC :		/* Make sure that no pending write process */
			if (select()) res = RES_OK;
    456e:	03 c0       	rjmp	.+6      	; 0x4576 <disk_ioctl+0x170>
    4570:	10 e0       	ldi	r17, 0x00	; 0
	DWORD cs;


	if (disk_status(drv) & STA_NOINIT) return RES_NOTRDY;	/* Check if card is in the socket */

	res = RES_ERROR;
    4572:	01 c0       	rjmp	.+2      	; 0x4576 <disk_ioctl+0x170>

		default:
			res = RES_PARERR;
	}

	deselect();
    4574:	11 e0       	ldi	r17, 0x01	; 1
    4576:	ba dc       	rcall	.-1676   	; 0x3eec <_ZL8deselectv>

	return res;
    4578:	81 2f       	mov	r24, r17
    457a:	01 c0       	rjmp	.+2      	; 0x457e <disk_ioctl+0x178>
	DRESULT res;
	BYTE n, csd[16];
	DWORD cs;


	if (disk_status(drv) & STA_NOINIT) return RES_NOTRDY;	/* Check if card is in the socket */
    457c:	83 e0       	ldi	r24, 0x03	; 3
	}

	deselect();

	return res;
}
    457e:	60 96       	adiw	r28, 0x10	; 16
    4580:	0f b6       	in	r0, 0x3f	; 63
    4582:	f8 94       	cli
    4584:	de bf       	out	0x3e, r29	; 62
    4586:	0f be       	out	0x3f, r0	; 63
    4588:	cd bf       	out	0x3d, r28	; 61
    458a:	df 91       	pop	r29
    458c:	cf 91       	pop	r28
    458e:	1f 91       	pop	r17
    4590:	ff 90       	pop	r15
    4592:	ef 90       	pop	r14
    4594:	08 95       	ret

00004596 <__udivmodsi4>:
    4596:	a1 e2       	ldi	r26, 0x21	; 33
    4598:	1a 2e       	mov	r1, r26
    459a:	aa 1b       	sub	r26, r26
    459c:	bb 1b       	sub	r27, r27
    459e:	fd 01       	movw	r30, r26
    45a0:	0d c0       	rjmp	.+26     	; 0x45bc <__udivmodsi4_ep>

000045a2 <__udivmodsi4_loop>:
    45a2:	aa 1f       	adc	r26, r26
    45a4:	bb 1f       	adc	r27, r27
    45a6:	ee 1f       	adc	r30, r30
    45a8:	ff 1f       	adc	r31, r31
    45aa:	a2 17       	cp	r26, r18
    45ac:	b3 07       	cpc	r27, r19
    45ae:	e4 07       	cpc	r30, r20
    45b0:	f5 07       	cpc	r31, r21
    45b2:	20 f0       	brcs	.+8      	; 0x45bc <__udivmodsi4_ep>
    45b4:	a2 1b       	sub	r26, r18
    45b6:	b3 0b       	sbc	r27, r19
    45b8:	e4 0b       	sbc	r30, r20
    45ba:	f5 0b       	sbc	r31, r21

000045bc <__udivmodsi4_ep>:
    45bc:	66 1f       	adc	r22, r22
    45be:	77 1f       	adc	r23, r23
    45c0:	88 1f       	adc	r24, r24
    45c2:	99 1f       	adc	r25, r25
    45c4:	1a 94       	dec	r1
    45c6:	69 f7       	brne	.-38     	; 0x45a2 <__udivmodsi4_loop>
    45c8:	60 95       	com	r22
    45ca:	70 95       	com	r23
    45cc:	80 95       	com	r24
    45ce:	90 95       	com	r25
    45d0:	9b 01       	movw	r18, r22
    45d2:	ac 01       	movw	r20, r24
    45d4:	bd 01       	movw	r22, r26
    45d6:	cf 01       	movw	r24, r30
    45d8:	08 95       	ret

000045da <__muluhisi3>:
    45da:	09 d0       	rcall	.+18     	; 0x45ee <__umulhisi3>
    45dc:	a5 9f       	mul	r26, r21
    45de:	90 0d       	add	r25, r0
    45e0:	b4 9f       	mul	r27, r20
    45e2:	90 0d       	add	r25, r0
    45e4:	a4 9f       	mul	r26, r20
    45e6:	80 0d       	add	r24, r0
    45e8:	91 1d       	adc	r25, r1
    45ea:	11 24       	eor	r1, r1
    45ec:	08 95       	ret

000045ee <__umulhisi3>:
    45ee:	a2 9f       	mul	r26, r18
    45f0:	b0 01       	movw	r22, r0
    45f2:	b3 9f       	mul	r27, r19
    45f4:	c0 01       	movw	r24, r0
    45f6:	a3 9f       	mul	r26, r19
    45f8:	70 0d       	add	r23, r0
    45fa:	81 1d       	adc	r24, r1
    45fc:	11 24       	eor	r1, r1
    45fe:	91 1d       	adc	r25, r1
    4600:	b2 9f       	mul	r27, r18
    4602:	70 0d       	add	r23, r0
    4604:	81 1d       	adc	r24, r1
    4606:	11 24       	eor	r1, r1
    4608:	91 1d       	adc	r25, r1
    460a:	08 95       	ret

0000460c <malloc>:
    460c:	0f 93       	push	r16
    460e:	1f 93       	push	r17
    4610:	cf 93       	push	r28
    4612:	df 93       	push	r29
    4614:	82 30       	cpi	r24, 0x02	; 2
    4616:	91 05       	cpc	r25, r1
    4618:	10 f4       	brcc	.+4      	; 0x461e <malloc+0x12>
    461a:	82 e0       	ldi	r24, 0x02	; 2
    461c:	90 e0       	ldi	r25, 0x00	; 0
    461e:	e0 91 ed 03 	lds	r30, 0x03ED	; 0x8003ed <__flp>
    4622:	f0 91 ee 03 	lds	r31, 0x03EE	; 0x8003ee <__flp+0x1>
    4626:	20 e0       	ldi	r18, 0x00	; 0
    4628:	30 e0       	ldi	r19, 0x00	; 0
    462a:	a0 e0       	ldi	r26, 0x00	; 0
    462c:	b0 e0       	ldi	r27, 0x00	; 0
    462e:	30 97       	sbiw	r30, 0x00	; 0
    4630:	19 f1       	breq	.+70     	; 0x4678 <malloc+0x6c>
    4632:	40 81       	ld	r20, Z
    4634:	51 81       	ldd	r21, Z+1	; 0x01
    4636:	02 81       	ldd	r16, Z+2	; 0x02
    4638:	13 81       	ldd	r17, Z+3	; 0x03
    463a:	48 17       	cp	r20, r24
    463c:	59 07       	cpc	r21, r25
    463e:	c8 f0       	brcs	.+50     	; 0x4672 <malloc+0x66>
    4640:	84 17       	cp	r24, r20
    4642:	95 07       	cpc	r25, r21
    4644:	69 f4       	brne	.+26     	; 0x4660 <malloc+0x54>
    4646:	10 97       	sbiw	r26, 0x00	; 0
    4648:	31 f0       	breq	.+12     	; 0x4656 <malloc+0x4a>
    464a:	12 96       	adiw	r26, 0x02	; 2
    464c:	0c 93       	st	X, r16
    464e:	12 97       	sbiw	r26, 0x02	; 2
    4650:	13 96       	adiw	r26, 0x03	; 3
    4652:	1c 93       	st	X, r17
    4654:	27 c0       	rjmp	.+78     	; 0x46a4 <malloc+0x98>
    4656:	00 93 ed 03 	sts	0x03ED, r16	; 0x8003ed <__flp>
    465a:	10 93 ee 03 	sts	0x03EE, r17	; 0x8003ee <__flp+0x1>
    465e:	22 c0       	rjmp	.+68     	; 0x46a4 <malloc+0x98>
    4660:	21 15       	cp	r18, r1
    4662:	31 05       	cpc	r19, r1
    4664:	19 f0       	breq	.+6      	; 0x466c <malloc+0x60>
    4666:	42 17       	cp	r20, r18
    4668:	53 07       	cpc	r21, r19
    466a:	18 f4       	brcc	.+6      	; 0x4672 <malloc+0x66>
    466c:	9a 01       	movw	r18, r20
    466e:	bd 01       	movw	r22, r26
    4670:	ef 01       	movw	r28, r30
    4672:	df 01       	movw	r26, r30
    4674:	f8 01       	movw	r30, r16
    4676:	db cf       	rjmp	.-74     	; 0x462e <malloc+0x22>
    4678:	21 15       	cp	r18, r1
    467a:	31 05       	cpc	r19, r1
    467c:	f9 f0       	breq	.+62     	; 0x46bc <malloc+0xb0>
    467e:	28 1b       	sub	r18, r24
    4680:	39 0b       	sbc	r19, r25
    4682:	24 30       	cpi	r18, 0x04	; 4
    4684:	31 05       	cpc	r19, r1
    4686:	80 f4       	brcc	.+32     	; 0x46a8 <malloc+0x9c>
    4688:	8a 81       	ldd	r24, Y+2	; 0x02
    468a:	9b 81       	ldd	r25, Y+3	; 0x03
    468c:	61 15       	cp	r22, r1
    468e:	71 05       	cpc	r23, r1
    4690:	21 f0       	breq	.+8      	; 0x469a <malloc+0x8e>
    4692:	fb 01       	movw	r30, r22
    4694:	93 83       	std	Z+3, r25	; 0x03
    4696:	82 83       	std	Z+2, r24	; 0x02
    4698:	04 c0       	rjmp	.+8      	; 0x46a2 <malloc+0x96>
    469a:	90 93 ee 03 	sts	0x03EE, r25	; 0x8003ee <__flp+0x1>
    469e:	80 93 ed 03 	sts	0x03ED, r24	; 0x8003ed <__flp>
    46a2:	fe 01       	movw	r30, r28
    46a4:	32 96       	adiw	r30, 0x02	; 2
    46a6:	44 c0       	rjmp	.+136    	; 0x4730 <malloc+0x124>
    46a8:	fe 01       	movw	r30, r28
    46aa:	e2 0f       	add	r30, r18
    46ac:	f3 1f       	adc	r31, r19
    46ae:	81 93       	st	Z+, r24
    46b0:	91 93       	st	Z+, r25
    46b2:	22 50       	subi	r18, 0x02	; 2
    46b4:	31 09       	sbc	r19, r1
    46b6:	39 83       	std	Y+1, r19	; 0x01
    46b8:	28 83       	st	Y, r18
    46ba:	3a c0       	rjmp	.+116    	; 0x4730 <malloc+0x124>
    46bc:	20 91 eb 03 	lds	r18, 0x03EB	; 0x8003eb <__brkval>
    46c0:	30 91 ec 03 	lds	r19, 0x03EC	; 0x8003ec <__brkval+0x1>
    46c4:	23 2b       	or	r18, r19
    46c6:	41 f4       	brne	.+16     	; 0x46d8 <malloc+0xcc>
    46c8:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
    46cc:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
    46d0:	30 93 ec 03 	sts	0x03EC, r19	; 0x8003ec <__brkval+0x1>
    46d4:	20 93 eb 03 	sts	0x03EB, r18	; 0x8003eb <__brkval>
    46d8:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
    46dc:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
    46e0:	21 15       	cp	r18, r1
    46e2:	31 05       	cpc	r19, r1
    46e4:	41 f4       	brne	.+16     	; 0x46f6 <malloc+0xea>
    46e6:	2d b7       	in	r18, 0x3d	; 61
    46e8:	3e b7       	in	r19, 0x3e	; 62
    46ea:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
    46ee:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
    46f2:	24 1b       	sub	r18, r20
    46f4:	35 0b       	sbc	r19, r21
    46f6:	e0 91 eb 03 	lds	r30, 0x03EB	; 0x8003eb <__brkval>
    46fa:	f0 91 ec 03 	lds	r31, 0x03EC	; 0x8003ec <__brkval+0x1>
    46fe:	e2 17       	cp	r30, r18
    4700:	f3 07       	cpc	r31, r19
    4702:	a0 f4       	brcc	.+40     	; 0x472c <malloc+0x120>
    4704:	2e 1b       	sub	r18, r30
    4706:	3f 0b       	sbc	r19, r31
    4708:	28 17       	cp	r18, r24
    470a:	39 07       	cpc	r19, r25
    470c:	78 f0       	brcs	.+30     	; 0x472c <malloc+0x120>
    470e:	ac 01       	movw	r20, r24
    4710:	4e 5f       	subi	r20, 0xFE	; 254
    4712:	5f 4f       	sbci	r21, 0xFF	; 255
    4714:	24 17       	cp	r18, r20
    4716:	35 07       	cpc	r19, r21
    4718:	48 f0       	brcs	.+18     	; 0x472c <malloc+0x120>
    471a:	4e 0f       	add	r20, r30
    471c:	5f 1f       	adc	r21, r31
    471e:	50 93 ec 03 	sts	0x03EC, r21	; 0x8003ec <__brkval+0x1>
    4722:	40 93 eb 03 	sts	0x03EB, r20	; 0x8003eb <__brkval>
    4726:	81 93       	st	Z+, r24
    4728:	91 93       	st	Z+, r25
    472a:	02 c0       	rjmp	.+4      	; 0x4730 <malloc+0x124>
    472c:	e0 e0       	ldi	r30, 0x00	; 0
    472e:	f0 e0       	ldi	r31, 0x00	; 0
    4730:	cf 01       	movw	r24, r30
    4732:	df 91       	pop	r29
    4734:	cf 91       	pop	r28
    4736:	1f 91       	pop	r17
    4738:	0f 91       	pop	r16
    473a:	08 95       	ret

0000473c <free>:
    473c:	cf 93       	push	r28
    473e:	df 93       	push	r29
    4740:	00 97       	sbiw	r24, 0x00	; 0
    4742:	09 f4       	brne	.+2      	; 0x4746 <free+0xa>
    4744:	81 c0       	rjmp	.+258    	; 0x4848 <free+0x10c>
    4746:	fc 01       	movw	r30, r24
    4748:	32 97       	sbiw	r30, 0x02	; 2
    474a:	13 82       	std	Z+3, r1	; 0x03
    474c:	12 82       	std	Z+2, r1	; 0x02
    474e:	a0 91 ed 03 	lds	r26, 0x03ED	; 0x8003ed <__flp>
    4752:	b0 91 ee 03 	lds	r27, 0x03EE	; 0x8003ee <__flp+0x1>
    4756:	10 97       	sbiw	r26, 0x00	; 0
    4758:	81 f4       	brne	.+32     	; 0x477a <free+0x3e>
    475a:	20 81       	ld	r18, Z
    475c:	31 81       	ldd	r19, Z+1	; 0x01
    475e:	82 0f       	add	r24, r18
    4760:	93 1f       	adc	r25, r19
    4762:	20 91 eb 03 	lds	r18, 0x03EB	; 0x8003eb <__brkval>
    4766:	30 91 ec 03 	lds	r19, 0x03EC	; 0x8003ec <__brkval+0x1>
    476a:	28 17       	cp	r18, r24
    476c:	39 07       	cpc	r19, r25
    476e:	51 f5       	brne	.+84     	; 0x47c4 <free+0x88>
    4770:	f0 93 ec 03 	sts	0x03EC, r31	; 0x8003ec <__brkval+0x1>
    4774:	e0 93 eb 03 	sts	0x03EB, r30	; 0x8003eb <__brkval>
    4778:	67 c0       	rjmp	.+206    	; 0x4848 <free+0x10c>
    477a:	ed 01       	movw	r28, r26
    477c:	20 e0       	ldi	r18, 0x00	; 0
    477e:	30 e0       	ldi	r19, 0x00	; 0
    4780:	ce 17       	cp	r28, r30
    4782:	df 07       	cpc	r29, r31
    4784:	40 f4       	brcc	.+16     	; 0x4796 <free+0x5a>
    4786:	4a 81       	ldd	r20, Y+2	; 0x02
    4788:	5b 81       	ldd	r21, Y+3	; 0x03
    478a:	9e 01       	movw	r18, r28
    478c:	41 15       	cp	r20, r1
    478e:	51 05       	cpc	r21, r1
    4790:	f1 f0       	breq	.+60     	; 0x47ce <free+0x92>
    4792:	ea 01       	movw	r28, r20
    4794:	f5 cf       	rjmp	.-22     	; 0x4780 <free+0x44>
    4796:	d3 83       	std	Z+3, r29	; 0x03
    4798:	c2 83       	std	Z+2, r28	; 0x02
    479a:	40 81       	ld	r20, Z
    479c:	51 81       	ldd	r21, Z+1	; 0x01
    479e:	84 0f       	add	r24, r20
    47a0:	95 1f       	adc	r25, r21
    47a2:	c8 17       	cp	r28, r24
    47a4:	d9 07       	cpc	r29, r25
    47a6:	59 f4       	brne	.+22     	; 0x47be <free+0x82>
    47a8:	88 81       	ld	r24, Y
    47aa:	99 81       	ldd	r25, Y+1	; 0x01
    47ac:	84 0f       	add	r24, r20
    47ae:	95 1f       	adc	r25, r21
    47b0:	02 96       	adiw	r24, 0x02	; 2
    47b2:	91 83       	std	Z+1, r25	; 0x01
    47b4:	80 83       	st	Z, r24
    47b6:	8a 81       	ldd	r24, Y+2	; 0x02
    47b8:	9b 81       	ldd	r25, Y+3	; 0x03
    47ba:	93 83       	std	Z+3, r25	; 0x03
    47bc:	82 83       	std	Z+2, r24	; 0x02
    47be:	21 15       	cp	r18, r1
    47c0:	31 05       	cpc	r19, r1
    47c2:	29 f4       	brne	.+10     	; 0x47ce <free+0x92>
    47c4:	f0 93 ee 03 	sts	0x03EE, r31	; 0x8003ee <__flp+0x1>
    47c8:	e0 93 ed 03 	sts	0x03ED, r30	; 0x8003ed <__flp>
    47cc:	3d c0       	rjmp	.+122    	; 0x4848 <free+0x10c>
    47ce:	e9 01       	movw	r28, r18
    47d0:	fb 83       	std	Y+3, r31	; 0x03
    47d2:	ea 83       	std	Y+2, r30	; 0x02
    47d4:	49 91       	ld	r20, Y+
    47d6:	59 91       	ld	r21, Y+
    47d8:	c4 0f       	add	r28, r20
    47da:	d5 1f       	adc	r29, r21
    47dc:	ec 17       	cp	r30, r28
    47de:	fd 07       	cpc	r31, r29
    47e0:	61 f4       	brne	.+24     	; 0x47fa <free+0xbe>
    47e2:	80 81       	ld	r24, Z
    47e4:	91 81       	ldd	r25, Z+1	; 0x01
    47e6:	84 0f       	add	r24, r20
    47e8:	95 1f       	adc	r25, r21
    47ea:	02 96       	adiw	r24, 0x02	; 2
    47ec:	e9 01       	movw	r28, r18
    47ee:	99 83       	std	Y+1, r25	; 0x01
    47f0:	88 83       	st	Y, r24
    47f2:	82 81       	ldd	r24, Z+2	; 0x02
    47f4:	93 81       	ldd	r25, Z+3	; 0x03
    47f6:	9b 83       	std	Y+3, r25	; 0x03
    47f8:	8a 83       	std	Y+2, r24	; 0x02
    47fa:	e0 e0       	ldi	r30, 0x00	; 0
    47fc:	f0 e0       	ldi	r31, 0x00	; 0
    47fe:	12 96       	adiw	r26, 0x02	; 2
    4800:	8d 91       	ld	r24, X+
    4802:	9c 91       	ld	r25, X
    4804:	13 97       	sbiw	r26, 0x03	; 3
    4806:	00 97       	sbiw	r24, 0x00	; 0
    4808:	19 f0       	breq	.+6      	; 0x4810 <free+0xd4>
    480a:	fd 01       	movw	r30, r26
    480c:	dc 01       	movw	r26, r24
    480e:	f7 cf       	rjmp	.-18     	; 0x47fe <free+0xc2>
    4810:	8d 91       	ld	r24, X+
    4812:	9c 91       	ld	r25, X
    4814:	11 97       	sbiw	r26, 0x01	; 1
    4816:	9d 01       	movw	r18, r26
    4818:	2e 5f       	subi	r18, 0xFE	; 254
    481a:	3f 4f       	sbci	r19, 0xFF	; 255
    481c:	82 0f       	add	r24, r18
    481e:	93 1f       	adc	r25, r19
    4820:	20 91 eb 03 	lds	r18, 0x03EB	; 0x8003eb <__brkval>
    4824:	30 91 ec 03 	lds	r19, 0x03EC	; 0x8003ec <__brkval+0x1>
    4828:	28 17       	cp	r18, r24
    482a:	39 07       	cpc	r19, r25
    482c:	69 f4       	brne	.+26     	; 0x4848 <free+0x10c>
    482e:	30 97       	sbiw	r30, 0x00	; 0
    4830:	29 f4       	brne	.+10     	; 0x483c <free+0x100>
    4832:	10 92 ee 03 	sts	0x03EE, r1	; 0x8003ee <__flp+0x1>
    4836:	10 92 ed 03 	sts	0x03ED, r1	; 0x8003ed <__flp>
    483a:	02 c0       	rjmp	.+4      	; 0x4840 <free+0x104>
    483c:	13 82       	std	Z+3, r1	; 0x03
    483e:	12 82       	std	Z+2, r1	; 0x02
    4840:	b0 93 ec 03 	sts	0x03EC, r27	; 0x8003ec <__brkval+0x1>
    4844:	a0 93 eb 03 	sts	0x03EB, r26	; 0x8003eb <__brkval>
    4848:	df 91       	pop	r29
    484a:	cf 91       	pop	r28
    484c:	08 95       	ret

0000484e <_exit>:
    484e:	f8 94       	cli

00004850 <__stop_program>:
    4850:	ff cf       	rjmp	.-2      	; 0x4850 <__stop_program>
